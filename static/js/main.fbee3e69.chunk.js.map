{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","IconBox/IconBox.js","utilities/components/Header.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","DashboardCard/DashboardCard.js","Breadcrumb/Breadcrumb.js","colors.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","TooltipText/TooltipText.js","Tos/Tos.module.scss","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","Title/Title.js","TrancheField/TrancheField.js","ImageButton/ImageButton.js","Footer/Footer.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","RoundIconButton","buttonProps","assign","border","height","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","ShortHash","state","text","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","style","cursor","menuIsOpen","boxShadow","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","children","CustomIndicatorSeparator","CustomMenu","mt","zIndex","position","backgroundColor","outerColor","fontWeight","selectProps","value","label","CustomInputContainer","isSearchable","fontSize","theme","fontSizes","colors","copyColor","fontWeights","fontFamily","fonts","sansSerif","cardBg","searchInput","themeMode","dark","searchInputHidden","CustomOption","selectedValue","map","o","indexOf","px","py","genericSelector","isDashboard","isFocused","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","margin","my","align","image","src","isMobile","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","e","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","id","globalConfigs","stats","hsl","join","capitalize","protocolIcon","concat","textAlign","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","ml","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","key","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","path","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","index","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","_this","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","hoverColor","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","divider2","link","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","console","log","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IconBox","isVisible","gradientButton","empty","select","selectDark","input","bg","twitterIcon","radioBtn","button","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","maxWidth","overflow","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","Text","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","functions","stakedBalance","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","currentWeb3","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref32","_ref33","_firstHarvest","_latestHarvest","firstBlock","_ref34","_ref35","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context18","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x15","_x13","_x14","_ref36","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref37","_ref38","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref39","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref40","_ref41","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref42","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref43","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref44","_callee24","_context24","_x26","_x27","_x28","_ref45","_callee25","_ref46","_ref47","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref50","_ref51","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref52","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x31","_ref53","_callee28","_context28","_x32","match","_ref54","_callee29","_context29","_x33","_ref55","_callee30","_context30","_x34","items","to_address","_ref56","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref62","_callee38","_ref63","_ref64","_context38","getTransactionReceipt","_x36","_ref65","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref66","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref67","_callee41","processTxs","_args41","_context41","_x40","_ref68","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref69","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref70","_callee46","minedTxs","_context46","_ref71","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref72","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref73","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref74","_callee53","txsToProcess","_args53","_context53","_ref75","_callee52","_context52","_ref76","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref77","_callee48","_context48","_x54","_x55","_ref78","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref79","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref80","_callee54","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args54","_context54","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x60","_ref81","_callee55","error_callback","config","_args55","_context55","post","catch","_x61","_ref82","_callee56","_args56","_context56","_x62","_ref83","_callee57","apiKeyIndex","apiKey","_args57","_context57","message","_x63","_ref84","_callee58","return_data","_args58","_context58","_x64","makeCachedPostRequest","_ref85","_callee59","_args59","_context59","_x65","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee60","page","googlePageviewInfo","isOrigin","_args60","_context60","ga","_ref87","_callee62","googleEventsInfo","debugEnabled","originOk","_args62","_context62","analytics","google","addPostfixForTestnet","availableNetworks","_ref88","_callee61","_context61","hitCallback","hitCallbackFail","_x67","_x68","_x66","createContract","_ref89","_callee63","_context63","_x69","_x70","_x71","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee66","activeOnly","whitelist","proposals","validProposals","_args66","_context66","addr","_ref91","_callee65","checkedStrategies","_context65","end","author","snapshot","strategies","_ref92","_callee64","tokenContract","_context64","_x73","_x72","getAprsFromApi","_callee67","endpointInfo","aprs","_args67","_context67","_ref94","_callee68","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args68","_context68","_x74","getTokenExchangeRate","_ref95","_callee69","exchangeRateParams","exchangeRate","_context69","_x75","_x76","getTokenDecimals","_ref96","_callee70","_context70","_x77","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee71","idleTokenConfig","feeDistributorConfig","_context71","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee72","contractPaused","_args72","_context72","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref99","_callee74","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context74","lastAllocationsPromise","_ref100","_callee73","lastAllocations","_context73","_x79","_x80","alloc","_x78","_ref101","_callee75","oldContractBalance","oldContractTokenDecimals","oldContractName","_context75","_x81","_x82","_ref102","_callee76","eventName","_args76","_context76","getContractPastEvents","_x83","_x84","estimateMethodGasUsage","_ref103","_callee77","methodParams","_contract$methods","functionCall","gasLimit","_ref104","_ref105","_args77","_context77","getGasPrice","estimateGas","_x85","_x86","_ref106","_callee78","userAddress","signedParameters","callback_receipt","_contract$methods2","_context78","on","once","confirmationNumber","receipt","_x87","_x88","_x89","_x90","_x91","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref107","_callee79","biconomyInfo","res","_context79","limits","apiId","headers","x-api-key","_x92","sendTxWithPermit","_ref108","_callee80","_contract$methods3","messageToSign","_this$getSignaturePar","_context80","encodeABI","personal","sign","_x93","_x94","_x95","_x96","_x97","_x98","buildBiconomyErc20ForwarderTx","_ref109","_callee81","permitType","callData","buildParams","_context81","txGas","erc20ForwarderClient","buildTx","_x99","_x100","_x101","_x102","_x103","_ref110","_callee83","_context83","_ref111","_callee82","_context82","_x105","_x106","_x104","sendBiconomyTxWithErc20Forwarder","_ref112","_callee84","req","metaInfo","txResponse","fetchReceiptIntervalId","_context84","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x107","_x108","_x109","_x110","sendBiconomyTxWithPersonalSign","_ref113","_callee85","_this$getSignaturePar2","_context85","getNonce","_x111","_x112","_x113","_x114","signPermitEIP2612","_ref114","_callee86","erc20Name","owner","spender","deadline","domain","permit","domainData","_context86","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x115","_x116","_x117","_x118","_x119","_x120","_x121","_x122","signPermit","_ref115","_callee87","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args87","_context87","net","getId","round","nonceMethod","pow","allowed","response","_x123","_x124","_x125","_ref116","_callee88","permitParams","methodAbi","useNonce","_args88","_context88","_jsonInterface","f","unshift","_x126","_x127","_x128","_x129","_x130","_x131","_x132","sendSignedTx","_ref117","_callee89","MetaTransaction","dataToSign","_context89","_x133","_x134","_x135","_x136","_x137","checkTokenApproved","_ref118","_callee90","contractAddr","walletAddr","_ref119","_ref120","allowance","_context90","getAllowance","gte","_x138","_x139","_x140","_ref121","_callee91","_context91","_x141","_x142","_x143","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee93","highestValue","_args93","_context93","lendRates","aprInfo","tokenAPR","_ref123","_callee92","_context92","_x144","_ref124","_callee94","_args94","_context94","_x145","_x146","getTrancheStakingRewards","_ref125","_callee96","_args96","_context96","_ref126","_callee95","tokenGlobalConfig","stakingRewardsContract","_context95","_x149","_x147","_x148","_ref127","_callee97","field","addGovTokens","_args97","_context97","loadTrancheField","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_ref128","_callee98","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref129","_ref130","totalSupply","virtualPrice","_ref131","_ref132","lastPrice1","staked1","_ref133","_ref134","deposited1","lastPrice","_ref135","_ref136","redeemable1","staked2","_ref137","_ref138","earningsStart","trancheApy2","deposited3","earningsEnd","_ref139","_ref140","trancheFee","earningsCounter","feesEnd","feesStart","_ref141","_ref142","deposited4","redeemable3","_ref143","_ref144","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","_ref145","_ref146","_ref147","_ref148","earningsPerc","secondsFromFirstTx","_ref149","_ref150","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args98","_context98","Strategy","initContract","AA","BB","getTokenTotalSupply","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x158","_x159","_x160","_x161","_x162","_x163","_x164","loadAssetField","_ref151","_callee99","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref152","_ref153","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref154","_ref155","amountLentCurve1","redeemableBalanceCurve","_ref156","_ref157","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref158","_ref159","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref160","_ref161","tokenPriceFirstDeposit","_ref162","_ref163","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref164","_ref165","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref166","_ref167","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref168","_ref169","amountLentCurve2","redeemableBalanceCurve1","_ref170","_ref171","redeemableBalance2","_args99","_context99","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x165","_x166","_x167","_x168","getIdleTokenSupply","_ref172","_callee100","idleTokenSupply","_args100","_context100","_x169","getIdleTokenPriceWithFee","_ref173","_callee101","_ref174","_ref175","fee","priceWFee","_args101","_context101","eq","_x170","_x171","_ref176","_callee102","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args102","_context102","_x172","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref177","_callee103","_ref178","_ref179","idleTokensTotalSupply","userShare","_context103","_x173","_x174","open","_callee105","coverProtocolConfig","nexusMutualConfig","_args105","_context105","_ref181","_callee104","coverage","coverageTokens","protocolImage","_context104","tokens","expirationTimestamp","utc","_x175","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref182","_callee107","incidentsInfo","_ref183","_ref184","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context107","directProps","startBlock","contractInfo","buyer","_ref185","_callee106","cover","coverId","claimSubmittedEvent","_ref186","_ref187","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref188","_ref189","_context106","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x177","_x176","getBatchedDepositExecutions","_ref190","_callee108","_context108","_x178","getBatchedDeposits","_callee110","filter_by_status","batchDepositConfig","batchedDeposits","_args110","_context110","_ref192","_callee109","currBatchIndex","batchIndex","_ref193","_ref194","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context109","_x179","getETHBalance","_ref195","_callee111","fixDecimals","_args111","_context111","_x180","_ref196","_callee112","_ref197","_ref198","_args112","_context112","ERC20","_x181","_x182","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref199","_callee113","_args113","_context113","_x183","_ref200","_callee114","_args114","_context114","_x184","_ref201","_callee115","_args115","_context115","_x185","_x186","getProtocolBalance","_ref202","_callee116","_context116","_x187","_x188","getAprs","_ref203","_callee117","_context117","addresses","_x189","genericIdleCall","_ref204","_callee118","callParams","_args118","_context118","_x190","_ref205","_callee119","_contract$methods4","_args119","_context119","_x191","_x192","_ref206","_callee121","_args121","_context121","_ref207","_callee120","_context120","_x194","_x195","_x193","getTxDecodedLogs","_ref208","_callee123","logAddr","decodeLogs","internalTransfers","_context123","_ref209","_callee122","_context122","_x200","_x201","_x196","_x197","_x198","_x199","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee124","_context124","_callee125","_args125","_context125","getBlock","_ref212","_callee126","_args126","_context126","getPastEvents","_x202","_x203","_ref213","_callee127","_args127","_context127","_x204","_x205","cachedContractCall","_ref214","_callee128","_args128","_context128","_x206","_x207","_ref215","_callee129","_contract$methods5","_args129","_context129","_x208","_x209","_ref216","_callee130","async","_args130","_context130","_x210","_x211","getUnlentBalance","_ref217","_callee131","unlentBalance","_context131","_x212","_ref218","_callee132","_args132","_context132","_x213","getLastAllocations","_ref219","_callee134","tokenAllocations","_context134","_ref220","_callee133","_context133","_x215","_x216","_x214","_ref221","_callee135","protocolsAprs","_ref222","_ref223","govTokensBalances","_args135","_context135","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref224","_callee136","_ref225","_ref226","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref227","_ref228","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context136","getSushiswapConversionRate","_x218","_ref229","_callee137","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context137","_x219","_x220","_ref230","_callee138","unires","_args138","_context138","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref231","_callee139","idleTokensBalances","remainingCurveTokens","_args139","_context139","_x223","getCurveUnevenTokenAmounts","_ref232","_callee140","amounts","max_burn_amount","unevenAmounts","_context140","getCurveDepositContract","_x224","_x225","_callee141","curveRatesInfo","_context141","strategyTokens","getCurveAPYContract","_callee142","blocksForPrevTokenPrice","_ref235","_ref236","prevTokenPrice","blocksMultiplier","curveAPR","_context142","getCurveTokenSupply","_callee143","_context143","getCurvePoolContract","_callee144","_args144","_context144","_callee145","_args145","_context145","_ref240","_callee146","_ref241","_ref242","_context146","_x226","_callee147","depositContractInfo","_context147","getCurveZapContract","_callee148","zapContractInfo","_context148","_callee149","poolContractInfo","_context149","getCurveSwapContract","_callee150","migrationContractInfo","_context150","getCurveIdleTokensAmounts","_callee152","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args152","_context152","_ref248","_callee151","coinIndex","curveIdleTokens","_context151","migrationParams","_x227","getCurveTokensAmounts","_callee154","useCoinIndex","_args154","_context154","_ref250","_callee153","_ref251","_ref252","idleTokenPrice","totalTokenSupply","_context153","_x228","getCurveAmounts","_ref253","_callee156","_args156","_context156","_ref254","_callee155","_context155","_x231","_x229","_x230","getCurveTokenAmount","_ref255","_callee157","_args157","_context157","_x232","getCurveSlippage","_ref256","_callee158","uneven_amounts","depositContract","_ref257","_ref258","Sv","_args158","_context158","_x233","_x234","_ref259","_callee159","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref260","_ref261","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args159","_context159","IAaveIncentivesController","emissionPerSecond","_x235","_callee161","_args161","_context161","_ref263","_callee160","_ref264","_ref265","_context160","_x236","getWMaticApr","_ref266","_callee162","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args162","_context162","_x237","_x238","getStkAaveApr","_ref267","_callee163","aaveConversionRate","stkAaveAPR","stkAaveValue","_args163","_context163","_x239","_x240","getCompAPR","_ref268","_callee164","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args164","_context164","_x241","_x242","getCompSpeed","_ref269","_callee165","cTokenAddress","compSpeed","_context165","_x243","_ref270","_callee166","cTokenInfo","compoundAllocationPerc","_ref271","_ref272","cTokenTotalSupply","compoundPoolShare","_args166","_context166","_x244","_callee168","_args168","_context168","_ref274","_callee167","_ref275","_ref276","_context167","_x245","_callee170","_args170","_context170","_ref278","_callee169","_ref279","_ref280","compApr","_context169","_x246","getTokensCsv","_callee173","csv","_context173","prototype","sum","pv","cv","avg","_ref282","_callee172","_context172","_ref283","_callee171","rates","header","aprAvg","scoreAvg","lastRow","_context171","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee175","convertToken","_args175","_context175","_ref285","_callee174","compTokenBalance","_context174","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref286","_callee177","govTokensUserDistribution","_args177","_context177","_ref287","_callee176","_context176","_x251","_x250","getGovTokensDistributionSpeed","_ref288","_callee179","govTokensDistribution","_args179","_context179","_ref289","_callee178","govSpeed","_context178","_x253","_x252","getGovTokensAprs","_ref290","_callee181","govTokensAprs","_args181","_context181","_ref291","_callee180","_ref292","_ref293","_ref294","_ref295","cTokenConfig","_context180","aprTooltipMode","_x256","_x254","_x255","_callee183","_args183","_context183","_ref297","_callee182","govTokenBalance","fromTokenConfig","_context182","_x257","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee184","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args184","_context184","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref299","_callee186","govTokensAmounts","_context186","getGovTokensUserAmounts","_ref300","_callee185","govTokenIndex","govTokenAddress","_context185","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref301","_callee187","_context187","_x262","_x263","_ref302","_callee188","_context188","_x264","_x265","_callee191","govTokenConfigForced","_args191","_context191","_ref304","_callee190","_context190","_ref305","_callee189","_context189","_x267","_x268","_x266","getTokenFees","_callee192","_args192","_context192","_callee193","_ref308","_ref309","feePercentage","gain","fees","_args193","_context193","_ref310","_callee194","_args194","_context194","_x269","getTotalTVL","_callee195","tokensTVL","_context195","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee199","_context199","_ref313","_callee198","_context198","_ref314","_callee197","oldTokenTVL","idleTokenName","_ref315","_ref316","oldTokenConfig","_ref320","_ref321","oldTokenPrice","oldTotalSupply","_context197","showAUM","_ref317","_callee196","_ref318","_ref319","govTokenConversionRate","govTokenBalanceConverted","_context196","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee200","idleSubstackFeed","latestFeed","_context200","getTrancheAggregatedStats","_callee204","totalAUM","_args204","_context204","_ref324","_callee203","_context203","_ref325","_callee202","_context202","_ref326","_callee201","_ref327","_ref328","_context201","_x275","_x274","_x273","getAggregatedStats","_callee206","allNetworks","networkIds","_args206","_context206","_ref330","_callee205","tvls","_context205","getAggregatedStats_chain","_x276","_callee210","avgAPR","_args210","_context210","_ref332","_callee209","_context209","_ref333","_callee208","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context208","_ref334","_callee207","_ref335","_ref336","_context207","_x279","_x278","_x277","getTokenApy","_ref337","_callee211","_context211","_x280","getTokensToMigrate","_callee214","_args214","_context214","_ref339","_callee213","_context213","_ref340","_callee212","_ref341","_context212","_x282","_x281","getProtocolsTokensBalances","_callee216","tokenBalances","minTokenBalance","protocolsTokens","_args216","_context216","_ref343","_callee215","_context215","_x283","getTokenConversionRateField","_ref344","_callee217","_args217","_context217","getTokenConversionRateUniswap","_x284","_x285","_ref345","_callee218","_args218","_context218","_x286","_x287","_x288","getAvgAPYStats","_ref346","_callee219","apiResults","_args219","_context219","_x289","_x290","_ref347","_callee220","ToTokenConfig","_args220","_context220","_x291","_ref348","_callee221","count","_conversionRate","_args221","_context221","_x292","_x293","getTokenScore","_ref349","_callee222","_ref350","_ref351","tokenScore","_context222","protocolScore","getTokenScoreApi","_x294","_x295","_ref352","_callee223","scores","_context223","_x296","_x297","_ref353","_callee224","idleGovTokenShowAPR","idleAPR","_args224","_context224","_x298","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","Breadcrumb","showPathMobile","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","pathLink","Link","pl","whiteSpace","borderLeft","goToSection","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TooltipText","tooltipProps","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","CustomList","paginationEnabled","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","FastBalanceSelector","onMouseDown","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","unstakeWithBalance","Button","transactionSucceeded","unstake","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewards","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","LDO","CRV","FRAX3CRV","MIM3CRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","rowsPerPage","totalPages","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","customFieldName","customFieldProps","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/main.fbee3e69.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          // console.log('trancheApy',tokenConfig.token,trancheApy.toString(),apr.toString(),apy.toString());\n          // tokensApy[tokenConfig.token] = baseApy;\n          \n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                // console.log('trancheApy',token,rewardTokenInfo,tokenApy.toString(),apy.toString());\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price, null);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n            }\n            blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n            conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // if (token === 'FEI'){\n                  // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n                // }\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","var map = {\n\t\"./mainnet/v1/index.json\": 1880,\n\t\"./testnet/mumbai/index.json\": 1881\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4445;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4452,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4453,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4454,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4455,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4463,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4464,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4465,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4466,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4655,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4656,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4657,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4658,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4659,\n\t\"./mainnet/v1/index.json\": 1880,\n\t\"./networks.json\": 1879,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4665,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4666,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4667,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4668,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4676,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4677,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4678,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4679,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4868,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4869,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4870,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4871,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4872,\n\t\"./testnet/mumbai/index.json\": 1881\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4446;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : (this.props.token===\"FRAX3CRV\")?`images/tokens/${this.props.token}.png`:`images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;"],"sourceRoot":""}