{"version":3,"sources":["FlexLoader/FlexLoader.js","AssetField/AssetField.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","CardIconButton/CardIconButton.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","IconBox/IconBox.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ExecuteTransaction/ExecuteTransaction.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ImageButton/ImageButton.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","length","undefined","_this","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","RoundButton","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","ExtLink","target","rel","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","hashChanged","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","CardIconButton","isActive","image","imageProps","useIconOnly","iconColor","iconBgColor","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","console","log","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minDate","maxDate","isAfter","currTime","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","tokenUserBalance","lockedInfo","claimable","claimableRewards","claimEvents","checkpointEvents","depositEvents","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","ExecuteTransaction","parentProps","Button","componentProps","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","goToSection","route","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","loadContracts","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","contractAddress","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","protocol","aprTooltipMode","distributionMode","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","etherscan","endpoints","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","_ref44","_callee39","_context39","_x38","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee40","etherscanEndpoint","etherscanTxlist","_context40","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee41","contractPaused","_args41","_context41","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref47","_callee43","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context43","lastAllocationsPromise","_ref48","_callee42","lastAllocations","_context42","_x40","_x41","alloc","_x39","_ref49","_callee44","oldContractBalance","oldContractTokenDecimals","oldContractName","_context44","_x42","_x43","_ref50","_callee45","eventName","_args45","_context45","_x44","_x45","estimateMethodGasUsage","_ref51","_callee46","_contract$methods","functionCall","gasLimit","_ref52","_ref53","_args46","_context46","getGasPrice","estimateGas","_x46","_x47","_ref54","_callee47","callback_receipt","_contract$methods2","_context47","once","confirmationNumber","receipt","_x48","_x49","_x50","_x51","_x52","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref55","_callee48","biconomyInfo","res","_context48","x-api-key","_x53","sendTxWithPermit","_ref56","_callee49","_contract$methods3","messageToSign","_this$getSignaturePar","_context49","encodeABI","_address","personal","sign","_x54","_x55","_x56","_x57","_x58","_x59","buildBiconomyErc20ForwarderTx","_ref57","_callee50","tokenAddress","callData","_context50","erc20ForwarderClient","buildTx","txGas","_x60","_x61","_x62","_x63","_x64","sendBiconomyTxWithErc20Forwarder","_ref58","_callee51","req","metaInfo","txResponse","fetchReceiptIntervalId","_context51","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x65","_x66","_x67","_x68","sendBiconomyTxWithPersonalSign","_ref59","_callee52","_this$getSignaturePar2","_context52","getNonce","call","_x69","_x70","_x71","_x72","signPermitEIP2612","_ref60","_callee53","erc20Name","spender","deadline","domain","domainData","_context53","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x73","_x74","_x75","_x76","_x77","_x78","_x79","_x80","_ref61","_callee54","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args54","_context54","net","getId","allowed","response","_x81","_x82","_x83","_ref62","_callee55","permitParams","methodAbi","useNonce","_args55","_context55","_jsonInterface","f","unshift","_x84","_x85","_x86","_x87","_x88","_x89","_x90","sendSignedTx","_ref63","_callee56","MetaTransaction","dataToSign","_context56","_x91","_x92","_x93","_x94","_x95","_ref64","_callee57","contractAddr","walletAddr","_ref65","_ref66","allowance","_context57","getAllowance","_x96","_x97","_x98","_ref67","_callee58","_context58","_x99","_x100","_x101","txData","disableERC20","toTwosComplement","_ref68","_callee59","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref69","_ref70","curveAvgBuyPrice","curveTokenBalance","_ref71","_ref72","amountLentCurve1","redeemableBalanceCurve","_ref73","_ref74","earningPerYear","_ref75","_ref76","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref77","_ref78","tokenPriceFirstDeposit","_ref79","_ref80","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref81","_ref82","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref83","_ref84","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref85","_ref86","amountLentCurve2","redeemableBalanceCurve1","_ref87","_ref88","redeemableBalance2","_args59","_context59","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x102","_x103","_x104","_x105","getIdleTokenSupply","_ref89","_callee60","idleTokenSupply","_args60","_context60","_x106","getIdleTokenPriceWithFee","_ref90","_callee61","_ref91","_ref92","priceWFee","_args61","_context61","eq","_x107","_x108","_ref93","_callee62","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args62","_context62","_x109","clearCachedData","useLocalStorage","_ref94","_callee63","_ref95","_ref96","idleTokensTotalSupply","userShare","_context63","_x110","_x111","_callee65","_args65","_context65","_ref98","_callee64","coverageTokens","protocolImage","_context64","_x112","_ref99","_callee66","_context66","_x113","_callee68","filter_by_status","_args68","_context68","_ref101","_callee67","_ref102","_ref103","_context67","_x114","_ref104","_callee69","fixDecimals","_args69","_context69","_x115","_ref105","_callee70","_ref106","_ref107","_args70","_context70","_x116","_x117","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref108","_callee71","_args71","_context71","_x118","_ref109","_callee72","_args72","_context72","_x119","_x120","getProtocolBalance","_ref110","_callee73","_context73","_x121","_x122","getAprs","_ref111","_callee74","_context74","addresses","_x123","genericIdleCall","_ref112","_callee75","callParams","_args75","_context75","_x124","_ref113","_callee76","_contract$methods4","_args76","_context76","_x125","_x126","getTxDecodedLogs","_ref114","_callee78","logAddr","decodeLogs","internalTransfers","_context78","_ref115","_callee77","_context77","_x131","_x132","_x127","_x128","_x129","_x130","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee79","_context79","_ref117","_callee80","_args80","_context80","getPastEvents","_x133","_x134","_ref118","_callee81","_contract$methods5","_args81","_context81","_x135","_x136","_ref119","_callee82","_args82","_context82","_x137","_x138","apr2apy","getUnlentBalance","_ref120","_callee83","unlentBalance","_context83","_x139","_ref121","_callee84","_args84","_context84","_x140","_ref122","_callee86","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args86","_context86","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref123","_callee85","_ref124","_ref125","protocolBalance","protocolAllocation","_context85","_x142","_x143","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x141","getUniswapConversionRate_path","_ref126","_callee87","unires","_context87","_x144","_ref127","_callee88","pairAddresses","_ref128","_ref129","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref130","_ref131","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context88","_x145","_x146","_ref132","_callee89","tokenConfigFrom","tokenConfigDest","WETHAddr","_context89","_x147","_x148","_ref133","_callee90","_context90","_x149","_x150","getCurveDepositedTokens","_ref134","_callee91","idleTokensBalances","remainingCurveTokens","_args91","_context91","_x151","getCurveUnevenTokenAmounts","_ref135","_callee92","amounts","max_burn_amount","unevenAmounts","_context92","getCurveDepositContract","_x152","_x153","_callee93","curveRatesInfo","_context93","strategyTokens","getCurveAPYContract","_callee94","blocksForPrevTokenPrice","_ref138","_ref139","prevTokenPrice","blocksMultiplier","curveAPR","_context94","getCurveTokenSupply","_callee95","_context95","getCurvePoolContract","_callee96","_args96","_context96","_callee97","_args97","_context97","_ref143","_callee98","_ref144","_ref145","_context98","_x154","_callee99","depositContractInfo","_context99","getCurveZapContract","_callee100","zapContractInfo","_context100","_callee101","poolContractInfo","_context101","getCurveSwapContract","_callee102","_context102","getCurveIdleTokensAmounts","_callee104","max_slippage","curveTokenSupply","curveTokenShare","_args104","_context104","_ref151","_callee103","curveIdleTokens","_context103","_x155","getCurveTokensAmounts","_callee106","useCoinIndex","_args106","_context106","_ref153","_callee105","_ref154","_ref155","totalTokenSupply","_context105","_x156","getCurveAmounts","_ref156","_callee108","_args108","_context108","_ref157","_callee107","_context107","_x159","_x157","_x158","getCurveTokenAmount","_ref158","_callee109","_args109","_context109","_x160","getCurveSlippage","_ref159","_callee110","uneven_amounts","_ref160","_ref161","virtualPrice","Sv","_args110","_context110","_x161","_x162","_ref162","_callee111","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref163","_ref164","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args111","_context111","_x163","_callee113","_args113","_context113","_ref166","_callee112","_ref167","_ref168","_context112","_x164","getStkAaveApr","_ref169","_callee114","aaveConversionRate","stkAaveAPR","stkAaveValue","_args114","_context114","_x165","_x166","getCompAPR","_ref170","_callee115","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args115","_context115","_x167","_x168","getCompSpeed","_ref171","_callee116","cTokenAddress","compSpeed","_context116","_x169","_ref172","_callee117","cTokenInfo","compoundAllocationPerc","_ref173","_ref174","cTokenTotalSupply","compoundPoolShare","_args117","_context117","_x170","_callee119","_args119","_context119","_ref176","_callee118","_ref177","_ref178","_context118","_x171","_callee121","_args121","_context121","_ref180","_callee120","_ref181","_ref182","compApr","_context120","_x172","getTokensCsv","_callee124","csv","_context124","prototype","sum","pv","cv","avg","_ref184","_callee123","_context123","_ref185","_callee122","header","aprAvg","scoreAvg","lastRow","_context122","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x174","_x173","_callee126","_args126","_context126","_ref187","_callee125","compTokenBalance","_context125","_x175","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref188","_callee128","govTokensUserDistribution","_args128","_context128","_ref189","_callee127","_context127","_x177","_x176","_ref190","_callee130","govTokensDistribution","tokenGovTokens","_args130","_context130","_ref191","_callee129","govSpeed","_context129","_x179","_x178","_ref192","_callee132","_args132","_context132","_ref193","_callee131","_ref194","_ref195","_ref196","_ref197","cTokenConfig","_context131","_x182","_x180","_x181","_callee134","_args134","_context134","_ref199","_callee133","tokenConversionRate","fromTokenConfig","_context133","_x183","getGovTokenConfigByAddress","_callee135","checkShowBalance","govTokensEarnings","_args135","_context135","govTokenAmount","getGovTokensIndexes","_ref201","_callee137","govTokensAmounts","_context137","_ref202","_callee136","govTokenAddress","_context136","_x186","_x187","_x184","_x185","_callee140","govTokenConfigForced","_args140","_context140","_ref204","_callee139","_context139","_ref205","_callee138","_context138","_x189","_x190","_x188","_callee141","_args141","_context141","_callee142","_ref208","_ref209","gain","fees","_args142","_context142","_ref210","_callee143","_args143","_context143","_x191","getTotalTVL","_callee144","tokensTVL","_context144","getTokensTVL","totalTVL","tokenTVL","_callee148","_context148","_ref213","_callee147","_context147","_ref214","_callee146","oldTokenTVL","idleTokenName","_ref215","_ref216","_ref220","_ref221","oldTokenPrice","oldTotalSupply","_context146","_ref217","_callee145","_ref218","_ref219","govTokenConversionRate","govTokenBalanceConverted","_context145","_x194","_x193","_x192","getSubstackLatestFeed","_callee149","endpointInfo","idleSubstackFeed","latestFeed","_context149","items","getAggregatedStats","_callee150","totalAUM","_args150","_context150","getAggregatedStats_chain","_callee154","avgAPR","_args154","_context154","_ref225","_callee153","_context153","_ref226","_callee152","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context152","_ref227","_callee151","_ref228","_ref229","_context151","_x197","_x196","_x195","getTokenApy","_ref230","_callee155","_context155","_x198","_callee158","_args158","_context158","_ref232","_callee157","_context157","_ref233","_callee156","_ref234","_context156","_x200","_x199","getProtocolsTokensBalances","_callee160","tokenBalances","minTokenBalance","protocolsTokens","_args160","_context160","_ref236","_callee159","tokenContract","_context159","_x201","_ref237","_callee161","_args161","_context161","_x202","_x203","_x204","getAvgAPYStats","_ref238","_callee162","apiResults","_args162","_context162","_x205","_x206","_ref239","_callee163","_conversionRate","_args163","_context163","_x207","_x208","_ref240","_callee164","_ref241","_ref242","_context164","protocolScore","getTokenScoreApi","_x209","_x210","_ref243","_callee165","_context165","_x211","_x212","_ref244","_callee168","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args168","_context168","_ref245","_callee167","addrIndex","protocolApr","protocolApy","govTokenAPR","_context167","_ref246","_callee166","_context166","_x216","_x214","_x215","_x213","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","skipMintForDeposit","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","isSafeApp","checkSafeApp","activate","getAccount","getSafeInfo","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","txStatus","getTransactionParamsAsync","sendRawTransaction","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.a0af8a18.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:7,\n        type:'day',\n        label:'1 week'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(7,'day') : this.functionsUtil.strToMoment().add(7,'day');\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n\n    if (!this.props.account){\n      // if (isDebug){\n      //   alert(`loadStats: !account=${this.props.account}`)\n      // }\n      return false;\n    }\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      tokenUserBalance,\n      lockedInfo,\n      claimable,\n      claimableRewards,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}})\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('YYYY-MM-DD HH:mm')\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.selectedToken\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.rewardToken}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    // if (isDebug){\n    //   alert(`loadStats: statsLoaded=${statsLoaded}`);\n    // }\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    // console.log('updateData',selectedAction,newState);\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n    // if (isDebug){\n    //   alert(`updateData: action=${selectedAction}, balanceProp=${newState.balanceProp.toFixed()}, contractInfo=${this.props.contractInfo.name}`);\n    // }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              py={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Hash\n                              </Text>\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( reward => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.amount}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {this.functionsUtil.shortenHash(reward.hash)}\n                                  </Text>\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    {\n                      (isIncrease && canIncrease) && (\n                        <Box\n                          mb={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Choose increase value:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AccessTime'}\n                              iconColor={'deposit'}\n                              iconBgColor={'#ced6ff'}\n                              isActive={ this.state.increaseAction === 'time' }\n                              handleClick={ e => this.setIncreaseAction('time') }\n                              text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                            />\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AttachMoney'}\n                              iconColor={'redeem'}\n                              iconBgColor={'#ceeff6'}\n                              isActive={ this.state.increaseAction === 'amount' }\n                              handleClick={ e => this.setIncreaseAction('amount') }\n                              text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                            />\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                        <Box\n                          width={1}\n                        > \n                          {\n                            (isLock || this.state.increaseAction === 'time') && (\n                              <Box\n                                width={1}\n                              >\n                                <Text mb={1}>\n                                  Choose lock period:\n                                </Text>\n                                {\n                                  !this.state.lockEndDateIsMaxEndDate ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      flexDirection={'column'}\n                                    >\n                                      <Input\n                                        mb={2}\n                                        width={1}\n                                        type={\"date\"}\n                                        required={true}\n                                        height={'3.4em'}\n                                        borderRadius={2}\n                                        fontWeight={500}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        boxShadow={'none !important'}\n                                        value={this.state.lockPeriodInput || ''}\n                                        onChange={this.changelockPeriodInput.bind(this)}\n                                        border={`1px solid ${this.props.theme.colors.divider}`}\n                                      />\n                                      <Flex\n                                        mb={3}\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'space-between'}\n                                      >\n                                        {\n                                          this.state.lockPeriods.map( (p,index) => {\n                                            const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                            return (\n                                              <DashboardCard\n                                                cardProps={{\n                                                  p:2,\n                                                  width:0.24,\n                                                }}\n                                                isActive={isActive}\n                                                isInteractive={true}\n                                                key={`lockPeriod_${index}`}\n                                                handleClick={e => this.selectLockPeriod(p)}\n                                              >\n                                                <Text \n                                                  fontWeight={3}\n                                                  fontSize={[1,2]}\n                                                  textAlign={'center'}\n                                                  color={isActive ? 'copyColor' : 'cellText'}\n                                                >\n                                                  {p.label}\n                                                </Text>\n                                              </DashboardCard>\n                                            );\n                                          })\n                                        }\n                                      </Flex>\n                                      {\n                                        isIncrease && (\n                                          <ExecuteTransaction\n                                            params={[]}\n                                            {...this.props}\n                                            parentProps={{\n                                              width:1,\n                                              alignItems:'center',\n                                              justifyContent:'center'\n                                            }}\n                                            Component={Button}\n                                            componentProps={{\n                                              fontSize:3,\n                                              fontWeight:3,\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              borderRadius:4,\n                                              mainColor:'deposit',\n                                              value:'Increase Time',\n                                              disabled:this.state.buttonDisabled\n                                            }}\n                                            action={'Increase Time'}\n                                            methodName={'increase_unlock_time'}\n                                            contractName={this.props.contractInfo.name}\n                                            callback={this.transactionSucceeded.bind(this)}\n                                            getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                          />\n                                        )\n                                      }\n                                    </Flex>\n                                  ) : (\n                                    <IconBox\n                                      cardProps={{\n                                        mt:1,\n                                        mb:3\n                                      }}\n                                      icon={'Warning'}\n                                      iconProps={{\n                                        color:'cellText'\n                                      }}\n                                      text={`Your tokens are locked for the maxumum allowed period.`}\n                                    />\n                                  )\n                                }\n                              </Box>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                    {\n                      (isLock || this.state.increaseAction==='amount') ? (\n                        <SendTxWithBalance\n                          error={null}\n                          {...this.props}\n                          action={txAction}\n                          steps={this.state.steps}\n                          infoBox={this.state.infoBox}\n                          tokenConfig={this.props.tokenConfig}\n                          tokenBalance={this.state.balanceProp}\n                          contractInfo={this.props.contractInfo}\n                          permitEnabled={this.state.permitEnabled}\n                          buttonDisabled={this.state.buttonDisabled}\n                          approveEnabled={this.state.approveEnabled}\n                          callback={this.transactionSucceeded.bind(this)}\n                          approveDescription={this.state.approveDescription}\n                          balanceSelectorInfo={this.state.balanceSelectorInfo}\n                          changeInputCallback={this.changeInputCallback.bind(this)}\n                          contractApproved={this.contractApprovedCallback.bind(this)}\n                          getTransactionParams={this.getTransactionParams.bind(this)}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                {\n                                  (isLock || isIncrease) ? (\n                                    `You don't have any ${this.props.selectedToken} in your wallet.`\n                                  ) : isUnstake && (\n                                    `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                  )\n                                }\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        </SendTxWithBalance>\n                      ) : (isIncrease && !canIncrease) ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'LockOpen'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You cannot increase an expired lock, please Withdraw.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : isUnstake ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            this.state.lockExpired ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock has expired, you can withdraw your {this.props.selectedToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                    value:'Withdraw',\n                                  }}\n                                  action={'Withdraw'}\n                                  methodName={'withdraw'}\n                                  contractName={this.props.contractInfo.name}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : isClaim && (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      )\n                    }\n                  </Box>\n                ) : !this.props.account ? (\n                  <ConnectBox\n                    {...this.props}\n                  />\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.isSafeApp = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      this.isSafeApp = await this.provider.isSafeApp();\n      return this.isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}