{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","TooltipText/TooltipText.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","ConnectBox/ConnectBox.js","FlexLoader/FlexLoader.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","this","showPathMobile","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","id","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","length","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Component","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","componentUnmounted","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","Object","assign","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref32","_ref33","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref34","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref35","_ref36","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref37","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref38","_ref39","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref40","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref41","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref42","_callee24","_context24","_x26","_x27","_x28","_ref43","_callee25","_ref44","_ref45","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref48","_ref49","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref50","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref51","_callee28","_context28","_x32","match","_ref52","_callee29","_context29","_x33","_ref53","_callee30","_context30","_x34","items","to_address","_ref54","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref60","_callee38","_ref61","_ref62","_context38","getTransactionReceipt","_x36","_ref63","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref64","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref65","_callee41","processTxs","_args41","_context41","_x40","_ref66","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref67","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref68","_callee46","minedTxs","_context46","_ref69","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref70","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref71","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref72","_callee53","txsToProcess","_args53","_context53","_ref73","_callee52","_context52","_ref74","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref75","_callee48","_context48","_x54","_x55","_ref76","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref77","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref78","_callee54","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args54","_context54","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x60","_ref79","_callee55","error_callback","config","_args55","_context55","post","catch","_x61","_ref80","_callee56","_args56","_context56","_x62","_ref81","_callee57","apiKeyIndex","apiKey","_args57","_context57","message","_x63","_ref82","_callee58","return_data","_args58","_context58","_x64","makeCachedPostRequest","_ref83","_callee59","_args59","_context59","_x65","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee60","page","googlePageviewInfo","isOrigin","_args60","_context60","ga","_ref85","_callee62","googleEventsInfo","debugEnabled","originOk","_args62","_context62","analytics","google","addPostfixForTestnet","availableNetworks","_ref86","_callee61","_context61","hitCallback","hitCallbackFail","_x67","_x68","_x66","createContract","_ref87","_callee63","_context63","_x69","_x70","_x71","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee66","activeOnly","whitelist","proposals","validProposals","_args66","_context66","addr","_ref89","_callee65","checkedStrategies","_context65","end","author","snapshot","strategies","_ref90","_callee64","tokenContract","_context64","_x73","_x72","getAprsFromApi","_callee67","endpointInfo","aprs","_args67","_context67","_ref92","_callee68","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args68","_context68","_x74","getTokenExchangeRate","_ref93","_callee69","exchangeRateParams","exchangeRate","_context69","_x75","_x76","getTokenDecimals","_ref94","_callee70","_context70","_x77","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee71","idleTokenConfig","feeDistributorConfig","_context71","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee72","contractPaused","_args72","_context72","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref97","_callee74","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context74","lastAllocationsPromise","_ref98","_callee73","lastAllocations","_context73","_x79","_x80","alloc","_x78","_ref99","_callee75","oldContractBalance","oldContractTokenDecimals","oldContractName","_context75","_x81","_x82","_ref100","_callee76","eventName","_args76","_context76","getContractPastEvents","_x83","_x84","estimateMethodGasUsage","_ref101","_callee77","methodParams","_contract$methods","functionCall","gasLimit","_ref102","_ref103","_args77","_context77","getGasPrice","estimateGas","_x85","_x86","_ref104","_callee78","userAddress","signedParameters","callback_receipt","_contract$methods2","_context78","on","once","confirmationNumber","receipt","_x87","_x88","_x89","_x90","_x91","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref105","_callee79","biconomyInfo","res","_context79","limits","apiId","headers","x-api-key","_x92","sendTxWithPermit","_ref106","_callee80","_contract$methods3","messageToSign","_this$getSignaturePar","_context80","encodeABI","personal","sign","_x93","_x94","_x95","_x96","_x97","_x98","buildBiconomyErc20ForwarderTx","_ref107","_callee81","permitType","callData","buildParams","_context81","txGas","erc20ForwarderClient","buildTx","_x99","_x100","_x101","_x102","_x103","_ref108","_callee83","_context83","_ref109","_callee82","_context82","_x105","_x106","_x104","sendBiconomyTxWithErc20Forwarder","_ref110","_callee84","req","metaInfo","txResponse","fetchReceiptIntervalId","_context84","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x107","_x108","_x109","_x110","sendBiconomyTxWithPersonalSign","_ref111","_callee85","_this$getSignaturePar2","_context85","getNonce","_x111","_x112","_x113","_x114","signPermitEIP2612","_ref112","_callee86","erc20Name","owner","spender","deadline","domain","permit","domainData","_context86","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x115","_x116","_x117","_x118","_x119","_x120","_x121","_x122","signPermit","_ref113","_callee87","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args87","_context87","net","getId","round","nonceMethod","pow","allowed","response","_x123","_x124","_x125","_ref114","_callee88","permitParams","methodAbi","useNonce","_args88","_context88","_jsonInterface","f","unshift","_x126","_x127","_x128","_x129","_x130","_x131","_x132","sendSignedTx","_ref115","_callee89","MetaTransaction","dataToSign","_context89","_x133","_x134","_x135","_x136","_x137","checkTokenApproved","_ref116","_callee90","contractAddr","walletAddr","_ref117","_ref118","allowance","_context90","getAllowance","gte","_x138","_x139","_x140","_ref119","_callee91","_context91","_x141","_x142","_x143","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee93","highestValue","_args93","_context93","lendRates","aprInfo","tokenAPR","_ref121","_callee92","_context92","_x144","_ref122","_callee94","stakedBalance","_args94","_context94","_x145","_x146","getTrancheStakingRewards","_ref123","_callee96","_context96","_ref124","_callee95","tokenGlobalConfig","_context95","_x149","_x147","_x148","_ref125","_callee97","field","addGovTokens","_args97","_context97","loadTrancheField","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_ref126","_callee98","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref127","_ref128","totalSupply","virtualPrice","_ref129","_ref130","staked1","lastPrice1","_ref131","_ref132","deposited1","lastPrice","_ref133","_ref134","redeemable1","staked2","_ref135","_ref136","earningsStart","trancheApy2","deposited3","earningsEnd","_ref137","_ref138","trancheFee","earningsCounter","feesStart","feesEnd","_ref139","_ref140","deposited4","redeemable3","_ref141","_ref142","deposited2","redeemable2","trancheApyDecimals","_ref143","_ref144","_ref145","_ref146","earningsPerc","secondsFromFirstTx","_ref147","_ref148","rewardsTokens","incentiveTokens","govTokens","_args98","_context98","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x158","_x159","_x160","_x161","_x162","_x163","_x164","loadAssetField","_ref149","_callee99","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref150","_ref151","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref152","_ref153","amountLentCurve1","redeemableBalanceCurve","_ref154","_ref155","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref156","_ref157","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref158","_ref159","tokenPriceFirstDeposit","_ref160","_ref161","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref162","_ref163","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref164","_ref165","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref166","_ref167","amountLentCurve2","redeemableBalanceCurve1","_ref168","_ref169","redeemableBalance2","_args99","_context99","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x165","_x166","_x167","_x168","getIdleTokenSupply","_ref170","_callee100","idleTokenSupply","_args100","_context100","_x169","getIdleTokenPriceWithFee","_ref171","_callee101","_ref172","_ref173","fee","priceWFee","_args101","_context101","eq","_x170","_x171","_ref174","_callee102","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args102","_context102","_x172","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref175","_callee103","_ref176","_ref177","idleTokensTotalSupply","userShare","_context103","_x173","_x174","open","_callee105","coverProtocolConfig","nexusMutualConfig","_args105","_context105","_ref179","_callee104","coverage","coverageTokens","protocolImage","_context104","tokens","expirationTimestamp","utc","_x175","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref180","_callee107","incidentsInfo","_ref181","_ref182","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context107","directProps","startBlock","contractInfo","buyer","_ref183","_callee106","cover","coverId","claimSubmittedEvent","_ref184","_ref185","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref186","_ref187","_context106","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x177","_x176","getBatchedDepositExecutions","_ref188","_callee108","_context108","_x178","getBatchedDeposits","_callee110","filter_by_status","batchDepositConfig","batchedDeposits","_args110","_context110","_ref190","_callee109","currBatchIndex","batchIndex","_ref191","_ref192","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context109","_x179","getETHBalance","_ref193","_callee111","fixDecimals","_args111","_context111","_x180","_ref194","_callee112","_ref195","_ref196","_args112","_context112","_x181","_x182","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref197","_callee113","_args113","_context113","_x183","_ref198","_callee114","_args114","_context114","_x184","_ref199","_callee115","_args115","_context115","_x185","_x186","getProtocolBalance","_ref200","_callee116","_context116","_x187","_x188","getAprs","_ref201","_callee117","_context117","addresses","_x189","genericIdleCall","_ref202","_callee118","callParams","_args118","_context118","_x190","_ref203","_callee119","_contract$methods4","_args119","_context119","_x191","_x192","_ref204","_callee121","_args121","_context121","_ref205","_callee120","_context120","_x194","_x195","_x193","getTxDecodedLogs","_ref206","_callee123","logAddr","decodeLogs","internalTransfers","_context123","_ref207","_callee122","_context122","_x200","_x201","_x196","_x197","_x198","_x199","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee124","_context124","_callee125","_args125","_context125","getBlock","_ref210","_callee126","_args126","_context126","getPastEvents","_x202","_x203","_ref211","_callee127","_args127","_context127","_x204","_x205","cachedContractCall","_ref212","_callee128","_args128","_context128","_x206","_x207","_ref213","_callee129","_contract$methods5","_args129","_context129","_x208","_x209","_ref214","_callee130","async","_args130","_context130","_x210","_x211","getUnlentBalance","_ref215","_callee131","unlentBalance","_context131","_x212","_ref216","_callee132","_args132","_context132","_x213","getLastAllocations","_ref217","_callee134","tokenAllocations","_context134","_ref218","_callee133","_context133","_x215","_x216","_x214","_ref219","_callee135","protocolsAprs","_ref220","_ref221","govTokensBalances","_args135","_context135","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref222","_callee136","_ref223","_ref224","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref225","_ref226","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context136","getSushiswapConversionRate","_x218","_ref227","_callee137","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context137","_x219","_x220","_ref228","_callee138","unires","_args138","_context138","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref229","_callee139","idleTokensBalances","remainingCurveTokens","_args139","_context139","_x223","getCurveUnevenTokenAmounts","_ref230","_callee140","amounts","max_burn_amount","unevenAmounts","_context140","getCurveDepositContract","_x224","_x225","_callee141","curveRatesInfo","_context141","strategyTokens","getCurveAPYContract","_callee142","blocksForPrevTokenPrice","_ref233","_ref234","prevTokenPrice","blocksMultiplier","curveAPR","_context142","getCurveTokenSupply","_callee143","_context143","getCurvePoolContract","_callee144","_args144","_context144","_callee145","_args145","_context145","_ref238","_callee146","_ref239","_ref240","_context146","_x226","_callee147","depositContractInfo","_context147","getCurveZapContract","_callee148","zapContractInfo","_context148","_callee149","poolContractInfo","_context149","getCurveSwapContract","_callee150","migrationContractInfo","_context150","getCurveIdleTokensAmounts","_callee152","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args152","_context152","_ref246","_callee151","coinIndex","curveIdleTokens","_context151","migrationParams","_x227","getCurveTokensAmounts","_callee154","useCoinIndex","_args154","_context154","_ref248","_callee153","_ref249","_ref250","idleTokenPrice","totalTokenSupply","_context153","_x228","getCurveAmounts","_ref251","_callee156","_args156","_context156","_ref252","_callee155","_context155","_x231","_x229","_x230","getCurveTokenAmount","_ref253","_callee157","_args157","_context157","_x232","getCurveSlippage","_ref254","_callee158","uneven_amounts","depositContract","_ref255","_ref256","Sv","_args158","_context158","_x233","_x234","_ref257","_callee159","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref258","_ref259","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args159","_context159","IAaveIncentivesController","emissionPerSecond","_x235","_callee161","_args161","_context161","_ref261","_callee160","_ref262","_ref263","_context160","_x236","getWMaticApr","_ref264","_callee162","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args162","_context162","_x237","_x238","getStkAaveApr","_ref265","_callee163","aaveConversionRate","stkAaveAPR","stkAaveValue","_args163","_context163","_x239","_x240","getCompAPR","_ref266","_callee164","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args164","_context164","_x241","_x242","getCompSpeed","_ref267","_callee165","cTokenAddress","compSpeed","_context165","_x243","_ref268","_callee166","cTokenInfo","compoundAllocationPerc","_ref269","_ref270","cTokenTotalSupply","compoundPoolShare","_args166","_context166","_x244","_callee168","_args168","_context168","_ref272","_callee167","_ref273","_ref274","_context167","_x245","_callee170","_args170","_context170","_ref276","_callee169","_ref277","_ref278","compApr","_context169","_x246","getTokensCsv","_callee173","csv","_context173","prototype","sum","pv","cv","avg","_ref280","_callee172","_context172","_ref281","_callee171","rates","header","aprAvg","scoreAvg","lastRow","_context171","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee175","convertToken","_args175","_context175","_ref283","_callee174","compTokenBalance","_context174","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref284","_callee177","govTokensUserDistribution","_args177","_context177","_ref285","_callee176","_context176","_x251","_x250","getGovTokensDistributionSpeed","_ref286","_callee179","govTokensDistribution","_args179","_context179","_ref287","_callee178","govSpeed","_context178","_x253","_x252","getGovTokensAprs","_ref288","_callee181","govTokensAprs","_args181","_context181","_ref289","_callee180","_ref290","_ref291","_ref292","_ref293","cTokenConfig","_context180","aprTooltipMode","_x256","_x254","_x255","_callee183","_args183","_context183","_ref295","_callee182","govTokenBalance","fromTokenConfig","_context182","_x257","_callee184","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args184","_context184","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref297","_callee186","govTokensAmounts","_context186","getGovTokensUserAmounts","_ref298","_callee185","govTokenIndex","_context185","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref299","_callee187","_context187","_x262","_x263","_ref300","_callee188","_context188","_x264","_x265","_callee191","govTokenConfigForced","_args191","_context191","_ref302","_callee190","_context190","_ref303","_callee189","_context189","_x267","_x268","_x266","getTokenFees","_callee192","_args192","_context192","_callee193","_ref306","_ref307","feePercentage","gain","fees","_args193","_context193","_ref308","_callee194","_args194","_context194","_x269","getTotalTVL","_callee195","tokensTVL","_context195","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee199","_context199","_ref311","_callee198","_context198","_ref312","_callee197","oldTokenTVL","idleTokenName","_ref313","_ref314","oldTokenConfig","_ref318","_ref319","oldTokenPrice","oldTotalSupply","_context197","showAUM","_ref315","_callee196","_ref316","_ref317","govTokenConversionRate","govTokenBalanceConverted","_context196","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee200","idleSubstackFeed","latestFeed","_context200","getTrancheAggregatedStats","_callee204","totalAUM","_args204","_context204","_ref322","_callee203","_context203","_ref323","_callee202","_context202","_ref324","_callee201","_ref325","_ref326","_context201","_x275","_x274","_x273","getAggregatedStats","_callee206","allNetworks","networkIds","_args206","_context206","_ref328","_callee205","tvls","_context205","getAggregatedStats_chain","_x276","_callee210","avgAPR","_args210","_context210","_ref330","_callee209","_context209","_ref331","_callee208","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context208","_ref332","_callee207","_ref333","_ref334","_context207","_x279","_x278","_x277","getTokenApy","_ref335","_callee211","_context211","_x280","getTokensToMigrate","_callee214","_args214","_context214","_ref337","_callee213","_context213","_ref338","_callee212","_ref339","_context212","_x282","_x281","getProtocolsTokensBalances","_callee216","tokenBalances","minTokenBalance","protocolsTokens","_args216","_context216","_ref341","_callee215","_context215","_x283","getTokenConversionRateField","_ref342","_callee217","_args217","_context217","getTokenConversionRateUniswap","_x284","_x285","_ref343","_callee218","_args218","_context218","_x286","_x287","_x288","getAvgAPYStats","_ref344","_callee219","apiResults","_args219","_context219","_x289","_x290","_ref345","_callee220","ToTokenConfig","_args220","_context220","_x291","_ref346","_callee221","count","_conversionRate","_args221","_context221","_x292","_x293","getTokenScore","_ref347","_callee222","_ref348","_ref349","tokenScore","_context222","protocolScore","getTokenScoreApi","_x294","_x295","_ref350","_callee223","scores","_context223","_x296","_x297","_ref351","_callee224","idleGovTokenShowAPR","idleAPR","_args224","_context224","_x298","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","TooltipText","tooltipProps","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","src_TooltipText_TooltipText","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","buyInstructions","PortfolioEquityTranches","transactionsList","lastBlockNumber","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","startTokenConversionRate","lastTokenConversionRate","trancheAAInfos","trancheBBInfos","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","colsProps","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","18","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","CRV","FRAX3CRV","MIM3CRV","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.243b42e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length - 1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens', token]);\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo) {\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n          const totalAmount = transfers.reduce((total, t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            return total;\n          }, this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr: tokenApr,\n            apy: tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n\n    return subgraphData;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, 'usersStakes', [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, 'expectedUserReward', [account, tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            staked1,\n            lastPrice1\n          ] = await Promise.all([\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals),\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = null;\n        let trancheApyDecimals = 2;\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          show_idle_apy ? this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          // Hot-fix for convex\n          if (protocol === 'convex'){\n            apr = apr.times(100);\n          }\n\n          let apy = this.apr2apy(apr.div(100)).times(100);\n\n          if (rewardsTokensInfo && rewardsTokensInfo.IDLE && !this.BNify(rewardsTokensInfo.IDLE.apy).isNaN()){\n            apy = apy.plus(this.BNify(rewardsTokensInfo.IDLE.apy).times(100));\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n        // else {\n        //   if (formatValue) {\n        //     output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n        //   }\n        // }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens);\n\n        if (govTokens) {\n          govTokens.forEach(govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          this.setState({\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          startTokenConversionRate,\n          lastTokenConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,firstBlockNumber) : null,\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,lastBlockNumber) : null,\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice']) : [],\n        ]);\n\n        // console.log(token,firstBlockNumber,lastBlockNumber,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheAAInfos.length-1){\n                tokenDataAA[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataAA[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            if (conversionRateField){\n              if (index === trancheBBInfos.length-1){\n                tokenDataBB[conversionRateField] = lastTokenConversionRate;\n              } else {\n                tokenDataBB[conversionRateField] = startTokenConversionRate;\n              }\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // if (token === 'FEI'){\n                //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n                // }\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (!this.props.chartToken && conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n            //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#231b46',\n          rgb: [35, 27, 70],\n          hsl: ['251', '44%', '19%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.studio.thegraph.com/query/12583/idle-tranches-test/v0.0.4\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}