{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","BatchDeposit/BatchDeposit.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","curvezapin","curvezapout","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","getTokensToMigrate","apyLong","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","functionInfo","nonceMethod","permitContract","biconomyLimits","getTokenDecimals","getContractBalance","functions","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","expiry","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","f","call","signPermit","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","src_FastBalanceSelector_FastBalanceSelector","functionName","src_RoundButton_RoundButton","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","BatchDeposit","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","urlParams","param2","currBatchIndex","batchIndex","batchTotal","batchDeposit","batchDepositInfo","strategy","strategyConfig","selectStrategy","reduce","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","_this5","callbackReceiptClaim","_this6","strategyDefaultValue","s","src_Migrate_Migrate","connectAndValidateAccount","goToSection","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","params","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","claimEnabled","subComponent","IdleBatchConverter","IdleTokenV3","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","batchMigration","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","log","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","txReceipt","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref33","_callee30","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args30","_context30","_x32","_ref34","_callee31","_context31","_x33","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee32","contractPaused","_args32","_context32","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref36","_callee35","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context35","allocationPromise","_ref37","_callee33","_context33","lastAmounts","_x35","_x36","availableTokenPromise","_ref38","_callee34","_context34","_x37","_x38","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x34","_ref39","_callee36","_context36","_x39","_x40","_ref40","_callee37","signedParameters","callback_receipt","_contract$methods","_context37","getGasPrice","once","confirmationNumber","receipt","_x41","_x42","_x43","_x44","_x45","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","soliditySHA3","toBuffer","_ref41","_callee38","biconomyInfo","res","_context38","headers","x-api-key","_x46","sendTxWithPermit","_ref42","_callee39","methodName","methodParams","_contract$methods2","messageToSign","_this$getSignaturePar","_context39","_address","personal","sign","_x47","_x48","_x49","_x50","_x51","_x52","_ref43","_callee40","_this$getSignaturePar2","_context40","getNonce","_x53","_x54","_x55","_x56","_ref44","_callee41","baseContractName","holder","spenderContractName","baseContract","spenderContract","domain","permit","spender","verifyingContract","_context41","net","getId","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","now","substring","response","_x57","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","sendSignedTx","_ref45","_callee42","MetaTransaction","domainData","dataToSign","_context42","getChainId","_x66","_x67","_x68","_x69","_x70","_ref46","_callee43","contractAddr","walletAddr","allowance","_context43","getAllowance","_x71","_x72","_x73","_ref47","_callee44","_context44","_x74","_x75","_x76","txData","toTwosComplement","_ref48","_callee45","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref49","_ref50","curveAvgBuyPrice","curveTokenBalance","_ref51","_ref52","amountLentCurve1","redeemableBalanceCurve","_ref53","_ref54","earningPerYear","_ref55","_ref56","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref57","_ref58","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref59","_ref60","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref61","_ref62","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref63","_ref64","amountLentCurve2","redeemableBalanceCurve1","_ref65","_ref66","redeemableBalance2","_args45","_context45","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x77","_x78","_x79","_x80","_ref67","_callee46","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args46","_context46","_x81","clearCachedData","useLocalStorage","expirationDate","_ref68","_callee47","_ref69","_ref70","idleTokensTotalSupply","userShare","_context47","_x82","_x83","_ref71","_callee48","fixDecimals","_ref72","_ref73","_args48","_context48","_x84","_x85","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref74","_callee49","_context49","getProtocolBalance","_x86","_x87","_ref75","_callee50","_context50","_x88","_x89","getAprs","_ref76","_callee51","_context51","_x90","genericIdleCall","_ref77","_callee52","callParams","_args52","_context52","_x91","estimateGas","_ref78","_callee53","_contract$methods3","_args53","_context53","_x92","_x93","getTxDecodedLogs","_ref79","_callee55","logAddr","decodeLogs","internalTransfers","_context55","_ref80","_callee54","_context54","_x98","_x99","_x94","_x95","_x96","_x97","getBlockNumber","_callee56","_context56","getContractPastEvents","_ref82","_callee57","_args57","_context57","getPastEvents","_x100","_x101","_ref83","_callee58","_contract$methods4","_args58","_context58","_x102","_x103","_ref84","_callee59","_args59","_context59","_x104","_x105","apr2apy","getUnlentBalance","_ref85","_callee60","unlentBalance","_context60","_x106","_ref86","_callee61","_args61","_context61","_x107","_ref87","_callee63","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args63","_context63","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref88","_callee62","_ref89","_ref90","protocolBalance","_context62","_x109","_x110","getGovTokensBalances","total","getTokenConversionRate","_x108","getUniswapConversionRate_path","_ref91","_callee64","unires","_context64","_x111","_ref92","_callee65","tokenConfigFrom","tokenConfigDest","_context65","_x112","_x113","getCurveDepositedTokens","_ref93","_callee66","idleTokensBalances","remainingCurveTokens","_args66","_context66","_x114","getCurveUnevenTokenAmounts","_ref94","_callee67","amounts","max_burn_amount","unevenAmounts","_context67","getCurveDepositContract","_x115","_x116","_callee68","curveRatesInfo","_context68","strategyTokens","getCurveAPYContract","_callee69","blocksForPrevTokenPrice","_ref97","_ref98","prevTokenPrice","blocksMultiplier","curveAPR","_context69","getCurveTokenSupply","_callee70","_context70","getCurvePoolContract","_callee71","_args71","_context71","_callee72","_args72","_context72","_ref102","_callee73","_ref103","_ref104","_context73","_x117","_callee74","depositContractInfo","_context74","getCurveZapContract","_callee75","zapContractInfo","_context75","_callee76","poolContractInfo","_context76","getCurveSwapContract","_callee77","_context77","getCurveIdleTokensAmounts","_callee79","max_slippage","curveTokenSupply","curveTokenShare","_args79","_context79","_ref110","_callee78","curveIdleTokens","_context78","_x118","getCurveTokensAmounts","_callee81","useCoinIndex","_args81","_context81","_ref112","_callee80","_ref113","_ref114","totalTokenSupply","_context80","_x119","getCurveAmounts","_ref115","_callee83","_args83","_context83","_ref116","_callee82","_context82","_x122","_x120","_x121","getCurveTokenAmount","_ref117","_callee84","_args84","_context84","_x123","getCurveSlippage","_ref118","_callee85","uneven_amounts","_ref119","_ref120","virtualPrice","Sv","_args85","_context85","_x124","_x125","getCompAPR","_ref121","_callee86","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args86","_context86","_x126","_x127","getCompSpeed","_ref122","_callee87","cTokenAddress","compSpeed","_context87","_x128","_ref123","_callee88","annualize","cTokenInfo","compoundAllocationPerc","_ref124","_ref125","cTokenTotalSupply","compoundPoolShare","_args88","_context88","_x129","_callee90","_args90","_context90","_ref127","_callee89","_ref128","_ref129","_context89","_x130","_callee92","_args92","_context92","_ref131","_callee91","_ref132","_ref133","compApr","_context91","_x131","getTokensCsv","_callee95","csv","_context95","prototype","sum","pv","cv","avg","_ref135","_callee94","_context94","_ref136","_callee93","header","rows","aprAvg","scoreAvg","lastRow","_context93","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x133","_x132","_callee97","_args97","_context97","_ref138","_callee96","compTokenBalance","_context96","_x134","speed","getGovTokensUserDistributionSpeed","_ref139","_callee99","govTokensUserDistribution","_args99","_context99","_ref140","_callee98","_context98","_x136","_x135","_ref141","_callee101","govTokensDistribution","_args101","_context101","_ref142","_callee100","govSpeed","_context100","_x138","_x137","_ref143","_callee103","_args103","_context103","_ref144","_callee102","_ref145","_ref146","compoundInfo","_context102","_x141","_x139","_x140","_callee105","_args105","_context105","_ref148","_callee104","tokenConversionRate","fromTokenConfig","_context104","_x142","getGovTokenConfigByAddress","_callee106","checkShowBalance","govTokensEarnings","_args106","_context106","acc","govTokenAmount","_callee109","govTokenConfigForced","_args109","_context109","_ref151","_callee108","govTokensAmounts","_context108","_ref152","_callee107","govTokenAddress","_context107","_x144","_x145","_x143","_callee110","_args110","_context110","_callee111","_ref155","_ref156","gain","fees","_args111","_context111","_ref157","_callee112","_args112","_context112","_x146","getAggregatedStats","_callee116","avgAPR","totalAUM","_args116","_context116","_ref159","_callee115","_context115","_ref160","_callee114","oldTokenAllocation","oldTokenTotalAllocation","_context114","_ref161","_callee113","_ref162","_ref163","tokenBalanceConverted","_context113","_x149","_x148","_x147","getTokenApy","_ref164","_callee117","_context117","_x150","_callee120","_args120","_context120","_ref166","_callee119","_context119","_ref167","_callee118","_ref168","_context118","_x152","_x151","getProtocolsTokensBalances","_callee122","tokenBalances","minTokenBalance","protocolsTokens","_args122","_context122","_ref170","_callee121","tokenContract","_context121","_x153","_ref171","_callee123","_args123","_context123","_x154","_x155","_x156","_ref172","_callee124","_args124","_context124","_x157","_x158","_ref173","_callee125","_ref174","_ref175","_context125","protocolScore","getTokenScoreApi","_x159","_x160","_ref176","_callee126","_context126","_x161","_x162","_ref177","_callee128","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args128","_context128","_ref178","_callee127","addrIndex","protocolApr","protocolApy","_context127","_x164","_x165","_x163","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","execute","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Button","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","redeemUnderlying","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","setMaxSlippage","initToken","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","tokenConfigChanged","calculateSlippage","loadSelectedTokenConfig","curveConfig","_amount","min_amounts","coin_index","min_amount","showSlippage","curveTokenName","selectDestinationToken","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","getFastBalanceSelector","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","batchDepositDepositEnabled","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","getMigrationParams","approveCallback","idleTokenBalanceChanged","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","getTimelockDelay","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","_args14","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args17","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args21","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","timelockDelay","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"8kmkIACAA,EAAAC,QAAA,CAAkBC,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,glTCAlBN,EAAAC,QAAA,CAAkBM,eAAA,+BAAAC,MAAA,gzhCCAlBR,EAAAC,QAAA,CAAkBQ,QAAA,wDCAlBT,EAAAC,QAAA,CAAkBS,SAAA,gECAlBV,EAAAC,QAAA,CAAkBU,GAAA,qujDCAlBX,EAAAC,QAAA,CAAkBM,eAAA,8DCAlBP,EAAAC,QAAA,CAAkBW,YAAA,+DCAlBZ,EAAAC,QAAA,CAAkBY,cAAA,0DCAlBb,EAAAC,QAAA,CAAkBa,QAAA,6BAAAC,QAAA,6BAAAC,UAAA,+BAAAC,OAAA,4BAAAV,eAAA,oCAAAW,qBAAA,0zDCAlBlB,EAAAC,QAAA,CAAkBgB,OAAA,6DCAlBjB,EAAAC,QAAA,CAAkBS,SAAA,svKCAlBV,EAAAC,QAAA,CAAkBC,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,2FCAlBN,EAAAC,QAAA,CAAkBkB,MAAA,mmpBCAlBnB,EAAAC,QAAA,CAAkBmB,eAAA,sCAAAC,OAAA,8BAAAC,YAAA,mCAAAC,OAAA,8BAAAC,QAAA,+BAAAC,SAAA,2ymBCEZC,EAAa,CACjBC,MAAO,UACPC,MAAO,OACPC,KAAM,UACNC,SAAU,UACVC,MAAO,UACPC,OAAQ,UACRC,IAAK,UACLC,QAAS,UACTC,cAAe,WAIXC,EAAS,CACbF,QAAS,CACPG,KAAMX,EAAWQ,QACjBI,KAAMC,YAAcb,EAAWQ,SAC/BM,MAAO,CAAC,KAAMC,YAAK,GAAKf,EAAWQ,UACnCQ,KAAM,CAAC,KAAMC,YAAM,GAAKjB,EAAWQ,WAErCL,KAAM,CACJQ,KAAMX,EAAWG,KACjBS,KAAMC,YAAcb,EAAWG,MAC/BW,MAAO,CAAC,KAAMC,YAAK,GAAKf,EAAWG,OACnCa,KAAM,CAAC,KAAMC,YAAM,GAAKjB,EAAWG,QAErCE,MAAO,CACLM,KAAMX,EAAWK,MACjBO,KAAMZ,EAAWE,MACjBY,MAAO,CAAC,KAAMC,YAAK,GAAKf,EAAWK,QACnCW,KAAM,CAAC,KAAMC,YAAM,GAAKjB,EAAWK,SAErCC,OAAQ,CACNK,KAAMX,EAAWM,OACjBM,KAAMC,YAAcb,EAAWM,QAC/BQ,MAAO,CAAC,KAAMC,YAAK,GAAKf,EAAWM,SACnCU,KAAM,CAAC,KAAMC,YAAM,GAAKjB,EAAWM,UAErCC,IAAK,CACHI,KAAMX,EAAWO,IACjBK,KAAMC,YAAcb,EAAWO,KAC/BO,MAAO,CAAC,KAAMC,YAAK,GAAKf,EAAWO,MACnCS,KAAM,CAAC,KAAMC,YAAM,GAAKjB,EAAWO,QAKjCJ,EAAOO,EAAOP,KACdE,EAAQK,EAAOL,MACfC,EAASI,EAAOJ,OAChBC,EAAMG,EAAOH,IAOJP,ICxDAkB,EAAA,CACbC,YAAa,CAAC,OAAQ,QAEtBC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDC,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERC,MAAO,CACLC,MAAO,2CACPC,UAAW,qCACXC,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCC,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,qBACbC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP3C,SAAU,IAEZW,OAAQ,CACNiC,QAASxC,EAAKQ,KACdiC,cAAe,oDACfC,gBAAiB1C,EAAKW,MAAM,GAC5BgC,eAAgB3C,EAAKa,KAAK,GAC1B+B,OAAQ,UACR5C,KAAM,UACN6C,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVnD,MAAOD,EAAWC,MAClBoD,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACd5D,MAAO,OACP6D,YAAa,cAIbC,gBAAgB,UAChBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,QAAS,UACTxC,QAAS,UACTyC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,OAAQ,UACRC,OAAO,OACPC,aAAa,CACXC,OAAO,CACLC,KAAK,UACLC,KAAK,UACLC,MAAM,UACNT,OAAO,UACPU,QAAQ,UACRT,QAAQ,UACRU,QAAQ,UACRC,QAAQ,UACRV,QAAQ,UACRW,QAAQ,UACRC,SAAS,UACTC,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElBC,SAAS,CACPX,KAAK,UACLC,KAAK,UACLC,MAAM,UACNT,OAAO,UACPU,QAAQ,UACRT,QAAQ,UACRU,QAAQ,UACRE,QAAQ,UACRD,QAAQ,UACRV,QAAQ,UACRa,SAAS,UACTD,SAAS,UACTE,eAAe,UACfC,gBAAgB,WAElBE,OAAO,CACLC,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGXC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZtF,KAAM,CACJuF,MAAOjF,YAAM,GAAK,QAClBkF,gBAAiBpF,YAAK,GAAK,QAC3BqF,YAAa,QAEfC,QAAS,CACPH,MAAOjF,YAAM,GAAKZ,EAAMM,MACxBwF,gBAAiBpF,YAAK,GAAKV,EAAMM,MACjCyF,YAAa/F,EAAMM,MAErB2F,QAAS,CACPJ,MAAOjF,YAAM,GAAKX,EAAOK,MACzBwF,gBAAiBpF,YAAK,GAAKT,EAAOK,MAClCyF,YAAa9F,EAAOK,MAEtB4F,OAAQ,CACNL,MAAOjF,YAAM,GAAKV,EAAII,MACtBwF,gBAAiBpF,YAAK,GAAKR,EAAII,MAC/ByF,YAAa7F,EAAII,MAEnB6F,KAAM,CACJN,MAAOjF,YAAM,GAAKd,EAAKQ,MACvBwF,gBAAiB,UACjBC,YAAa,YAGjBK,QAAS,CACP9D,QAAS,CACPuD,MAAO/F,EAAKS,KACZuF,gBAAiBhG,EAAKQ,KAEtB+F,eAAgBvG,EAAKQ,KACrBgG,mBAAoBxG,EAAKS,MAE3BgG,OAAQ,CACNV,MAAOlG,EAAWC,MAClB0G,mBAAoB3G,EAAWC,OAEjCoG,QAAS,CACPK,eAAgBrG,EAAMM,KACtBgG,mBAAoBtG,EAAMO,MAE5B2F,OAAQ,CACNG,eAAgBnG,EAAII,KACpBgG,mBAAoBpG,EAAIK,OAG5BiG,YAAa,CACXC,MAAO,CACLC,SAAU,UACVC,OAAQ,OACRC,SAAU,OACVC,QAAS,UAEXC,OAAQ,CACNJ,SAAU,OACVC,OAAQ,OACRC,SAAU,QAEZG,MAAO,CACLL,SAAU,SACVC,OAAQ,OACRC,SAAU,OACVI,aAAc,0BCpMLC,mLAZX,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEC,OAAQ,SACRC,IAAK,gCACDC,KAAKC,OAERD,KAAKC,MAAMC,iBATEC,qGC8NPC,EAvNb,SAAAA,EAAYH,GAAM,IAAAI,EAAAL,KAAAJ,OAAAU,EAAA,EAAAV,CAAAI,KAAAI,GAAAJ,KANlBC,MAAQ,GAMUD,KALlBO,UAAY,KAKMP,KAJlBQ,YAAc,KAIIR,KAHlBS,cAAgB,KAGET,KAKlBU,SAAW,SAAAT,GACTI,EAAKJ,MAAQA,EAETI,EAAKI,cACPJ,EAAKI,cAAcC,SAASL,EAAKJ,OAEjCI,EAAKI,cAAgB,IAAIE,GAAcN,EAAKJ,OAG9CI,EAAKE,UAAYF,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAC1EP,EAAKG,YAAcH,EAAKI,cAAcG,gBAAgB,CAAC,YAAYP,EAAKE,aAfxDP,KAkBlBa,WAlBkBjB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkBL,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSjB,EAAKI,cAAcc,gBAAgBlB,EAAKE,UAAUF,EAAKJ,MAAMuB,SADtE,cACPN,EADOE,EAAAK,QAEKpB,EAAKI,cAAciB,MAAMR,GAASS,UAChDT,EAAUb,EAAKI,cAAciB,MAAM,IAH1BN,EAAAQ,OAAA,SAKJV,GALI,wBAAAE,EAAAS,SAAAZ,EAAAjB,SAlBKA,KA0BlB8B,aA1BkB,eAAAC,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0BH,SAAAgB,EAAOC,EAASC,GAAhB,OAAAnB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAP,OAAA,SACNvB,EAAKI,cAAc2B,0BAA0B,eAAgB,QAAS,GAAIH,EAAUC,IAD9E,wBAAAC,EAAAN,SAAAG,EAAAhC,SA1BG,gBAAAqC,EAAAC,GAAA,OAAAP,EAAAQ,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8BlByC,cA9BkB7C,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8BF,SAAA0B,IAAA,IAAAlB,EAAAmB,EAAAC,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACdE,GADqBA,EAAPoB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAe,OACCvC,EAAKJ,MAAMuB,QAD3BqB,EAAAvB,KAAA,EAESjB,EAAKI,cAAcuC,oBAAoB3C,EAAKE,UAAU,gBAAgB,CAACiB,IAFhF,YAEVmB,EAFUE,EAAApB,MAAA,CAAAoB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAILvB,EAAKI,cAAciB,MAAMiB,IAJpB,cAAAE,EAAAjB,OAAA,SAMP,MANO,wBAAAiB,EAAAhB,SAAAa,EAAA1C,SA9BEA,KAuClBiD,iBAvCkBrD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuCC,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAvB,OAAA,SACVvB,EAAKI,cAAcuC,oBAAoB,iBAAiB,sBAD9C,wBAAAG,EAAAtB,SAAAqB,EAAAlD,SAvCDA,KA2ClBoD,mBA3CkBxD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2CG,SAAAqC,IAAA,IAAAC,EAAA,OAAAvC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACEjB,EAAKI,cAAcuC,oBAAoB,eAAe,UAAU,CAAC3C,EAAKJ,MAAMuB,UAD9E,YACf8B,EADeC,EAAA9B,MAAA,CAAA8B,EAAAjC,KAAA,eAAAiC,EAAA3B,OAAA,SAGVvB,EAAKI,cAAc+C,iBAAiBF,EAAQjD,EAAKG,YAAYiD,WAHnD,cAAAF,EAAA3B,OAAA,SAKZvB,EAAKI,cAAciB,MAAM,IALb,wBAAA6B,EAAA1B,SAAAwB,EAAArD,SA3CHA,KAmDlB0D,OAnDkB,eAAAC,EAAA/D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmDT,SAAA4C,EAAOC,EAAMrD,GAAb,IAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjC,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,UAAyBwC,EAAzBW,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,GAAAA,EAAA,GAAwC,MACzCV,EAAkB1D,EAAKI,cAAcG,gBAAgB,CAAC,YAAYP,EAAKE,aACxDoE,QAFd,CAAAD,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,UAGE,GAHF,cAMDoC,EANC,cAAAY,OAM6BpE,EAAYqE,KAAKhB,MAN9C,KAAAe,OAMuDd,GAQ1DG,EAAM5D,EAAKI,cAAciB,MAAM,GAd5BgD,EAAApD,KAAA,EAmBGwD,QAAQC,IAAI,CACpB1E,EAAK2E,gBAAgBxE,GACrBH,EAAKI,cAAcwE,mBAAmBzE,GAAY,GAAM,KArBnD,UAAA0D,EAAAQ,EAAAjD,KAAA0C,EAAAvE,OAAAsF,EAAA,EAAAtF,CAAAsE,EAAA,GAiBLE,EAjBKD,EAAA,GAkBLE,EAlBKF,EAAA,IAwBHC,IAAoBC,EAxBjB,CAAAK,EAAApD,KAAA,YA0BCgD,EAAiBjE,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,SAAS,QAGvEkD,EA7BA,CAAAY,EAAApD,KAAA,gBAAAoD,EAAArD,KAAA,GAAAqD,EAAApD,KAAA,GA+BsBjB,EAAKI,cAAc0E,yBAAyBb,EAAeP,GA/BjF,QA+BDD,EA/BCY,EAAAjD,KAAAiD,EAAApD,KAAA,iBAAAoD,EAAArD,KAAA,GAAAqD,EAAAU,GAAAV,EAAA,kBAmCEZ,IAAkBA,EAAenC,UACpCmC,EAAiBzD,EAAKI,cAAciB,MAAM,IApCzC,WAwCAoC,IAAkBzD,EAAKI,cAAciB,MAAMoC,GAAgBuB,IAAI,GAxC/D,CAAAX,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,SAyCIvB,EAAKI,cAAciB,MAAM,IAzC7B,eAAAgD,EAAApD,KAAA,GA4CmBjB,EAAKI,cAAc6E,oBAAoBjB,EAAgBkB,0BAA0B1B,EAAMrD,GA5C1G,eA4CC+D,EA5CDG,EAAAjD,KA8CC+C,EAA4BnE,EAAKI,cAAciB,MAAMoC,GAAgB0B,MAAMpB,GACjFH,EAAMO,EAA0BiB,IAAIlB,GAAWiB,MAAM,KA/ChDd,EAAA9C,OAAA,SAmDEvB,EAAKI,cAAciF,cAAc1B,EAAcC,IAnDjD,eAAAS,EAAA9C,OAAA,SAsDAqC,GAtDA,yBAAAS,EAAA7C,SAAA+B,EAAA5D,KAAA,cAnDS,gBAAA2F,EAAAC,GAAA,OAAAjC,EAAApB,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6GlB6F,SA7GkB,eAAAC,EAAAlG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6GP,SAAA+E,EAAOC,GAAP,IAAAhC,EAAAiC,EAAAC,EAAA,OAAAnF,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,UAEH0C,EAFG,gBAAAY,OAE6BoB,GAEnB,QADbC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,KACxC3D,EAAKI,cAAciB,MAAMuE,GAAYtE,QAJxD,CAAAwE,EAAA7E,KAAA,eAAA6E,EAAAvE,OAAA,SAKAvB,EAAKI,cAAciB,MAAMuE,IALzB,cAAAE,EAAA7E,KAAA,EAQcjB,EAAKI,cAAcuC,oBAAoB,iBAAiB,aAAa,CAACgD,IARpF,YAQLE,EARKC,EAAA1E,OASUpB,EAAKI,cAAciB,MAAMwE,GAAYvE,QAT/C,CAAAwE,EAAA7E,KAAA,gBAUP4E,EAAa7F,EAAKI,cAAciB,MAAMwE,GAV/BC,EAAAvE,OAAA,SAWAvB,EAAKI,cAAc4F,8BAA8BrC,EAAckC,IAX/D,eAAAC,EAAAvE,OAAA,SAaF,MAbE,yBAAAuE,EAAAtE,SAAAkE,EAAA/F,SA7GO,gBAAAsG,GAAA,OAAAR,EAAAvD,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6HlBgF,gBA7HkB,eAAAuB,EAAA3G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6HA,SAAAwF,EAAOhG,GAAP,IAAAwD,EAAAiC,EAAAC,EAAAO,EAAAC,EAAA,OAAA3F,EAAAtB,EAAA0B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,UAEV0C,EAFU,uBAAAY,OAE6BpE,EAAYqE,KAAKhB,OAE3C,QADboC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,KACxC3D,EAAKI,cAAciB,MAAMuE,GAAYtE,QAJjD,CAAAgF,EAAArF,KAAA,eAAAqF,EAAA/E,OAAA,SAKPvB,EAAKI,cAAciB,MAAMuE,IALlB,cAAAU,EAAArF,KAAA,EASSjB,EAAKwF,SAASrF,EAAYqE,KAAK+B,SATxC,YASVV,EATUS,EAAAlF,MAAA,CAAAkF,EAAArF,KAAA,YAcRmF,EAAgBpG,EAAKI,cAAcG,gBAAgB,CAAC,UAAU,kBAG9D8F,EAAerG,EAAKI,cAAciB,MAAMwE,GAAYV,MAAMnF,EAAKI,cAAciB,MAAM+E,IAAgBhB,IAAI,MAExGpF,EAAKI,cAAciB,MAAMgF,GAAc/E,QAnB9B,CAAAgF,EAAArF,KAAA,gBAAAqF,EAAA/E,OAAA,SAoBLvB,EAAKI,cAAc4F,8BAA8BrC,EAAc0C,IApB1D,eAAAC,EAAA/E,OAAA,SAwBT,MAxBS,yBAAA+E,EAAA9E,SAAA2E,EAAAxG,SA7HA,gBAAA6G,GAAA,OAAAN,EAAAhE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAwJlB8G,oBAxJkBlH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwJI,SAAA+F,IAAA,IAAAvF,EAAAwF,EAAAC,EAAAC,EAAAC,EAAA3E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,UAAOE,EAAP2F,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAAe,KAAKH,EAApBG,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAAoC,KAAKF,EAAzCE,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,IAAAA,EAAA,GACf3F,IACHA,EAAUnB,EAAKJ,MAAMuB,UAElBwF,GAAmB3G,EAAKJ,MAAMoH,mBACjCL,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAGzD7F,GAAYwF,EARG,CAAAI,EAAA9F,KAAA,eAAA8F,EAAAxF,OAAA,UASX,GATW,cAYhBsF,EAAa7G,EAAKI,cAAciB,MAAM,GAZtB0F,EAAA9F,KAAA,GAadjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKR,GAA5C,eAAAS,EAAA7H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAA0G,EAAO7D,GAAP,IAAArD,EAAAmH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhH,EAAAtB,EAAA0B,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAC3Dd,EAAcwG,EAAgBnD,GAD6BmE,EAAA1G,KAAA,EAKvDwD,QAAQC,IAAI,CACpB1E,EAAKwF,SAASrF,EAAYqE,KAAK+B,SAC/BvG,EAAKI,cAAcwH,iBAAiBzG,EAAQhB,KAPmB,OAAAmH,EAAAK,EAAAvG,KAAAmG,EAAAhI,OAAAsF,EAAA,EAAAtF,CAAA+H,EAAA,GAG/DE,EAH+DD,EAAA,GAI/DE,EAJ+DF,EAAA,GAU7DC,GAAaC,IACTC,EAAaF,EAAUrC,MAAMsC,GACnCZ,EAAaA,EAAWgB,KAAKH,IAZkC,wBAAAC,EAAAnG,SAAA6F,EAAA1H,SAA7D,gBAAAmI,GAAA,OAAAV,EAAAlF,MAAAvC,KAAAwC,YAAA,IAbc,eA6BhByE,IACFC,EAAa7G,EAAKI,cAAc+C,iBAAiB0D,EAAW7G,EAAKG,YAAYiD,UAC7EyD,EAAa7G,EAAKI,cAAc2H,qBAAqBlB,EAAW7G,EAAKG,YAAY6H,wBA/B/DjB,EAAAxF,OAAA,SAkCbsF,GAlCa,yBAAAE,EAAAvF,SAAAkF,EAAA/G,SAxJJA,KA6LlBsI,UA7LkB1I,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6LN,SAAAuH,IAAA,IAAAvB,EAAAwB,EAAAC,EAAAC,EAAAlG,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,cAAO0F,EAAP0B,EAAA5F,OAAA,QAAAC,IAAA2F,EAAA,GAAAA,EAAA,GAAuB,QAE/B1B,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAE1DmB,EAASnI,EAAKI,cAAciB,MAAM,GAClC+G,EAAkBpI,EAAKI,cAAciB,MAAM,GALrCiH,EAAArH,KAAA,EAMJjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKR,GAA5C,eAAA4B,EAAAhJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAA6H,EAAOhF,GAAP,IAAArD,EAAAsI,EAAAC,EAAAC,EAAA3E,EAAA,OAAAtD,EAAAtB,EAAA0B,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAC3Dd,EAAcwG,EAAgBnD,GAD6BoF,EAAA3H,KAAA,EAEzBwD,QAAQC,IAAI,CAClD1E,EAAKqD,OAAOG,EAAMrD,GAClBH,EAAKI,cAAcwE,mBAAmBzE,GAAY,GAAM,KAJO,OAAAsI,EAAAG,EAAAxH,KAAAsH,EAAAnJ,OAAAsF,EAAA,EAAAtF,CAAAkJ,EAAA,GAE1DE,EAF0DD,EAAA,GAElD1E,EAFkD0E,EAAA,GAO7DC,GAAW3E,IACbmE,EAASA,EAAON,KAAKc,EAAQxD,MAAMnB,EAAgBoE,kBACnDA,EAAkBA,EAAgBP,KAAK7D,EAAgBoE,kBATQ,wBAAAQ,EAAApH,SAAAgH,EAAA7I,SAA7D,gBAAAkJ,GAAA,OAAAN,EAAArG,MAAAvC,KAAAwC,YAAA,IANI,cAmBVgG,EAASA,EAAO/C,IAAIgD,GAnBVE,EAAA/G,OAAA,SAqBH4G,GArBG,wBAAAG,EAAA9G,SAAA0G,EAAAvI,SA5LVA,KAAKU,SAAST,4EC8DHkJ,6MAlEb1I,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,+IAGE,IAAAC,EAAArJ,KACHsJ,EAAkB,IAChBC,EAAsC,qBAAtBvJ,KAAKC,MAAMsJ,QAA2B5H,MAAM3B,KAAKC,MAAMsJ,UAAiC,IAAtBvJ,KAAKC,MAAMsJ,QAA0C,OAAtBvJ,KAAKC,MAAMsJ,OAAsC,KAApBvJ,KAAKC,MAAMsJ,OAE/J,GAAIA,EACF,OAAQvJ,KAAKC,MAAMuJ,MACjB,IAAK,QACHF,EAAkBtJ,KAAKS,cAAcgJ,YAAYF,EAAOvJ,KAAKC,MAAMyJ,WACrE,MACA,QACEJ,EAAkBtJ,KAAKS,cAAckJ,iBAAiBJ,EAAOvJ,KAAKC,MAAMwD,SAASzD,KAAKC,MAAM2J,aAAa5J,KAAKC,MAAM4J,mBAIxHP,EAAkB,IAGpB,IAAMQ,EAAY,CAChB5P,MAAM,EACN6P,WAAW,SACXC,cAAc,MACdC,eAAe,UAIbjK,KAAKC,MAAM6J,WAAalK,OAAO4H,KAAKxH,KAAKC,MAAM6J,WAAWhH,QAC5DlD,OAAO4H,KAAKxH,KAAKC,MAAM6J,WAAWI,QAAQ,SAAAC,GACxCL,EAAUK,GAAKd,EAAKpJ,MAAM6J,UAAUK,KAIxC,IAAMC,EAA+B,MAApBd,EACXe,EAAUrK,KAAKC,MAAMoK,QAAUrK,KAAKC,MAAMoK,QAAU,QAE1D,OACE7K,EAAAC,EAAAC,cAACC,EAAA,EACKmK,EAGF9J,KAAKC,MAAMqK,MAAoB,SAAZD,GAAsBD,GACvC5K,EAAAC,EAAAC,cAACC,EAAA,EAASK,KAAKC,MAAMsK,UAAYvK,KAAKC,MAAMqK,MAEhD9K,EAAAC,EAAAC,cAACC,EAAA,EAASK,KAAKC,MAAQqJ,GAErBtJ,KAAKC,MAAMqK,MAAoB,UAAZD,GAAuBD,GACxC5K,EAAAC,EAAAC,cAACC,EAAA,EAASK,KAAKC,MAAMsK,UAAYvK,KAAKC,MAAMqK,cA9D9BnK,aCkBXqK,oLAjBX,OACEhL,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE3F,MAAO,EACP6P,WAAY,SACZE,eAAgB,UACZjK,KAAKC,MAAM6J,WAEftK,EAAAC,EAAAC,cAACC,EAAA,EAAWK,KAAKC,MAAMwK,aAErBzK,KAAKC,MAAMpH,MACT2G,EAAAC,EAAAC,cAACC,EAAA,EAASK,KAAKC,MAAMyK,UAAY1K,KAAKC,MAAMpH,cAZ/BsH,aC0GVwK,8MAtGbC,MAAQ,CACN1Q,MAAM,KACN+E,OAAO,QAGT4L,oBAAqB,sFAGnBC,OAAOC,iBAAiB,SAAU/K,KAAKgL,uBAAuBC,KAAKjL,sDAInEA,KAAK6K,oBAAqB,EAC1BC,OAAOI,oBAAoB,SAAUlL,KAAKgL,oEAI1ChL,KAAKgL,oEAGYG,GACbA,EAAUC,WAAapL,KAAKC,MAAMmL,UACpCpL,KAAKgL,0EAKP,GAAIhL,KAAK6K,mBACP,OAAO,EAGT,IAAMQ,EAAQzL,OAAA0L,EAAA,EAAA1L,CAAA,GAAOI,KAAK4K,OAE1B,GAAI5K,KAAKC,MAAMsL,SAAS,CACtB,IAAMC,EAAiBC,SAASC,eAAe1L,KAAKC,MAAMsL,UAC1D,GAAIC,EAAe,CACjB,IAAMG,EAAaC,WAAWJ,EAAeK,aAAa,EAAIL,EAAeK,YAAc,EAEvFF,GAAcA,IAAeN,EAASnR,QACxCmR,EAASnR,MAAQyR,IASvB,IAJKN,EAASnR,OAAS8F,KAAKC,MAAM/F,OAAS8F,KAAKC,MAAM/F,QAAUmR,EAASnR,QACvEmR,EAASnR,MAAQ8F,KAAKC,MAAM/F,OAG1B8F,KAAKC,MAAM6L,eAAe,CAC5B,IAAMC,EAAkBN,SAASC,eAAe1L,KAAKC,MAAM6L,gBAC3D,GAAIC,EAAgB,CAClB,IAAMC,EAAcJ,WAAWG,EAAgBF,aAAa,EAAIE,EAAgBF,YAAc,EAC1FG,GAAeA,IAAgBX,EAASpM,SAC1CoM,EAASpM,OAAS+M,KAKnBX,EAASpM,QAAUe,KAAKC,MAAMhB,QAAUe,KAAKC,MAAMhB,SAAWoM,EAASpM,SAC1EoM,EAASpM,OAASe,KAAKC,MAAMhB,QAG3BW,OAAO4H,KAAK6D,GAAUvI,OAAO,GAC/B9C,KAAKiM,SAASZ,oCAKhB,IAAMa,EAAYlM,KAAKC,MAAMuJ,KAEvBvK,EAASe,KAAK4K,MAAM3L,SAAW0C,MAAM3B,KAAK4K,MAAM3L,QAAUkN,SAASnM,KAAK4K,MAAM3L,QAAU,IACxF/E,EAAQ8F,KAAK4K,MAAM1Q,QAAUyH,MAAM3B,KAAK4K,MAAM1Q,OAASiS,SAASnM,KAAK4K,MAAM1Q,OAAS,EAEtFkS,EAAaxM,OAAOC,OAAO,GAAGG,KAAKC,OAOvC,QANAmM,EAAUxM,OAAA0L,EAAA,EAAA1L,CAAA,GACLwM,EADK,CAERnN,SACA/E,WAGgBmS,YAAgBD,EAAWE,MAASpS,GAAU+E,EAc5De,KAAKC,MAAMqM,MACb9M,EAAAC,EAAAC,cAACwM,EACKE,GAfN5M,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,MACdwC,UAAUvN,GAEZwL,YAAczK,KAAKC,MAAMwK,YAAczK,KAAKC,MAAMwK,YAAc,CAC9DgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,UAAiCkK,IAA1B/C,KAAKC,MAAM0M,WAA2B3M,KAAKC,MAAM0M,WAAa,iCA7FlDxM,aC8BZyM,oLA/BJ,IAAAvM,EAAAL,KAED6M,EAAgB,kBACpBrN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAiC,OAAzBkC,EAAKJ,MAAM6M,UAAsB,UAAY,UACrDC,KAAgC,OAAzB1M,EAAKJ,MAAM6M,UAAsB,cAAgB,gBACxDL,KAAOpM,EAAKJ,MAAM+M,SAAW3M,EAAKJ,MAAM+M,SAAa3M,EAAKJ,MAAMmL,SAAW,QAAU,SAIzF,OACE5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACf9P,MAAQ8F,KAAKC,MAAM/F,MAAQ8F,KAAKC,MAAM/F,MAAQ,EAC9C+P,eAAgBjK,KAAKC,MAAMgK,eAAiBjK,KAAKC,MAAMgK,eAAiB,YAGpEjK,KAAKC,MAAMgN,SAAgC,SAArBjN,KAAKC,MAAMgN,UACjCzN,EAAAC,EAAAC,cAACmN,EAAD,MAEH7M,KAAKC,MAAMC,SAEW,UAArBF,KAAKC,MAAMgN,SACTzN,EAAAC,EAAAC,cAACmN,EAAD,cA1BkB1M,uBCwQf+M,8MAjQbtC,MAAQ,CACNuC,UAAU,KACVf,WAAW,KACXgB,cAAc,KACd3E,gBAAgB,KAChB4E,qBAAqB,KACrBC,yBAAyB,QAI3B7M,cAAgB,OAChBoK,oBAAqB,6EAGf7K,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,6JAILpJ,KAAK6K,oBAAqB,sJAI1B7K,KAAKuN,gMAGkBpC,EAAUqC,8EACjCxN,KAAKoJ,YAEgB+B,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,cAE1DzN,KAAK0N,aAAa,CAChBP,UAAU,KACVf,WAAW,KACXgB,cAAc,KACd3E,gBAAgB,KAChB4E,qBAAqB,KACrBC,yBAAyB,MACzB,WACAjE,EAAKkE,aAEEpC,EAAUC,WAAapL,KAAKC,MAAMmL,UAC3CpL,KAAKuN,6LAIUlC,wFAASpJ,iCAAS,KAC9BjC,KAAK6K,4DACD7K,KAAKiM,SAASZ,EAASpJ,oCAEzB,2RAQGjC,KAAKS,cAAcwE,mBAAmBjF,KAAKC,MAAMO,6BAHzDiI,oBACA4E,yBACAC,6BAKIlB,EAAa,CACjBuB,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChBtV,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdgQ,aAAa,SAAC7B,EAAM8B,GAClBC,EAAKX,aAAa,CAChBN,cAAcd,KAGlBgC,aAAa,SAAChC,EAAM8B,GAClBC,EAAKX,aAAa,CAChBN,cAAc,QAGlBmB,WAAY,SAAAL,GAAC,OAAIA,EAAEM,MAAM,KACzBC,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,YAAa,SAAAT,GACX,OAAO,MAET/U,MAAM,CACJnC,QAAS,CACP4X,UAAW5O,KAAKC,MAAM4O,OAAS,GAAK,CAClCC,QAAS,SAGbC,OAAO,CACLlW,KAAK,CACHmG,SAASgB,KAAKC,MAAMmL,SAAW,GAAK,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,YAG5BoV,QAAQ,CACNrW,KAAK,CACHmG,SAAS,GACTgQ,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9BqV,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB5P,KAAKC,MAAM4O,OAChCgB,sBAAsB,CAAEC,KAAM,SAC9BzR,YAAY,CAAEyR,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQhQ,KAAKC,MAAM4O,OAAS,CAACoB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAEC,KAAK,GAAMpQ,KAAKC,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KAGvKjD,EAAY,GAElBnN,KAAKC,MAAMO,YAAY6P,UAAUnG,QAAQ,SAACoG,EAAaC,GACrD,IAAMC,EAAeF,EAAavD,KAC5B0D,EAAeH,EAAa1J,QAAQ8J,cAC1C,GAAIpD,EAAyBmD,GAAc,CACzC,IAAME,EAA+B/E,WAAW0B,EAAyBmD,GAAcjL,MAAM,KAAKoL,QAAQ,IAC1GzD,EAAU0D,KAAK,CACbC,GAAGL,EACHjC,MAAMmC,EACNxS,MAAM,OAAO4S,GAAcC,MAAMX,UAAUG,GAAcrS,MAAM8S,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,GAAcC,MAAMX,UAAUG,GAAcW,MAAQJ,GAAcC,MAAMX,UAAUG,GAAcW,MAAQ9C,EAAK5N,cAAc2Q,WAAWZ,QAMnJxQ,KAAK0N,aAAa,CAChBP,YACAf,aACA3D,kBACA4E,uBACAC,iKAMF,IAAMF,IAA6C,OAA7BpN,KAAK4K,MAAMwC,gBAA0BpN,KAAK4K,MAAMyC,qBAAqBrN,KAAK4K,MAAMwC,cAAc0D,MAAM9Q,KAAK4K,MAAMyC,qBAAqBrN,KAAK4K,MAAMwC,cAAc0D,IAC7KO,EAA4C,OAA7BrR,KAAK4K,MAAMwC,cAA0B2D,GAAcC,MAAMX,UAAUrQ,KAAK4K,MAAMwC,cAAc+D,MAAMT,gBAAkBK,GAAcC,MAAMX,UAAUrQ,KAAK4K,MAAMwC,cAAc+D,MAAMT,eAAeY,KAAOP,GAAcC,MAAMX,UAAUrQ,KAAK4K,MAAMwC,cAAc+D,MAAMT,eAAeY,KAA9O,GAAA1M,OAAwP5E,KAAK4K,MAAMwC,cAAc+D,MAAMT,cAAvR,QAA8S,KAExW,OACElR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPqX,SAAU,YAGRvR,KAAK4K,MAAMnC,kBAAoBzI,KAAKC,MAAM4O,QACxCrP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6R,OAAQ,EACRvB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbqB,UAAW,SACX1H,WAAY,SACZwH,SAAU,WACVrX,MAAO,CAAC,MAAM,OACd+E,OAAQ,CAAC,MAAM,OACf+K,cAAe,SACfC,eAAgB,UAGdmD,EACE5N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,CAAC,QAAQ,OAChB+E,OAAQ,CAAC,QAAQ,OACjB0S,IAAG,qBAAA/M,OAAuByM,KAE5B7R,EAAAC,EAAAC,cAACkS,EAAD,CACE5S,SAAU,CAAC,EAAE,GACbyE,SAAU,EACVuL,WAAY,EACZpF,aAAc,EACdL,OAAQ6D,IAEV5N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbgQ,WAAY,EACZ7Q,MAAO,aAHT,YAKY6B,KAAK4K,MAAMwC,cAAc+D,QAIvC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,CAAC,QAAQ,OAChB+E,OAAQ,CAAC,QAAQ,OACjB0S,IAAG,0BAELnS,EAAAC,EAAAC,cAACkS,EAAD,CACErH,UAAW,CACTmC,GAAG,EACHsC,WAAW,EACXhQ,SAAS,CAAC,EAAE,IAEdyE,SAAU,EACVuL,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACb4K,aAAc,EACdL,OAAQvJ,KAAK4K,MAAMnC,kBAErBjJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,aAHT,iBAYZqB,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACE2J,KAAMsI,KACNzF,YAAY,GACRrM,KAAKC,MACLD,KAAK4K,MAAMwB,WAJjB,CAKEE,KAAMtM,KAAK4K,MAAMuC,qBA3PGhN,aCupCf4R,8MAnpCbnH,MAAQ,CACNoH,OAAM,KAIRvR,cAAgB,OAChBoK,oBAAqB,IA6CrBoH,+BAAY,SAAAhR,IAAA,IAAAiR,EAAAC,EAAAlG,EAAAmG,EAAAC,EAAA5O,EAAA6O,EAAA9J,EAAA+J,EAAAC,EAAAC,EAAA1Q,EAAA2Q,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtP,EAAAuP,EAAAC,EAAAC,EAAAC,EAAAnP,EAAAC,EAAAmP,EAAAC,EAAAC,EAAAC,EAAA3N,EAAAS,EAAAmN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAxQ,GAAAiC,GAAAwO,GAAAC,GAAAnE,GAAAoE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAzT,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAM4Q,EAAN+D,GAAAnT,OAAA,QAAAC,IAAAkT,GAAA,GAAAA,GAAA,GAAgB,MAItB5V,EAAKwK,oBAAuBxK,EAAKJ,MAAM4D,OAAUxD,EAAKJ,MAAMO,YAJtD,CAAAY,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAKD,GALC,UAQJuQ,EAAyC,SAAhC9R,EAAKJ,MAAMoH,iBAEpB4E,EAAyB,OAAdiG,EACXE,EAAY/R,EAAKJ,MAAMmS,UACxBF,IACHA,EAAYE,EAAUrF,MAGlBsF,EAAaD,EAAUnS,MACvBwD,EAAW4O,GAAcA,EAAW5O,SAAW4O,EAAW5O,SAAapD,EAAKJ,MAAMmL,SAAW,EAAI,EAEjGkH,EAAkD,qBAA5BjS,EAAKJ,MAAMqS,cAA+BjS,EAAKJ,MAAMqS,aAE7E9J,EAAS,MACTnI,EAAKJ,MAAM4D,MAtBL,CAAAzC,EAAAE,KAAA,UAAAF,EAAAgE,GAuBA8M,EAvBA9Q,EAAAE,KAwBD,iBAxBCF,EAAAgE,GAAA,GAgCD,cAhCChE,EAAAgE,GAAA,GAwCD,eAxCChE,EAAAgE,GAAA,GAoDD,QApDChE,EAAAgE,GAAA,GA4DD,oBA5DChE,EAAAgE,GAAA,GAwED,eAxEChE,EAAAgE,GAAA,GAgFD,qBAhFChE,EAAAgE,GAAA,GAwFD,kCAxFChE,EAAAgE,GAAA,GA4GD,6BA5GChE,EAAAgE,GAAA,GAgID,aAhIChE,EAAAgE,GAAA,GAwID,gBAxIChE,EAAAgE,GAAA,GAgKD,yBAhKChE,EAAAgE,GAAA,GAuLD,oBAvLChE,EAAAgE,GAAA,GA8MD,sBA9MChE,EAAAgE,GAAA,GAsND,UAtNChE,EAAAgE,GAAA,IA+ND,SA/NChE,EAAAgE,GAAA,IAuOD,sBAvOChE,EAAAgE,GAAA,IAgPD,iBAhPChE,EAAAgE,GAAA,IAyPD,QAzPChE,EAAAgE,GAAA,IAqQD,WArQChE,EAAAgE,GAAA,IA2SD,aA3SChE,EAAAgE,GAAA,IA0TD,aA1TChE,EAAAgE,GAAA,IAyUD,qBAzUChE,EAAAgE,GAAA,IAyVD,QAzVChE,EAAAgE,GAAA,IA4WD,oBA5WChE,EAAAgE,GAAA,IAmZD,aAnZChE,EAAAgE,GAAA,IA+hBD,qBA/hBChE,EAAAgE,GAAA,6BAAAhE,EAAAE,KAAA,GAyBWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAzBlH,eAyBJ9J,EAzBIpH,EAAAK,OA0BUwK,GACZ5L,EAAKqN,aAAa,CAChByI,aAAa3N,EAAO4N,aA5BpBhV,EAAAQ,OAAA,4BAiCE2Q,EAAYlS,EAAKI,cAAc4V,kBAAkBhW,EAAKJ,MAAMO,aAjC9DY,EAAAE,KAAA,GAkCwCjB,EAAKI,cAAc+R,8BAA8BnS,EAAKJ,MAAMO,aAlCpG,eAkCEgS,EAlCFpR,EAAAK,KAmCJpB,EAAKqN,aAAa,CAChB6E,YACAC,kCArCEpR,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAyCWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAzClH,eAyCJ9J,EAzCIpH,EAAAK,OA0CUwK,IACRwG,EAAa,KAC+B,qBAArCpS,EAAKJ,MAAMO,YAAY8V,WAA6BjW,EAAKJ,MAAMO,YAAY8V,aACpF7D,EAAajK,EAAO4N,YAEtB/V,EAAKqN,aAAa,CAChB+E,gBAhDArR,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAqDWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GArDlH,eAqDJ9J,EArDIpH,EAAAK,OAsDUwK,GACZ5L,EAAKqN,aAAa,CAChB6I,IAAI/N,EAAO4N,aAxDXhV,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GA+DMjB,EAAKI,cAAc+V,eAAenW,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA/DlF,eAAAvQ,EAAAX,EAAAK,KA8DFiR,EA9DE3Q,EA8DF2Q,4BAGEzG,GAAYyG,IACdrS,EAAKqN,aAAa,CAChB+I,gBAAgB/D,EAA4B0D,aAE9C5N,EAASkK,GArEPtR,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAyEWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAzElH,eAyEJ9J,EAzEIpH,EAAAK,OA0EUwK,GACZ5L,EAAKqN,aAAa,CAChBgJ,WAAWlO,EAAO4N,aA5ElBhV,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAiFWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAjFlH,eAiFJ9J,EAjFIpH,EAAAK,OAkFUwK,GACZ5L,EAAKqN,aAAa,CAChBiJ,iBAAiBnO,EAAO4N,aApFxBhV,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GA4FMjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA5F7G,eAAAK,EAAAvR,EAAAK,KA0FFmR,EA1FED,EA0FFC,2BACAC,EA3FEF,EA2FFE,8BAGiCD,IAC7B3G,GACF5L,EAAKqN,aAAa,CAChBkF,4BACAC,gCAIJrK,EAAS,CACPoK,4BACAC,gCAxGAzR,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAgHMjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAhH7G,eAAAQ,EAAA1R,EAAAK,KA8GFsR,EA9GED,EA8GFC,sBACAC,EA/GEF,EA+GFE,yBAG4BD,IACxB9G,GACF5L,EAAKqN,aAAa,CAChBqF,uBACAC,2BAIJxK,EAAS,CACPuK,uBACAC,2BA5HA5R,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAiIWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAjIlH,eAiIJ9J,EAjIIpH,EAAAK,OAkIUwK,GACZ5L,EAAKqN,aAAa,CAChBkJ,SAASpO,EAAO4N,aApIhBhV,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAyI0CwD,QAAQC,IAAI,CACxD1E,EAAK4R,UAAU,mBACf5R,EAAKI,cAAcoW,aAAaxW,EAAKJ,MAAMO,eA3IzC,eAAAyS,EAAA7R,EAAAK,KAAAkC,EAAA/D,OAAAsF,EAAA,EAAAtF,CAAAqT,EAAA,GAyIGC,EAzIHvP,EAAA,GAyImBwP,EAzInBxP,EAAA,GA8IAuP,GAAmBA,EAAgBS,eAAiBT,EAAgBW,aAAeV,IAE/EC,EAAYF,EAAgBS,cAAcnO,MAAM2N,GAChDE,EAAUH,EAAgBW,YAAYrO,MAAM2N,GAE9ClH,GACF5L,EAAKqN,aAAa,CAChB2F,UACAD,cAIJ5K,EAAS,CACP6K,UACAD,cA5JAhS,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAiKwDwD,QAAQC,IAAI,CACtE1E,EAAKI,cAAcqW,cACnBzW,EAAKI,cAAcyV,eAAe,gBAAgB7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAC7GjS,EAAKI,cAAcyV,eAAe,kBAAkB7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,KApK7G,eAAApO,EAAA9C,EAAAK,KAAA0C,EAAAvE,OAAAsF,EAAA,EAAAtF,CAAAsE,EAAA,GAiKGoP,EAjKHnP,EAAA,GAiKYoP,EAjKZpP,EAAA,IAiK+BqP,EAjK/BrP,EAAA,KAuKmBoP,GAAsBD,IACrCG,EAAmBD,EAAgBuD,GAAG,GAAKvD,EAAgBhO,MAAM8N,EAAS7N,IAAI,MAAMyC,KAAKqL,GAAsB,EAEjHtH,GACF5L,EAAKqN,aAAa,CAChB+F,mBACAF,uBAIJ/K,EAAS,CACPiL,mBACAF,uBAnLAnS,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GAwLgDwD,QAAQC,IAAI,CAC9D1E,EAAKI,cAAcyV,eAAe,MAAM7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GACnGjS,EAAKI,cAAcyV,eAAe,WAAW7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GACxGjS,EAAKI,cAAcyV,eAAe,aAAa7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,KA3LxG,eAAAxM,EAAA1E,EAAAK,KAAA8E,EAAA3G,OAAAsF,EAAA,EAAAtF,CAAAkG,EAAA,GAwLG4N,EAxLHnN,EAAA,GAwLaoN,EAxLbpN,EAAA,IAwL2BqN,EAxL3BrN,EAAA,KA8LeoN,GAAiBD,IAC5BG,EAAcD,EAAYmD,GAAG,GAAKnD,EAAYpO,MAAMkO,EAAUjO,IAAI,MAAMyC,KAAKyL,GAAiB,EAEhG1H,GACF5L,EAAKqN,aAAa,CAChBmG,cACAF,kBAIJnL,EAAS,CACPqL,cACAF,kBA1MAvS,EAAAQ,OAAA,4BAAAR,EAAAE,KAAA,GA+MWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA/MlH,eA+MJ9J,EA/MIpH,EAAAK,OAgNUwK,GACZ5L,EAAKqN,aAAa,CAChBsJ,kBAAkBxO,EAAO4N,aAlNzBhV,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IAuNqBjB,EAAKI,cAAcwW,cAAc5W,EAAKJ,MAAMO,YAAY2R,GAvN7E,gBAuNE2B,EAvNF1S,EAAAK,KAwNAwK,GACF5L,EAAKqN,aAAa,CAChBwJ,MAAMpD,IAA0B,IAGpCtL,EAASsL,EA7NL1S,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IAgOWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAhOlH,gBAgOJ9J,EAhOIpH,EAAAK,OAiOUwK,GACZ5L,EAAKqN,aAAa,CAChByJ,SAAS3O,EAAO4N,aAnOhBhV,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IAwOWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAxOlH,gBAwOJ9J,EAxOIpH,EAAAK,OAyOUwK,GACZ5L,EAAKqN,aAAa,CAChB0J,2BAA2BxL,WAAWpD,GAAQ,EAAI,KAAO,OACzD6O,kBAAkBzL,WAAWpD,GAAQoI,QAAQnN,KA5O7CrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IAiPWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAjPlH,gBAiPJ9J,EAjPIpH,EAAAK,OAkPUwK,GACZ5L,EAAKqN,aAAa,CAChB4J,sBAAsB1L,WAAWpD,GAAQ,EAAI,KAAO,OACpD+O,aAAa3L,WAAWpD,GAAQoI,QAAQnN,KArPxCrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IA0PWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA1PlH,gBA0PJ9J,EA1PIpH,EAAAK,OA2PUwK,IACR8H,EAAW,KAC+B,qBAAnC1T,EAAKJ,MAAMO,YAAYgX,SAA2BnX,EAAKJ,MAAMO,YAAYgX,WAClFzD,EAAWnI,WAAWpD,GAAQoI,QAAQnN,IAExCpD,EAAKqN,aAAa,CAChBqG,cAjQA3S,EAAAQ,OAAA,0BAsQAvB,EAAKJ,MAAMO,YAAYiX,YAAapX,EAAKJ,MAAMO,YAAYiX,UAAUC,YAtQrE,CAAAtW,EAAAE,KAAA,iBAuQI0S,EAAiBpU,OAAOC,OAAO,GAAGQ,EAAKJ,MAAMO,cACpCqE,KAAOjF,OAAOC,OAAO,GAAGQ,EAAKJ,MAAMO,YAAYiX,UAAUC,aACxE1D,EAAe3D,UAAYzQ,OAAO+X,OAAOtX,EAAKJ,MAAMO,YAAY6P,WAGhE2D,EAAenP,KAAKhB,MAAQmQ,EAAenP,KAAKkI,KAG5CiH,EAAeyD,UAAUG,cAC3B5D,EAAeyD,UAAUG,aAAa1N,QAAS,SAAA2N,GAC7C,IAAMC,EAAgB9D,EAAe3D,UAAU0H,KAAM,SAAA5N,GAAC,OAAKA,EAAE4C,OAAS8K,EAAY9K,OAClF,GAAI+K,EAAc,CAChB,IAAME,EAAchE,EAAe3D,UAAU4H,QAAQH,GACrD9D,EAAe3D,UAAU2H,GAAeH,KApR5CzW,EAAAE,KAAA,IAyRajB,EAAKI,cAAcyV,eAAe,MAAM7V,EAAKJ,MAAM4D,MAAMmQ,EAAe3T,EAAKJ,MAAMuB,SAAQ,GAzRxG,SAyRFgH,EAzREpH,EAAAK,KAAAL,EAAAE,KAAA,0BAAAF,EAAAE,KAAA,IA4RajB,EAAK4R,UAAU,YA5R5B,SA4RFzJ,EA5REpH,EAAAK,KAAA,gBA+RA+G,GAAUyD,IACPzD,EAAO7G,QAKVtB,EAAKqN,aAAa,CAChBwK,QAAO,IALT7X,EAAKqN,aAAa,CAChBwK,OAAOtM,WAAWpD,GAAQoI,QAAQnN,MAlSpCrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IA4SWjB,EAAKI,cAAcyV,eAAe,MAAM7V,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,SAAQ,GA5S9G,gBA4SJgH,EA5SIpH,EAAAK,OA8SUwK,IACPzD,EAAO7G,QAKVtB,EAAKqN,aAAa,CAChByK,eAAc,IALhB9X,EAAKqN,aAAa,CAChByK,cAAcvM,WAAWpD,GAAQoI,QAAQnN,MAjT3CrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IA2TWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA3TlH,gBA2TJ9J,EA3TIpH,EAAAK,OA6TUwK,IACPzD,EAAO7G,QAKVtB,EAAKqN,aAAa,CAChB4F,UAAS,IALXjT,EAAKqN,aAAa,CAChB4F,SAAS1H,WAAWpD,GAAQoI,QAAQnN,MAhUtCrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IA0UWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA1UlH,gBA0UJ9J,EA1UIpH,EAAAK,OA4UUwK,IACPzD,EAAO7G,QAKVtB,EAAKqN,aAAa,CAChB0K,kBAAiB,IALnB/X,EAAKqN,aAAa,CAChB0K,kBAAqC,IAAnBxM,WAAWpD,IAAaoI,QAAQnN,MA/UpDrC,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IA0VWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GA1VlH,cA0VJ9J,EA1VIpH,EAAAK,QA4VUwK,EA5VV,CAAA7K,EAAAE,KAAA,aA6VGkH,EAAO7G,QA7VV,CAAAP,EAAAE,KAAA,aA8VM2S,EAAWrI,WAAWpD,GAAQoI,QAAQnN,MACvBpD,EAAKJ,MAAMmL,eAAuCrI,IAA1BqP,EAAUiG,aAA6BjG,EAAUiG,aA/V9F,CAAAjX,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,IAgW0CjB,EAAKI,cAAc6X,iBAAiBjY,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,aAhW1G,SAAAY,EAAAmX,GAAAnX,EAAAK,KAAAL,EAAAE,KAAA,mBAAAF,EAAAmX,GAgWyH,KAhWzH,SAgWMrE,EAhWN9S,EAAAmX,GAiWAlY,EAAKqN,aAAa,CAChBuG,WACAC,kBAnWF9S,EAAAE,KAAA,mBAsWAjB,EAAKqN,aAAa,CAChBuG,UAAS,IAvWX,gBAAA7S,EAAAQ,OAAA,6BA6WAuS,EAAuB,EACvBC,EAAwB,GAEtBC,EAAwB,WAC5B,IAAMmE,EAA4B/M,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMwY,OACnK,GAAID,EAA0B,CAC5B,IAAME,EAA6B5N,OAAO6N,OAAOH,GACjDrE,EAAuBuE,EAA2BE,aAAahN,WAAW8M,EAA2BG,IAAI,kBAAkBjN,WAAW8M,EAA2BG,IAAI,iBACrKzE,EAAwBsE,EAA2BI,cAGnD3E,EAAuBhI,SAASgI,GAAsB,EAAI4E,KAAKC,IAAI7E,EAAqBC,GAAyBA,EACjHA,EAAwBD,EAGpBA,IAAyB9T,EAAKuK,MAAMuJ,sBAClClI,GACF5L,EAAKqN,aAAa,CAChByG,uBACAC,+BASVtJ,OAAOI,oBAAoB,SAAUmJ,EAAsBpJ,KAAtBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MACrCyK,OAAOC,iBAAiB,SAAUsJ,EAAsBpJ,KAAtBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MAE9B4L,GACF5L,EAAKqN,aAAa,CAChByG,uBACAC,0BA/YAhT,EAAAQ,OAAA,yBAqZE0S,EAAuBnC,EAAS9R,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/G2T,GAAyBpC,EAASmC,EAAsB,OAAcyE,KAAKG,IAAI7Y,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBuL,SAAS9L,EAAKI,cAAc0Y,YAAY9Y,EAAKI,cAAc0Y,YAAY,IAAIC,MAAQC,OAAO,uBAAuB,uBAAuBC,SAAS,EAAE,QAAQC,GAAGC,UAAU,MAGxUhF,GAAe,KACbxQ,GA1ZF,YAAAY,OA0Z8BvE,EAAKJ,MAAMO,YAAYoG,QA1ZrD,KAAAhC,OA0ZgEuN,GAC9DlM,GAAa5F,EAAKI,cAAcgZ,cAAczV,IAEpDwQ,GAAe,CAAC,CACd1D,GAAGzQ,EAAKJ,MAAM4D,MACd1F,MAAOkC,EAAKJ,MAAM9B,MAAQkC,EAAKJ,MAAM9B,MAAQ,OAAOkC,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,SAASP,EAAKJ,MAAM4D,MAAM,QAAQ,QAAQqN,KAAK,KAAK,IACpJ5E,KAAM,KAGW,OAAfrG,GAnaA,CAAA7E,EAAAE,KAAA,UAoaFkT,GAAevO,GApab7E,EAAAE,KAAA,sBAwauB,SAArBjB,EAAKJ,MAAM4D,MAxab,CAAAzC,EAAAE,KAAA,UA4aA,IAHAkT,GAAa,GAAGlI,KAAO,GACjBmI,IAAiB,IAAI2E,MAAOI,UAC9B9E,GAAI,GACCnE,GAAE,EAAGA,IAAG,GAAIA,KACboE,GAAQtU,EAAKI,cAAc0Y,YAAY1E,IAAgBiF,IAAInJ,GAAE,OAC7DqE,GAAID,GAAM0E,OAAO,oBAElB9I,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzBmE,IAAiB,EAAdqE,KAAKY,SAAW,EAInBjF,IAAiB,EAAdqE,KAAKY,SAAW,EAGrBnF,GAAa,GAAGlI,KAAKuE,KAAK,CAAC+D,KAAEF,OAxb/BtT,EAAAE,KAAA,0BA2bMuT,GAAmBxU,EAAKI,cAAcmZ,oBAAoB,OAAO,IA3bvExY,EAAAE,KAAA,IA4biCjB,EAAKI,cAAcoZ,gBAAgBxZ,EAAKJ,MAAMO,YAAYoG,QAAQuL,EAAOoC,GAAuBD,GAAqB,EAAMO,IA5b5J,SAAAzT,EAAAK,KAkcmByI,QAAQ,SAACgE,EAAEqC,GAC5B,IAAMqE,EAAIvU,EAAKI,cAAc0Y,YAAwB,IAAZjL,EAAE4L,WAAgBT,OAAO,oBAC5D3E,EAAI9I,WAAWvL,EAAKI,cAAc+C,iBAAiB0K,EAAE6L,SAAS,KACpEvF,GAAa,GAAGlI,KAAKuE,KAAK,CAAE+D,IAAGF,QArcjC,SAycFrU,EAAKI,cAAciF,cAAc1B,GAAcwQ,IAzc7C,gBA8cgC,IAAhCA,GAAa,GAAGlI,KAAKxJ,UACjBgS,GAAWlV,OAAOC,OAAO,GAAG2U,GAAa,GAAGlI,KAAK,KAC9CsI,EAAIvU,EAAKI,cAAc0Y,YAAYrE,GAAS,oBAAoB4E,IAAI,EAAE,SAASL,OAAO,oBAC/F7E,GAAa,GAAGlI,KAAKuE,KAAKiE,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAM+E,EAAqBvO,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMwY,OAC5J,GAAIuB,EAAmB,CACrB,IAAMC,EAAsBnP,OAAO6N,OAAOqB,GAC1CjF,GAAgBkF,EAAoBrB,aAAahN,WAAWqO,EAAoBpB,IAAI,kBAAkBjN,WAAWqO,EAAoBpB,IAAI,iBACzI7D,GAAiBiF,EAAoBnB,cACjC/D,KAAkB1U,EAAKuK,MAAMmK,eAAkB1U,EAAKuK,MAAMoK,gBAC5D3U,EAAKqN,aAAa,CAChBqH,iBACAC,eAAgB3U,EAAKuK,MAAMoK,eAAiB3U,EAAKuK,MAAMoK,eAAiBA,UAQhFlK,OAAOI,oBAAoB,SAAU+J,GAAehK,KAAfrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MACrCyK,OAAOC,iBAAiB,SAAUkK,GAAehK,KAAfrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MAG5B6U,GAAegF,IAEf/E,GAAgB,CACpBgF,UAAU,EACVC,UAAU,EACVC,SAAQ,EACRC,SAAS,KACT1M,SAAQ,EACR2M,MAAM,YACNC,WAAW,KACXC,YAAW,EACXC,YAAY,GACZC,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBC,cAAa,EACbC,eAAc,EACdpiB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACd6c,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG/c,MAAO,WACpB,CAAE+c,OAAQ,GAAI/c,MAAO,cAG3Bgd,KAAK,CACH,CAAEC,MAAO,CAAEtK,GAAIzQ,EAAKJ,MAAM4D,OAAUiN,GAAI,iBAE1Cd,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG5C/P,EAAKJ,MAAMmM,YAET/L,EAAKJ,MAAMmM,YAAcxM,OAAO4H,KAAKnH,EAAKJ,MAAMmM,YAAYtJ,QAC9DlD,OAAO4H,KAAKnH,EAAKJ,MAAMmM,YAAYlC,QAAQ,SAAAC,GACzCgL,GAAchL,GAAK9J,EAAKJ,MAAMmM,WAAWjC,KAK3C8B,GACF5L,EAAKqN,aAAa,CAChBsE,OAAM,EACNkD,gBACAV,gBACAW,iBACAJ,iBACAC,oBAGJxM,EAASgM,GA7hBLpT,EAAAQ,OAAA,6BAgiBAwT,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAM6F,EAA6B5P,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMsL,UAAYE,SAASC,eAAerL,EAAKJ,MAAMwY,OACpK,GAAI4C,EAA2B,CAC7B,IAAMC,EAA8BxQ,OAAO6N,OAAO0C,GAClD/F,GAAwBgG,EAA4B1C,aAAahN,WAAW0P,EAA4BzC,IAAI,kBAAkBjN,WAAW0P,EAA4BzC,IAAI,iBACzKtD,GAAyB+F,EAA4BxC,cACjDxD,KAA0BjV,EAAKuK,MAAM0K,uBAA0BjV,EAAKuK,MAAM2K,wBAC5ElV,EAAKqN,aAAa,CAChB4H,yBACAC,uBAAwBlV,EAAKuK,MAAM2K,uBAAyBlV,EAAKuK,MAAM2K,uBAAyBA,UAQxGzK,OAAOI,oBAAoB,SAAUsK,GAAuBvK,KAAvBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MACrCyK,OAAOC,iBAAiB,SAAUyK,GAAuBvK,KAAvBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,MAE5BoV,GAAepV,EAAKI,cAAc0Y,YAAY9Y,EAAKI,cAAc0Y,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOD,OAAO,oBAAoB,oBACtI3D,GAAiBD,GAAa8F,QAAQjC,SAAS,EAAE,QAGjD3D,GAAuBoD,KAAKG,IAAI7Y,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBuL,SAASuJ,GAAe6D,GAAGC,UAAU,MAxkBtJpY,EAAAE,KAAA,IA2kBmCjB,EAAKI,cAAcoZ,gBAAgBxZ,EAAKJ,MAAMO,YAAYoG,QAAQuL,EAAOwD,GAAoB,MAAK,EAAM,OA3kB3I,gBA2kBAC,GA3kBAxU,EAAAK,KA6kBEoU,GAAuBD,GAA2B4F,IAAI,SAACtN,EAAEqC,GAC7D,IAAImE,EAAI,EACFE,EAAIvU,EAAKI,cAAc0Y,YAAwB,IAAZjL,EAAE4L,WAAgBT,OAAO,oBAC5D5G,EAAapS,EAAKI,cAAc+C,iBAAiB0K,EAAEuN,UAAUpb,EAAKJ,MAAMO,YAAYiD,UAY1F,OAVK2R,GAGHV,EAAI9I,WAAW6G,EAAWhN,IAAI2P,IAAiBsG,MAAM,GAAGlW,MAAM,MAF9D4P,GAAkB3C,EAKG,OAAnB4C,KACFA,GAAiBlJ,SAAS+B,EAAEyN,cAGvB,CAAE/G,IAAGF,OAGRoB,GAAuB,CAAC,CAC5BhF,GAAG,OACH3S,MAAO,OAAOkC,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,SAASP,EAAKJ,MAAM4D,MAAM,QAAQ,QAAQqN,KAAK,KAAK,IAC9G5E,KAAMuJ,KAIFE,GAAuBmE,IAEvBlE,GAAwB,CAC5BmE,UAAU,EACVC,UAAU,EACVC,SAAQ,EACRzM,SAAQ,EACR0M,SAAS,KACTE,WAAW,KACXC,YAAW,EACXE,aAAY,EACZC,aAAY,EACZL,MAAM,YACNO,cAAa,EACbD,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB5L,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG3C/P,EAAKJ,MAAMmM,YAET/L,EAAKJ,MAAMmM,YAAcxM,OAAO4H,KAAKnH,EAAKJ,MAAMmM,YAAYtJ,QAC9DlD,OAAO4H,KAAKnH,EAAKJ,MAAMmM,YAAYlC,QAAQ,SAAAC,GACzC6L,GAAsB7L,GAAK9J,EAAKJ,MAAMmM,WAAWjC,KAKnD8B,GACF5L,EAAKqN,aAAa,CAChBsE,OAAM,EACN+D,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJ/M,EAASsN,GA7oBL1U,EAAAQ,OAAA,6BAAAR,EAAAE,KAAA,IAgpBWjB,EAAKI,cAAcyV,eAAehE,EAAU7R,EAAKJ,MAAM4D,MAAMxD,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,QAAQ8Q,GAhpBlH,gBAgpBJ9J,EAhpBIpH,EAAAK,OAipBUwK,GACZ5L,EAAKqN,aAAL9N,OAAAic,EAAA,EAAAjc,CAAA,GACGsS,EAAW1J,IAnpBZpH,EAAAQ,OAAA,6BAAAR,EAAAQ,OAAA,SAypBH4G,GAzpBG,0BAAApH,EAAAS,SAAAZ,EAAAjB,oFA1CNA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,8JAK9CD,KAAK6K,oBAAqB,yPAI1B7K,KAAKoJ,kQAILpJ,KAAKiS,2LAGY5G,wFAASpJ,iCAAS,KAC9BjC,KAAK6K,4DACD7K,KAAKiM,SAASZ,EAASpJ,oCAEzB,4LAGgBkJ,EAAWqC,wFAClCxN,KAAKoJ,YAEC0S,EAAe3Q,EAAUtH,QAAU7D,KAAKC,MAAM4D,MAC9CkY,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDwa,EAAe7Q,EAAUiH,UAAUrF,OAAS/M,KAAKC,MAAMmS,UAAUrF,KACjEkP,EAAsB9Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,sBAAwBlc,KAAKC,MAAMic,qBACvGC,EAAsBhR,EAAUtO,cAAgBmD,KAAKC,MAAMpD,cAAgB+C,OAAO+X,OAAOxM,EAAUtO,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,SAAWlD,OAAO+X,OAAO3X,KAAKC,MAAMpD,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,QAEjPkZ,GAAgBF,GAAgBC,GAAkBI,GAAwBF,IAAwBjc,KAAK4K,MAAMoH,QAC/GhS,KAAK0N,aAAa,GAAG,WACnBrE,EAAK4I,oJAiqBH,IAAA5D,EAAArO,KACAoS,EAAYpS,KAAKC,MAAMmS,UACzB5J,EAAS,KAGP8T,OADsCvZ,IAAzBqP,EAAU/F,YAA4B+F,EAAU/F,WACtC7M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8M,KAAK,SAAa,KAEjD4F,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACN2L,UAAU,CACRG,eAAe,eAKfmI,EAAUnS,OAASL,OAAO4H,KAAK4K,EAAUnS,OAAO6C,QAClDlD,OAAO4H,KAAK4K,EAAUnS,OAAOiK,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAUnS,MAAMkK,KAKhCiI,EAAUmK,WAAa3c,OAAO4H,KAAK4K,EAAUmK,WAAWzZ,QAC1DlD,OAAO4H,KAAK4K,EAAUmK,WAAWrS,QAAQ,SAAAC,GACH,oBAAzBiI,EAAUmK,UAAUpS,KAC7BkI,EAAWlI,GAAKiI,EAAUmK,UAAUpS,GAAGkE,EAAKpO,UAKlD,IAAM2J,EAAeyI,GAAcA,EAAWzI,aAAeyI,EAAWzI,aAAe,EACjFnG,EAAW4O,GAAcA,EAAW5O,SAAW4O,EAAW5O,SAAazD,KAAKC,MAAMmL,SAAW,EAAI,EACjGvB,EAAewI,GAAcA,EAAWxI,aAAewI,EAAWxI,aAAiB7J,KAAKC,MAAMmL,SAAW,EAAI,EAEnH,OAAQgH,EAAUrF,MAChB,IAAK,cACH,IAAMyP,EAAQxc,KAAKC,MAAMO,aAAeR,KAAKC,MAAMO,YAAY8Q,KAAOtR,KAAKC,MAAMO,YAAY8Q,KAA/E,iBAAA1M,OAAuG5E,KAAKC,MAAM4D,MAAlH,QACd2E,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4c,UAAW,MACXC,QAAS1c,KAAKC,MAAM4D,OAChBuO,EAAUuK,cAEdnd,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAO8R,IAAK6K,GAAWnK,KAG7B,MACA,IAAK,OACH,IAAMuK,EAAQ5c,KAAKC,MAAMO,aAAeR,KAAKC,MAAMO,YAAY8Q,KAAOtR,KAAKC,MAAMO,YAAY8Q,KAA/E,iBAAA1M,OAAuG5E,KAAKC,MAAM4D,MAAlH,QACd2E,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAO8R,IAAKiL,GAAWvK,IAE3B,MACA,IAAK,YACH7J,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAKC,MAAM4D,OAEtC,MACA,IAAK,eACH2E,EAASxI,KAAK4K,MAAMuL,aAClB3W,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6BxI,aAAcA,EAAcN,OAAQvJ,KAAK4K,MAAMuL,gBAC1EmG,EACN,MACA,IAAK,MACH9T,EAASxI,KAAK4K,MAAM2L,IAClB/W,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6BxI,aAAcA,EAAcN,OAAQvJ,KAAK4K,MAAM2L,OAC1E+F,EACN,MACA,IAAK,aACH9T,EAASxI,KAAK4K,MAAM6H,WAClBjT,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6BxI,aAAcA,EAAcN,OAAQvJ,KAAK4K,MAAM6H,cAC1E6J,EACN,MACA,IAAK,kBACH9T,EAASxI,KAAK4K,MAAM6L,gBAClBjX,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6BxI,aAAcA,EAAcN,OAAQvJ,KAAK4K,MAAM6L,mBAC1E6F,EACN,MACA,IAAK,mBACH9T,EAASxI,KAAK4K,MAAM+L,iBAClBnX,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6BxI,aAAcA,EAAcN,OAAQvJ,KAAK4K,MAAM+L,oBAC1E2F,EACN,MACA,IAAK,gCACH9T,EAASxI,KAAK4K,MAAMiI,6BAA+B7S,KAAK4K,MAAMgI,0BAC5DpT,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVzZ,SAAUA,EACV0Z,IAAKvR,WAAW5L,KAAK4K,MAAMgI,2BAC3BwK,MAAOxR,WAAW5L,KAAK4K,MAAMiI,6BAC7BwK,aAAe,SAAAC,GAAC,OAAIjP,EAAK5N,cAAckJ,iBAAiB2T,EAAE7Z,EAASmG,EAAaC,KAE/E,SAAA0T,GAAA,IAAGC,EAAHD,EAAGC,WAAHD,EAAeH,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QAAM+d,MAAOpL,EAAWoL,MAAOC,IAAKF,MAGtClB,EACN,MACA,IAAK,2BACH9T,EAASxI,KAAK4K,MAAMoI,wBAA0BhT,KAAK4K,MAAMmI,qBACvDvT,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVzZ,SAAUA,EACV0Z,IAAKvR,WAAW5L,KAAK4K,MAAMmI,sBAC3BqK,MAAOxR,WAAW5L,KAAK4K,MAAMoI,wBAC7BqK,aAAe,SAAAC,GAAC,OAAIjP,EAAK5N,cAAckJ,iBAAiB2T,EAAE7Z,EAASmG,EAAaC,KAE/E,SAAApC,GAAA,IAAG+V,EAAH/V,EAAG+V,WAAH/V,EAAe2V,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QAAM+d,MAAOpL,EAAWoL,MAAOC,IAAKF,MAGtClB,EACN,MACA,IAAK,cACH9T,EAASxI,KAAK4K,MAAMwI,WAAapT,KAAK4K,MAAMyI,QAC1C7T,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVzZ,SAAUA,EACV0Z,IAAKvR,WAAW5L,KAAK4K,MAAMyI,SAC3B+J,MAAOxR,WAAW5L,KAAK4K,MAAMwI,WAC7BiK,aAAe,SAAAC,GAAC,OAAIjP,EAAK5N,cAAckJ,iBAAiB2T,EAAE7Z,EAASmG,EAAaC,KAE/E,SAAAlC,GAAA,IAAG6V,EAAH7V,EAAG6V,WAAH7V,EAAeyV,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QAAM+d,MAAOpL,EAAWoL,MAAOC,IAAKF,MAGtClB,EACN,MACA,IAAK,uBACH9T,EAASxI,KAAK4K,MAAM2I,oBAAsBvT,KAAK4K,MAAM6I,iBACnDjU,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVzZ,SAAUA,EACV0Z,IAAKvR,WAAW5L,KAAK4K,MAAM6I,kBAC3B2J,MAAOxR,WAAW5L,KAAK4K,MAAM2I,oBAC7B8J,aAAe,SAAAC,GAAC,OAAIjP,EAAK5N,cAAckJ,iBAAiB2T,EAAE7Z,EAASmG,EAAaC,KAE/E,SAAAjC,GAAA,IAAG4V,EAAH5V,EAAG4V,WAAH5V,EAAewV,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QAAM+d,MAAOpL,EAAWoL,MAAOC,IAAKF,MAGtClB,EACN,MACA,IAAK,kBACH9T,EAASxI,KAAK4K,MAAM+I,eAAiB3T,KAAK4K,MAAMiJ,YAC9CrU,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVzZ,SAAUA,EACV0Z,IAAKvR,WAAW5L,KAAK4K,MAAMiJ,aAC3BuJ,MAAOxR,WAAW5L,KAAK4K,MAAM+I,eAC7B0J,aAAe,SAAAC,GAAC,OAAIjP,EAAK5N,cAAckJ,iBAAiB2T,EAAE7Z,EAASmG,EAAaC,KAE/E,SAAA8T,GAAA,IAAGH,EAAHG,EAAGH,WAAHG,EAAeP,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QAAM+d,MAAOpL,EAAWoL,MAAOC,IAAKF,MAGtClB,EACN,MACA,IAAK,oBACH9T,EAASxI,KAAK4K,MAAMoM,kBAClBxX,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B5O,SAAUA,EAAUoG,aAAcA,EAAcD,aAAcA,EAAcL,OAAQvJ,KAAK4K,MAAMoM,qBAC1HsF,EACN,MACA,IAAK,YACH9T,EAASxI,KAAK4K,MAAM2H,UAClB/S,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdrK,OAAO+X,OAAO3X,KAAK4K,MAAM2H,WAAWiJ,IAAK,SAACoC,EAAeC,GAAhB,OACvCre,EAAAC,EAAAC,cAACqS,EAAD,CACElO,MAAO+Z,EAAe/Z,MACtBrD,YAAaod,EACbE,IAAG,SAAAlZ,OAAWiZ,GACdzL,UAAW,CACTrF,KAAK,cACL4P,aAAa,CACXD,QAAQ,GAAA9X,OAAGgZ,EAAe/Z,QAASwK,EAAKzD,MAAM4H,+BAAiCnE,EAAKzD,MAAM4H,8BAA8BoL,EAAe/Z,OAApG,KAAAe,OAAkHyJ,EAAKzD,MAAM4H,8BAA8BoL,EAAe/Z,OAAO+M,QAAQnN,GAAzL,KAAAmB,OAAsMgZ,EAAevV,sBAArN,yBAAoQ,KAEzSpI,MAAM,CACJX,aAAa,MACbiS,SAAS,WACTtS,OAAO,CAAC,QAAQ,OAChByN,GAAGmR,EAAgB,QAAU,EAC7BrM,OAAO5R,OAAO+X,OAAOtJ,EAAKzD,MAAM2H,WAAWzP,OAAO+a,EAClDE,UAAU,CAAC,kCAAkC,0CAOvDzB,EACN,MACA,IAAK,kBACH9T,EAASxI,KAAK4K,MAAM4I,gBAClBhU,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B5O,SAAUA,EAAUoG,aAAcA,EAAcD,aAAcA,EAAcL,OAAQvJ,KAAK4K,MAAM4I,mBAC1H8I,EACN,MACA,IAAK,aACH9T,EAASxI,KAAK4K,MAAM8L,WAClBlX,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B5O,SAAUA,EAAUoG,aAAcA,EAAcD,aAAcA,EAAcL,OAAQvJ,KAAK4K,MAAM8L,cAC1H4F,EACN,MACA,IAAK,OACH9T,EAASxI,KAAK4K,MAAMuM,SAClB3X,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B5O,SAAUA,EAAUoG,aAAcA,EAAcD,aAAcA,EAAcL,OAAQvJ,KAAK4K,MAAMuM,YAC1HmF,EACN,MACA,IAAK,QAEH9T,OAA8BzF,IAArB/C,KAAK4K,MAAMsM,OAA4C,OAArBlX,KAAK4K,MAAMsM,MACpD1X,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B5O,SAAU,EAAG8F,OAAQvJ,KAAK4K,MAAMsM,SAC3DoF,EACN,MACA,IAAK,eACH9T,EAASxI,KAAK4K,MAAM2M,aACkB,qBAA5BnF,EAAU4L,eAAiC5L,EAAU4L,cAC3Dxe,EAAAC,EAAAC,cAACue,GAAD,CACE7S,SAAUpL,KAAKC,MAAMmL,SACrB0B,UAAW9M,KAAK4K,MAAM0M,uBAEtB9X,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAM2M,aAAlC,MAGF/X,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAM2M,aAAlC,KAEF+E,EACJ,MACA,IAAK,oBACH9T,EAASxI,KAAK4K,MAAMyM,kBACkB,qBAA5BjF,EAAU4L,eAAiC5L,EAAU4L,cAC3Dxe,EAAAC,EAAAC,cAACue,GAAD,CACE7S,SAAUpL,KAAKC,MAAMmL,SACrB0B,UAAW9M,KAAK4K,MAAMwM,4BAEtB5X,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAMyM,kBAAlC,MAGF7X,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAMyM,kBAAlC,KAEFiF,EACJ,MACA,IAAK,gBACH9T,EAASxI,KAAK4K,MAAMsT,cAClB1e,EAAAC,EAAAC,cAACue,GAAD,CACEnR,UAAW,KACX1B,SAAUpL,KAAKC,MAAMmL,UAErB5L,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GACMwS,EADN,CAEE5O,SAAUA,EACVoG,aAAcA,EACdN,OAAQvJ,KAAK4K,MAAMsT,kBAGrB5B,EACN,MACA,IAAK,WACH9T,EAASxI,KAAK4K,MAAMgM,SAClBpX,EAAAC,EAAAC,cAACue,GAAD,CACEnR,UAAW,KACX1B,SAAUpL,KAAKC,MAAMmL,UAErB5L,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GACMwS,EADN,CAEE5O,SAAUA,EACVoG,aAAcA,EACdN,OAAQvJ,KAAK4K,MAAMgM,aAGrB0F,EACN,MACA,IAAK,mBACH,IAAM6B,EAAsBne,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAC/Ewd,EAAkBpe,KAAKS,cAAcG,gBAAgB,CAAC,YAAYud,IACxE3V,EAASxI,KAAK4K,MAAMxG,iBAClB5E,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAV,IAAwBrS,KAAK4K,MAAMxG,iBAAiBwM,QAAQnN,GAA5D,SAA6E2a,EAAgB/V,uBAC3FiU,EACN,MACA,IAAK,wBACH9T,EAASxI,KAAK4K,MAAMyT,sBAClB7e,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAMyT,sBAAsBzN,QAAQnN,GAAhE,IAA4EzD,KAAKC,MAAMO,YAAY6H,uBACjGiU,EACN,MACA,IAAK,oBACH9T,EAASxI,KAAK4K,MAAM0T,kBAClB9e,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAM0T,kBAAkB1N,QAAQnN,IAC1D6Y,EACN,MACA,IAAK,MACH9T,EAASxI,KAAK4K,MAAMmJ,SAClBvU,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAK4K,MAAMmJ,SAAWpS,MAAMiK,WAAW5L,KAAK4K,MAAMmJ,WAAmB,GAAN,KACpFuI,EACN,MACA,IAAK,SACH9T,OAA+BzF,IAAtB/C,KAAK4K,MAAMsN,OAClB1Y,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,GAAmC,IAAtBrS,KAAK4K,MAAMsN,OAAmBlY,KAAK4K,MAAMsN,OAAS,IAAK1Y,EAAAC,EAAAC,cAAA,mBAC5E4c,EACN,MACA,IAAK,WACH9T,OAAsCzF,IAA7B/C,KAAK4K,MAAMuN,cAClB3Y,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,GAA0C,IAA7BrS,KAAK4K,MAAMuN,cAA0BnY,KAAK4K,MAAMuN,cAAgB,IAAK3Y,EAAAC,EAAAC,cAAA,mBAC1F4c,EACN,MACA,IAAK,WACH9T,OAAiCzF,IAAxB/C,KAAK4K,MAAM0I,SAClB9T,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,GAAqC,IAAxBrS,KAAK4K,MAAM0I,SAAqBtT,KAAK4K,MAAM0I,SAAW,IAAK9T,EAAAC,EAAAC,cAAA,mBAChF4c,EACN,MACA,IAAK,mBACH9T,OAAyCzF,IAAhC/C,KAAK4K,MAAMwN,iBAClB5Y,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,GAA6C,IAAhCrS,KAAK4K,MAAMwN,iBAA6BpY,KAAK4K,MAAMwN,iBAAmB,IAAK5Y,EAAAC,EAAAC,cAAA,mBAChG4c,EACN,MACA,IAAK,MACH9T,OAAiCzF,IAAxB/C,KAAK4K,MAAMqJ,SAClBzU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,GAAqC,IAAxBrS,KAAK4K,MAAMqJ,SAAqBjU,KAAK4K,MAAMqJ,SAAW,IAAKzU,EAAAC,EAAAC,cAAA,mBAEhFM,KAAK4K,MAAMsJ,eAAiBtU,OAAO4H,KAAKxH,KAAK4K,MAAMsJ,eAAepR,OAAO,GACvEtD,EAAAC,EAAAC,cAACqS,EAAD,CACEK,UAAW,CACTrF,KAAK,UACL9M,MAAM,CACJse,UAAU,CACR7R,GAAG,GAEL+P,UAAU,MACVC,QAAQ9c,OAAO4H,KAAKxH,KAAK4K,MAAMsJ,eAAesH,IAAK,SAAAgD,GACjD,IAAMnW,EAAwBgG,EAAK5N,cAAcG,gBAAgB,CAAC,YAAY4d,EAAS,0BACjFC,EAAcpQ,EAAK5N,cAAcG,gBAAgB,CAAC,YAAY4d,EAAS,mBACzEhQ,EAAQH,EAAKzD,MAAMsJ,cAAcsK,GAAU5N,QAAQnN,GACvD,OAAQgb,GACN,QACA,IAAK,MACHjQ,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAA5J,OAAM4J,EAAN,KAAA5J,OAAeyD,GAGxB,SAAAzD,OAAU4Z,EAAV,MAAA5Z,OAAuB4J,KACtB0C,KAAK,WAMlBoL,EACN,MACA,IAAK,SACH,IAAMoC,EAAyC,oBAApBtM,EAAUjB,MAAuBiB,EAAUjB,MAAMnR,KAAKC,OAASmS,EAAUjB,MACpG3I,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GAAYwS,EAAZ,CAAwBsM,QAAS,kBAAMtM,EAAWuM,YAAYvQ,EAAKpO,UAAUye,GAEjF,MACA,IAAK,mBACHlW,EAASxI,KAAK4K,MAAMkL,qBAClBtW,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,GACMG,KAAK4K,MAAMoL,sBADjB,CAEExM,KAAMxJ,KAAK4K,MAAMmL,qBACjBzJ,KAAMtM,KAAK4K,MAAMkL,qBACjB5b,MAAO8F,KAAK4K,MAAM0K,sBAClBrW,OAAQe,KAAK4K,MAAM2K,0BAEnB+G,EACN,MACA,IAAK,kBACH9T,EAASxI,KAAK4K,MAAMuJ,sBAAwBnU,KAAK4K,MAAMwJ,sBACrD5U,EAAAC,EAAAC,cAACmf,GAADjf,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEwK,YAAa,CACXgC,KAAK,QAEPE,WAAY,GACZc,cAAezN,KAAKC,MAAM4D,MAC1B3J,MAAO8F,KAAK4K,MAAMuJ,qBAClBlV,OAAQe,KAAK4K,MAAMwJ,sBACnBvF,OAAqC,qBAAtB7O,KAAKC,MAAM4O,QAAyB7O,KAAKC,MAAM4O,OAC9DxC,WAA6C,qBAA1BrM,KAAKC,MAAMoM,YAA6BrM,KAAKC,MAAMoM,cAEtEiQ,EACN,MACA,IAAK,UACH9T,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EACK0S,EAEJ7S,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE6M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,aACHkU,EAAWkM,aAIvB,MACA,IAAK,WACH/V,EAASxI,KAAK4K,MAAM4J,aAClBhV,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,GACMG,KAAK4K,MAAMuK,cADjB,CAEE3L,KAAMxJ,KAAK4K,MAAMsK,aACjB5I,KAAMtM,KAAK4K,MAAM4J,aACjBta,MAAO8F,KAAK4K,MAAMmK,cAClB9V,OAAQe,KAAK4K,MAAMoK,kBAEnBsH,EACN,MACA,QACE,IAAIwC,EAAiB9e,KAAK4K,MAAMwH,EAAUrF,MACtC/M,KAAK4K,MAAMwH,EAAUrF,OAAS/M,KAAK4K,MAAMwH,EAAUrF,MAAMgS,eAC3DD,EAAiB9e,KAAK4K,MAAMwH,EAAUrF,MAAM6D,QAAQnN,IAEtD+E,EAASxI,KAAK4K,MAAMwH,EAAUrF,MAC5BvN,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAayM,GACrBxC,EAGR,OAAO9T,SAjpCcrI,iEC6EV6e,oLAnFJ,IAAA3e,EAAAL,KACDif,EAAajf,KAAKC,MAAMgf,WACxBC,EAAWlf,KAAKC,MAAMif,WAAaD,EACnClE,EAAgB/a,KAAKC,MAAM8a,gBAAkBkE,EAC7CE,EAA4C,qBAAzBnf,KAAKC,MAAMkf,WAA4Bnf,KAAKC,MAAMkf,UACrEC,EAA4C,qBAAzBpf,KAAKC,MAAMmf,WAA4Bpf,KAAKC,MAAMmf,UAErEC,EAAY,CAChBlV,EAAE,EACF4T,UAAU,EACVze,aAAa,EACbiS,SAAS,WACT/E,UAAU,UACV8S,WAAW,UAITtf,KAAKC,MAAMof,WAAazf,OAAO4H,KAAKxH,KAAKC,MAAMof,WAAWvc,QAC5DlD,OAAO4H,KAAKxH,KAAKC,MAAMof,WAAWnV,QAAQ,SAAAC,GACxCkV,EAAUlV,GAAK9J,EAAKJ,MAAMof,UAAUlV,KAIxC,IAAMoV,EAAY,CAChBC,KAAO7nB,eACPunB,EAAWM,KAAO1nB,OAAS,KAC1BqnB,EAA4B,KAAhBK,KAAO5nB,OACpBwnB,EAAYI,KAAOznB,QAAU,KAC7BknB,EAAaO,KAAOxnB,SAAW,KAC/B+iB,EAAgByE,KAAO3nB,YAAc,MAOvC,OAJImI,KAAKC,MAAMsf,WAAaC,KAAOxf,KAAKC,MAAMsf,YAC5CA,EAAU1O,KAAK2O,KAAOxf,KAAKC,MAAMsf,YAIjC/f,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMwf,EADN,CAEEE,UAAWA,EACXZ,QAAS3e,KAAKC,MAAM2e,cAGlB5e,KAAKC,MAAMvG,OAASsG,KAAKC,MAAMvG,MAAMoJ,OAAO,GAC1CtD,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4f,GAAI,CAAC,EAAE,GACP/S,GAAI,CAAC,EAAE,GACP3C,WAAY,SACZC,cAAe,OACXhK,KAAKC,MAAMyf,kBAEflgB,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT/f,OAAAC,OAAA,CACEmP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WACR5f,KAAKC,MAAM4f,YAEd7f,KAAKC,MAAMvG,OAGZsG,KAAKC,MAAM6f,aAAe9f,KAAKC,MAAM6f,YAAYhd,OAAO,GACtDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKC,MAAM6f,aAEpBtgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,gBAMpB6B,KAAKC,MAAMC,iBA9EQC,aC6Mb4f,8MAvMbnV,MAAQ,KAGRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAKggB,sMAGY7U,EAAUqC,+EACjCxN,KAAKoJ,YAEC6W,EAAuB9U,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,cAC9DyS,EAAiBC,KAAKC,UAAUjV,EAAUkV,WAAaF,KAAKC,UAAUpgB,KAAKC,MAAMogB,SACjFC,EAAsBH,KAAKC,UAAUjV,EAAUoV,gBAAkBJ,KAAKC,UAAUpgB,KAAKC,MAAMsgB,cAC3FC,EAAoBrV,EAAUsV,oBAAsBzgB,KAAKC,MAAMwgB,mBAAqBtV,EAAUuV,uBAAyB1gB,KAAKC,MAAMygB,sBAEpIR,GAAkBD,GAAwBK,GAAuBE,IACnExgB,KAAKggB,uSAMDW,EAAmB,SAAA1gB,GACvB,IAAMof,EAAYzf,OAAOC,OACvBI,EAAM2gB,WACN,CACEzW,EAAE,EACFjQ,MAAM,EACNujB,MAAM,CAACoD,OAAO,YAEfxX,EAAKpJ,MAAM2gB,WAAavX,EAAKpJ,MAAM2gB,WAAa,IAMnD,OAHI3gB,EAAM6gB,aACRzB,EAAUtB,UAAY,GAGtBve,EAAAC,EAAAC,cAACqhB,GAAD,CACEhG,eAAe,EACfsE,UAAWA,GAEX7f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,OAEd/J,EAAMC,YAMT8gB,EAA2B,SAAA/gB,GAAK,OAAI,MAEpCghB,EAAa,SAAAhhB,GACjB,IAAMof,EAAYzf,OAAOC,OAAOI,EAAM2gB,WAAW,CAC/CnB,GAAG,EACHjO,OAAO,EACPuM,UAAU,KACVxM,SAAS,aAEX,OACE/R,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAWA,GAEVpf,EAAMC,WAKPwgB,EAAuB1gB,KAAKC,MAAMygB,qBAAuB1gB,KAAKC,MAAMygB,qBAAuB,SAAAzgB,GAC/F,OACET,EAAAC,EAAAC,cAACC,EAAA,EACKM,EAAM2gB,WAEVphB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,GAEX/O,EAAMihB,YAAY1S,MAAM2C,UAO7BsP,EAAoBzgB,KAAKC,MAAMwgB,kBAAoBzgB,KAAKC,MAAMwgB,kBAAoB,SAACxgB,GACvF,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGM,EAAMkR,SAMTgQ,EAAuBnhB,KAAKC,MAAMkhB,qBAAuBnhB,KAAKC,MAAMkhB,qBAAuB,SAAClhB,GAEhG,OAAKA,EAAMihB,YAAYE,aAKrB5hB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMI,EADN,CAEEjB,SAAU7F,EAAME,UAAU,GAC1B8E,MAAOhF,EAAMR,OAAOyC,UACpB4T,WAAY7V,EAAMG,YAAY,GAC9B2V,WAAY9V,EAAMS,MAAME,UACxBylB,UAAW,CAACC,KAAO6B,YAAaphB,EAAMihB,YAAYJ,WAAwC,KAA3BtB,KAAO8B,sBAVjE,MAeLC,EAAe,SAACthB,GAEpB,IAAMogB,EAAUpgB,EAAMihB,YAAYb,QAC9BmB,EAAgBvhB,EAAMihB,aAAejhB,EAAMihB,YAAY1S,OAASvO,EAAMihB,YAAY1S,MAAMA,MAQ5F,OALIgT,IAAyE,IAAxDnB,EAAQ7E,IAAK,SAAAiG,GAAC,OAAIA,EAAEjT,QAAQyJ,QAAQuJ,IAAyBnY,EAAKpJ,MAAMsgB,eAC3FiB,EAAgBnY,EAAKpJ,MAAMsgB,aAAa/R,OAItCgT,GAAiBA,IAAkBvhB,EAAMuO,MACpC,KAIPhP,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE6hB,GAAI,EACJC,GAAI,EACJznB,MAAO,GACH+F,EAAM2gB,WAJZ,CAKE7W,WAAY,SACZC,cAAe,MACfyT,MAAO,CAACoD,OAAO,WACf5W,eAAgB,aAChBsV,UAAWC,KAAOoC,gBAClBxjB,gBAAkB6B,EAAM4hB,UAAY,UAAY,YAEhDriB,EAAAC,EAAAC,cAAC+gB,EACKxgB,cAMND,KAAKiM,SAAS,CAClBgV,aACAM,eACAZ,mBACAD,uBACAS,uBACAH,gKAIK,IAAA3S,EAAArO,KACDohB,EAAkD,qBAA5BphB,KAAKC,MAAMmhB,cAA+BphB,KAAKC,MAAMmhB,aACjF,OACE5hB,EAAAC,EAAAC,cAACoiB,GAAA,EAAD,CACE/U,KAAM/M,KAAKC,MAAM8M,KACjBqU,aAAcA,EACdf,QAASrgB,KAAKC,MAAMogB,QACpBE,aAAcvgB,KAAKC,MAAMsgB,aACzBwB,SAAW,SAAArT,GAAC,OAAIL,EAAKpO,MAAM8hB,SAASrT,EAAEF,QACtCwT,WAAY,CACRC,KAAMjiB,KAAK4K,MAAMqW,WACjBiB,OAAQliB,KAAK4K,MAAM2W,aACnBY,QAASniB,KAAK4K,MAAM+V,iBACpByB,MAAOpiB,KAAK4K,MAAMuW,qBAClBkB,YAAariB,KAAK4K,MAAM8V,qBACxB4B,mBAAoBtiB,KAAK4K,MAAMoW,mCAlMb7gB,aCqPfoiB,8MArPb3X,MAAQ,CACNyV,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvBjgB,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,gDAIhC,IAAAoJ,EAAArJ,KACRqgB,EAAUzgB,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAiBwU,IAAI,SAAA3X,GAE1D,MAAO,CACL2K,MAAM3K,EACNsN,MAAMtN,EACNrD,YAJkB6I,EAAKpJ,MAAM+G,gBAAgBnD,MAQ3C0c,EAAevgB,KAAKC,MAAMwN,cAAgB4S,EAAQtI,KAAK,SAAArJ,GAAC,OAAKA,EAAEF,MAAMgU,gBAAkBnZ,EAAKpJ,MAAMwN,cAAc+U,gBAAkB,KAyKxIxiB,KAAKiM,SAAS,CACZoU,UACAE,eACAE,kBA1KwB,SAAAxgB,GACxB,IAAM4D,EAAQ5D,EAAMuO,MACdhO,EAAcP,EAAMqM,KAAK9L,YAE/B,OACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,UAEZvK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPrD,YAAaA,EACb4R,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHxoB,MAAM,MACN+E,OAAO,UAIbO,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPuO,UAAW,CACTrF,KAAK,YACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,iBAMZkL,EAAKuB,MAAM3K,MAAM0iB,gBACfnjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEgE,MAAOA,GACHwF,EAAKuB,MAAM3K,MAFjB,CAGEmS,UAAW,CACTrF,KAAK1D,EAAKuB,MAAM3K,MAAM0iB,gBACtB1iB,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,aAGVqC,YAAaA,EACbgB,QAAS6H,EAAKuB,MAAM3K,MAAMuB,QAC1ByE,WAAYoD,EAAKpJ,MAAMgG,WACvBP,cAAe2D,EAAKpJ,MAAMyF,kBAG5B2D,EAAKpJ,MAAM2iB,aACbpjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEgE,MAAOA,GACHwF,EAAKuB,MAAM3K,MAFjB,CAGEmS,UAAW,CACTrF,KAAK,eACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,aAGVqC,YAAaA,EACbgB,QAAS6H,EAAKuB,MAAM3K,MAAMuB,QAC1ByE,WAAYoD,EAAKpJ,MAAMgG,WACvBP,cAAe2D,EAAKpJ,MAAMyF,oBA2FtCgb,qBAnF2B,SAAAzgB,GAC3B,IACMihB,GAA4D,IADlDjhB,EAAMihB,YAAYb,QACNpI,QAAQhY,EAAMihB,YAAY1S,OAAgBvO,EAAMihB,YAAY1S,MAAQ+R,EAEhG,IAAKW,EACH,OAAO,KAGT,IAAMrd,EAAQqd,EAAY1S,MACpBhO,EAAc0gB,EAAY1gB,YAChC,OACEhB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4d,MAAO,CACLoF,KAAK,KAEP5Y,eAAgB,iBACZhK,EAAM2gB,YAEVphB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEsK,EAAG,EACHjQ,MAAO,GACH+F,EAAM2gB,WAHZ,CAIE7W,WAAY,SACZC,cAAe,MACfyT,MAAO,CAACoD,OAAO,WACf5W,eAAgB,eAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPrD,YAAaA,EACb4R,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,UAIbO,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPuO,UAAW,CACTrF,KAAK,YACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,iBAOZkL,EAAKpJ,MAAM2iB,aACTpjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEgE,MAAOA,GACHwF,EAAKuB,MAAM3K,MAFjB,CAGEmS,UAAW,CACTrF,KAAK,eACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,aAGVqC,YAAaA,EACbgB,QAAS6H,EAAKuB,MAAM3K,MAAMuB,QAC1ByE,WAAYoD,EAAKpJ,MAAMgG,WACvBP,cAAe2D,EAAKpJ,MAAMyF,2KAiBxC1F,KAAKoJ,YACLpJ,KAAKggB,iBAELhgB,KAAKiM,SAAS,CACZhM,MAAMD,KAAKC,6LAIUkL,EAAUqC,yEACjCxN,KAAKoJ,YAEC6W,EAAuB9U,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,eACrC0S,KAAKC,UAAUxgB,OAAO4H,KAAK2D,EAAUnE,oBAAsBmZ,KAAKC,UAAUxgB,OAAO4H,KAAKxH,KAAKC,MAAM+G,mBAClGiZ,IAC5BjgB,KAAKggB,uJAKP,OAAKhgB,KAAK4K,MAAMyV,SAAYrgB,KAAK4K,MAAM2V,cAAiBvgB,KAAK4K,MAAM6V,mBAAsBzgB,KAAK4K,MAAM8V,sBAAyB1gB,KAAKC,MAAM+G,iBAAoBpH,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAiBlE,OAKlMtD,EAAAC,EAAAC,cAACojB,GAAD,CACE/V,KAAM,SACNsT,QAASrgB,KAAK4K,MAAMyV,QACpBO,WAAY5gB,KAAKC,MAAM2gB,WACvBQ,aAAcphB,KAAKC,MAAMmhB,aACzBb,aAAcvgB,KAAK4K,MAAM2V,aACzB9S,cAAezN,KAAKC,MAAMwN,cAC1BgT,kBAAmBzgB,KAAK4K,MAAM6V,kBAC9BC,qBAAsB1gB,KAAK4K,MAAM8V,qBACjCqB,SAAW/hB,KAAKC,MAAM8hB,SAAW/hB,KAAKC,MAAM8hB,SAAW/hB,KAAKC,MAAM8iB,cAb7D,YApOe5iB,aC8Qb6iB,8MA7QbpY,MAAQ,CACNpK,YAAY,KACZyiB,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7B1iB,cAAgB,OA4HhB2iB,sDAAkB,SAAAniB,EAAOgiB,GAAP,IAAAC,EAAAC,EAAAE,EAAA,OAAAtiB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ4hB,EAAoB,KAClBC,EAA6B,GACX9iB,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/EsJ,QAAS,SAAArG,GACnBA,IAAUof,IACPC,IACHA,EAAoBrf,GAEtBsf,EAA2Btf,GAAS,CAClCA,aAKAwf,EAAYhjB,EAAKI,cAAcG,gBAAgB,CAAC,iBACpCqiB,IAChBE,EAA2BE,GAAa,CACtCxf,MAAMwf,IAIVhjB,EAAK4L,SAAS,CACZgX,oBACAE,8BACA,WACA9iB,EAAKijB,gBAAgBJ,KA3BP,wBAAA9hB,EAAAS,SAAAZ,EAAAjB,iEA+BlBsjB,sDAAkB,SAAAthB,EAAOkhB,GAAP,OAAAniB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAChBjB,EAAK4L,SAAS,CACZiX,sBAFc,wBAAA/gB,EAAAN,SAAAG,EAAAhC,iEAMlBhD,KAAO,WACL,IAAM+T,EAAgB1Q,EAAKI,cAAc8iB,mBACnCC,EAAkBnjB,EAAKuK,MAAM6Y,aAC7BC,EAAY,CAChBL,UAAUhjB,EAAKuK,MAAMqY,kBACrBxV,cAAcpN,EAAKuK,MAAMsY,kBACzBS,SAAQ,iBAAA/e,OAAkBvE,EAAKuK,MAAMqY,kBAA7B,KAAAre,OAAkDvE,EAAKuK,MAAMsY,oBAEjEU,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAcH,EAAU3S,GAAiB,KAGzF,oBAA3ByS,EAAgBM,QACzBN,EAAgBM,OAAOF,EAAW,KAAKF,GAIzCrjB,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,YACbC,WAAU,GAAAtf,OAAKvE,EAAKuK,MAAMqY,kBAAhB,KAAAre,OAAqCvE,EAAKuK,MAAMsY,iGAjLxDljB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,6KAMzCD,KAAK4K,MAAMqY,mBAAsBjjB,KAAK4K,MAAMsY,4DACxC,UAGQ,aACXO,EAAezjB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,YADnD,eAEA+D,SAAW8e,EAAaU,kBAEjCpT,EAAgB/Q,KAAKS,cAAc8iB,mBACnCY,EAAkBV,EAAaU,gBAErCvkB,OAAO4H,KAAK2c,GAAiBja,QAAQ,SAACka,EAAIC,GAIxC,OAFqBD,EAAIE,MAAM,KAAKC,MAAM7T,eAGxC,IAAK,KACH,IAAM8T,EAAQ,UAAA5f,OAbL,YAaK,KAAAA,OAAyByf,EAAzB,KAAAzf,OAA8ByE,EAAKuB,MAAMqY,kBAAzC,KAAAre,OAA8DyE,EAAKuB,MAAMsY,mBAEvF,IAAKzX,SAASC,eAAe8Y,GAAU,CACrC,IAAMC,EAAShZ,SAAS/L,cAAc,UAChCglB,EAAuBP,EAAgBC,GACvCniB,EAAWyiB,GAAwBA,EAAqBziB,SAAWyiB,EAAqBziB,SAAW,KACnG0iB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBtB,UAAUha,EAAKuB,MAAMqY,kBACrBxV,cAAcpE,EAAKuB,MAAMsY,kBACzBS,SAAQ,iBAAA/e,OAAkByE,EAAKuB,MAAMqY,kBAA7B,KAAAre,OAAkDyE,EAAKuB,MAAMsY,oBAElDnS,EAAc0S,GAGjCxhB,GAAgC,oBAAbA,IACjBwiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5B5iB,MAIJwiB,EAAOK,OAAS7iB,GAIpBwiB,EAAO3T,GAAK0T,EACZC,EAAOlF,UAAP,UAAA3a,OA5CO,aA6CP6f,EAAO9S,IAAMyS,EACbK,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/ChZ,SAASyZ,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAvgB,OAxDT,YAwDS,KAAAA,OAA6Byf,GAE/C,IAAK5Y,SAASC,eAAeyZ,GAAc,CACzC,IAAM1H,EAAQhS,SAAS/L,cAAc,QAErC+d,EAAM3M,GAAKqU,EACX1H,EAAM1d,IAAM,aACZ0d,EAAM2H,KAAOhB,EAEb3Y,SAASyZ,KAAKD,YAAYxH,QASpCzd,KAAKiM,SAAS,CACZwX,+QAKFzjB,KAAKoJ,qBACCpJ,KAAKqlB,gRAILpC,EAAoBrjB,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAiB,YAEtEhH,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAjE,eAAA2L,EAAA/S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAkF,SAAAqC,EAAOQ,GAAP,IAAArD,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,UAChFd,EAAc6N,EAAKpO,MAAMqlB,UAAUte,gBAAgBnD,GACnCwK,EAAK5N,cAAc8kB,kBAAkB/kB,EAAYqD,SACjDrD,EAAYglB,IAHoD,CAAAjiB,EAAAjC,KAAA,eAAAiC,EAAAjC,KAAA,EAI9E+M,EAAKpO,MAAMwlB,aAAajlB,EAAYqD,MAAMrD,EAAYoG,QAAQpG,EAAYglB,KAJI,wBAAAjiB,EAAA1B,SAAAwB,EAAArD,SAAlF,gBAAA2F,GAAA,OAAAgN,EAAApQ,MAAAvC,KAAAwC,YAAA,WAQNxC,KAAKojB,gBAAgBH,wLAGE9X,EAAUqC,2EACjCxN,KAAKoJ,YAECsc,EAAmBlY,EAAUyV,oBAAsBjjB,KAAK4K,MAAMqY,kBAC9D0C,EAAmBnY,EAAU0V,oBAAsBljB,KAAK4K,MAAMsY,mBAC/DwC,GAAqBC,IAAqB3lB,KAAK4K,MAAMqY,mBAAqBjjB,KAAK4K,MAAMsY,mBACxFljB,KAAK4lB,wJAgEA,IAAAC,EAAA7lB,KAEP,OAAKA,KAAK4K,MAAMqY,kBAKdzjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,yBAGAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2iB,aAAa,EACbxB,cAAc,EACdW,SAAU/hB,KAAKojB,gBACf3V,cAAezN,KAAK4K,MAAMqY,kBAC1Bjc,gBAAiBhH,KAAKC,MAAMqlB,UAAUte,oBAIxChH,KAAK4K,MAAMuY,4BAA8BnjB,KAAK4K,MAAMsY,mBAClD1jB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,6BAGAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2iB,aAAa,EACbxB,cAAc,EACdW,SAAU/hB,KAAKsjB,gBACf7V,cAAezN,KAAK4K,MAAMsY,kBAC1Blc,gBAAiBhH,KAAK4K,MAAMuY,+BAIpC3jB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP+P,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAM,SACNnN,aAAc,EACd2mB,UAAW,OACXtH,QAAU,SAAAvQ,GAAC,OAAIyX,EAAK7oB,KAAKoR,IACzBpW,UAAYgI,KAAK4K,MAAMqY,oBAAsBjjB,KAAK4K,MAAMsY,mBAP1D,kBAxDC,YArMW/iB,0HCkBT+lB,oLAfX,OACE1mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAW,CAACC,KAAO,kBACtBhgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAW,CAACC,KAAO,sBAAuBwG,GAAI,CAAC,EAAE,KACtDxmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAW,CAACC,KAAO,sBAAuBwG,GAAI,CAAC,EAAE,KACtDxmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAW,CAACC,KAAO,sBAAuBwG,GAAI,CAAC,EAAE,cAVnC7lB,aCqBdgmB,oLAlBX,OACG3mB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACC8e,QAAS3e,KAAKC,MAAM2e,aACf5e,KAAKC,MAAMmmB,aAEhB5mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UACnEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG4U,QAAU9O,KAAKC,MAAMomB,UAAY,OAAS,QACxD7mB,EAAAC,EAAAC,cAAC4mB,GAAD,OAEF9mB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG4U,QAAU9O,KAAKC,MAAMomB,UAAY,OAAS,QACvDrmB,KAAKC,MAAMsmB,qBAZGpmB,aCiOZqmB,8MAhOb5b,MAAQ,CACN6b,KAAK,EACLC,MAAM,CACJC,EAAE,YACFC,EAAE,aACFC,EAAE,aAEJC,SAAQ,EACRC,YAAY,GACZC,YAAY,GACZC,cAAc,KACdxZ,cAAc,SAIhBhN,cAAgB,OAwBhBymB,aAAe,SAAC9Y,GACd,IAAM2Y,EAAc3Y,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASJ,EAAEtO,OAAO0O,MAAQ,GACvFnO,EAAK4L,SAAS,CACZ8a,mBAIJI,aAAe,SAAC/Y,GAEd,IAAM4Y,EAAc5Y,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASJ,EAAEtO,OAAO0O,MAAQ,GACvFnO,EAAK4L,SAAS,CACZ+a,4FAhCEhnB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,qMAGmBqE,mEACxBzN,KAAKiM,SAAS,CACZwB,+QAqBFzN,KAAKiM,SAAS,CACZ6a,SAAQ,aAGgB9mB,KAAKS,cAAc2mB,YAAnB,uCAAAxiB,OAAsE5E,KAAK4K,MAAMmc,YAAjF,KAAAniB,OAAgG5E,KAAK4K,MAAM6C,cAA3G,KAAA7I,OAA4H5E,KAAK4K,MAAMoc,YAAvI,0DAAtBC,SAEE5b,EAAW,CACfyb,SAAQ,GAGNG,IACF5b,EAAS4b,cAAgBA,EAAc3a,MAGzCtM,KAAKiM,SAAS,CACZgb,qJAIK,IAAA5d,EAAArJ,KAEP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,MACfC,eAAgB,iBAGdrK,OAAO4H,KAAKxH,KAAK4K,MAAM8b,OAAOlL,IAAK,SAAA6L,GAAS,OAC1C7nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACL6J,UAAU,IACVzE,KAAK,UACL0E,eAAe,OACf1G,OAAOxX,EAAKuB,MAAM6b,MAAMY,EAAY,UAAY,WAElDroB,SAAU,EACVyS,UAAW,SACXqM,IAAG,QAAAlZ,OAAUyiB,GACblpB,MAAQkL,EAAKuB,MAAM6b,MAAMY,EAAY,OAAS,WAC9CG,WAAane,EAAKuB,MAAM6b,MAAMY,EAAY,OAAS,WACnDI,YAAcpe,EAAKuB,MAAM6b,MAAMY,EAAY,OAAS,YAEnDhe,EAAKuB,MAAM8b,MAAMW,OAK1B7nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN+E,OAAO,QAETuP,MAAQ,EAAE5O,OAAO4H,KAAKxH,KAAK4K,MAAM8b,OAAO5jB,OAAQ9C,KAAK4K,MAAM6b,SAIjEjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,iBAIAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2iB,aAAa,EACbnV,cAAezN,KAAK4K,MAAM6C,cAC1BsU,SAAU/hB,KAAK0nB,oBAAoBzc,KAAKjL,MACxCgH,gBAAiBhH,KAAKC,MAAMqlB,UAAUte,oBAG1CxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,kCAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACL9e,MAAO,OACPsP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACXvP,MAAOxO,KAAK4K,MAAMmc,YAClBhF,SAAU/hB,KAAKknB,aAAajc,KAAKjL,MACjC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,SAC7CsrB,YAAW,UAAAjjB,OAAY5E,KAAK4K,MAAM6C,cAAc+U,cAArC,cAGfhjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,sBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACL9e,MAAO,OACPsP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACXvP,MAAOxO,KAAK4K,MAAMoc,YAClBa,YAAa,0BACb9F,SAAU/hB,KAAKmnB,aAAalc,KAAKjL,MACjC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,YAGjDiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP+P,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACooB,GAAD,CACE1B,YAAa,CACXL,GAAG,EACHC,GAAG,CAAC,EAAG,GACPvZ,KAAK,SACLnN,aAAa,EACb2mB,UAAU,OACVjuB,UAAWgI,KAAK4K,MAAMmc,cAAgB/mB,KAAK4K,MAAM6C,gBAAkBzN,KAAK4K,MAAMoc,aAEhFT,WAAY,YACZF,UAAWrmB,KAAK4K,MAAMkc,QACtBlI,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK0e,SAAS3Z,gBAzNrBjO,4CC0BX6nB,oLA5BJ,IAAA3nB,EAAAL,KACDC,EAAQ,CACZ+O,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,YACNsT,UAAU,SACVmO,WAAW,WAIT5f,KAAKC,OAASL,OAAO4H,KAAKxH,KAAKC,OAAO6C,QACxClD,OAAO4H,KAAKxH,KAAKC,OAAOiK,QAAQ,SAAAC,GAC9BlK,EAAMkK,GAAK9J,EAAKJ,MAAMkK,KAI1B,IAAM8d,EAAmBjoB,KAAKC,MAAMioB,UAAYloB,KAAKC,MAAMioB,UAAYC,IAAQC,GAE/E,OACE5oB,EAAAC,EAAAC,cAACuoB,EACKhoB,EAEHD,KAAKC,MAAMC,iBAvBAC,aC+ELkoB,oLA7EJ,IAAAhoB,EAAAL,KACDsoB,EAAiBtoB,KAAKC,MAAMsoB,eAC5BxN,EAAkD,oBAA3B/a,KAAKC,MAAM2e,YACxC,OACEpf,EAAAC,EAAAC,cAACqhB,GAADnhB,OAAAC,OAAA,CACEwf,UAAW,CACT3N,GAAG,EACHxX,MAAM,EACNwnB,GAAG,CAAC,EAAE,GACNC,GAAG,CAAC,EAAE,SAER7Q,GAAI9Q,KAAKC,MAAMuoB,QACXxoB,KAAKC,MAAMwoB,SARjB,CASElJ,UAAWvf,KAAKC,MAAM4D,MACtBkX,cAAeA,EACf6D,YAAc7D,EAAgB,SAAA3M,GAAC,OAAI/N,EAAKJ,MAAM2e,YAAYve,EAAKJ,QAAS,OAExET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,MACf8G,GAAI9Q,KAAKC,MAAMwY,OAGbzY,KAAKC,MAAMyoB,KAAKlN,IAAI,SAACmN,EAAQC,GAC3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQG,QAAoBzoB,EAAKJ,MAAMmL,SAChE,KAGP5L,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEie,IAAG,OAAAlZ,OAASgkB,IACRD,EAAQ1oB,OAEZT,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE3F,MAAO,EACP6P,WAAY,SACZC,cAAe,OACX2e,EAAQI,aAGVJ,EAAQK,OAAOxN,IAAI,SAACpJ,EAAU6W,GAC5B,OAA0B,IAAtB7W,EAAUyW,UAA2C,IAArBzW,EAAU0W,QAAoBzoB,EAAKJ,MAAMmL,SACpE,KAGP5L,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEZ,OAAQ,OACR+K,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZmI,EAAU2W,YALhB,CAMEtL,MAAQrL,EAAUqL,MAAQrL,EAAUqL,MAAQ,CAC1CyL,SAAS,UAEXhvB,MAAOyuB,EAAQK,OAAOlmB,OAAO,EAAI,OAAS,EAC1CgO,GAAE,SAAAlM,OAAWgkB,EAAX,KAAAhkB,OAAuBqkB,EAAvB,KAAArkB,OAAqCwN,EAAUrF,MACjD+Q,IAAG,SAAAlZ,OAAWgkB,EAAX,KAAAhkB,OAAuBqkB,EAAvB,KAAArkB,OAAqCwN,EAAUrF,QAElDvN,EAAAC,EAAAC,cAAC4oB,EAAD1oB,OAAAC,OAAA,GACMQ,EAAKJ,MADX,CAEEmS,UAAWA,EACX+W,SAAUR,EAAQ1oB,MAClBsL,SAAQ,SAAA3G,OAAWgkB,EAAX,KAAAhkB,OAAuBqkB,EAAvB,KAAArkB,OAAqCwN,EAAUrF,yBA7D9D5M,mCC8DRipB,oLA7DJ,IAAA/oB,EAAAL,KAEDqpB,EAAW,SAACppB,GAAD,OACfT,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT/f,OAAAC,OAAA,CACEmP,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACPsf,MAAO,CACLvjB,MAAM,OACNovB,WAAW,UAEbtqB,SAAU,CAAC,OAAO,GAClB4gB,WAAY,WACR3f,GAEHA,EAAMC,WAIX,OACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO8F,KAAKC,MAAM/F,OAGf8F,KAAKC,MAAMspB,MAAQvpB,KAAKC,MAAMspB,KAAKzmB,OAAO,EACzCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,UAEZvK,EAAAC,EAAAC,cAAC2pB,EACKrpB,KAAKC,OAEXT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLoD,OAAO,WAETlC,QAAU,SAAAvQ,GAAC,OAAI/N,EAAKJ,MAAMupB,iBAAiBnpB,EAAKJ,MAAMvG,MAAM2G,EAAKJ,MAAMspB,QAEvE/pB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS,iCAETld,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACN5O,MAAO,YACPohB,UAAWC,KAAOxoB,QAClByV,KAAOzM,KAAKC,MAAMmL,SAAW,MAAQ,aAM7C5L,EAAAC,EAAAC,cAAC2pB,EACKrpB,KAAKC,eArDOE,aCoCfspB,oLAnCJ,IAAAppB,EAAAL,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwnB,GAAI,CAAC,EAAE,GACPgI,GAAI,CAAC,EAAE,GACP1f,cAAe,OAGbhK,KAAKC,MAAMyoB,KAAKlN,IAAI,SAACmN,EAAQC,GAE3B,OAAwB,IAApBD,EAAQE,UAAyC,IAAnBF,EAAQG,QAAoBzoB,EAAKJ,MAAMmL,SAChE,KAGDud,EAAQjvB,OAASivB,EAAQjvB,MAAMoJ,OACrCtD,EAAAC,EAAAC,cAACiqB,GAAD/pB,OAAAC,OAAA,GACMQ,EAAKJ,MACL0oB,EAAQ1oB,MAFd,CAGEspB,KAAMZ,EAAQY,KACd7vB,MAAOivB,EAAQjvB,MACfokB,IAAG,cAAAlZ,OAAgBgkB,KAElBD,EAAQjvB,OAGX8F,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMie,IAAG,cAAAlZ,OAAgBgkB,IAAgBD,EAAQ1oB,kBA3BrCE,aCkEXypB,8MA7Dbhf,MAAQ,KAGRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,2JAK9CD,KAAKoJ,iMAGkB+B,EAAWqC,mEAClCxN,KAAKoJ,kJAGE,IAAAC,EAAArJ,KAEH6pB,EAAgB7pB,KAAKC,MAAM4pB,cAK/B,OAJKA,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKxH,KAAKC,MAAM+G,kBAIvCxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,wBAAwB5W,MAAO,EAAG8P,cAAe,UACxDxK,EAAAC,EAAAC,cAACoqB,GAADlqB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEyoB,KAAM1oB,KAAKC,MAAMyoB,KACjBtd,SAAUpL,KAAKC,MAAMmL,YAEvB5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,cAAc9G,cAAe,UAElC6f,EAAcrO,IAAI,SAAA3X,GAChB,IAAMrD,EAAc6I,EAAKpJ,MAAM+G,gBAAgBnD,GAC/C,OAAKrD,EAIHhB,EAAAC,EAAAC,cAACqqB,GAADnqB,OAAAC,OAAA,CACEgE,MAAOA,GACHwF,EAAKpJ,MAFX,CAGE6d,IAAG,SAAAlZ,OAAWf,GACdrD,YAAaA,EACb+nB,eAAgBxW,GAChB0G,MAAK,aAAA7T,OAAef,GACpB2kB,OAAM,cAAA5jB,OAAgBf,MAVjB,gBA1CE1D,aC+RV6pB,8MA5Rbpf,MAAQ,CACNuC,UAAU,KACV8c,WAAW,KACXC,YAAY,KACZzc,cAAc,KACd0c,oBAAoB,QAItB1pB,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,gNAQLpJ,KAAKoqB,qMAGkBjf,EAAWqC,mEAClCxN,KAAKoJ,6RAKCihB,EAAY,GACdJ,EAAajqB,KAAKS,cAAciB,MAAM,GACpCyQ,EAAyC,SAAhCnS,KAAKC,MAAMoH,0BAEpBrH,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAvD,eAAAsjB,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwE,SAAA0B,EAAOmB,GAAP,IAAArD,EAAAmW,EAAAlE,EAAA0D,EAAA,OAAApV,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACtEd,EAAc6I,EAAKpJ,MAAM+G,gBAAgBnD,GAD6BhB,EAAAvB,KAAA,EAE7C+H,EAAK5I,cAAcc,gBAAgBf,EAAYqE,KAAKhB,MAAMwF,EAAKpJ,MAAMuB,SAFxB,YAEtEmV,EAFsE9T,EAAApB,MAAA,CAAAoB,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,EAKjD+H,EAAK5I,cAAc8pB,kBAAkB/pB,GALY,cAKpEiS,EALoE5P,EAAApB,KAAAoB,EAAAvB,KAAA,GAM/C+H,EAAK5I,cAAc6E,oBAAoBqR,EAAiBnR,MAAMiN,GAAY5O,EAAMrD,EAAY2R,GAN7C,SAMpEgE,EANoEtT,EAAApB,MAQzDsV,GAAG,KAClBsT,EAAUxmB,GAASsS,EAGnB8T,EAAaA,EAAW/hB,KAAKiO,IAZ2C,yBAAAtT,EAAAhB,SAAAa,EAAA1C,SAAxE,gBAAA2F,GAAA,OAAA2kB,EAAA/nB,MAAAvC,KAAAwC,YAAA,2BAkB8BxC,KAAKS,cAAc+pB,yBAAyBxqB,KAAKC,MAAMuB,QAAQxB,KAAKC,MAAM+G,gBAAgB,MAAM,MAAK,WAAnIyjB,WAEJ7qB,OAAO4H,KAAKijB,GAAuBvgB,QAAS,SAAAsU,GAC1C,IAAMkM,EAAkBrhB,EAAK5I,cAAciB,MAAM+oB,EAAsBjM,IACvE6L,EAAU7L,GAAYkM,EACtBT,EAAaA,EAAW/hB,KAAKwiB,KAI3Bvd,EAAY,GAElBvN,OAAO4H,KAAK6iB,GAAWngB,QAAQ,SAAArG,GAC7B,IAAMsS,EAAekU,EAAUxmB,GAC/B,GAAIsS,EAAaY,GAAG,GAAG,CACrB,IAAM4T,EAAkBxU,EAAa1Q,IAAIwkB,GAAYzkB,MAAM,KACvDolB,EAAgBvhB,EAAK5I,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,EAAM2e,cAAc,QAAQ,QACrGoI,EAAgBA,EAAgBA,EAAc1Z,KAAK,KAAO,UAC1D/D,EAAU0D,KAAK,CACbC,GAAGjN,EACHsN,MAAMtN,EAAMgnB,OAAO,EAAE,GAAGrI,cAAc3e,EAAMgnB,OAAO,GACnDrc,MAAMuK,KAAK+R,MAAMH,GACjBxsB,MAAM,OAAOysB,EAAc,SAKjC5qB,KAAKiM,SAAS,CACZoe,YACAld,YACA8c,mJAIK,IAAA5b,EAAArO,KAEDoM,EAAa,CACjBuB,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChBtV,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdsQ,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBH,WAAY,SAAAL,GACV,OAAItC,WAAWsC,EAAEM,QAAQ,EAChBN,EAAEM,MAAM,IAER,MAGXG,YAAa,SAAAT,GACX,OAAO,MAET/U,MAAM,CACJnC,QAAS,CACP4X,UAAW,CACTE,QAAS,SAGbC,OAAO,CACLlW,KAAK,CACHmG,SAAS,GACTgQ,WAAW,IACXC,WAAY9V,EAAMS,MAAME,YAG5BoV,QAAQ,CACNrW,KAAK,CACHmG,SAAS,GACTgQ,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9BqV,sBAAsB,EACtBI,sBAAsB,OACtBE,4BAA4B,EAC5BD,sBAAsB,OACtBJ,sBAAsB,GACtBE,wBAAwB,EACxByb,wBAAwB5e,SAAgC,GAAvBnM,KAAK4K,MAAMsf,aAC5Cxa,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9BE,OAAQhQ,KAAKC,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHjC,aAAa,SAAC7B,EAAM8B,GAClB,IAAMX,EAAgBnB,EAAKwE,GACrBqZ,EAAsB1c,EAAgBY,EAAKpO,MAAM+G,gBAAgByG,IAAkBY,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAAS6M,IAAkB,KAChKY,EAAKpC,SAAS,CACZwB,gBACA0c,yBAGJ7b,aAAa,SAAChC,EAAM8B,GAClBC,EAAKpC,SAAS,CACZwB,cAAc,KACd0c,oBAAoB,QAGxBjb,QAAQ,CACN,CACE8b,UAAW,GACXC,WAAY,GACZC,WAAYlrB,KAAKC,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZC,OAAQ,SACRte,UAAW,MACXue,cAAelyB,EAAMR,OAAOgE,OAC5B2uB,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,aAQrB5d,IAA6C,OAA7BzN,KAAK4K,MAAM6C,gBAA0BzN,KAAK4K,MAAMyf,UAAUrqB,KAAK4K,MAAM6C,iBAAiBzN,KAAK4K,MAAMyf,UAAUrqB,KAAK4K,MAAM6C,eACtIge,EAAezrB,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,SAC5FqkB,IAAe1rB,KAAK4K,MAAM6C,eAAgBzN,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAK4K,MAAM6C,cAAc,wBAE9H,OACEjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IAGJ8F,KAAK4K,MAAMqf,YAAcxc,IACxBjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6R,OAAQ,EACRvB,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbqB,UAAW,SACX1H,WAAY,SACZ7P,MAAO,CAAC,MAAM,OACdqX,SAAU,WACVtS,OAAQ,CAAC,MAAM,OACf+K,cAAe,SACfC,eAAgB,UAGdwD,EACEjO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KACEnsB,EAAAC,EAAAC,cAAC+iB,GAAD,CACErQ,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyR,GAAG,EACHzS,OAAO,UAGX4E,MAAO7D,KAAK4K,MAAM6C,cAClBjN,YAAaR,KAAK4K,MAAMuf,sBAE1B3qB,EAAAC,EAAAC,cAACkS,EAAD,CACErH,UAAW,CACTmC,GAAG,EACH1N,SAAS,EACTgQ,WAAW,GAEbvL,SAAU,EACVzE,SAAU,CAAC,EAAE,GACb4K,aAAc,EACdoF,WAAY,CAAC,EAAE,GACf1E,KAAOohB,EAAe,IAAM,KAC5BniB,OAAQvJ,KAAK4K,MAAMyf,UAAUrqB,KAAK4K,MAAM6C,iBAE1CjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,aAEN6B,KAAK4K,MAAM6C,gBAIhBjO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KACEnsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJzS,OAAQ,QACR0S,IAAK8Z,IAEPjsB,EAAAC,EAAAC,cAACkS,EAAD,CACEtH,KAAM,IACNC,UAAW,CACTmC,GAAG,EACH1N,SAAS,EACTgQ,WAAW,GAEbvL,SAAU,EACVzE,SAAU,CAAC,EAAE,GACb4K,aAAc,EACdoF,WAAY,CAAC,EAAE,GACfzF,OAAQvJ,KAAK4K,MAAMqf,aAErBzqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,aAHT,iBAYZqB,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACE2J,KAAMsI,MACF1F,EAFN,CAGEC,YAAY,EACZC,KAAMtM,KAAK4K,MAAMuC,UACjB5B,SAAUvL,KAAKC,MAAMsL,SACrBO,eAAgB9L,KAAKC,MAAMsL,oBAtRRpL,aCuCdyrB,sdAtCYzgB,EAAUqC,kMAKjC,OACEhO,EAAAC,EAAAC,cAACqhB,GAAD,CACEjD,IAAK9d,KAAKC,MAAM4rB,MAAM/a,GACtBuO,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHxnB,MAAM,EACNkW,KAAMpQ,KAAKC,MAAM4rB,MAAMvf,KAAKwf,SAAW9rB,KAAKC,MAAM4rB,MAAMvf,KAAKwf,QAAQ,GAAK,QAAU,MAGtFtsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGbhK,KAAKC,MAAM4rB,MAAMvf,KAAKyf,YACpBvsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,QAEVzR,KAAKC,MAAM4rB,MAAMvf,KAAKyf,YAG5B/rB,KAAKC,MAAMC,kBArCWC,aC4ElB6rB,sdAvEY7gB,EAAUqC,kMAKjC,OACEhO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,EACJxO,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP9Y,WAAY,SACZE,eAAgB,cAGdjK,KAAKC,MAAM9B,OACXqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJxoB,MAAO,OACP+E,OAAQ,OACRK,aAAc,MACdlB,gBAAiB4B,KAAKC,MAAM9B,QAIhCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACPsf,MAAO,CACLyO,cAAc,eAGflsB,KAAKC,MAAMkR,QAGhB3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP9Y,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,QACXgM,MAAO,CACL6L,WAAW,UAEb6C,wBAAyB,CACvBC,OAAQpsB,KAAKC,MAAMuO,kBAnEGrO,aC8erBksB,8MAvebzhB,MAAQ,CACN0hB,UAAU,KACVnf,UAAU,KACVf,WAAW,KACXmgB,WAAW,KACXvgB,YAAY,QAIdvL,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,2JAK9CD,KAAKoJ,YACLpJ,KAAKwsB,qMAGkBrhB,EAAWqC,gFAClCxN,KAAKoJ,YAECqjB,EAA4BthB,EAAUuhB,qBAAuB1sB,KAAKC,MAAMysB,oBACzDvM,KAAKC,UAAUjV,EAAU0e,iBAAmB1J,KAAKC,UAAUpgB,KAAKC,MAAM4pB,gBACvE4C,IAClBzsB,KAAKiM,SAAS,CACZkB,UAAU,MACV,WACA9D,EAAKsjB,sBAIaxhB,EAAUC,WAAapL,KAAKC,MAAMmL,UAEtDpL,KAAKwsB,uVAMH3C,EAAgB7pB,KAAKC,MAAM4pB,gBACRA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKxH,KAAKC,MAAM+G,2BAGdhH,KAAKS,cAAcmsB,gBAAgB5sB,KAAKC,MAAMuB,QAAQ,EAAE,SAASqoB,iBAAtFgD,SAEA1f,EAAY,GACd2f,EAAgB,GAChBC,EAAmB,eAEjB/sB,KAAKS,cAAc8G,aAAasiB,EAAhC,eAAAS,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8C,SAAA0B,EAAO+K,GAAP,IAAAuf,EAAAtW,EAAA,OAAA3V,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAElDwrB,EAAcrf,GAAiB,IAEzBuf,EAAcptB,OAAO+X,OAAOkV,GAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,QAAU4J,MACxDuf,EAAYlqB,SAEzB4T,EAAarI,EAAK5N,cAAciB,MAAM,GAE1CsrB,EAAY9iB,QAAQ,SAACmS,EAAG4Q,GAGtB,IAAK5Q,EAAG6Q,MAAS7Q,EAAG1e,QAAwB,YAAd0e,EAAG1e,OAC/B,OAAO,EAGTovB,EAAmBA,EAAmBhU,KAAKC,IAAI+T,EAAiB5gB,SAASkQ,EAAG8Q,YAAchhB,SAASkQ,EAAG8Q,WAEtG,IAAMC,EAAc/e,EAAK5N,cAAciB,MAAM2a,EAAG+Q,aAEhD,OAAQ/Q,EAAGvf,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH4Z,EAAaA,EAAWxO,KAAKklB,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACH1W,EAAaA,EAAWgF,MAAM0R,GAO9B1W,EAAW2W,GAAG,KAChB3W,EAAarI,EAAK5N,cAAciB,MAAM,IAGxC,IAAMR,EAAUwV,EACV5Z,EAASuf,EAAGvf,OACZqwB,EAAYhhB,SAASkQ,EAAG8Q,WACxB1a,EAAapE,EAAK5N,cAAciB,MAAM2a,EAAG5J,YACzC6a,EAAajf,EAAK5N,cAAciB,MAAM2a,EAAGiR,YAE1C7a,EAAW9Q,SAAY8Q,EAAW9Q,SACrCmrB,EAAcrf,GAAeoD,KAAK,CAChC/T,SACAoE,UACAisB,YACA1a,aACA6a,aACAF,mBAzD0C,wBAAAvqB,EAAAhB,SAAAa,EAAA1C,SAA9C,gBAAA2F,GAAA,OAAA2kB,EAAA/nB,MAAAvC,KAAAwC,YAAA,YAiEF8pB,EAAY,KACViB,EAAcvtB,KAAKS,cAAc0Y,YAAY,IAAIC,WAE/CpZ,KAAKC,MAAMysB,0BACZ,iBAGA,kBAGA,mBAGA,2CARHJ,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,4CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAY,yCAIVkB,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB7hB,UAAS,IAAIiN,MAAOI,UAAU,KAAM,MAEpDyU,EAAa,GACb9b,EAAyC,SAAhCnS,KAAKC,MAAMoH,2BAEpBrH,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKslB,GAA5C,eAAA/qB,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2D,SAAAkC,EAAOW,GAAP,OAAA9C,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACrC+M,EAAK5N,cAAcoZ,gBAAgBxL,EAAKpO,MAAM+G,gBAAgBnD,GAAO+C,QAAQuL,EAAO4a,EAAiB,MAAK,EAAM,MAD3E,OAC/DkB,EAAWpqB,GADoDV,EAAA1B,KAAA,wBAAA0B,EAAAtB,SAAAqB,EAAAlD,SAA3D,gBAAA4F,GAAA,OAAA7D,EAAAQ,MAAAvC,KAAAwC,YAAA,YAQN,IAFMmU,EAAmB,iBAIvB,IAAMuX,EAAgB,GAChBC,EAAiB,GACvBhB,EAAYpU,KAAKC,IAAIgV,EAAcb,GACnCU,EAAoBxf,EAAK5N,cAAciB,MAAM,GAI7C9B,OAAO4H,KAAKslB,GAAe5iB,QAAQ,SAAArG,GAEjC,IAAIuqB,EAAgB,KACdC,EAA0BzuB,OAAO+X,OAAOsW,EAAWpqB,IAAQ0gB,MAC3D+J,EAAoBL,EAAWpqB,GAAOuY,OAAO,SAAAC,GAAE,OAAKA,EAAGvC,WAAW4T,GAAiBrR,EAAGvC,WAAWqT,IACnGmB,GAAqBA,EAAkBxrB,SACzCsrB,EAAgBE,EAAkB/J,OAG/B5N,EAAiB9S,KACpB8S,EAAiB9S,GAASwK,EAAK5N,cAAciB,MAAM,IAGrD,IACM6sB,EADclgB,EAAKpO,MAAM+G,gBAAgBnD,GACbJ,SAC9B+qB,EAAmB1B,EAAcjpB,GAAOuY,OAAO,SAAAC,GAAE,OAAKA,EAAG8Q,WAAWA,KAAeO,GAAiBrR,EAAG8Q,UAAUO,KAErH,GAAKc,EAAiB1rB,OAwBpB0rB,EAAiBtkB,QAAQ,SAAAmS,GACvB,OAAQA,EAAGvf,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH6Z,EAAiB9S,GAAS8S,EAAiB9S,GAAOqE,KAAKmU,EAAGiR,YAC5D,MACA,QACE3W,EAAiB9S,GAAS8S,EAAiB9S,GAAO6X,MAAMW,EAAGiR,YACvD3W,EAAiB9S,GAAOwpB,GAAG,KAC7B1W,EAAiB9S,GAASwK,EAAK5N,cAAciB,MAAM,YAnC3D,GAAI+rB,GAAgBA,EAAa5pB,GAAO,CACtC2qB,EAAmBf,EAAa5pB,GAChC,IAAM4qB,EAAiB7uB,OAAOC,OAAO,GAAG2uB,GAAkBjK,MAI1D,GAHuB3Y,WAAW6iB,EAAevtB,SAG9B,GAAKisB,EAAUJ,GAAoBqB,EAAc,CAClE,IAAMd,EAAa3W,EAAiB9S,GAC9B4X,EAAYpN,EAAK5N,cAAc+C,iBAAiB4qB,EAAc3S,UAAU8S,GAC1EG,EAAapB,EAAW9nB,MAAMiW,GAGlCgT,EAAevtB,QAAUwtB,EACzBD,EAAehc,WAAagJ,EAC5B+S,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClBttB,QAAQmN,EAAK5N,cAAciB,MAAM,GACjC+Q,WAAWpE,EAAK5N,cAAciB,MAAM,KAuB1C,IAAMitB,EAAS/uB,OAAOC,OAAO,GAAG2uB,GAAkBjK,MAE9CqK,EAAgBjY,EAAiB9S,GAAO2B,MAAMmpB,EAAOlc,YAEzD,GAAImc,EAAc7X,GAAG,GAAG,CAEtB,IAAI8X,EAAyB,KACvBC,EAAsBzgB,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,EAAM,wBACvF,IAAKwK,EAAKpO,MAAM8uB,YAAcD,EAAoB,CAChD,IAAMhrB,EAAiBsqB,GAAiBA,EAAcU,GAAuBV,EAAcU,GAAuBT,GAA2BA,EAAwBS,GAAuBT,EAAwBS,GAAuB,KACvOhrB,IACF+qB,EAAyBxgB,EAAK5N,cAAc+C,iBAAiBM,EAAe,KACjDiT,GAAG,KAC5B6X,EAAgBA,EAAcppB,MAAMqpB,IAK1CV,EAAetqB,GAAS+qB,EACxBf,EAAoBA,EAAkB3lB,KAAK0mB,GAG7CV,EAAcrqB,GAAS2qB,IAGzB,IAAIQ,EAAa3gB,EAAK5N,cAAc0Y,YAAsB,IAAVgU,GAEhD,GAAkB,OAAdb,GAAsB0C,EAAWC,cAAc3C,GAAW,CAExD0C,EAAWE,QAAQ,IAAI9V,KAAO,SAChC4V,EAAa3gB,EAAK5N,cAAc0Y,YAAY,IAAIC,OAIlD,IAAM+V,EAAgBH,EAAW3V,OAAO,oBAGxCmU,EAAKwB,EAAW3V,OAAO,eAAiB,EAExCwU,EAAoBjiB,WAAWA,WAAWiiB,EAAkBjd,QAAQ,KAEpEkd,EAAuBqB,GAAiBtB,EACxCE,EAAsBoB,GAAiBhB,EAIvCR,EAAkC,OAAlBA,EAAyBE,EAAoB9U,KAAKC,IAAI2U,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoB9U,KAAKG,IAAI0U,EAAcC,GAGtFH,EAAgBP,EAChBM,EAAeS,OAxHRf,EAAUJ,EAAiBI,GAAWa,EAAcb,GAAWntB,KAAKC,MAAM4U,iBAAiBua,EAA3FjC,GAkLT,IAvDMkC,EAAqBzvB,OAAO4H,KAAKsmB,GAAwBtS,IAAI,SAAA8T,GAAI,MAAK,CAC1E1a,EAAE0a,EACF5a,EAAEoZ,EAAuBwB,GACzBC,SAASxB,EAAsBuB,MAG7BE,EAAY,EAChBH,EAAmBnlB,QAAS,SAACulB,EAAKxC,GAChC,IAAMnB,EAAU/S,KAAK2W,MAAMF,EAAUH,EAAmBvsB,OAAO,KAC/DusB,EAAmBpC,GAAOnB,QAAUA,EACpC0D,MAwBIT,EAAa/uB,KAAKC,MAAM8uB,WAAa/uB,KAAKC,MAAM8uB,WAAWvM,cAAgB,MAGjFrV,EAAU0D,KAAK,CACbC,GAAGie,EACH5wB,MAAO,OAAQ6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASmuB,EAAW,QAAQ,QAAQ7d,KAAK,KAAK,IACzG5E,KAAK+iB,IAGHM,EAAkB,EAClB/B,EAAcD,EAAc,IAC9BgC,EAAkB,GAGhB/B,IAAkBD,IACpBA,EAAgB5U,KAAKG,IAAI,EAAE0U,EAAc,IAGtB,EACfgC,GAAahC,EAAcD,GADZ,EAEfkC,EAAc,GACXtf,EAAE,EAAEA,GAHQ,EAGQA,IACrBuf,EAAalkB,WAAWA,WAAW+hB,EAAepd,EAAEqf,GAAYhf,QAAQ,IAC9Eif,EAAYhf,KAAKif,GAGS,GACtBC,EAAYnwB,OAAO+X,OAAO6V,GAAM1qB,OAChCktB,EAAgBjX,KAAKG,IAAI,EAAEH,KAAKkX,KAAKF,EAFf,KAItB3jB,EAAa,CACjB8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAEV8W,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,EACTpX,IAAK2U,EACLzU,IAAK0U,GAEPyC,QAAQ,gBACRC,QAAQ,SAAA9hB,GAAK,OAAIH,EAAK5N,cAAcgJ,YAAY+E,EAAMmhB,IACtDnV,WAAYxa,KAAKC,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR4zB,SAAS,EACTlX,OAAQ,QACRmX,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASZ,EAAc,SAEpCH,cACA1V,UAAU,EACVE,SAAQ,EACRC,SAAUta,KAAKC,MAAMmL,SAAW,KAAO,CACrCzO,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAQ,SAAA3K,GAAC,OAAIL,EAAK5N,cAAckJ,iBAAiB+E,EAAE,KAErDd,SAAQ,EACRkjB,WAAW,IACXpW,YAAY,GACZD,YAAW,EACXK,aAAa,IACbF,aAAY,EACZL,MAAM,YACNI,aAAY,EACZE,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnBmV,kBAAkBpD,EAClBqD,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvC5W,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAS,GACTgQ,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQ,UAAWC,gBAAiB,SAa1CthB,OAAQhQ,KAAKC,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAEpB3F,EADY2F,EAAVC,MACYC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACiyB,GAAD,CACE9F,MAAOA,GAEPrsB,EAAAC,EAAAC,cAACkyB,GAAD,CACEzzB,MAAO0tB,EAAM1tB,MACbgT,MAAO0a,EAAMgG,QACbrjB,MAAK,KAAA5J,OAAOinB,EAAMvf,KAAKwlB,cAGM,kBAAxBjG,EAAMvf,KAAKijB,UAAyB3vB,OAAO4H,KAAKqkB,EAAMvf,KAAKijB,UAAUzsB,QAC1ElD,OAAO4H,KAAKqkB,EAAMvf,KAAKijB,UAAU/T,IAAI,SAAA3X,GACnC,GAAIA,IAAUgoB,EAAMgG,QAClB,OAAO,KAET,IAAM1zB,EAAQkQ,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,EAAM,QAAQ,QAC3E3C,EAAU2qB,EAAMvf,KAAKijB,SAAS1rB,GAChCkuB,EAAmB1jB,EAAK5N,cAAcgJ,YAAYvI,EAAQ,GAC9D,OAAI0K,WAAW1K,IAAU,IAErB1B,EAAAC,EAAAC,cAACkyB,GAAD,CACEzgB,MAAOtN,EACP1F,MAAOA,EACP2f,IAAG,OAAAlZ,OAASf,GACZ2K,MAAK,KAAA5J,OAAOmtB,KAIX,UAQnB/xB,KAAKiM,SAAS,CACZkB,YACAf,mJAKF,OACE5M,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACE2J,KAAM0Q,IACN7N,YAAY,GACRrM,KAAK4K,MAAMwB,WAHjB,CAIEE,KAAMtM,KAAK4K,MAAMuC,UACjB5B,SAAUvL,KAAKC,MAAMsL,SACrBtM,OAAQe,KAAKC,MAAM+L,YACnBF,eAAgB9L,KAAKC,MAAM6L,yBAleL3L,aCSf6xB,8MAdbC,YAAc,SAAA/E,GACZ,IAAIgF,EAAYhF,EACViF,EAAUD,EAAUrH,OAAO,EAAG,GAC9BuH,EAAQF,EAAUrH,OAAOqH,EAAUpvB,OAAS,GAElD,OADAovB,EAAYC,EAAU,MAAQC,2EAI9B,IAAMF,EAAYlyB,KAAKiyB,YAAYjyB,KAAKC,MAAMitB,MAE9C,OAAO1tB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMiP,QAAS,UAAc9O,KAAKC,OAAQiyB,UAX7BG,IAAMlyB,WC+PfmyB,8MAzPb1nB,MAAQ,KAGRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,2JAK9CD,KAAKoJ,YACLpJ,KAAKiS,iMAGkB9G,EAAWqC,2EAClCxN,KAAKoJ,YAECmpB,EAAcpnB,EAAU+hB,OAASltB,KAAKC,MAAMitB,KAC5CnR,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,SACnC2J,EAAUiH,UAAUrF,OAAS/M,KAAKC,MAAMmS,UAAUrF,MACnDwlB,GAAexW,IACjC/b,KAAKiS,sQAKDG,EAAYpS,KAAKC,MAAMmS,WACzBpS,KAAKC,MAAMitB,OAAQltB,KAAKC,MAAMuB,8BACxB4Q,EAAUrF,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,sPAST,IAAIuE,EAAO,KACPnT,EAAQ,KACRqK,EAAS,KACTgqB,EAAUr5B,EAAMR,OAAOkE,aAAaa,SAASL,QAC3C+U,EAAYpS,KAAKC,MAAMmS,UACvBqgB,EAAczyB,KAAKC,MAAMwyB,YAEzBpgB,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACNsf,MAAM,CACJiV,SAAS,OACTxJ,SAAU,SACVyJ,aAAc,YAEhB7oB,UAAU,CACRG,eAAe,eAWnB,OANImI,EAAUnS,OAASL,OAAO4H,KAAK4K,EAAUnS,OAAO6C,QAClDlD,OAAO4H,KAAK4K,EAAUnS,OAAOiK,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAUnS,MAAMkK,KAI5BiI,EAAUrF,MAChB,IAAK,OAKH,OAJI0lB,EAAY31B,SACdqB,EAAQhF,EAAMR,OAAOkE,aAAaC,OAAO21B,EAAY31B,OAAO4T,eAAiBvX,EAAMR,OAAOkE,aAAaC,OAAO21B,EAAY31B,OAAO4T,eAAiBvS,EAClJq0B,EAAUr5B,EAAMR,OAAOkE,aAAaa,SAAS+0B,EAAY31B,OAAO4T,eAAiBvX,EAAMR,OAAOkE,aAAaa,SAAS+0B,EAAY31B,OAAO4T,eAAiB8hB,GAElJC,EAAY31B,OAAO4T,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHY,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGX9I,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEsK,EAAG,MACH7K,aAAc,OACV+S,EAHN,CAIEtI,WAAY,SACZ3L,gBAAiBo0B,EACjBvoB,eAAgB,WAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAMuE,EACNnT,MAAOA,EACPy0B,MAAO,SACPnmB,KAAMzM,KAAKC,MAAMmL,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCqnB,EAAYvF,OACd1kB,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,OAAQ,SACRC,IAAK,+BACLqlB,KAAI,2BAAAxgB,OAA6B6tB,EAAYvF,OAE7C1tB,EAAAC,EAAAC,cAACmzB,GAADjzB,OAAAC,OAAA,CACEb,SAAU,EACVb,MAAO,SACHkU,EAHN,CAIE6a,KAAMuF,EAAYvF,UAK5B,MACA,IAAK,SACH,IAAIpwB,EAAS21B,EAAY31B,OACzB,OAAQ21B,EAAY31B,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKb0L,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAavV,EAAO0lB,eAElC,MACA,IAAK,OACH,IAAM2M,EAAgBsD,EAAYzD,WAAW3V,OAAO,gBACpD7Q,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAa8c,GAE3B,MACA,IAAK,aAEH,OADAhxB,EAAQhF,EAAMR,OAAOkE,aAAac,OAAO80B,EAAY90B,OAAO+S,eACpD+hB,EAAY90B,QAClB,IAAK,YACH2T,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKX9I,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEsK,EAAG,CAAC,EAAE,OACN7K,aAAc,OACV+S,EAHN,CAIEtI,WAAY,SACZ7P,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChBgL,eAAgB,SAChB2d,OAAS5nB,KAAKC,MAAMmL,SAAX,aAAAxG,OAAmCzG,GAAnC,aAAAyG,OAA0DzG,KAEnEqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAMuE,EACNnT,MAAOA,EACPy0B,MAAO,SACPnmB,KAAOzM,KAAKC,MAAMmL,SAAW,MAAQ,WAI7C,MACA,IAAK,SACH5C,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAaogB,EAAY90B,QAEvC,MACA,IAAK,SACH6K,EACEhJ,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B9I,OAAQkpB,EAAYK,UAErD,MACA,IAAK,YACHtqB,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAO8R,IAAG,iBAAA/M,OAAmB6tB,EAAYM,YAAYvQ,cAA3C,SAAoEnQ,IAElF,MACA,IAAK,YACH7J,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAaogB,EAAYM,aAMzC,OAAOvqB,SAvPoBrI,mCC6QhB6yB,8MA3QbpoB,MAAQ,CACN8nB,SAAS,GACTxzB,SAAS,IACT+zB,UAAU,IACVC,UAAS,EACTC,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,SAIZC,UAAY,SAAClX,EAAO5N,GAClBnO,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B2lB,cAAcvzB,OAAA0L,EAAA,EAAA1L,CAAA,GACT4N,EAAU2lB,cADFvzB,OAAAic,EAAA,EAAAjc,CAAA,GAEVwc,EAAQ5N,UAKf+kB,aAAe,WAAiB,IAAhBC,IAAgBhxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GACS,oBAA5BnC,EAAKJ,MAAMszB,cACpBlzB,EAAKJ,MAAMszB,aAAalzB,EAAKuK,MAAMuoB,eAEjCK,GACFnzB,EAAKozB,kBAITC,YAAc,SAACtX,GACb/b,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B2lB,cAAcvzB,OAAA0L,EAAA,EAAA1L,CAAA,GACT4N,EAAU2lB,cADFvzB,OAAAic,EAAA,EAAAjc,CAAA,GAEVwc,EAAQ,SAEV,WACD/b,EAAKkzB,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBhxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAC9BnC,EAAK4L,SAAS,CACZknB,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,OAEV,WACuC,oBAA5BhzB,EAAKJ,MAAM0zB,cACpBtzB,EAAKJ,MAAM0zB,eAETH,GACFnzB,EAAKozB,oBAKXA,aAAe,WACbpzB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B0lB,UAAW1lB,EAAU0lB,qFAIhB,IAAA7pB,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJzB,IAAK,EACL/V,MAAO,EACPsX,OAAQ,EACRxH,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChBsH,SAAU,CAAC,WAAW,aAEtB/R,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHxnB,MAAM,CAAC,EAAG8F,KAAK4K,MAAMsoB,SAAWlzB,KAAK4K,MAAM8nB,SAAW1yB,KAAK4K,MAAM1L,UACjEue,MAAM,CACJmW,WAAW,2BAGf7Y,eAAiB/a,KAAK4K,MAAMsoB,SAC5BtU,YAAe5e,KAAK4K,MAAMsoB,SAA+B,KAApBlzB,KAAKyzB,cAE1Cj0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLoD,OAAO,WAET9W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0U,QAAU3e,KAAK4K,MAAMsoB,SAAWlzB,KAAKyzB,aAAe,MAEpDj0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,aAHT,WAOAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,YACPsO,KAAOzM,KAAKC,MAAMmL,SAAW,QAAU,QACvC2B,KAAO/M,KAAK4K,MAAMsoB,SAAW,QAAU,UAG3C1zB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfyT,MAAO,CACLyL,SAAS,SACT0K,WAAW,8BACXX,UAAUjzB,KAAK4K,MAAMsoB,SAAWlzB,KAAK4K,MAAMqoB,UAAY,IAGzDzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkC,GAAI,EACJznB,MAAO,EACP8P,cAAe,MACf6pB,UAAS,aAAAjvB,OAAezL,EAAMR,OAAO4D,UAGnCqD,OAAO4H,KAAKxH,KAAKC,MAAM6zB,SAAStY,IAAI,SAACuY,GACnC,IAAMC,EAAe3qB,EAAKpJ,MAAM6zB,QAAQC,GACxC,OACEv0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACf8T,IAAG,UAAAlZ,OAAYmvB,GACftW,MAAO,CACL6J,UAAU,IACVzE,KAAK,YAGPrjB,EAAAC,EAAAC,cAACiqB,GAAD,CACED,GAAI,EACJ1a,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YAEN41B,EAAevR,eAGhB5iB,OAAO4H,KAAKwsB,GAAcxY,IAAI,SAACyY,GAC7B,IAAMC,EAAcF,EAAaC,GAC3BE,EAAY9qB,EAAKuB,MAAMuoB,cAAcY,KAAkBE,EAC7D,OACEz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJ/mB,SAAU,CAAC,EAAE,GACbmS,MAAO+iB,EACPE,QAASD,EACT5U,UAAWC,KAAOvoB,SAClB6mB,IAAG,UAAAlZ,OAAYmvB,EAAZ,KAAAnvB,OAA8BqvB,GACjClS,SAAW,SAAA3T,GAAC,OAAI/E,EAAKiqB,UAAUS,EAAeE,YAUhEz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACErlB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbinB,UAAW,YACXtH,QAAS3e,KAAKuzB,cAJhB,iBAQA/zB,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE3nB,GAAI,EACJsC,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbinB,UAAW,YACXtH,QAAS3e,KAAK2zB,cALhB,aAaH3zB,KAAK4K,MAAMsoB,UAAYlzB,KAAKC,MAAMkzB,eAAiBvzB,OAAO+X,OAAO3X,KAAKC,MAAMkzB,eAAe/W,OAAQ,SAAA1N,GAAC,OAAW,OAANA,IAAc5L,OAAO,GAC7HtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BrK,OAAO4H,KAAKxH,KAAKC,MAAMkzB,eAAe3X,IAAI,SAAC8Y,GACzC,IAAML,EAAc5qB,EAAKpJ,MAAMkzB,cAAcmB,GAC7C,GAAoB,OAAhBL,EAAqB,CACvB,IAAMC,EAAc7qB,EAAKpJ,MAAM6zB,QAAQQ,GAAYL,GACnD,OACEz0B,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHhQ,GAAG,CAAC,EAAE,GACNgR,GAAG,CAAC,EAAE,GACNxoB,MAAM,CAAC,EAAEmP,EAAKuB,MAAM1L,WAEtB6b,eAAe,EACf+C,IAAG,UAAAlZ,OAAY0vB,IAEf90B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLoD,OAAO,WAET9W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0U,QAAS,SAAAvQ,GAAC,OAAI/E,EAAKqqB,YAAYY,KAE/B90B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,WACPsf,MAAO,CACLyO,cAAc,eAGfgI,GAEH10B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,QACN5O,MAAO,WACPsO,KAAOpD,EAAKpJ,MAAMmL,SAAW,QAAU,YAMjD,OAAO,OAGX5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPzgB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,GACb7Q,MAAO,YACPqpB,WAAY,YACZ/V,UAAW,CAAC,SAAS,QACrBkN,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKsqB,cAAa,KAPnC,8BA3PuBxzB,aC4XtBo0B,8MAvXb3pB,MAAQ,CACN4pB,KAAK,EACLC,QAAQ,GACRC,WAAW,EACX5N,SAAQ,EACR6N,SAAS,KACTC,WAAW,KACXzB,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,MAEVS,QAAQ,CACNT,QAAQ,CACN52B,QAAQ,UACRD,OAAO,SACPO,KAAK,OACLK,QAAQ,UACRV,QAAQ,UACRM,KAAK,UACLE,QAAQ,WACRK,SAAS,WACTJ,QAAQ,UACRG,SAAS,WACTu3B,WAAW,aACXC,YAAY,eAEdn3B,OAAO,CACLC,UAAU,YACVC,QAAQ,UACRC,OAAO,UAETs1B,OAAO,IAET2B,YAAY,KACZC,aAAa,KACbC,gBAAgB,QAIlBx0B,cAAgB,OAmChB8yB,aAAe,SAAAJ,GACb9yB,EAAK4L,SAAS,CACZknB,iBACA,WACA9yB,EAAK60B,kBAITvB,aAAe,WACbtzB,EAAK4L,SAAS,CACZknB,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,OAEV,WACAhzB,EAAK60B,kBAiGTA,WAAa,WAAe,IAAdV,EAAchyB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAEjBgyB,EAAOA,GAAcn0B,EAAKuK,MAAM4pB,KAEhC,IAAMW,EAAmBv1B,OAAO4H,KAAKnH,EAAKuK,MAAMkpB,QAAQT,SAAS7X,IAAK,SAAA1e,GAAM,OAAKA,EAAO4T,gBAGlF0kB,EAAax1B,OAAO+X,OAAOtX,EAAKuK,MAAM6pB,SACvBrY,OAAO,SAAAC,GAAE,QAAOzQ,WAAWyQ,EAAG7N,SAC9B4N,OAAO,SAAAC,GAAE,OAC6B,OAApChc,EAAKuK,MAAMuoB,cAAcx1B,QAAmB0e,EAAG1e,OAAO+S,gBAAkBrQ,EAAKuK,MAAMuoB,cAAcx1B,OAAO+S,iBACpE,OAApCrQ,EAAKuK,MAAMuoB,cAAcC,QAAmB/W,EAAGxY,MAAM6M,gBAAkBrQ,EAAKuK,MAAMuoB,cAAcC,OAAO1iB,gBACtGykB,EAAiBE,SAAShZ,EAAGvf,OAAO4T,iBAAwD,OAArCrQ,EAAKuK,MAAMuoB,cAAcE,SAAqBhX,EAAGvf,OAAO4T,gBAAkBrQ,EAAKuK,MAAMuoB,cAAcE,QAAQ3iB,iBAErK4kB,KAAK,SAAC71B,EAAE81B,GAAH,OAAU91B,EAAE0tB,UAAYoI,EAAEpI,WAAc,EAAI,IAGhEwH,EAAWS,EAAWtyB,OACtB8xB,EAAa7b,KAAKkX,KAAK0E,EAASt0B,EAAKuK,MAAM8pB,YAE3CM,EAAe,GAIrBI,EAAWlrB,QAAQ,SAACmS,EAAI9L,GACtB,IAAM9C,EAAgB4O,EAAGxY,MACnBrD,EAAcH,EAAKJ,MAAM+G,gBAAgByG,GACzChK,EAAWsV,KAAKC,IAAIxY,EAAYiD,SAAS,GAEzC6rB,EAAO,IAAIlW,KAAkB,IAAbiD,EAAG8Q,WACnBrwB,EAASuf,EAAGvf,OAASuf,EAAGvf,OAASuD,EAAKI,cAAc+0B,YAAYnZ,EAAG7b,GAEnEi1B,EAAc7pB,WAAWyQ,EAAG+Q,aAE5B0F,EAAS2C,EAAep1B,EAAKJ,MAAMmL,SAAWqqB,EAAY7kB,QAAQ,GAAK6kB,EAAY7kB,QAAQnN,GAAa,IACxGurB,EAAa3uB,EAAKI,cAAc0Y,YAAYmW,GAGlDjT,EAAG1e,OAAS0e,EAAG1e,OAAS0e,EAAG1e,OAAS,YACpC0e,EAAGvf,OAASA,EACZuf,EAAG2S,WAAaA,EAChB3S,EAAGyW,OAASA,EAERviB,IAAKikB,EAAK,GAAGn0B,EAAKuK,MAAM8pB,YAAenkB,GAAIikB,EAAK,GAAGn0B,EAAKuK,MAAM8pB,WAAYr0B,EAAKuK,MAAM8pB,YACvFM,EAAankB,KAAKwL,KAQtBhc,EAAK4L,SAAS,CACZ6a,SAHc,EAId6N,WACAC,aACAI,6FAzMEh1B,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAIvCmO,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKG,IAAI,EAAElZ,KAAK4K,MAAM4pB,KAAK,GACxCx0B,KAAKiM,SAAS,CACZuoB,0CAIKpmB,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKC,IAAIhZ,KAAK4K,MAAMgqB,WAAW50B,KAAK4K,MAAM4pB,KAAK,GAAGx0B,KAAKk1B,WAAWV,GAC/Ex0B,KAAKiM,SAAS,CACZuoB,6JAKFx0B,KAAKoJ,YACLpJ,KAAK21B,+LAuBkBxqB,EAAWqC,mFAClCxN,KAAKoJ,YACC+S,EAAsBgE,KAAKC,UAAUjV,EAAUtO,gBAAkBsjB,KAAKC,UAAUpgB,KAAKC,MAAMpD,gBAC5EsjB,KAAKC,UAAUjV,EAAU0e,iBAAmB1J,KAAKC,UAAUpgB,KAAKC,MAAM4pB,kBAEvE1N,yBAClBnc,KAAKiM,SAAS,CACZuoB,KAAK,EACLC,QAAQ,IACR,WACAprB,EAAKssB,+BAEA,UAEWnoB,EAAUgnB,OAASx0B,KAAK4K,MAAM4pB,MAEhDx0B,KAAKk1B,0LAIKU,8IAAqB,SAC5B51B,KAAKC,MAAMuB,kDACP,iBAGTo0B,EAAQA,GAAgB,EAExB51B,KAAKiM,SAAS,CACZ6a,SAAQ,IAGJ+O,EAAmB71B,KAAKS,cAAcG,gBAAgB,CAAC,UAAU,qBAGnE6zB,iBAAcz0B,KAAK4K,MAAM6pB,SACzBQ,EAAkBlc,KAAKG,IAAI2c,EAAiB71B,KAAK4K,MAAMqqB,kBAEvDpL,EAAgB7pB,KAAKC,MAAM4pB,gBACRA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKxH,KAAKC,MAAM+G,kBAGnCosB,iBAAapzB,KAAK4K,MAAMkpB,QAAQV,QAEtCvJ,EAAc3f,QAAQ,SAACrG,GACrBuvB,EAAOvvB,GAASA,IAGdwvB,iBAAcrzB,KAAK4K,MAAMkpB,QAAQT,UAE/ByC,EAAsD,qBAA9B91B,KAAKC,MAAM61B,eAAiC91B,KAAKC,MAAM61B,eAAiB,IAEnFhzB,SACjBuwB,EAAU,GACVyC,EAAe5rB,QAAS,SAAApN,GACtBu2B,EAAQv2B,EAAO4T,eAAiB5T,eAITkD,KAAKS,cAAcmsB,gBAAgB5sB,KAAKC,MAAMuB,QAAQyzB,EAAgB,SAASpL,kBAApGgD,WAGcA,EAAa/pB,QAC/B+pB,EAAa3iB,QAAQ,SAACmS,GAChBA,EAAG0Z,QACLtB,EAAQpY,EAAG0Z,SAAW1Z,EAEtBoY,EAAO,IAAA7vB,OAAKyX,EAAG8Q,YAAe9Q,KAK9BsS,EAAS/uB,OAAO+X,OAAO8c,GAASlQ,QAGxBoK,EAAOqH,eAAiBh2B,KAAK4K,MAAMqqB,iBAAmBtG,EAAOqH,YAAYh2B,KAAK4K,MAAMqqB,mBAChGA,EAAkB9oB,SAASwiB,EAAOqH,aAAa,qBAG1Ch2B,KAAKiM,SAAU,SAAAuB,GAAS,MAAK,CAClCinB,UACA3N,SAAQ,EACRmO,kBACAnB,QAAQl0B,OAAA0L,EAAA,EAAA1L,CAAA,GACH4N,EAAUsmB,QADR,CAELV,SACAC,cAEA,WACFhlB,EAAK6mB,qJAgEA,IAAArP,EAAA7lB,KAEDi2B,EAAmBr2B,OAAO+X,OAAO3X,KAAK4K,MAAMuoB,eAAe/W,OAAQ,SAAA1N,GAAC,OAAW,OAANA,IAAc5L,OAAO,EAG9FkyB,EAAeh1B,KAAK4K,MAAMoqB,aAAep1B,OAAO+X,OAAO3X,KAAK4K,MAAMoqB,cAAgB,KAExF,OACEx1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAU9P,MAAO,EAAGg8B,EAAG,UAExCl2B,KAAK4K,MAAMkc,QACTtnB,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,MACdwC,UAAUxM,KAAKC,MAAMhB,QAEvBwL,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,4BAGR2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPqX,SAAU,WACVvH,cAAe,SACf8G,GAAI,8BACJqlB,GAAI,CAAC,EAAGF,EAAmB,QAAU,IAErCz2B,EAAAC,EAAAC,cAAC02B,GAADx2B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6zB,QAAS9zB,KAAK4K,MAAMkpB,QACpBX,cAAenzB,KAAK4K,MAAMuoB,cAC1BQ,aAAc3zB,KAAK2zB,aAAa1oB,KAAKjL,MACrCuzB,aAAcvzB,KAAKuzB,aAAatoB,KAAKjL,SAGrCg1B,GAAgBA,EAAalyB,OAC3BtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACoqB,GAAD,CACEpB,KAAM1oB,KAAKC,MAAMyoB,KACjBtd,SAAUpL,KAAKC,MAAMmL,WAEvB5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmR,GAAI,oBACJ9G,cAAe,UAGbgrB,EAAaxZ,IAAK,SAACa,EAAG4Q,GACpB,IAAMoJ,EAASha,EAAG6Q,KACZoJ,EAAYja,EAAG0Z,QAKrB,OACEv2B,EAAAC,EAAAC,cAACqqB,GAADnqB,OAAAC,OAAA,GACMgmB,EAAK5lB,MADX,CAEEwoB,SAAU,CACR1N,eAAc,GAEhBmS,KAAMmJ,EACN5D,YAAapW,EACbyB,IAAG,MAAAlZ,OAAQqoB,GACXrO,YAbgB,SAACxQ,GACnB,OAAQioB,EAASvrB,OAAOyrB,KAAP,2BAAA3xB,OAAuCyxB,IAAY,MAalE5d,MAAK,UAAA7T,OAAY0xB,GACjB9N,OAAM,WAAA5jB,OAAa0xB,GACnB/N,eAAgB+J,SAM1B9yB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR8K,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6G,GAAI,gCAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,GACRljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,EAAG/D,QAAU,SAAAvQ,GAAC,OAAIyX,EAAK2Q,SAASpoB,KACxC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,oBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAK,EAAI,UAAY,aAG5Ch1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgf,QAAU,SAAAvQ,GAAC,OAAIyX,EAAK4Q,SAASroB,KACjC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,qBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAKx0B,KAAK4K,MAAMgqB,WAAa,UAAY,cAIlEp1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YAHT,QAKQ6B,KAAK4K,MAAM4pB,KALnB,OAK6Bx0B,KAAK4K,MAAMgqB,eAM9Cp1B,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,SAAUxC,WAAY,YAAaD,WAAY,EAAGhQ,SAAU,CAAC,GAAIb,MAAO,aAA/F,sCA5WagC,aC+ZhBw2B,8MAjab/rB,MAAQ,CACNgsB,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACPj9B,MAAM,EAAE,GAEVk9B,WAAW,CACTD,KAAK,EAAE,EACPj9B,MAAM,EAAE,GAEVm9B,WAAW,CACTF,KAAK,IACLj9B,MAAM,EAAE,EACRo9B,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACLj9B,MAAM,KAERs9B,WAAW,CACTL,KAAK,EAAE,GACPj9B,MAAM,EAAE,IAEVu9B,KAAO,CACLN,KAAK,EACLj9B,MAAM,EAAE,GACRo9B,WAAW,OAGfI,GAAG,CACDD,KAAO,CACLN,KAAK,EACLj9B,MAAM,EAAE,GAEVy9B,UAAU,CACRR,KAAK,EACLj9B,MAAM,EAAE,GAEV09B,UAAU,CACRT,KAAK,EACLj9B,MAAM,GACNo9B,WAAW,WAOnB72B,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,YACLpJ,KAAK63B,oMAGkB1sB,EAAUqC,mEACjCxN,KAAKoJ,gKAGgBytB,GACrB72B,KAAKiM,SAAS,CACZ4qB,yMAKED,EAAiB,GACjBC,EAAsB,EAEpB1kB,EAAyC,SAAhCnS,KAAKC,MAAMoH,0BACArH,KAAKS,cAAcq3B,cAAc93B,KAAKC,MAAM4pB,cAAc7pB,KAAKC,MAAMuB,uBAAzFu2B,SAEAC,EAAqB,CACzBphB,SAAS5W,KAAKS,cAAciB,MAAM,GAClCgV,WAAW1W,KAAKS,cAAciB,MAAM,GACpCu2B,aAAaj4B,KAAKS,cAAciB,MAAM,aAGlC1B,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKuwB,GAA5C,eAAAzN,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyD,SAAA0B,EAAOmB,GAAP,IAAArD,EAAAuB,EAAA4Q,EAAA+D,EAAAwhB,EAAAC,EAAA5gB,EAAAX,EAAAqhB,EAAAhkB,EAAAmkB,EAAAC,EAAAC,EAAAC,EAAA,OAAAx3B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACvDd,EAAc6I,EAAKpJ,MAAM+G,gBAAgBnD,GADchB,EAAAvB,KAAA,EAGPwD,QAAQC,IAAI,CAChEsE,EAAK5I,cAAc6E,oBAAoByyB,EAAYl0B,GAAOA,EAAMrD,EAAY2R,GAC5E9I,EAAK5I,cAAc+3B,eAAe,CAAC30B,GAAOwF,EAAKpJ,MAAMuB,SACrD6H,EAAK5I,cAAc8pB,kBAAkB/pB,KANsB,cAAAuB,EAAAc,EAAApB,KAAAkR,EAAA/S,OAAAsF,EAAA,EAAAtF,CAAAmC,EAAA,GAGtD2U,EAHsD/D,EAAA,GAG3CulB,EAH2CvlB,EAAA,GAG/BwlB,EAH+BxlB,EAAA,GASvD4E,EAAe4gB,EAAe1yB,IAAIyyB,EAAYr0B,IAAQ6X,MAAM,GAC5D9E,EAAWF,EAAWlR,MAAM+R,GAE9B0gB,EAAe,EACfhkB,EAAW,EAb8CpR,EAAAvB,KAAA,GAcrC+H,EAAK5I,cAAcg4B,aAAaj4B,GAdK,SAcvD43B,EAduDv1B,EAAApB,OAevB,OAArB22B,EAAUM,SACzBzkB,EAAWmkB,EAAUO,OACrBV,EAAevhB,EAAWlR,MAAMyO,EAASxO,IAAI,OAGzC4yB,EAAmBtf,KAAK2W,MAAM9Y,EAASnR,IAAIwyB,GAAczyB,MAAM,MAE/D8yB,EAAgB14B,OAAO4H,KAAK6B,EAAKuB,MAAMosB,iBAAiB5a,OAAO,SAAA+a,GAAI,OAAIA,EAAKkB,IAC5EE,EAAkBpsB,SAASmsB,EAAc/T,OAC/CsS,EAAsB9d,KAAKG,IAAI2d,EAAoB0B,GAI9ClvB,EAAK5I,cAAciB,MAAMgV,GAAY/U,SAAY0H,EAAK5I,cAAciB,MAAMy2B,GAAgBx2B,SAAY0H,EAAK5I,cAAciB,MAAMkV,GAAUjV,SAAY0H,EAAK5I,cAAciB,MAAMu2B,GAAct2B,UAC/Li1B,EAAe/yB,GAAS,CACtB+S,WACAF,aACAuhB,eACAE,kBAOFH,EAAmBphB,SAAWohB,EAAmBphB,SAAS1O,KAAK0O,GAC/DohB,EAAmBthB,WAAashB,EAAmBthB,WAAWxO,KAAKwO,GACnEshB,EAAmBC,aAAeD,EAAmBC,aAAa/vB,KAAK+vB,IA1CZ,yBAAAp1B,EAAAhB,SAAAa,EAAA1C,SAAzD,gBAAA2F,GAAA,OAAA2kB,EAAA/nB,MAAAvC,KAAAwC,YAAA,WA8CAo2B,EAAwB,GAC9Bh5B,OAAO4H,KAAKuwB,GAAa7tB,QAAS,SAAArG,GAC5B+yB,EAAe/yB,KACjB+0B,EAAsB/0B,GAAS+yB,EAAe/yB,MAIlD+yB,EAAiBgC,EAGbh5B,OAAO4H,KAAKovB,GAAgB9zB,OAAO,IACrC8zB,EAAc,IAAUoB,GAGtBjB,EAA+B,KAC7BD,EAAyBl3B,OAAO4H,KAAKxH,KAAK4K,MAAMosB,iBAAiBxb,IAAK,SAAAiL,GAC1E,IAAMoS,EAAiBj5B,OAAO+X,OAAOtO,EAAKuB,MAAMosB,gBAAgBvQ,IAAOlC,MACjEpT,EAAQ0nB,EAAevB,WAAauB,EAAevB,WAAa13B,OAAO4H,KAAK6B,EAAKuB,MAAMosB,gBAAgBvQ,IAAOlC,MAC9G/V,EAAQrC,SAASsa,GACjBqS,EAAS,CAAEtqB,QAAO2C,SAKxB,OAHI3C,IAAUqoB,IACZE,EAA+B+B,GAE1BA,IAKT94B,KAAKiM,SAAS,CACZ2qB,iBACAC,sBACAC,yBACAC,qKAIK,IAAA1oB,EAAArO,KAEP,IAAKA,KAAK4K,MAAMgsB,eACd,OACEp3B,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,MACdwC,UAAUxM,KAAKC,MAAMhB,QAEvBwL,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,2BAKZ,IAAMm+B,EAAkBh3B,KAAK4K,MAAMosB,gBAAgBh3B,KAAK4K,MAAMisB,qBAAuB72B,KAAK4K,MAAMosB,gBAAgBh3B,KAAK4K,MAAMisB,qBAAuB72B,KAAK4K,MAAMosB,gBAAgB,GAE7K,OACEx3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,EACJlG,GAAI,EACJ7rB,MAAO,EACPwnB,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACP5D,UAAW,EACXze,aAAc,GAEdE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,EACJF,OAAQ,KACRvH,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6R,OAAQ,KACRtX,MAAO,CAAC,EAAE,IACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACojB,GAAD,CACElC,WAAY,CACVzW,EAAE,EACFuX,GAAG,GAEL3U,KAAM,kBACNsT,QAASrgB,KAAK4K,MAAMksB,uBACpB/U,SAAW,SAAArT,GAAC,OAAIL,EAAK0qB,uBAAuBrqB,IAC5C6R,aAAcvgB,KAAK4K,MAAMmsB,iCAK7Bn3B,OAAO4H,KAAKxH,KAAK4K,MAAMgsB,gBAAgBpb,IAAI,SAAC3X,EAAMm1B,GAChD,IAAMC,EAAgB5qB,EAAKzD,MAAMgsB,eAAe/yB,GAC1Cq1B,EAAqB7qB,EAAK5N,cAAciB,MAAM9B,OAAO+X,OAAOqf,GAAiBzS,MAAM4S,MACnFgC,EAAgBF,EAAchB,aAAazyB,MAAM0zB,GACjDE,EAAargB,KAAKC,IAAI,EAAEpN,WAAWqtB,EAAcriB,SAASnR,IAAI0zB,KAC9DE,EAAgBhrB,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,EAAM,QAAQ,QAAQqN,KAAK,KAEtG,OACE1R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmR,GAAE,SAAAlM,OAAWf,GACbmG,cAAe,MACf8T,IAAG,SAAAlZ,OAAWf,GACdgwB,UAAsB,QAAVhwB,EAAA,aAAAe,OAA+BzL,EAAMR,OAAO4D,SAAY,MAEpEiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACVqX,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACRsS,SAAU,WACVxH,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,MAGfsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,IACb+E,OAAQ,OACR+K,cAAe,OAGbpK,OAAO4H,KAAKwvB,GAAiBxb,IAAI,SAACrK,EAAMmoB,GACtC,IAAMT,EAAiB7B,EAAgB7lB,GACjCooB,EAAyBN,EAAchB,aAAazyB,MAAM6I,EAAK5N,cAAciB,MAAMm3B,EAAe1B,OACpGqC,EAAkCnrB,EAAK5N,cAAcgJ,YAAY8vB,EAAuBlrB,EAAKpO,MAAMmL,SAAW,EAAImuB,EAAuBlM,GAAG,GAAK,EAAI,GAKzJ,OAJ4Bhf,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,EAAM,0BAErF21B,EAAkC,KAAKA,GAGvCh6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,EACJhiB,eAAgB,WAChB/P,MAAO2+B,EAAe3+B,MACtBi8B,GAAe,QAAVtyB,EAAkB,EAAI,KAC3Bia,IAAG,kBAAAlZ,OAAoBf,EAApB,KAAAe,OAA6B00B,GAChCG,YAAW,aAAA70B,OAAezL,EAAMR,OAAO4D,UAEvCiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,CAAC,EAAE,GACfhQ,SAAU,CAAC,EAAE,SACbye,MAAO,CACLic,UAAU,aAEZv7B,MAAO86B,EAAcriB,SAAS+iB,IAAIJ,GAA0B,YAAc,UAEzEC,QAQfh6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPsX,OAAQ,EACRzH,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBksB,GAAe,QAAVtyB,EAAkB,QAAU,QACjC6lB,GAAKsP,EAAWp5B,OAAO4H,KAAK6G,EAAKzD,MAAMgsB,gBAAgB9zB,OAAO,EAAI,MAAQ,GAE1EtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,IACb+P,eAAgB,CAAC,aAAa,aAE9BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,CAAC,EAAE,GACPjtB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAEdnL,IAGLrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,IACb8P,cAAe,MACf/K,OAAQ,CAAC,OAAO,QAChB8K,WAAY,cAEZvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR/E,MAAOk/B,EACPh7B,gBAAiB,WAEjBoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR/E,MAAO,OACPoF,aAAc,CAAC,gBAAgB,iBAC/Bme,MAAO,CAAC6B,WAAU,+BAAA1a,OAAgCy0B,EAAhC,iBAAAz0B,OAA6Dy0B,EAA7D,oBAAAz0B,OAA6Fy0B,EAA7F,iBAGtB75B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACP1/B,MAAO,OACP+E,OAAQ,OACR8K,WAAY,SACZE,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAG,iBAAA/M,OAAmBf,EAAnB,QAAgC5E,OAAQ,CAAC,QAAQ,gBAMhEoP,EAAKpO,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,IAAM6P,WAAY,aAAcE,eAAgB,gBAOzEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACVqX,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,IAAK,MACnBsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,IACb8P,cAAe,OAGbpK,OAAO4H,KAAKwvB,GAAiBxb,IAAI,SAACqe,EAAgBP,GAChD,IAAMT,EAAiB7B,EAAgB6C,GACvC,OACEr6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,EACJlK,GAAI,CAAC,EAAE,GACPhiB,eAAgB,WAChB/P,MAAO2+B,EAAe3+B,MACtB4jB,IAAG,kBAAAlZ,OAAoB00B,GACvBG,YAAW,aAAA70B,OAAezL,EAAMR,OAAO4D,UAEvCiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,UAEN07B,UAUd75B,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,IAAM6P,WAAY,aAAcE,eAAgB,UAC3DzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,EAAGhQ,SAAU,cAzZdmB,aC+uClB25B,8MApuCblvB,MAAQ,CACNmvB,gBAAgB,GAChBC,iBAAiB,GACjBC,gBAAgB,KAChBC,gBAAgB,KAChBC,iBAAgB,EAChBC,mBAAmB,KACnBC,yBAAyB,KACzBC,8BAA8B,UAIhC75B,cAAgB,OAChBoK,oBAAqB,6EAGf7K,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,2DAILpJ,KAAK6K,oBAAqB,sKAIpB7K,KAAKoqB,qMAGYjf,EAAWqC,mEAClCxN,KAAKoJ,8LAGYiC,wFAASpJ,iCAAS,KAC9BjC,KAAK6K,4DACD7K,KAAKiM,SAASZ,EAASpJ,oCAEzB,kKAGwBq4B,GAC/Bt6B,KAAK0N,aAAa,CAChB4sB,iOAMEt6B,KAAKC,MAAMuB,gCAEP6J,EAAW,YAGOrL,KAAKS,cAAc85B,oBAAoBv6B,KAAKC,MAAM+G,gBAAgBhH,KAAKC,MAAMuB,qBAA/F6oB,kCAGE4P,EAAkBr6B,OAAO4H,KAAK6iB,EAAUyC,eAAe1Q,OAAO,SAAAvY,GAAK,OAAMwF,EAAK5I,cAAciB,MAAM2oB,EAAUyC,cAAcjpB,GAAO8S,kBAAkBI,GAAG,KAE5J1L,EAAS4uB,gBAAkBA,EAErB9nB,EAAyC,SAAhCnS,KAAKC,MAAMoH,iBAEtBmzB,EAASx6B,KAAKS,cAAciB,MAAM,GAClC+4B,EAAWz6B,KAAKS,cAAciB,MAAM,GACpCg5B,EAAgB16B,KAAKS,cAAciB,MAAM,GACzCi5B,EAAkB36B,KAAKS,cAAciB,MAAM,aAEzC1B,KAAKS,cAAc8G,aAAa0yB,EAAhC,eAAA3P,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgD,SAAAkC,EAAOW,GAAP,IAAArD,EAAAuB,EAAA4Q,EAAAylB,EAAAtkB,EAAA4C,EAAAuiB,EAAA2B,EAAA3mB,EAAA4mB,EAAA,OAAA95B,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAC9Cd,EAAc6I,EAAKpJ,MAAM+G,gBAAgBnD,GADKV,EAAA7B,KAAA,EAQ1CwD,QAAQC,IAAI,CACpBsE,EAAK5I,cAAcg4B,aAAaj4B,GAChC6I,EAAK5I,cAAcwW,cAAczW,EAAY2R,GAC7C9I,EAAK5I,cAAcq3B,cAAc,CAACj0B,GAAOwF,EAAKpJ,MAAMuB,SACpD6H,EAAK5I,cAAcyV,eAAe,WAAWrS,EAAMrD,EAAY6I,EAAKpJ,MAAMuB,SAAQ,KAZhC,cAAAO,EAAAoB,EAAA1B,KAAAkR,EAAA/S,OAAAsF,EAAA,EAAAtF,CAAAmC,EAAA,GAIlDq2B,EAJkDzlB,EAAA,GAKlDmB,EALkDnB,EAAA,GAMlD+D,EANkD/D,EAAA,GAOlDsmB,EAPkDtmB,EAAA,GAAAxP,EAAA7B,KAAA,GAetB+H,EAAK5I,cAAc6E,oBAAoBoR,EAAW7S,GAAOA,EAAMrD,EAAY2R,GAfrD,QAe9CyoB,EAf8Cz3B,EAAA1B,KAiB9CwS,EAAW5K,EAAK5I,cAAciB,MAAM02B,EAAUO,QAC9CkC,EAAcxQ,EAAUyC,cAAcjpB,GAAOsS,aAAa1Q,IAAI4kB,EAAUyQ,cAI1E7B,IACFyB,EAAgBA,EAAcxyB,KAAK+wB,IAGjChlB,IACFumB,EAASA,EAAOtyB,KAAK+L,EAASzO,MAAMq1B,KAGlC/mB,IACF2mB,EAAWA,EAASvyB,KAAK4L,EAAWtO,MAAMq1B,KAGxCD,IACFD,EAAkBA,EAAgBzyB,KAAK0yB,IAnCW,yBAAAz3B,EAAAtB,SAAAqB,EAAAlD,SAAhD,gBAAA4F,GAAA,OAAA0kB,EAAA/nB,MAAAvC,KAAAwC,YAAA,6BAwC8BxC,KAAKS,cAAcs6B,6BAA6B/6B,KAAKC,MAAMuB,QAAQxB,KAAKC,MAAM+G,gBAAgB,sBAA5Hg0B,mBAC6Bh7B,KAAKS,cAAc+pB,yBAAyBxqB,KAAKC,MAAMuB,QAAQxB,KAAKC,MAAM+G,gBAAgB,cAAvHi0B,SACAC,EAA+BD,EAAuBr7B,OAAO4H,KAAKyzB,GAAsBzf,IAAK,SAAAgD,GACjG,IAAMtd,EAAU+5B,EAAqBzc,GACrC,OAAItd,EAAQ6V,GAAG,GACb,IAAAnS,OAAW1D,EAAQ0P,QAAQ,GAA3B,KAAAhM,OAAiC4Z,GAE1B,OAERpC,OAAO,SAAA1N,GAAC,OAAW,OAANA,IAAe,KAEzBiF,EAAgB+mB,EAChB7mB,EAAc8mB,EAAgBn1B,MAAMg1B,EAAO/0B,IAAI,MAErD4F,EAAS2uB,iBAAmB,CAC1B,CACElwB,UAAU,CACRmiB,GAAG,CAAC,EAAE,GACN/xB,MAAM,CAAC,EAAE,EAAE,IAEb+F,MAAM,CACJkR,MAAM,GACNzX,MAAM,UACN8U,MAAMgsB,EAAO5pB,QAAQ,GAAG,mBACxBkP,YAAY9f,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,cAG/D,CACEkJ,UAAU,CACR4X,GAAG,CAAC,EAAE,GACNxnB,MAAM,CAAC,EAAE,EAAE,IAEb+F,MAAM,CACJvG,MAAM,iBACNomB,YAAY,+DAA+Dkb,GAAyBA,EAAsBjkB,GAAG,GAAlD,KAAAnS,OAA4Ds2B,EAA6BhqB,KAAK,OAA9F,KAA0G,IACrLhR,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPrZ,SAAU,EACVsZ,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVC,IAAKvR,WAAWiI,GAChBuJ,MAAOxR,WAAW+H,GAClB0J,aAAe,SAAAC,GAAC,MAAI,KAAKjU,EAAK5I,cAAckJ,iBAAiB2T,EAAE,EAAE,GAAG,KAEnE,SAAAxK,GAAA,IAAG0K,EAAH1K,EAAG0K,WAAH1K,EAAesK,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QACEge,IAAKF,EACLC,MAAO,CACLmC,WAAW,EACXzhB,MAAMkL,EAAKpJ,MAAM9G,MAAMR,OAAOyC,UAC9B6T,WAAW5F,EAAKpJ,MAAM9G,MAAMS,MAAMG,QAClCiV,WAAY3F,EAAKpJ,MAAMmL,SAAW,IAAM,IACxCpM,SAASqK,EAAKpJ,MAAMmL,SAAW,OAAS,cAoBpD+F,MAAM,KAGV,CACErH,UAAU,CACR8vB,GAAG,CAAC,EAAE,GACN1/B,MAAM,CAAC,EAAE,EAAE,IAEb+F,MAAM,CACJvG,MAAM,iBACN8U,MAAMisB,EAAS7pB,QAAQ,GACvBO,MAAM,+BAOgBnR,KAAKS,cAAc06B,mBAAmBn7B,KAAKC,MAAMoH,iCAAzE0yB,SAEN1uB,EAAS0uB,gBAAkBA,EAC3B1uB,EAAS8uB,iBAAkB,EAErBD,EAAkBt6B,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAiBoV,OAAO,SAAAvY,GAAK,OAAMwH,EAAS4uB,gBAAgB5E,SAASxxB,KAAWjE,OAAO4H,KAAK6D,EAAS0uB,iBAAiB1E,SAASxxB,KAC9KwH,EAAS6uB,gBAAkBA,EAGrBrE,EAAmB71B,KAAKS,cAAcG,gBAAgB,CAAC,UAAU,+BACjEZ,KAAKS,cAAcmsB,gBAAgB5sB,KAAKC,MAAMuB,QAAQq0B,EAAiB,SAASj2B,OAAO4H,KAAKxH,KAAKC,MAAM+G,0BAG7GhH,KAAK0N,aAAarC,2BAGlBrL,KAAK0N,aAAa,CAChBqsB,gBAAgB,GAChBE,gBAAgB,GAChBE,iBAAgB,EAChBD,gBAAgBt6B,OAAO4H,KAAKxH,KAAKC,MAAM+G,uJAKrC,IAAAqH,EAAArO,KACAuS,EAAYvS,KAAKS,cAAcG,gBAAgB,CAAC,cAChDw6B,EAAUp7B,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,YACzDy6B,EAAYr7B,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,cAC3D06B,EAAet7B,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,iBAEpE,OACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAAC67B,GAAD,CAAO7pB,GAAI,CAAC,EAAE,IAAK1R,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,UAAhG,aAEGrH,KAAK4K,MAAMuvB,gBAiBV36B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KAEI3rB,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,EAChCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGvBhK,KAAK4K,MAAMovB,iBAAiBxe,IAAI,SAAC9M,EAAE6B,GAAH,OAC9B/Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACM6O,EAAE5E,UADR,CAEEE,cAAe,SACf8T,IAAG,mBAAAlZ,OAAqB2L,KAExB/Q,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,CAAC,EAAE,GACNjQ,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdyE,EAAEzO,MAAMC,SAAWwO,EAAEzO,MAAMC,SACzBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8Q,WAAY,UACZjQ,SAAU,CAAC,EAAE,SACbmtB,wBAAyB,CAAEC,OAAQ1d,EAAEzO,MAAMuO,SAK/ChP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YAENuQ,EAAEzO,MAAMvG,OAGXgV,EAAEzO,MAAM6f,aACNtgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,SACXC,QAAShO,EAAEzO,MAAM6f,aAEjBtgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,sBAY7BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,mBACJ7G,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,KACV8P,cAAe,SACf8G,GAAI,yBAEJtR,EAAAC,EAAAC,cAACqhB,GAAD,CACErnB,MAAO,cACPmmB,WAAc7f,KAAKC,MAAMmL,SAIrB,KAJgC,CAClCqS,MAAM,CACJjR,UAAU,UAIdhN,EAAAC,EAAAC,cAAC87B,GAAD57B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEsL,SAAU,6BAIhB/L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACqhB,GAAD,KACEvhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,CAAC,EAAE,GACPzU,GAAI,CAAC,EAAE,GACP+Z,UAAW,SACXzxB,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,IACV8P,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACEvsB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,QAHb,gBAQFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPvlB,MAAO,CAAC,EAAE,IACV8P,cAAe,SACfC,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACojB,GAAD,CACElC,WAAY,CACVzW,EAAE,EACFuX,GAAG,GAELnB,aACE,CAAC/R,MAAM,OAAO2C,MAAM,MAEtBpE,KAAM,mBACNsT,QAAS,CACP,CAAC7R,MAAM,OAAO2C,MAAM,MACpB,CAAC3C,MAAM,QAAQ2C,MAAM,MACrB,CAAC3C,MAAM,SAAS2C,MAAM,MACtB,CAAC3C,MAAM,SAAS2C,MAAM,MACtB,CAAC3C,MAAM,MAAM2C,MAAM,QAErB4Q,SAAW,SAAArT,GAAC,OAAIL,EAAKqtB,iCAAiChtB,QAI5DlP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,CAAC,EAAE,GACP+uB,UAAW,SACXxxB,eAAgB,SAChB6G,GAAI,yBAEJtR,EAAAC,EAAAC,cAACi8B,GAAD/7B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4pB,cAAe,GACfte,SAAU,wBACVO,eAAgB,wBAChB4gB,mBAAoB1sB,KAAK4K,MAAM0vB,8BAC/BzlB,iBAAkB7U,KAAKS,cAAcmZ,oBAAoB,MAAM,WAQ3Epa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJsU,GAAI,OACJ9rB,MAAO,CAAC,EAAE,IACVuhC,UAAW,SACXxxB,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,UAGTzR,KAAKC,MAAMmL,SACTpL,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,cAE7ErH,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,eAMzF7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,mBACJ9G,cAAe,SACf0H,GAAK1R,KAAK4K,MAAMqvB,gBAAgBn3B,OAAa,EAAJ,IAGtC9C,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,GAAKlD,OAAO4H,KAAKxH,KAAK4K,MAAMmvB,iBAAiBj3B,OAAO,GAAK9C,KAAK4K,MAAMsvB,gBAAgBp3B,OAAO,IAC5HtD,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,oBAEJvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,UAE3BpK,OAAO4H,KAAKxH,KAAK4K,MAAMmvB,iBAAiBj3B,OAAO,GAC/CtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPZ,GAAI,iBACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPrT,YAAa,UACbu9B,aAAc,yBAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAFjB,sBAOFxP,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAejqB,OAAO4H,KAAKxH,KAAK4K,MAAMmvB,iBACtCnb,YAAa,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,QACrD6kB,KAAM,CACJ,CACEhvB,MAAM,WACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACErT,MAAM,OACNovB,OAA8B,OAAvB9oB,KAAKC,MAAMuB,QAClBvB,MAAM,CACJ/F,MAAM,CAAC,IAAM,MAEf8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJwD,SAAS,MAKjB,CACE/J,MAAM,MACN6vB,KAAK6R,EACLn7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd6uB,YAAY,CACV/e,cAAc,SACdD,WAAW,cAEbif,OAAO,CACL,CACEjc,KAAK,MACLsL,aAAY,GAEd,CACEtL,KAAK,mBACLV,YAAW,EACXpM,MAAM,CACJwD,SAASzD,KAAKC,MAAMmL,SAAW,EAAI,EACnCpM,SAASgB,KAAKC,MAAMmL,SAAW,MAAQ,MAK/C,CACE1R,MAAM,QACN6vB,KAAK8R,EACLp7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,UACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd6uB,YAAY,CACV7uB,MAAM,EACN+xB,GAAG,CAAC,EAAE,IAERjD,OAAO,CACL,CACEjc,KAAK,qBAIX,CACE+b,QAAO,EACPpvB,MAAM,UACN6vB,KAAK+R,EACLr7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZuX,UAAU,UAEZuX,OAAO,CACL,CACEjc,KAAK,eAIX,CACErT,MAAM,GACNovB,OAA8B,OAAvB9oB,KAAKC,MAAMuB,QAClBvB,MAAM,CACJ/F,MAAM,CAAyB,OAAvB8F,KAAKC,MAAMuB,QAAmB,IAAO,EAAG,MAElDunB,YAAY,CACV7uB,MAAM,GAER8uB,OAAO,CACL,CACEjc,KAAK,SACLoE,MAAO,UACPlR,MAAM,CACJ/F,MAAM,EACN8E,SAAS,EACTgQ,WAAW,EACX/P,OAAO,OACPK,aAAa,EACbye,UAAU,KACVkI,UAAU,UACVxZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCwT,YAAY,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,cAM1D7D,KAAKC,SAKfD,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,GAChCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAK1R,KAAK4K,MAAMsvB,gBAAgBp3B,OAAO,EAAI,CAAC,EAAE,GAAK,EACnD5I,MAAO,EACP4W,GAAI,mBACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPrT,YAAa,UACbu9B,aAAc,yBAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAFjB,qBAOFxP,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAe7pB,KAAK4K,MAAMqvB,gBAC1Brb,YAAa,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,QACrD6kB,KAAM,CACJ,CACEhvB,MAAM,WACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACErT,MAAM,OACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJwD,SAAS,MAKjB,CACE/J,MAAM,MACN6vB,KAAK6R,EACLn7B,MAAM,CACJ/F,MAAM,CAAC,GAAK,MAEd6uB,YAAY,CACV/e,cAAc,SACdD,WAAW,cAEbif,OAAO,CACL,CACEjc,KAAK,MACLsL,aAAY,GAEd,CACEtL,KAAK,mBACLV,YAAW,EACXpM,MAAM,CACJwD,SAASzD,KAAKC,MAAMmL,SAAW,EAAI,EACnCpM,SAASgB,KAAKC,MAAMmL,SAAW,MAAQ,MAK/C,CACE1R,MAAM,QACN6vB,KAAK8R,EACLp7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd6uB,YAAY,CACVhf,WAAW,CAAC,SAAS,eAEvBif,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,YACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,gBAIX,CACE+b,QAAO,EACPpvB,MAAM,UACN6vB,KAAK+R,EACLr7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZuX,UAAU,UAEZuX,OAAO,CACL,CACEjc,KAAK,YACL9M,MAAM,CACJwD,SAAS,MAKjB,CACEqlB,QAAO,EACPpvB,MAAM,WACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZuX,UAAU,UAEZsX,YAAY,CACVhf,WAAW,SACXC,cAAc,UAEhBgf,OAAO,CACL,CACEjc,KAAK,WACL9M,MAAM,CACJwD,SAAS,IAGb,CACEsJ,KAAK,eACLV,YAAW,EACX2R,eAAc,EACd/d,MAAM,CACJjB,SAAS,EACTyE,SAAS,MAkBjB,CACE/J,MAAM,GACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER6uB,YAAY,CACV7uB,MAAM,GAER8uB,OAAO,CACL,CACEjc,KAAK,SACLoE,MAAM,SACNlR,MAAM,CACJ/F,MAAM,EACN8E,SAAS,EACTgQ,WAAW,EACX/P,OAAO,OACPK,aAAa,EACbye,UAAU,KACVkI,UAAU,SACVxZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCwT,YAAY,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,cAM1D7D,KAAKC,SAKbD,KAAK4K,MAAMsvB,gBAAgBp3B,OAAO,GAClCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,mBAAmB5W,MAAO,EAAG8P,cAAe,UACnDxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPrT,YAAa,UACbu9B,aAAc,yBAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAFjB,qBAOFxP,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAe7pB,KAAK4K,MAAMsvB,gBAC1Btb,YAAa,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,QACrD6kB,KAAM,CACJ,CACEhvB,MAAM,WACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACErT,MAAM,OACNovB,OAA8B,OAAvB9oB,KAAKC,MAAMuB,QAClBvB,MAAM,CACJ/F,MAAM,CAAC,IAAM,KAEf8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJwD,SAAS,MAKjB,CACE/J,MAAM,MACN6vB,KAAK6R,EACLn7B,MAAM,CACJ/F,MAAM,CAAC,KAAK8F,KAAK4K,MAAMqvB,gBAAgBn3B,OAAW,OAEpDimB,YAAY,CACV/e,cAAc,SACdD,WAAW,cAEbif,OAAO,CACL,CACEjc,KAAK,MACLsL,aAAY,GAEd,CACEtL,KAAK,mBACLV,YAAW,EACXpM,MAAM,CACJwD,SAASzD,KAAKC,MAAMmL,SAAW,EAAI,EACnCpM,SAASgB,KAAKC,MAAMmL,SAAW,MAAQ,MAK/C,CACE1R,MAAM,QACN6vB,KAAK8R,EACLp7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACE+b,QAAO,EACPpvB,MAAM,UACN6vB,KAAK+R,EACLr7B,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZuX,UAAU,UAEZuX,OAAO,CACL,CACEjc,KAAK,YACL9M,MAAM,CACJwD,SAAS,MAKjB,CACE/J,MAAM,gBACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER6uB,YAAY,CACV7uB,MAAM,EACN+xB,GAAG,CAAC,EAAE,IAERjD,OAAO,CACL,CACEjc,KAAK,cAIX,CACErT,MAAM,GACNovB,OAA8B,OAAvB9oB,KAAKC,MAAMuB,QAClBvB,MAAM,CACJ/F,MAAM,CAAyB,OAAvB8F,KAAKC,MAAMuB,QAAmB,IAAO,EAAI,MAEnDunB,YAAY,CACV7uB,MAAM,GAER8uB,OAAO,CACL,CACEjc,KAAK,SACLoE,MAAO,SAAClR,GACN,OAAOL,OAAO4H,KAAK6G,EAAKzD,MAAMmvB,iBAAiB1E,SAASp1B,EAAM4D,OAAS,UAAY,WAErF5D,MAAM,CACJ/F,MAAM,EACN8E,SAAS,EACTgQ,WAAW,EACX/P,OAAO,OACPK,aAAa,EACbye,UAAU,KACVtR,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCwT,YAAY,SAAC3e,GAAD,OAAWoO,EAAKpO,MAAM8iB,YAAY9iB,EAAM4D,SAEtD0Y,UAAU,CACR0J,UAAW,SAAChmB,GACV,OAAOL,OAAO4H,KAAK6G,EAAKzD,MAAMmvB,iBAAiB1E,SAASp1B,EAAM4D,OAAS,UAAY,iBAO3F7D,KAAKC,WAOjBD,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,GAChCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,gBACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,iBACAvmB,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAejqB,OAAO4H,KAAK+K,GAC3BmW,KAAM,CACJ,CACEhvB,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,GAAI,MAEb8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACE+b,QAAO,EACPpvB,MAAM,UACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAM,MAEf8uB,OAAO,CACL,CACEjc,KAAK,eACL9M,MAAM,CACJwD,SAAUzD,KAAKC,MAAMmL,SAAW,EAAI,MAK5C,CACE1R,MAAM,aACN6vB,KAAKvpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,8BACpDX,MAAM,CACJ/F,MAAM,CAAC,IAAK,IACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,oBACL9M,MAAM,CACJwD,SAAUzD,KAAKC,MAAMmL,SAAW,EAAI,MAK5C,CACE1R,MAAM,eACN6vB,KAAKvpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,0BACpDX,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd8uB,OAAO,CACL,CACEjc,KAAK,wBACL9M,MAAM,CACJwD,SAAS,QAgDfzD,KAAKC,MA9GX,CA+GE+G,gBAAiBuL,MAKvBvS,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,GAChCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAG,sBACH9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,sBACAvmB,EAAAC,EAAAC,cAACo8B,GAADl8B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4pB,cAAe7pB,KAAK4K,MAAMqvB,oBAKhCj6B,KAAKC,MAAMuB,SAAWxB,KAAK4K,MAAMqvB,gBAAgBn3B,OAAO,GACtDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP4W,GAAI,eACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,gBACAvmB,EAAAC,EAAAC,cAACq8B,GAADn8B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4pB,cAAe,GACfnB,KAAM,CACJ,CACEhvB,MAAOsG,KAAKC,MAAMmL,SAAW,GAAK,OAClCnL,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACE3V,KAAK,OACL+b,QAAO,KAIb,CACEpvB,MAAM,SACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,OACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,YAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,IACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,YACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,GACNzjB,OAAO,CAAC,QAAQ,WAGpB,CACE6pB,QAAO,EACP/b,KAAK,qBA79BvBvN,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTsxB,SAAS,EACThtB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACT0C,UAAU,OACVxC,cAAc,UAEhBnR,KAAM,iCAtQOsH,6CCZrB87B,GAAY,SAAA3R,GAAA,IAAEpqB,EAAFoqB,EAAEpqB,SAAUg8B,EAAZ5R,EAAY4R,UAAcj8B,EAA1BL,OAAAu8B,GAAA,EAAAv8B,CAAA0qB,EAAA,iCAChB9qB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHyd,OAAQ,EACR5B,GAAI,OACJD,GAAI,OACJ9mB,OAAQ,OACRK,aAAc,EACd4pB,SAAU,OACVhvB,MAAQ+F,EAAM/F,MAAQ+F,EAAM/F,MAAQ,OACpCgF,SAAWe,EAAMf,SAAWe,EAAMf,SAAW,OAC7CwzB,SAAWzyB,EAAMyyB,SAAWzyB,EAAMyyB,SAAW,SAE7ClzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsQ,IAAK,IACLuB,OAAQ,EACRtB,MAAO,IACPqB,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE+H,UAAQ,EACR9qB,KAAM,QACN7E,KAAM,QACNkS,QAASud,EACTjW,UAAYhmB,EAAMgmB,UAAYhmB,EAAMgmB,UAAa,eAGrDzmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR4jB,KAAM,WACN7Y,cAAe,SACfuV,UAAW,CAAEtf,EAAMo8B,QAAU7c,KAAOtoB,GAAK,MACzCumB,MAAO,CACLyL,SAAU,OACV5J,WAAYrf,EAAMqf,WAAarf,EAAMqf,WAAa,yDAClDgd,eAAiBr8B,EAAMqf,WAAqB,KAAR,QAGrCpf,KAKP+7B,GAAUM,OAAS,SAACt8B,GAAD,OACjBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPgY,GAAI,CAAC,EAAE,GACPyM,GAAKl2B,EAAMk2B,GAAKl2B,EAAMk2B,GAAMl2B,EAAMqR,KAAO,EAAI,CAAC,EAAE,GAChDsqB,aAAe37B,EAAM27B,aAAe37B,EAAM27B,aAAe,kBAEzDp8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,CAAC,EAAE,GACP3X,WAAY,SACZC,cAAe,UAEb/J,EAAMqR,MAAQ9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOzF,MAAQ+F,EAAMu8B,WAAav8B,EAAMu8B,WAAa,OAAS7qB,IAAK1R,EAAMqR,OACzF9R,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT92B,OAAAC,OAAA,CACE6R,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,SACXgO,GAAIxf,EAAMqR,KAAO,EAAI,EACrBrC,WAAY,aACRhP,EAAM4f,YAET5f,EAAMvG,OAGPuG,EAAMw8B,UACNj9B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT/f,OAAAC,OAAA,CACEs2B,GAAI,CAAC,EAAE,GACPnnB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACb4gB,WAAY,IACZzhB,MAAO,YACPsT,UAAW,UACPxR,EAAMy8B,eAETz8B,EAAMw8B,UAITx8B,EAAM08B,WACNn9B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAYwW,GAAI,EAAGn3B,SAAU,CAAC,EAAE,GAAIyS,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,IAAKzhB,MAAO,aAC7F8B,EAAM08B,cAOjBV,GAAUW,KAAO,SAAA76B,GAAA,IAAE7B,EAAF6B,EAAE7B,SAAaD,EAAfL,OAAAu8B,GAAA,EAAAv8B,CAAAmC,EAAA,qBACfvC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE3F,MAAO,EACPwnB,GAAI,CAAC,EAAE,IACHzhB,GAEHC,IAaL+7B,GAAUY,OAAS,SAAAlqB,GAAA,IAAEzS,EAAFyS,EAAEzS,SAAFN,OAAAu8B,GAAA,EAAAv8B,CAAA+S,EAAA,qBACjBnT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEkjB,KAAM,WACN5Y,eAAgB,SAChB4pB,UAAW,EACXx1B,YAAa,aACbqjB,GAAI,CAAC,EAAE,GACPC,GAAI,GAEHzhB,IAKL+7B,GAAUa,WAAa,SAAAhqB,GAAA,IAAE6L,EAAF7L,EAAE6L,QAAF/e,OAAAu8B,GAAA,EAAAv8B,CAAAkT,EAAA,oBACrBtT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVtB,IAAK,IACLG,KAAM,IACN8lB,EAAG,EACHh/B,GAAI,SAEJsI,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CACEpe,QAASA,EACTyd,UAAQ,EACR9qB,KAAM,YACN7E,KAAM,YAKGwvB,UCzEAe,oLAlEX,IAAM5xB,EAA0C,qBAAxBpL,KAAKC,MAAMmL,UAA2BpL,KAAKC,MAAMmL,SAEnE6xB,EAAQj9B,KAAKC,MAAMi9B,SAAY19B,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAO3F,MAAO,OAAQyX,IAAK3R,KAAKC,MAAMi9B,UAAcl9B,KAAKC,MAAMk9B,aAAoBn9B,KAAKC,MAAMm9B,SAAY59B,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAMkN,KAAM/M,KAAKC,MAAMm9B,UAAcp9B,KAAKC,MAAMse,YAAiB,KAC1M8e,EAAW79B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAYrG,EAAW,OAAS,SAAUpM,SAAU,EAAGgQ,WAAY,EAAG7Q,MAAO,aAAc6B,KAAKC,MAAMo9B,SAE7H,OACI79B,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE1B,MAAO,QACPmB,aAAc,EACd2mB,UAAW,QACXqX,cAAe,QACf5b,GAAKtW,EAAW,CAAC,EAAE,GAAK,EACxBuW,GAAKvW,EAAW,EAAI,CAAC,EAAE,GACvB2a,GAAK3a,EAAW,EAAI,CAAC,EAAE,GACvB4a,GAAK5a,EAAW,EAAI,CAAC,EAAE,GACvBuT,QAAU3e,KAAKC,MAAM2e,YACrB3f,OAASmM,EAAW,OAAS,CAAC,QAAQ,SACtClR,MAAQ8F,KAAKC,MAAM/F,MAAQ8F,KAAKC,MAAM/F,MAASkR,EAAW,OAAS,CAAC,QAAQ,SAC5EqS,MAAQzd,KAAKC,MAAMs9B,YAAcv9B,KAAKC,MAAMs9B,YAAenyB,EAAW,CAACnB,eAAe,cAAgB,MAClGjK,KAAKC,MAAMmmB,aAEf5mB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KAEI3rB,KAAKC,MAAMu9B,OACTh+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVjS,aAAc,OACdlB,gBAAkB4B,KAAKC,MAAMu9B,MAAMhL,QAAUxyB,KAAKC,MAAMu9B,MAAMhL,QAAU,OACxE/U,MAAQrS,EAAW,CAAC8E,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpEyR,GAAI,CAAC,MAAM,OACXC,GAAI,CAAC,MAAM,QAEXniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,OACVb,MAAQ6B,KAAKC,MAAMu9B,MAAMr/B,MAAQ6B,KAAKC,MAAMu9B,MAAMr/B,MAAQ,QAE3D6B,KAAKC,MAAMu9B,MAAM3kC,OAKxB2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAgBoB,EAAW,MAAQ,SAAUnB,eAAiBmB,EAAW,aAAe,SAAUrB,WAAY,UAClHvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAQkR,EAAW,OAAS,EAAIsX,GAAKtX,EAAW,EAAI,EAAInB,eAAiBmB,EAAW,aAAe,UACrGpL,KAAKC,MAAMw9B,YAAwC,QAA1Bz9B,KAAKC,MAAMw9B,WAAuBJ,EAAUJ,GAEzEz9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAQkR,EAAW,OAAS,EAAIpB,cAAe,SAAUC,eAAiBmB,EAAW,aAAe,UACtGpL,KAAKC,MAAMw9B,YAAwC,QAA1Bz9B,KAAKC,MAAMw9B,WAAuBR,EAAQI,EAEnEr9B,KAAKC,MAAMy9B,YAAc19B,KAAKC,MAAMy9B,WAAWpZ,MAAM,MAAM9I,IAAI,SAAC9M,EAAE6B,GAKhE,OAHIA,IACF7B,EAAKlP,EAAAC,EAAAC,cAAA,aAAQgP,IAGblP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMme,IAAG,cAAAlZ,OAAgB2L,GAAKqP,WAAY,MAAOnO,UAAYrG,EAAW,OAAS,SAAUjN,MAAO,WAAY6Q,WAAY,EAAGhQ,SAAU,GAAI0P,gBA3DvIvO,kCCgsBXw9B,8MAjrBb/yB,MAAQ,CACNgzB,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBvwB,cAAcpN,EAAKJ,MAAMg+B,YAkF3Bx9B,cAAgB,OA0ChBy9B,0DAAsB,SAAAx7B,EAAO0L,EAAE+vB,EAASC,GAAlB,IAAAC,EAAAC,EAAA9a,EAAAI,EAAA2a,EAAA,OAAAx9B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAEd+8B,EAFc,eAAAt8B,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAEF,SAAAC,EAAOob,GAAP,OAAAtb,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEhBwJ,OAAO0zB,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAA95B,OAAUvE,EAAKuK,MAAM6C,cAArB,wBAChBkxB,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXz+B,EAAKJ,MAAM8+B,oBAVK,wBAAA39B,EAAAS,SAAAZ,EAAAjB,SAFE,gBAAA4F,GAAA,OAAA7D,EAAAQ,MAAAvC,KAAAwC,YAAA,GAed87B,EAfc,eAAA3rB,EAAA/S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAeJ,SAAAgB,EAAOoM,GAAP,OAAArN,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAP,OAAA,UACP,GADO,wBAAAO,EAAAN,SAAAG,EAAAhC,SAfI,gBAAAsG,GAAA,OAAAqM,EAAApQ,MAAAvC,KAAAwC,YAAA,GAmBdghB,EAAkBzS,GAAciuB,SAASC,UAAUd,GACnDva,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAcxjB,EAAKJ,MAAM8Q,GAAcqtB,EAAUC,EAAUC,GAAW,KApBxIz7B,EAAAuC,GAuBZ+4B,EAvBYt7B,EAAAvB,KAAA,qBAyBsB,oBAA3BkiB,EAAgBM,SACnBya,EAAe3+B,OAAOC,OAAO,GAAGQ,EAAKuK,OAC3C4Y,EAAgBM,OAAOF,EAAW,KAAK2a,EAAaxtB,KA3BtClO,EAAAjB,OAAA,sBAiChBmP,GAAcmuB,UAAUC,OAAOC,OAAOz6B,QAjCtB,CAAA9B,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GAkCZjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,MACfC,YAAa,kBACbC,WAAYia,IArCI,QAwClB99B,EAAKg/B,WAAWjxB,GAxCEvL,EAAAvB,KAAA,iBA0ClBjB,EAAKg/B,WAAWjxB,GA1CE,yBAAAvL,EAAAhB,SAAAa,EAAA1C,qEA8CtBs/B,OAAS,SAAClxB,GACRA,EAAEsnB,iBAEEr1B,EAAKuK,MAAMmzB,iBACb19B,EAAK4L,SAAS,CACZ8xB,iBAAiB,OAEV19B,EAAKuK,MAAMgzB,eACpBv9B,EAAK4L,SAAS,CACZ2xB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEV19B,EAAKuK,MAAM6C,cACpBpN,EAAK4L,SAAS,CACZ2xB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBtwB,cAAcpN,EAAKJ,MAAMg+B,WAG3B59B,EAAKk/B,gBAITA,WAAa,WACXl/B,EAAK4L,SAAS,CACZ2xB,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBvwB,cAAcpN,EAAKJ,MAAMg+B,WAG3B59B,EAAKm/B,wBAGPH,WAAa,SAACjxB,GACZ/N,EAAKk/B,aACAl/B,EAAKJ,MAAMw/B,YAA+C,oBAA1Bp/B,EAAKJ,MAAMo/B,YAC9Ch/B,EAAKJ,MAAMo/B,gBAIfK,gBAAkB,SAACvB,GACjB,IAAKptB,GAAciuB,SAASC,UAAUd,GACpC,OAAO,EAET,IAAI1a,EAAe1S,GAAciuB,SAASC,UAAUd,GACpD,GAAoC,oBAAzB1a,EAAakc,QAAuB,CAC7C,IAAMC,EAAkBnc,EAAakc,QAAQt/B,EAAKuK,OAC9Cg1B,GAAmBhgC,OAAO4H,KAAKo4B,GAAiB98B,SAClD2gB,EAAe7jB,OAAOC,OAAO4jB,EAAamc,IAG9C,OAAOnc,KAGToc,0BAA4B,SAACjC,GAC3B,IAAMkC,EAAgBz/B,EAAKuK,MAAMizB,iBAAiBD,GAClD,OAAIkC,EAAcC,gBACTD,EAAcC,gBAEhB,QAGTC,6BAA+B,SAACpC,EAAenwB,GAC7C,IAAMuwB,EAAqB,GAE3Bp+B,OAAO4H,KAAKuJ,GAAciuB,SAASC,WAAWzjB,IAAI,SAAC2iB,EAAS5tB,GAC1D,IAAMkT,EAAe1S,GAAciuB,SAASC,UAAUd,GAChD8B,GAAmF,IAA3Dxc,EAAayc,iBAAiBjoB,QAAQ2lB,GAC9DuC,EAAuB1yB,GAAyE,IAAzDgW,EAAa2c,gBAAgBnoB,QAAQxK,IAA6F,IAApEgW,EAAa2c,gBAAgBnoB,QAAQ5X,EAAKJ,MAAMwN,iBAA4F,IAAnEgW,EAAa2c,gBAAgBnoB,QAAQlH,GAAcsS,WAIvO,OAHII,EAAa9e,SAAWs7B,GAAyBE,GACnDnC,EAAmBntB,KAAKstB,GAEnBA,IAGT,IAAMkC,EAAyBhgC,EAAKw/B,0BAA0BjC,GAE9D,OAAIyC,GAA0BhgC,EAAKuK,MAAMizB,iBAAiBD,GAAgB0C,kBAA2E,IAAxDtC,EAAmB/lB,QAAQooB,GAC/G,CAACA,GAGHrC,KAGTuC,eAAiB,SAACnyB,EAAE2vB,GAKlB,GAJI3vB,GACFA,EAAEsnB,kBAGCqI,IAAqBhtB,GAAciuB,SAASC,UAAUlB,GACzD,OAAO19B,EAAK4L,SAAS,CACnB8xB,iBAAiB,OAIrB,IAAMta,EAAe1S,GAAciuB,SAASC,UAAUlB,GACtD,GAAIta,EAAa,CAEf,GAAIpjB,EAAKuK,MAAM6C,cAEb,YADApN,EAAK69B,oBAAoB9vB,EAAE2vB,EAAiB19B,EAAKuK,OAInD,IAAM41B,GAAkF,IAAnE/c,EAAa2c,gBAAgBnoB,QAAQlH,GAAcsS,WAClEod,GAAqF,IAApEhd,EAAa2c,gBAAgBnoB,QAAQ5X,EAAKJ,MAAMwN,eAGjEzG,EAAkB,GACxB,KAAMw5B,GAAgBC,IAAoBA,GASxC,YADApgC,EAAK69B,oBAAoB9vB,EAAE2vB,EAAiB19B,EAAKuK,OAP7C41B,GACFx5B,EAAgB6J,KAAKE,GAAcsS,WAEjCod,GACFz5B,EAAgB6J,KAAKxQ,EAAKJ,MAAMwN,eAOpCpN,EAAK4L,SAAS,CACZjF,kBACA+2B,yBAKN2C,aAAe,SAACtyB,EAAEwvB,GAKhB,GAJIxvB,GACFA,EAAEsnB,kBAGsE,IAAtE91B,OAAO4H,KAAKnH,EAAKuK,MAAMizB,kBAAkB5lB,QAAQ2lB,GAAuB,CAC1E,IAAMI,EAAqB39B,EAAK2/B,6BAA6BpC,EAAev9B,EAAKuK,MAAM6C,eAGvFpN,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,gBACbC,WAAY0Z,IAGdv9B,EAAK4L,SAAS,CACZ+xB,qBACAJ,uBAKN+C,YAAc,SAACvyB,EAAEX,GACXW,GACFA,EAAEsnB,iBAIJr1B,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,eACbC,WAAYzW,IAGdpN,EAAK4L,SAAS,CAAEwB,iBAAhB7N,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAiC,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,WAC3BjB,EAAKuK,MAAMmzB,iBADgB,CAAA56B,EAAA7B,KAAA,eAAA6B,EAAAvB,OAAA,SAEtBvB,EAAK69B,oBAAoB9vB,EAAE/N,EAAKuK,MAAMmzB,iBAAiB19B,EAAKuK,QAFtC,OAI7BvK,EAAKugC,sBAJwB,wBAAAz9B,EAAAtB,SAAAqB,EAAAlD,aASnC6gC,oBAAsB,SAAA/C,GAGhB/sB,GAAcmuB,UAAUC,OAAOC,OAAOz6B,SAAWm5B,GACnDz9B,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,iBACbC,WAAY4Z,EAAgBtvB,QAIhCnO,EAAK4L,SAAS,CACZ6xB,uBAIJgD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBA1gC,EAAKuK,MAAMozB,mBAAmB9zB,QAAQ,SAACi0B,EAAS5tB,GAC9C,IAAMkT,EAAe1S,GAAciuB,SAASC,UAAUd,GAChD8B,GAA8F,IAAtExc,EAAayc,iBAAiBjoB,QAAQ5X,EAAKuK,MAAMgzB,gBACzEuC,EAAuB9/B,EAAKuK,MAAM6C,eAAoF,IAApEgW,EAAa2c,gBAAgBnoB,QAAQ5X,EAAKuK,MAAM6C,gBAA6F,IAApEgW,EAAa2c,gBAAgBnoB,QAAQ5X,EAAKJ,MAAMwN,iBAA4F,IAAnEgW,EAAa2c,gBAAgBnoB,QAAQlH,GAAcsS,WAGxPI,EAAa9e,SAAYs7B,GAA0BE,GAKxD1c,EAAaud,mBAAmB92B,QAAQ,SAAC+2B,EAAY5c,GAC9C0c,EAAmBE,KACtBF,EAAmBE,GAAe,CAChChC,UAAU,GACV9tB,MAAMJ,GAAcmwB,UAAUD,GAC9BzyB,MAAMyyB,IAGVF,EAAmBE,GAAahC,UAAUpuB,KAAKstB,OAI5Cv+B,OAAO+X,OAAOopB,+MA5XhB/gC,KAAK4K,MAAM6C,wDACP,UAIT7N,OAAO4H,KAAKuJ,GAAciuB,SAASC,WAAW/0B,QAAQ,SAACi0B,EAAS5tB,GAE9D,IAAMkT,EAAe1S,GAAciuB,SAASC,UAAUd,GACtD,GAAI1a,EAAa9e,SAAW8e,EAAaU,mBAAwF,IAApEV,EAAa2c,gBAAgBnoB,QAAQ5O,EAAKuB,MAAM6C,iBAA4F,IAAnEgW,EAAa2c,gBAAgBnoB,QAAQlH,GAAcsS,YAAmB,CAE1M,IAAMc,EAAkBV,EAAaU,gBAErCvkB,OAAO4H,KAAK2c,GAAiBja,QAAQ,SAACka,EAAIC,GAIxC,OAFqBD,EAAIE,MAAM,KAAKC,MAAM7T,eAGxC,IAAK,KACH,IAAM8T,EAAQ,UAAA5f,OAAau5B,EAAb,KAAAv5B,OAAyByf,EAAzB,KAAAzf,OAA8ByE,EAAKuB,MAAM6C,eAEvD,IAAKhC,SAASC,eAAe8Y,GAAU,CACrC,IAAMC,EAAShZ,SAAS/L,cAAc,UAChCglB,EAAuBP,EAAgBC,GACvCniB,EAAWyiB,GAAwBA,EAAqBziB,SAAWyiB,EAAqBziB,SAAW,KACnG0iB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQtb,EAAKuB,MAAMmG,GAAc0S,GAG/BxhB,GAAgC,oBAAbA,IACjBwiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5B5iB,MAIJwiB,EAAOK,OAAS7iB,GAIpBwiB,EAAO3T,GAAK0T,EACZC,EAAOlF,UAAP,UAAA3a,OAA6Bu5B,GAC7B1Z,EAAO9S,IAAMyS,EACbK,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/ChZ,SAASyZ,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAvgB,OAAiBu5B,EAAjB,KAAAv5B,OAA6Byf,GAE/C,IAAK5Y,SAASC,eAAeyZ,GAAc,CACzC,IAAM1H,EAAQhS,SAAS/L,cAAc,QAErC+d,EAAM3M,GAAKqU,EACX1H,EAAM1d,IAAM,aACZ0d,EAAM2H,KAAOhB,EAEb3Y,SAASyZ,KAAKD,YAAYxH,gJAclCzd,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,sDAK9C,IAAM49B,EAAmB,IACI79B,KAAKC,MAAM49B,kBAAoB79B,KAAKC,MAAM49B,iBAAiB/6B,OAAS9C,KAAKC,MAAM49B,iBAAmBj+B,OAAO4H,KAAKuJ,GAAciuB,SAASmC,UAE7Ij3B,QAAQ,SAAAk3B,GAC3BvD,EAAiBuD,GAAUrwB,GAAciuB,SAASmC,QAAQC,KAG5DphC,KAAKiM,SAAS,CACZ4xB,kEAKF79B,KAAKoJ,YAELpJ,KAAKqhC,uBACLrhC,KAAK4gC,0KAIL5gC,KAAKoJ,iMAGkB+B,mEAEvBnL,KAAKoJ,YAEApJ,KAAKC,MAAMg+B,UAAY9yB,EAAU8yB,WAAaj+B,KAAKC,MAAMg+B,UAC5Dj+B,KAAK2gC,YAAY,KAAK3gC,KAAKC,MAAMg+B,8IA4Q5B,IAAA5vB,EAAArO,KAEHtG,EAAQ,KACqB,OAA7BsG,KAAK4K,MAAM6C,cACb/T,EAAQ,aAERA,EAAQ,OAAOsG,KAAK4K,MAAM6C,cACQ,OAA9BzN,KAAK4K,MAAMgzB,iBACblkC,GAAS,MAAMsG,KAAK4K,MAAMizB,iBAAiB79B,KAAK4K,MAAMgzB,gBAAgB39B,MAAMo9B,UAIhF,IAAIr2B,EAAkBhH,KAAKC,MAAM+G,iBAAmBpH,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAiBlE,OAAO,EAA7E,CAAkFiO,GAAcsS,WAAhGze,OAAAhF,OAAA0hC,EAAA,EAAA1hC,CAA6GA,OAAO4H,KAAKxH,KAAKC,MAAM+G,mBAAoB,CAAC+J,GAAcsS,WAGzLrjB,KAAKC,MAAMshC,gBACbv6B,EAAkB,GAClBpH,OAAO4H,KAAKuJ,GAAciuB,SAASC,WAAW/0B,QAAS,SAAAi0B,GACrD,IAAM1a,EAAe1S,GAAciuB,SAASC,UAAUd,GAClD1a,EAAa2c,iBACf3c,EAAa2c,gBAAgBl2B,QAAQ,SAAArG,GAC9BmD,EAAgBquB,SAASxxB,IAC5BmD,EAAgB6J,KAAKhN,QAO/B,IAAM29B,EAAiB,SAAAvhC,GAAK,OAC1BT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKT,SAAWmP,EAAKpO,MAAMw/B,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BpxB,EAAKzD,MAAM6C,cACTjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+R,GAAI,GACPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACP1C,WAAY,EACZyC,UAAW,SACXzS,SAAU,CAAC,EAAGqP,EAAKpO,MAAMw/B,WAAa,EAAI,IAJ5C,mCAQAjgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ+L,MAAO,CACLgkB,SAAS,QAEX13B,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzBhD,EAAgBwU,IAAI,SAAC3X,EAAM0M,GACzB,OACE/Q,EAAAC,EAAAC,cAACgiC,GAAD,CACErE,QAASx5B,EACTia,IAAG,SAAAlZ,OAAWf,GACduH,SAAUiD,EAAKpO,MAAMmL,SACrB8xB,SAAQ,iBAAAt4B,OAAmBf,EAAnB,QACR+a,YAAc,SAAAxQ,GAAOC,EAAKsyB,YAAYvyB,EAAEvK,IACxCs5B,WAAa9uB,EAAKpO,MAAMmL,SAAW,CAACnM,OAAO,QAAU,CAACkL,EAAE,CAAC,EAAE,GAAGlL,OAAO,QACrEmnB,YAAe/X,EAAKpO,MAAMmL,SAItB,KAJiC,CACnCqS,MAAM,CACJoF,KAAO,oBASW,OAA9BxU,EAAKzD,MAAMgzB,eACbp+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvEsE,EAAKpO,MAAMw/B,YACVjgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOV,OAAQ,EAAGyS,GAAI,EAAGC,IAAG,iBAAA/M,OAAmByJ,EAAKzD,MAAM6C,cAA9B,UAEhCjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,IAAKhQ,SAAU,CAAC,EAAGqP,EAAKpO,MAAMw/B,WAAa,EAAI,GAAI1Z,GAAI,GAE1F1X,EAAKpO,MAAMw/B,YAAcpxB,EAAKpO,MAAMg+B,SAApC,6BAAAr5B,OAA4EyJ,EAAKpO,MAAMg+B,SAAvF,+EAAAr5B,OAA+KyJ,EAAKzD,MAAM6C,cAA1L,OAINjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAIrD,EAAKpO,MAAMw/B,WAAa,EAAI,EAAGz1B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GrK,OAAO4H,KAAK6G,EAAKzD,MAAMizB,kBAAkBriB,IAAI,SAAC4lB,EAAO7wB,GACnD,IAAMoxB,EAAatzB,EAAKzD,MAAMizB,iBAAiBuD,GACzCpD,EAAqB3vB,EAAK2xB,6BAA6BoB,EAAO/yB,EAAKzD,MAAM6C,eAC/E,IAAKuwB,IAAuBA,EAAmBl7B,OAC7C,OAAO,EAGT,IAAIq6B,EAAawE,EAAW1hC,OAAS0hC,EAAW1hC,MAAMk9B,WAAawE,EAAW1hC,MAAMk9B,WAAa,GAC3FyE,EAAqBvzB,EAAKpO,MAAMmL,SAAW,CAACnM,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAk+B,EAAav9B,OAAOC,OAAOs9B,EAAWyE,GAGpCpiC,EAAAC,EAAAC,cAACgiC,GAAD9hC,OAAAC,OAAA,CAAauL,SAAWiD,EAAKpO,MAAMmL,SAAW0S,IAAG,UAAAlZ,OAAYw8B,IAAcO,EAAW1hC,MAAtF,CAA6Fk9B,WAAaA,EAAave,YAAc,SAAAxQ,GAAC,OAAIC,EAAKqyB,aAAatyB,EAAEgzB,WAMxI,WAA9B/yB,EAAKzD,MAAMgzB,eACTp+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8f,GAAI,EAAG/N,GAAI,GACdlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG+mB,GAAI,GACzDvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,QACRsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAIrD,EAAKpO,MAAMw/B,WAAa,EAAI,EAAGz1B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9GoE,EAAKzD,MAAMozB,mBAAmBl7B,OAAS,EAEnCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG0S,GAAI,CAAC,EAAE,IAA9D,2CAIErD,EAAKzD,MAAMozB,mBAAmBxiB,IAAI,SAAC2iB,EAAS5tB,GAC1C,IAAMkT,EAAepV,EAAKqxB,gBAAgBvB,GAC1C,OACE3+B,EAAAC,EAAAC,cAACgiC,GAAD9hC,OAAAC,OAAA,CAAaie,IAAG,oBAAAlZ,OAAsBu5B,IAAgB1a,EAAtD,CAAoE7E,YAAc,SAAAxQ,GAAOC,EAAK6vB,oBAAoB9vB,EAAE+vB,EAAS9vB,EAAKzD,cAO5IpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG+mB,GAAI,GAA3D,wEAUdvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGboE,EAAKzD,MAAMmzB,kBACZv+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJghB,SAAWrkB,EAAKpO,MAAMw/B,WAAa,OAAS,UAC5CvlC,MAASmU,EAAKpO,MAAMw/B,aAAepxB,EAAKpO,MAAMmL,SAAY,IAAO,IAG9DiD,EAAKpO,MAAMw/B,YACVjgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOV,OAAQ,EAAGyS,GAAI,EAAGC,IAAG,iBAAA/M,OAAmByJ,EAAKzD,MAAM6C,cAA9B,WAGlCjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAaX,EAAKpO,MAAMw/B,WAAa,EAAI,EAAIzgC,SAAU,EAAG0S,GAAI,GAAzF,wBAGAlS,EAAAC,EAAAC,cAACoiB,GAAA,EAAD,CACE4Q,SAAWrkB,EAAKpO,MAAMw/B,aAAepxB,EAAKpO,MAAMmL,SAAW,OAAS,OACpEyc,YAAa,sBACbga,iBAAmB,SAACC,GAAD,MAAgB,wCACnCtzB,MAAOH,EAAKzD,MAAMkzB,gBAClB/b,SAAU1T,EAAKwyB,oBACfxgB,QAAShS,EAAKyyB,2BAIpBthC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAUyC,UAAW,UAErF6B,EAAKzD,MAAMmzB,mBACqB,OAA/B1vB,EAAKzD,MAAMkzB,gBACTt+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,QACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG0S,GAAI,CAAC,EAAE,IAA9D,2CAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAIrD,EAAKpO,MAAMw/B,WAAa,EAAI,EAAGz1B,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9GoE,EAAKzD,MAAMkzB,gBAAgBmB,UAAUn8B,OAAS,EAC5CuL,EAAKzD,MAAMkzB,gBAAgBmB,UAAUzjB,IAAI,SAAC2iB,EAAS5tB,GACjD,IAAMkT,EAAepV,EAAKqxB,gBAAgBvB,GAC1C,OACE3+B,EAAAC,EAAAC,cAACgiC,GAAD9hC,OAAAC,OAAA,CAAaie,IAAG,oBAAAlZ,OAAsBu5B,IAAgB1a,EAAtD,CAAoE7E,YAAc,SAAAxQ,GAAMC,EAAKkyB,eAAenyB,EAAE+vB,SAIlH3+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG0S,GAAI,GAA3D,sEAQNlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzC,WAAY,EAAGhQ,SAAU,EAAG0S,GAAI,GAA3D,wDA6BZrD,EAAKpO,MAAMw/B,YAA2C,OAA7BpxB,EAAKzD,MAAM6C,gBAAoD,OAAxBY,EAAKpO,MAAMg+B,UAAmD,OAA9B5vB,EAAKzD,MAAMgzB,iBACzGp+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAM,SACNnN,aAAc,EACd2mB,UAAW,OACXtH,QAAU,SAAAvQ,GAAC,OAAIC,EAAKixB,OAAOlxB,KAN7B,cAgBV,OAAIpO,KAAKC,MAAMw/B,WAEXjgC,EAAAC,EAAAC,cAAC8hC,EACKxhC,KAAKC,OAMbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKq/B,YACzB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAOA,IAEzB8F,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAAC8hC,EAAD,OAEFhiC,EAAAC,EAAAC,cAACsiC,GAAUnF,OAAX,KACEr9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+hB,GAAI,CAAC,EAAE,GAAI1X,cAAe,CAAC,SAAU,OAAQ9P,MAAO,EAAG+P,eAAgB,UAC3EzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdymB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCuT,QAAU,SAAAvQ,GAAC,OAAIC,EAAKgxB,WAAWjxB,KALjC,SAU+B,OAA7BpO,KAAK4K,MAAM6C,gBAAmD,OAAxBzN,KAAKC,MAAMg+B,UAAmD,OAA9Bj+B,KAAK4K,MAAMgzB,iBAC/Ep+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4f,UAAWC,KAAO1oB,eAClBwI,aAAc,EACdymB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCuT,QAAU,SAAAvQ,GAAC,OAAIC,EAAKixB,OAAOlxB,KAN7B,sBA/pBKikB,IAAMlyB,oBCUd8hC,oLArBX,IAAM7b,EAAcxmB,OAAOC,OAAO,CAChC3F,MAAM,EACN8E,SAAS,EACTgQ,WAAW,EACX/P,OAAO,OACP8e,UAAU,KACVze,aAAa,EACb2mB,UAAU,WACVjmB,KAAKC,MAAMmmB,aAEb,OACG5mB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACKumB,EADL,CAECzH,QAAS3e,KAAKC,MAAM2e,cAEnB5e,KAAKC,MAAMC,iBAjBMC,aC0cX+hC,8MAtcbt3B,MAAQ,CACNu3B,MAAM,KACNC,OAAM,EACNC,WAAW,EACXC,YAAW,EACXC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB73B,oBAAqB,IAGrBpK,cAAgB,OAiChBksB,uCAAoB,SAAA1rB,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBjB,EAAKsiC,kBADa,wBAAAvhC,EAAAS,SAAAZ,EAAAjB,WAIpB4iC,oCAAiB,SAAAlgC,IAAA,IAAA+vB,EAAApnB,EAAA,OAAAtK,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACY,IAAIwD,QAAJ,eAAA6N,EAAA/S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAgB,EAAO6gC,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACtCjB,EAAKI,cAAcsiC,UAAU,iBAAiB1iC,EAAKJ,MAAMitB,MACzD7sB,EAAKJ,MAAM+iC,KAAKC,IAAIL,eAAeviC,EAAKJ,MAAMitB,KAAK,SAACgW,EAAIzQ,GACtDoQ,EAAQpQ,KAH4B,wBAAAtwB,EAAAN,SAAAG,EAAAhC,SAAb,gBAAAqC,EAAAC,GAAA,OAAAqQ,EAAApQ,MAAAvC,KAAAwC,YAAA,IADZ,cACTiwB,EADS5vB,EAAApB,KAQT4J,EAAW,GACbonB,EACFpnB,EAASonB,YAAcA,GAEvBpnB,EAASi3B,YAAa,EACtBj3B,EAAS82B,MAAQ,kCAGnB9hC,EAAK4L,SAASZ,GAhBCxI,EAAAjB,OAAA,SAiBR6wB,GAjBQ,wBAAA5vB,EAAAhB,SAAAa,EAAA1C,WAmEjBmjC,kCAAe,SAAAjgC,IAAA,IAAAizB,EAAAiN,EAAA,OAAAriC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACI+hC,IAAMC,IAAI,kDADd,YACPnN,EADOhzB,EAAA1B,MAAA,CAAA0B,EAAA7B,KAAA,eAGL8hC,EAAYjN,EAAG7pB,KACrBjM,EAAK4L,SAAS,CACZm3B,cALSjgC,EAAAvB,OAAA,SAOJwhC,GAPI,cAAAjgC,EAAAvB,OAAA,SASN,MATM,wBAAAuB,EAAAtB,SAAAqB,EAAAlD,WAYfujC,wCAAqB,SAAAlgC,IAAA,IAAA8yB,EAAAqN,EAAA,OAAAziC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EACF+hC,IAAMC,IAAI,qDADR,YACbnN,EADa5yB,EAAA9B,MAAA,CAAA8B,EAAAjC,KAAA,eAGXkiC,EAAerN,EAAG7pB,KACxBjM,EAAK4L,SAAS,CACZu3B,iBALejgC,EAAA3B,OAAA,SAOV4hC,GAPU,cAAAjgC,EAAA3B,OAAA,SASZ,MATY,wBAAA2B,EAAA1B,SAAAwB,EAAArD,WAYrByjC,mBAAqB,SAACC,GACpB,IAAIC,EAAa,KAUjB,GATItjC,EAAKuK,MAAM44B,cACbnjC,EAAKuK,MAAM44B,aAAat5B,QAAQ,SAACC,EAAEoG,GACjC,IAAKozB,GAAc/3B,WAAWzB,EAAEy5B,WAAWh4B,WAAW83B,GAEpD,OADAC,EAAax5B,GACN,IAKT9J,EAAKuK,MAAMw4B,WAAaO,EAAW,CACrC,IAAME,EAAWxjC,EAAKyjC,cAAcH,EAAWtjC,EAAKuK,MAAM6nB,YAAYsR,KAGlEC,EAFeH,EAAS,GACNxjC,EAAKuK,MAAMw4B,UAAUa,WAI3C,OAFAD,EAAa73B,SAAS63B,EAAWpzB,QAAQ,IACzCvQ,EAAKI,cAAcsiC,UAAU,qBAAqBY,EAAWtjC,EAAKuK,MAAM6nB,YAAYsR,IAAIF,EAASG,GAC1FA,EAGT,OAAO,QAGTE,4CAAyB,SAAAtgC,IAAA,IAAA8+B,EAAAD,EAAAiB,EAAA1V,EAAAmW,EAAAC,EAAA/B,EAAA,OAAAthC,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,UACnBohC,EAAgB,EAChBD,EAAgB,EAEfpiC,EAAKuK,MAAM6nB,cAAepyB,EAAKwK,mBAJb,CAAAnG,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,UAKd,GALc,OAQlBvB,EAAKuK,MAAM6nB,YAAYuD,cACpB0N,EAAW93B,WAAWvL,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAM6nB,YAAYiR,UAAUj+B,IAAI,KAAK2Q,YAC/FssB,EAAgBriC,EAAKojC,mBAAmBC,IAG1CjB,EAAgBC,GAAgC,EAE5CriC,EAAKuK,MAAM23B,cACPvU,GAAgB,IAAI5U,MAAOI,UAC3B2qB,EAAgBh4B,UAAU6hB,EAAc7hB,SAAS9L,EAAKuK,MAAM23B,cAAc,KAGhFG,GAAiByB,EACjBzB,EAAgB3pB,KAAKG,IAAIwpB,EAAc,GAEvCriC,EAAKI,cAAcsiC,UAAU,iBAAiBN,EAAc,gBAAgB0B,EAAc,qBAAqBzB,IAG3G0B,EAAa3B,EAAcC,EAC3BL,EAAaI,EAAc,EAAI72B,WAAWw4B,EAAW3B,GAAiB,EAE5EpiC,EAAK4L,SAAS,CACZw2B,gBACAC,gBACAL,eAGFgC,WAAW,WAAKhkC,EAAKikC,qBAAqB,KAnCnB,yBAAA5/B,EAAA7C,SAAA+B,EAAA5D,WAsCzBskC,kBAAoB,WAElB,GAAIjkC,EAAKwK,mBACP,OAAO,EAGT,IAAI63B,EAAgBriC,EAAKuK,MAAM83B,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM0B,EAAa/jC,EAAKuK,MAAM63B,cAAcC,EACtCL,EAAaz2B,WAAWw4B,EAAW/jC,EAAKuK,MAAM63B,eACpDpiC,EAAK4L,SAAS,CACZo2B,aACAK,kBAEF2B,WAAW,WAAKhkC,EAAKikC,qBAAqB,UAX1CjkC,EAAK4L,SAAS,CACZo2B,WAAW,EACXD,OAAM,SAYV/hC,EAAK4L,SAAS,CACZo2B,WAAW,EACXD,OAAM,OAKZmC,+BAAY,SAAAx+B,IAAA,IAAAy+B,EAAAnO,EAAAoO,EAAAlC,EAAAl3B,EAAAlH,EAAA2B,EAAA09B,EAAAJ,EAAA,OAAAriC,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,UAGJkjC,EAHI,oBAIJnO,EAASh2B,EAAKJ,MAAMitB,KAAKxc,cAE3B+zB,EAAoB,KACpBlC,EAAc,KACdl3B,EAAW,GAEXq5B,eACFD,EAAoBC,aAAaC,QAAQH,MAEvCC,EAAoBtkB,KAAKykB,MAAMH,IAI9BA,GAAsBA,EAAkBpO,GAjBnC,CAAAlwB,EAAA7E,KAAA,gBAkBRihC,GAAc,IAAInpB,MAAOI,UAlBjBrT,EAAA7E,KAAA,GAoB+BwD,QAAQC,IAAI,CACjD1E,EAAKkjC,qBACLljC,EAAK8iC,iBAtBC,QAAAh/B,EAAAgC,EAAA1E,KAAAqE,EAAAlG,OAAAsF,EAAA,EAAAtF,CAAAuE,EAAA,GAoBDq/B,EApBC19B,EAAA,GAoBYs9B,EApBZt9B,EAAA,IAyBR2+B,EAAoB,IACFpO,GAAU,CAC1BkM,cACAa,YACAI,gBAIFnjC,EAAKI,cAAcokC,gBAAgBL,EAAiBrkB,KAAKC,UAAUqkB,IAEnEp5B,EAAWo5B,EAAkBpO,GAExBmN,GAAiBJ,IACpB/3B,EAAS82B,MAAQ,0BAtCX,QA0CV9hC,EAAK4L,SAASZ,GA1CJ,yBAAAlF,EAAAtE,SAAAkE,EAAA/F,WA6CZ2iC,qCAAkB,SAAAn8B,IAAA,IAAA6E,EAAA,OAAAtK,EAAAtB,EAAA0B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,UAEXjB,EAAKJ,MAAMitB,MAAS7sB,EAAKJ,MAAM+iC,KAFpB,CAAAr8B,EAAArF,KAAA,eAAAqF,EAAA/E,OAAA,UAGP,GAHO,cAMVyJ,EAAW,CACfm3B,aAAY,GAEdniC,EAAK4L,SAASZ,GATE1E,EAAArF,KAAA,EAWUjB,EAAKuiC,iBAXf,WAAAj8B,EAAAlF,KAAA,CAAAkF,EAAArF,KAAA,gBAAAqF,EAAArF,KAAA,GAcRjB,EAAKkkC,YAdG,QAed,IACElkC,EAAK6jC,yBACL,MAAOhB,GACP73B,EAAS82B,MAAQ,yBAKnB9hC,EAAK4L,SAASZ,GAvBA,yBAAA1E,EAAA9E,SAAA2E,EAAAxG,oFAvQZA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oKAU9C,IAJAD,KAAK6K,oBAAqB,EAEtBiG,EAAKhG,OAAOu5B,WAAW,aAAe,GAEnCvzB,KACHhG,OAAOg6B,aAAah0B,kJAKxB9Q,KAAKoJ,+FAGkB+B,mEACvBnL,KAAKoJ,aAEApJ,KAAK4K,MAAM43B,aAAexiC,KAAKC,MAAM+iC,MACxChjC,KAAK2iC,2JA+BMgB,EAAYoB,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYvB,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFwB,EAPe,QACF,MAMQxB,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBuB,EAbc,OACN,MAYYvB,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EwB,EAVe,OAEG,KAQGxB,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMyB,EAAO,GAAK,EADLrsB,KAAKssB,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAelsB,KAAKssB,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAActB,EAAU,oBAAyBA,EAAU,WAAgBqB,iDAkMnF,GAAIhlC,KAAK4K,MAAM83B,cAAc,GAAG,CAC9B,IAAM4C,EAAUvsB,KAAK2W,MAAM1vB,KAAK4K,MAAM83B,cAAc,IAC9C6C,EAAUvlC,KAAK4K,MAAM83B,cAAuB,GAAR4C,EAC1C,OAAQ,IAAIA,GAASza,QAAQ,GAAG,KAAK,IAAI0a,GAAS1a,QAAQ,GAAG,OAE7D,OAAO7qB,KAAK4K,MAAM83B,cAAc,qCAI3B,IAAAr5B,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,UAEV,OAA7B/J,KAAK4K,MAAM83B,cACT1iC,KAAK4K,MAAMw3B,MACT5iC,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTgC,GAAG,EACHvO,MAAM6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,aAEtD/6B,YAAa,CACXgC,KAAK,QAEP3C,UAAW,CACT2H,UAAU,SACV1H,WAAW,SACXE,eAAe,UAEjBpR,KAAMmH,KAAKC,MAAMwlC,WAAazlC,KAAKC,MAAMwlC,WAAa,8BAGxDjmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAGvT,MAAQ6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,aAAexlC,KAAKC,MAAMylC,SAAW1lC,KAAKC,MAAMylC,SAAW,kBAA9H,IAAkJlmC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAQ6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,YAAax2B,WAAY,GAAKhP,KAAK4lC,wBACtPpmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAU6O,MAAQxO,KAAK4K,MAAMy3B,cAIZ,OAArBriC,KAAK4K,MAAMu3B,OAAmBniC,KAAK4K,MAAM03B,WAoBvC9iC,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTgC,GAAG,EACHvO,MAAM6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,aAEtD/6B,YAAa,CACXgC,KAAK,QAEP3C,UAAW,CACT2H,UAAU,SACV1H,WAAW,SACXE,eAAe,UAEjBpR,KAAOmH,KAAK4K,MAAMu3B,MAAQniC,KAAK4K,MAAMu3B,MAASniC,KAAKC,MAAMitB,KAAQltB,KAAKC,MAAM4lC,eAAiB7lC,KAAKC,MAAM4lC,eAAiB,gCAAoC7lC,KAAKC,MAAM6lC,eAAiB9lC,KAAKC,MAAM6lC,eAAiB,2BAhCvNtmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,MACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVyS,UAAW,SACXtT,MAAO6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,YAEpDxlC,KAAK4K,MAAMu3B,QAuBpBniC,KAAKC,MAAMitB,KACT1tB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ3f,OAAQ,SACR0nB,WAAY,YACZznB,IAAK,+BACLqlB,KAAI,2BAAAxgB,OAA6B5E,KAAKC,MAAMitB,MAC5C/uB,MAAO6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,YAErDhmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVyS,UAAW,SACXtT,MAAO6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,YAHvD,qBAOAhmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,SACNM,KAAM,YACN5O,MAAO6B,KAAKC,MAAMulC,UAAYxlC,KAAKC,MAAMulC,UAAY,eAIjB,oBAAjCxlC,KAAKC,MAAM8lC,kBAClBvmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ2F,KAAI,qBACJzG,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKpJ,MAAM8lC,qBAC1B5nC,MAAO6B,KAAKC,MAAM+lC,gBAAkBhmC,KAAKC,MAAM+lC,gBAAkB,WACjExe,WAAYxnB,KAAKC,MAAMgmC,qBAAuBjmC,KAAKC,MAAMgmC,qBAAuB,aAEhFzmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVyS,UAAW,SACXtT,MAAO6B,KAAKC,MAAM+lC,gBAAkBhmC,KAAKC,MAAM+lC,gBAAkB,YAHnE,sBAOAxmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,SACNM,KAAM,SACN5O,MAAO6B,KAAKC,MAAM+lC,gBAAkBhmC,KAAKC,MAAM+lC,gBAAkB,eAIvE,aAhcc7lC,aCsDb+lC,8MApDbzlC,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAKL,IAAIiW,EAAY,CACdlV,EAAE,EACFjQ,MAAM,IACNisC,YAAYnmC,KAAKC,MAAMkmC,aAGrBz7B,EAAY,CACd1L,SAAS,EACTgQ,WAAW,EACXyC,UAAU,SACVtT,MAAM6B,KAAKC,MAAMif,SAAW,YAAc,UAM5C,OAHAG,EAAYrf,KAAKS,cAAc2lC,kBAAkB/mB,EAAUrf,KAAKC,MAAMof,WACtE3U,EAAY1K,KAAKS,cAAc2lC,kBAAkB17B,EAAU1K,KAAKC,MAAMyK,WAGpElL,EAAAC,EAAAC,cAACqhB,GAAD,CACEhG,eAAe,EACfsE,UAAWA,EACXH,SAAUlf,KAAKC,MAAMif,UAErB1f,EAAAC,EAAAC,cAACC,EAAA,EACK+K,EAEH1K,KAAKC,MAAMoiC,WAHd,aA7C0BliC,aCwzCnBkmC,8MAjzCbz7B,MAAQ,CACN07B,MAAM,EACNxf,SAAQ,EACRhqB,OAAO,UACPwlC,WAAW,CACTiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,GAEVpqB,QAAQ,CACN25B,OAAO,KACPvP,SAAQ,GAEVtqB,OAAO,CACL65B,OAAO,KACPvP,SAAQ,IAGZgb,WAAW,GACX0E,WAAU,EACVC,aAAa,KACbC,cAAc,KACdC,eAAc,EACdC,gBAAe,EACfC,iBAAiB,KACjBC,oBAAoB,GACpBC,mBAAmB,KACnBC,sBAAqB,EACrBC,yBAAwB,EACxBC,yBAAyB,KACzBC,0BAA0B,QAI5B1mC,cAAgB,OAUhB2mC,UAAY,SAACtqC,GACI,OAAXA,GACFuD,EAAK4L,SAAS,CACZnP,cAKNuqC,oBAAsB,SAACV,GACrBtmC,EAAK4L,SAAS,CACZ06B,kBAG4C,oBAAnCtmC,EAAKJ,MAAMonC,qBACpBhnC,EAAKJ,MAAMonC,oBAAoBV,MAInCW,iBAAmB,SAACl5B,GAClB,IAAK/N,EAAKuK,MAAM9N,OACd,OAAO,EAET,IAAMg2B,EAAS1kB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM0M,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM,GAErIrB,EAAKknC,oBAAoBzU,GACzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAAS,OAEvBglC,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3ByU,oBAAsB,WAAiB,IAAhBzU,EAAgBtwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKnC,EAAKuK,MAAM9N,OACd,OAAO,EAEJg2B,IACHA,EAASzyB,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,SAE5C,IAAI8pC,GAAiB,EACrB,GAAI9T,EAEF,OADA8T,EAAiB9T,EAAOztB,IAAI,GACpBhF,EAAKuK,MAAM9N,QACjB,IAAK,SACH8pC,EAAiBA,GAAkB9T,EAAO/b,GAAG1W,EAAKuK,MAAM87B,eAM9DrmC,EAAK4L,SAAS,CACZ26B,sBAIJY,cAAgB,WACd,IAAKnnC,EAAKuK,MAAM9N,QAAgE,OAAtDuD,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,QAClE,OAAO,EAGT,IAAIg2B,EAAS,KACP2U,EAAqBpnC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAAS2I,IAAI,KAE3G,OAAOpF,EAAKuK,MAAM9N,QAChB,IAAK,UACL,IAAK,SACHg2B,EAASzyB,EAAKuK,MAAM87B,cAAgBrmC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAM87B,eAAelhC,MAAMiiC,GAAsB,KAMvHpnC,EAAKknC,oBAAoBzU,GAEzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3B4U,uBAAyB,SAACrF,GACxB,IAAKhiC,EAAKuK,MAAM9N,OACd,OAAO,EAETuD,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAASulC,UAK3BsF,mCAAgB,SAAA1mC,IAAA,IAAA6gC,EAAAhb,EAAA8gB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlnC,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAERwgC,EAAazhC,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,SAEhDuD,EAAKuK,MAAMg8B,gBAAmB9E,IAAczhC,EAAKI,cAAciB,MAAMogC,GAAYz8B,IAAI,GAJ3E,CAAAjE,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAKL,GALK,OAQRklB,GAAU,EARF1lB,EAAAgE,GAUN/E,EAAKuK,MAAM9N,OAVLsE,EAAAE,KAWP,WAXOF,EAAAgE,GAAA,qBAaL/E,EAAKJ,MAAMO,YAAYiX,WAAcpX,EAAKJ,MAAMO,YAAYiX,UAAUC,YAbjE,CAAAtW,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAcD,GAdC,cAiBJgmC,EAAkBvnC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY3K,KAE/D86B,EAAoBxnC,EAAKI,cAAcynC,qBAAqBpG,EAAW,KAGtD,EACD,KAUhBiG,GADAD,EAAgG,IAClDhlC,SAAyD,IAA/CglC,EAA6B7vB,QAAQ,KAAc5X,EAAKI,cAAciB,MAAM,MAAWrB,EAAKI,cAAciB,MAAM,KAExKsmC,EAAiB,SAAC3rB,EAAG8lB,GACzB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBpkB,cAAa,aACbC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,OACf0qC,WAAYl8B,SAAS21B,IAGnBK,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,GACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,SAMhDumC,EAAwB,SAAC5rB,GAC7B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBAMRh2B,EAAKJ,MAAMmC,0BAA0BwlC,EAAiB,kBAAmB,CACvEC,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtC3mC,EAAAQ,OAAA,2BAAAR,EAAAQ,OAAA,oBAgGdvB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINgqB,iBArGQ,yBAAA1lB,EAAAS,SAAAZ,EAAAjB,WAsIhBwoC,8BAAgC,SAACvB,GAC/B5mC,EAAK4L,SAAS,CACZg7B,+BAIJwB,oDAAiC,SAAAzmC,IAAA,IAAA0mC,EAAAC,EAAAf,EAAAgB,EAAA,OAAA7nC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WAC3BjB,EAAKJ,MAAMO,YAAYiX,YAAapX,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAD1C,CAAA1mC,EAAAb,KAAA,YAEvBonC,EAAwBroC,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBACzDF,EAAwBD,EAAsB37B,MAC1B1M,EAAKI,cAAc8kB,kBAAkBojB,GAJlC,CAAAxmC,EAAAb,KAAA,gBAMrBsmC,EAAkBvnC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY3K,KAN1C5K,EAAAb,KAAA,EAOCjB,EAAKI,cAAcqoC,mBAAmBlB,EAAgBc,EAAsB9hC,QAAQvG,EAAKJ,MAAMuB,SAPhG,cAOrBonC,EAPqBzmC,EAAAV,KAAAU,EAAAP,OAAA,SAQpBgnC,GARoB,eAAAzmC,EAAAP,OAAA,UAWxB,GAXwB,yBAAAO,EAAAN,SAAAG,EAAAhC,WAcjCwW,oCAAiB,SAAA9T,IAAA,IAAAokB,EAAA+f,EAAAJ,EAAAsC,EAAA7B,EAAAC,EAAA6B,EAAAtC,EAAAK,EAAAkC,EAAAC,EAAAC,EAAAvB,EAAAlwB,EAAAmxB,EAAA/1B,EAAAG,EAAA5H,EAAAq9B,EAAAU,EAAA5C,EAAA6C,EAAAC,EAAAC,EAAA,OAAAxoC,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAEVjB,EAAKJ,MAAMO,aAAgBH,EAAKJ,MAAMuB,QAF5B,CAAAqB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,UAGN,GAHM,UAQXklB,GAAU,EACdzmB,EAAK4L,SAAS,CACZ6a,UACAwb,WAAW,CACTiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,GAEVpqB,QAAQ,CACN25B,OAAO,KACPvP,SAAQ,GAEVtqB,OAAO,CACL65B,OAAO,KACPvP,SAAQ,MAKV+f,GAAmB,EACnBJ,EAAe,aACfsC,EAAyB,KACzB7B,EAA2B,KAC3BC,GAA4B,EAC5B6B,EAAgB3oC,EAAKI,cAAciB,MAAM,GACzCglC,EAAgBrmC,EAAKI,cAAciB,MAAM,GACzCqlC,EAAqB1mC,EAAKI,cAAciB,MAAM,GAC5CunC,OAA6ClmC,IAA7B1C,EAAKJ,MAAMgpC,eAA8B5oC,EAAKJ,MAAMgpC,eAGtE5oC,EAAKJ,MAAMO,YAAYiX,YAAapX,EAAKJ,MAAMO,YAAYiX,UAAU9S,QAtC1D,CAAA9B,EAAAvB,KAAA,YAuCP4nC,EAAkB7oC,EAAKJ,MAAMO,YAAYiX,UAAUC,YACnDyxB,EAAiBD,EAAgB1jB,IACjCoiB,EAAkBsB,EAAgBn8B,MACpC2K,EAAcrX,EAAKI,cAAc8kB,kBAAkBqiB,MAGnCuB,EA7CP,CAAAtmC,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GA8CSjB,EAAKJ,MAAMwlB,aAAamiB,EAAgBsB,EAAgBtiC,QAAQuiC,GA9CzE,QA8CXzxB,EA9CW7U,EAAApB,KAAA,YAiDTonC,EAAoBxoC,EAAKI,cAAc8kB,kBAAkBllB,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAAkB97B,SAEtF1M,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAAkBrjB,IAnDhE,CAAA3iB,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GAoDejB,EAAKJ,MAAMwlB,aAAaplB,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAAkB97B,KAAK1M,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAAkBjiC,QAAQvG,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBAAkBrjB,KApD7M,QAoDXqjB,EApDWhmC,EAAApB,KAAA,YAuDTiW,IAAemxB,EAvDN,CAAAhmC,EAAAvB,KAAA,gBAyDXmlC,EAAepmC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY7T,MAzDjDhB,EAAAvB,KAAA,GAgEDwD,QAAQC,IAAI,CAEpB1E,EAAKI,cAAc+oC,iBAAiB5B,GAEpCvnC,EAAKooC,iCAELpoC,EAAKI,cAAcgpC,mBAAmB7B,EAAgBvnC,EAAKJ,MAAMuB,SAEhEynC,EAAgB5oC,EAAKI,cAAcuC,oBAAoB4kC,EAAgB,cAAgB,OAxE/E,QAAA90B,EAAAjQ,EAAApB,KAAAwR,EAAArT,OAAAsF,EAAA,EAAAtF,CAAAkT,EAAA,GA4DTo0B,EA5DSj0B,EAAA,GA6DTk0B,EA7DSl0B,EAAA,GA8DT8zB,EA9DS9zB,EAAA,GA+DT+1B,EA/DS/1B,EAAA,GA6EP8zB,IAEFL,EAAgBrmC,EAAKI,cAAc+C,iBAAiBujC,EAAmBG,GACnE8B,IACFA,EAAgB3oC,EAAKI,cAAc+C,iBAAiBwlC,EAAc3oC,EAAKJ,MAAMO,YAAYiD,UACzFslC,EAAyB1oC,EAAKI,cAAciB,MAAMglC,GAAelhC,MAAMnF,EAAKI,cAAciB,MAAMsnC,KAGlGnC,EAAmBxmC,EAAKI,cAAciB,MAAMqlC,GAAoBhwB,GAAG,IArF1D,WA4FT1L,EAAW,CACfyb,QAHFA,GAAU,EAIR2f,eACAC,gBACAG,mBACAE,qBACAgC,yBACA7B,2BACAC,8BAIIuB,EAAwBroC,EAAKJ,MAAMO,YAAYiX,UAAUoxB,mBACrCa,WAAwD,IAA3ChB,EAAsBgB,UAAU5mC,SAC/DsmC,EAAeV,EAAsBgB,UAAU,GACjDlD,EAA8C,qBAA3B4C,EAAa5C,WAA4B4C,EAAa5C,UACvE6C,EAAkD,qBAA7BD,EAAaC,aAA8BD,EAAaC,YAC7EC,EAAiBjpC,EAAKI,cAAc8kB,kBAAkBllB,EAAKJ,MAAMO,YAAYuM,OACnFy5B,EAAYA,GAAa6C,GAAeC,QAA0DvmC,IAAxCumC,EAAenI,QAAQkI,MAE/Eh+B,EAAS87B,2BAA4B,KAIrC9mC,EAAKJ,MAAM0pC,SApHA,CAAA9mC,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,GAqHgBjB,EAAKI,cAAcmpC,oBAAoBvpC,EAAKJ,MAAMuB,SArHlE,SAqHP+nC,EArHO1mC,EAAApB,QAsHU8nC,EAAeM,UACpCx+B,EAAS27B,sBAAuB,GAvHrB,eAAAnkC,EAAAjB,OAAA,SA4HRvB,EAAK4L,SAASZ,IA5HN,yBAAAxI,EAAAhB,SAAAa,EAAA1C,WA+HjB8pC,0DAAsB,SAAA5mC,EAAOkL,GAAP,IAAAs6B,EAAA,OAAA3nC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAChB8M,GACFA,EAAEsnB,iBAEEgT,EAAwBroC,EAAKJ,MAAMO,YAAYiX,UAAUoxB,kBACrCxoC,EAAKI,cAAc8kB,kBAAkBmjB,EAAsB37B,OAEnF1M,EAAK0pC,aAAa,KAAK1pC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY3K,KAAK27B,EAAsB9hC,SAP7E,wBAAAzD,EAAAtB,SAAAqB,EAAAlD,iEAWtB+lC,uCAAoB,SAAA1iC,IAAA,OAAAtC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OAClBjB,EAAK4L,SAAS,CACZq2B,WAAY,CACViE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,GAEVpqB,QAAQ,CACN25B,OAAO,KACPvP,SAAQ,GAEVtqB,OAAO,CACL65B,OAAO,KACPvP,SAAQ,MAbI,wBAAAvjB,EAAA1B,SAAAwB,EAAArD,WAmBpBgqC,uDAAmB,SAAApmC,EAAOwK,GAAP,IAAAs6B,EAAAuB,EAAAC,EAAA,OAAAnpC,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,UACb8M,GACFA,EAAEsnB,iBAEEgT,EAAwBroC,EAAKJ,MAAMO,YAAYiX,UAAUoxB,mBACrCxoC,EAAKI,cAAc8kB,kBAAkBmjB,EAAsB37B,MALpE,CAAArI,EAAApD,KAAA,eAAAoD,EAAApD,KAAA,EASyBjB,EAAKooC,iCAT9B,OAAA/jC,EAAAjD,KA8EbpB,EAAK4L,SAAS,CACZk7B,2BAA0B,KAlEtB8C,EAAkB,SAAC5tB,EAAG8lB,GAE1B,IAAMiG,EAAY,CAChBpkB,cAAe,UACfC,YAAa,UACbC,WAAY7H,EAAKA,EAAG1e,OAAS,MAGzBwqC,EAAc9rB,GAAoB,YAAdA,EAAG1e,OAIzBwkC,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B25B,0BAA2BgB,EAC3B7F,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,QAK4B,oBAA/BzmB,EAAKJ,MAAMgqC,iBAAkC9B,GACtD9nC,EAAKJ,MAAMgqC,gBAAgB5tB,GAG7Bhc,EAAKmW,kBAGD0zB,EAAyB,SAAC7tB,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ3mC,OAAA0L,EAAA,EAAA1L,CAAA,GACH4N,EAAU80B,WAAWiE,QADnB,CAELlQ,iBAMRh2B,EAAKI,cAAc0pC,YAAY9pC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY3K,KAAK27B,EAAsB9hC,QAAQqjC,EAAgBC,GAE/H7pC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,KAGZqgB,2BAA0B,MA3Ef,wBAAAziC,EAAA7C,SAAA+B,EAAA5D,iEAqFnBtD,8CAAU,SAAAqJ,EAAOqI,EAAEg8B,GAAT,IAAA1B,EAAAG,EAAAwB,EAAAC,EAAAC,EAAA7D,EAAA8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzB,EAAA5C,EAAA6C,EAAAC,EAAAwB,EAAAxE,EAAA,OAAAvlC,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,UACR8M,EAAEsnB,iBAEIgT,EAAwBroC,EAAKJ,MAAMO,YAAYiX,UAAUoxB,oBACzDA,EAAoBxoC,EAAKI,cAAc8kB,kBAAkBmjB,EAAsB37B,OAJ7E,CAAA5G,EAAA7E,KAAA,YAaE+oC,EAAkB,SAAChuB,EAAG8lB,IAErBA,GAAS9lB,GAAoB,UAAdA,EAAG1e,OACrBwkC,EAAQ,CACNzlB,QAAQ,kBAEAL,GAAM8lB,IAChB9lB,EAAK,CACH1e,OAAO,UAIX,IAAMwqC,EAAc9rB,GAAoB,YAAdA,EAAG1e,OAGvByqC,EAAY,CAChBpkB,cAAe,UACfC,YAAammB,EACblmB,WAAY7H,EAAKA,EAAG1e,OAAS,KAC7B0qC,WAAYl8B,SAASu6B,IAGnBvE,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAK1CD,GAEFr9B,OAAO0zB,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPz+B,EAAKJ,MAAM8qC,mBAA6D,oBAAjC1qC,EAAKJ,MAAM8qC,mBACpD1qC,EAAKJ,MAAM8qC,sBAIbjgC,OAAO0zB,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXz+B,EAAKmW,kBAGPnW,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bq5B,kBAAiBsB,EACjB7F,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER5lC,QAAQ,CACN25B,OAAO,KACPvP,SAAQ,SAMVwjB,EAAyB,SAACjuB,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER5lC,QAAQkD,OAAA0L,EAAA,EAAA1L,CAAA,GACH4N,EAAU80B,WAAW5lC,QADnB,CAEL25B,iBAMFkU,EAAYlqC,EAAKJ,MAAM0pC,UAAYtpC,EAAKuK,MAAMq8B,0BAA4B5mC,EAAKuK,MAAMo8B,qBAGrFN,EAAgBrmC,EAAKuK,MAAM87B,cAC3B8D,EAAYnqC,EAAKJ,MAAM+qC,oBAAsB3qC,EAAKI,cAAcwqC,aAAa5qC,EAAKI,cAAcynC,qBAAqB7nC,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,QAAQuD,EAAKuK,MAAMs8B,2BAA6B7mC,EAAKI,cAAcwqC,aAAa5qC,EAAKuK,MAAMm8B,oBAGnP0D,EAAsE,qBAA9CpqC,EAAKJ,MAAMO,YAAY0qC,mBAAqC7qC,EAAKJ,MAAMO,YAAY0qC,mBAAqB7qC,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnM8pC,EAAwB,MAExBD,EA9GA,CAAAtkC,EAAA7E,KAAA,cAkHAopC,EADEH,EACsBlqC,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnEP,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BApH3F,CAAAuF,EAAA7E,KAAA,gBAAA6E,EAAA7E,KAAA,GAwH8BjB,EAAKI,cAAc6E,oBAAoBohC,EAAcrmC,EAAKJ,MAAMwN,cAAcpN,EAAKJ,MAAMO,aAAY,GAxHnI,QAAA2F,EAAA1E,KAyHoBk4B,IAAIt5B,EAAKI,cAAciB,MAAMgpC,MAC/CD,GAAiB,GA1HnB,WAiI2B,oBAF3BE,EAAkBtqC,EAAKJ,MAAM0qC,gBAAkBtqC,EAAKJ,MAAM0qC,gBAAkB,CAACH,EAAUnqC,EAAKJ,MAAMO,YAAYiX,UAAUC,YAAY9Q,QAAQvG,EAAKJ,MAAMO,YAAYqE,KAAK+B,QAAQvG,EAAKJ,MAAMO,YAAYoG,QAAQ6jC,MAGjNE,EAAkBA,EAAgBH,KAIhCD,EAtIA,CAAApkC,EAAA7E,KAAA,SAuIIupC,GAAoBD,EAAA/B,EAAkB1H,SAAQiJ,GAA1B7nC,MAAAqoC,EAAAhrC,OAAA0hC,EAAA,EAAA1hC,CAA8C+qC,IAAiBQ,YACzF9qC,EAAKI,cAAc2qC,+BAA+B1C,EAAsB37B,KAAM89B,EAAmBR,EAAiBC,GAxIhHnkC,EAAA7E,KAAA,oBA4II8nC,EAAeV,EAAsBgB,UAAUttB,OAAQ,SAAAivB,GAAC,OAAIA,EAAEt+B,OAASq9B,IACzE5D,EAA8C,qBAA3B4C,EAAa5C,WAA4B4C,EAAa5C,UACvE6C,EAAkD,qBAA7BD,EAAaC,aAA8BD,EAAaC,YAE7EC,EAAiBjpC,EAAKI,cAAc8kB,kBAAkBllB,EAAKJ,MAAMO,YAAYuM,QACnFy5B,EAAYA,GAAa6C,GAAeC,GAAkBA,EAAenI,QAAQkI,IAjJ/E,CAAAljC,EAAA7E,KAAA,gBAoJMwpC,EAAS,KApJf3kC,EAAA7E,KAAA,GAqJoBgoC,EAAenI,QAAQkI,GAAahpC,EAAKJ,MAAMuB,SAAS8pC,OArJ5E,QAqJMhF,EArJNngC,EAAA1E,KAsJApB,EAAKI,cAAc8qC,WAAWlrC,EAAKJ,MAAMO,YAAYuM,KAAM1M,EAAKJ,MAAMuB,QAASknC,EAAsB37B,KAAMq9B,EAAiBO,EAAiBrE,EAAOwE,EAAQT,EAAiBC,GAtJ7KnkC,EAAA7E,KAAA,iBAyJAjB,EAAKI,cAAc2B,0BAA0BsmC,EAAsB37B,KAAMq9B,EAAiBO,EAAiBN,EAAiBC,GAzJ5H,QA+JJjqC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER5lC,QAAQ,CACN25B,OAAO,KACPvP,SAAQ,QApKV,eAAA3gB,EAAAvE,OAAA,UA2KD,GA3KC,yBAAAuE,EAAAtE,SAAAkE,EAAA/F,4IAtfJA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAmN9CD,KAAKoJ,YACLpJ,KAAKwW,yGAOYrL,EAAUqC,GAC3BxN,KAAKoJ,YAEL,IAAM2S,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDgqC,EAAkBrgC,EAAUw+B,WAAa3pC,KAAKC,MAAM0pC,UACrCx+B,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,gBAAmBtC,EAAU3K,aAAeR,KAAKC,MAAMO,aAE/Fub,GAAkByvB,IACpCxrC,KAAKwW,iBAGP,IAAMi1B,EAAgBzrC,KAAK4K,MAAM9N,SAAW0Q,EAAU1Q,OAChD4uC,EAA6B1rC,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAY0Q,EAAUs5B,oBAAoB9mC,KAAK4K,MAAM9N,SAC9H2uC,GAAiBC,IACnB1rC,KAAKwnC,iDAwbA,IAAAn+B,EAAArJ,KAEP,IAAKA,KAAKC,MAAMO,cAAgBR,KAAKC,MAAMwN,cACzC,OAAO,KAGT,IAAMk+B,EAAqB3rC,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,mBACjEgrC,EAAwBD,EAAmBhnC,SAAkG,qBAAhFgnC,EAAmB1rC,MAAM+G,gBAAgBhH,KAAKC,MAAMO,YAAYqE,KAAKhB,OAClIgoC,EAA+BF,EAAmBG,eAElDC,EAAyB,SAAC9rC,GAAD,OAC7BT,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACT8W,GAAG,EACHzM,GAAG,EACHhI,GAAG,EACHhQ,GAAG,EACH5C,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,SACfwV,GAAGpW,EAAKuB,MAAM+7B,cAAgB,EAAI,IAGpCnnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,iBAGVvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAU,EACVyM,QAAS/qB,EAAKuB,MAAM+7B,cACpBx1B,MAAK,wCACL4Q,SAAW,SAAA3T,GAAC,OAAI/E,EAAKg+B,oBAAoBj5B,EAAEtO,OAAOs0B,cAKlD4X,EAAkBhsC,KAAKS,cAAcG,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgBZ,KAAK4K,MAAMo8B,qBAExH,OACEhnC,KAAK4K,MAAMkc,SAAW9mB,KAAKC,MAAMuB,QAC/BhC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,EACHjT,UAAU,QACViR,MAAM,CACJ3O,QAAQ,OACR/E,WAAW,SACXE,eAAe,YAInBzK,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,2BAITmH,KAAK4K,MAAMi8B,mBAAqB7mC,KAAK4K,MAAM+7B,cAC1CnnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,IAEP8F,KAAKC,MAAMgsC,iBACZzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,IAGJ3K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAO/M,KAAKC,MAAMgsC,gBAAkB,YAAc,YAEpDzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAEwB,OAAjCzR,KAAKC,MAAMisC,kBAA6BlsC,KAAKC,MAAMisC,kBAAoB,KACtC,OAAjClsC,KAAKC,MAAMisC,mBACX1sC,EAAAC,EAAAC,cAAA,WARJ,OAUSM,KAAKC,MAAMgsC,gBAA4B,GAAV,QAVtC,SAU0DzsC,EAAAC,EAAAC,cAAA,cAASM,KAAK4K,MAAM87B,cAAc91B,QAAQ,GAA1C,IAA+C5Q,KAAK4K,MAAM67B,aAA1D,IAAyEzmC,KAAK4K,MAAMm+B,uBAAX,IAAAnkC,OAAwC5E,KAAK4K,MAAMm+B,uBAAuBn4B,QAAQ,GAAlF,KAAAhM,OAAwF5E,KAAKC,MAAMwN,cAAnG,KAAsH,IAVzP,eAUiRjO,EAAAC,EAAAC,cAAA,WAClP,OAA3BM,KAAKC,MAAMksC,YAAuBnsC,KAAKC,MAAMksC,YAAc,+EAOzCppC,IAA3B/C,KAAKC,MAAMmsC,aAA6BpsC,KAAKC,MAAMmsC,cAClD5sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,WAGZhK,KAAKC,MAAMgsC,iBACVzsC,EAAAC,EAAAC,cAACqsC,EAAD,MAEJvsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,sBAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV98B,EAAK+9B,UAAU,aAGnBrsB,eAAe,EACfmE,SAAiC,YAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,WAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAQJxP,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV98B,EAAK+9B,UAAU,YAGnBrsB,eAAe,EACfmE,SAAiC,WAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,UAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,cAYY,YAAtBhP,KAAK4K,MAAM9N,OACT0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,EACJ1H,cAAe,UAGZ4hC,GAAyBC,IAAiC7rC,KAAKC,MAAMgsC,iBACpEzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8R,UAAW,SACX+V,WAAY,UACZpC,KAAI,sBAAAxgB,OAAwB+mC,EAAmBW,MAA3C,KAAA1nC,OAAoD5E,KAAKC,MAAMO,YAAYqE,KAAKhB,QAHtF,wDAOArE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,UACP4O,KAAM,qBAKZ/M,KAAK4K,MAAMu8B,0BACTnnC,KAAK4K,MAAM03B,WAAW5lC,QAAQoqB,QAC5BtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB9V,KAAMltB,KAAK4K,MAAM03B,WAAW5lC,QAAQ25B,OACpCoP,WAAU,kCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/C0lC,SAAW1lC,KAAKC,MAAMylC,SAAW1lC,KAAKC,MAAMylC,SAAW,yBACvDI,eAAiB9lC,KAAKC,MAAM0pC,UAAY3pC,KAAK4K,MAAMq8B,wBAA0B,8BAAgC,4BAG/GjnC,KAAKC,MAAM+qC,oBACbxrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAGbhK,KAAK4K,MAAM87B,eACTlnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,QACX+V,WAAY,YACZ7I,QAAU,SAACvQ,GAAD,OAAO/E,EAAKq+B,uBAAuB,OAE5C1nC,KAAK4K,MAAM87B,cAAc91B,QAAQ,GARpC,IAQyC5Q,KAAKC,MAAMwN,iBAM5DjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACX8J,YAAa,gBACb9F,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,SAC7CiS,MAAOxO,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,QAAUkD,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAAS8T,UAAY,KAEnIpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKuR,IAAK,SAAA6mB,GAAU,OAC5B7iC,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAYA,EACZvkB,IAAG,YAAAlZ,OAAcy9B,GACjB8D,YAAa,kBAAI98B,EAAKq+B,uBAAuBrF,IAC7CnjB,SAAU7V,EAAKuB,MAAMk8B,oBAAoBz9B,EAAKuB,MAAM9N,UAAYqP,SAASk2B,SAMnF7iC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAGdjK,KAAKC,MAAMO,YAAYiX,UAAUoxB,kBAAkBa,UAAUluB,IAAI,SAAC4tB,EAAa74B,GAC7E,IAAMk8B,EAAerD,EAAar8B,KAClC,OACEvN,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,CAAC,EAAE,IACT+rB,UAAU5c,EAAKpJ,MAAM9G,MAAMR,OAAO+D,SAEpCohB,IAAG,WAAAlZ,OAAa2L,GAChBqO,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK3M,QAAQ0R,EAAEq+B,KAEhCrD,EAAaj4B,WAQ3B3R,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAGbhK,KAAKC,MAAM0sC,eACTntC,EAAAC,EAAAC,cAACC,EAAA,EACKK,KAAKC,MAAM0sC,gBAGjBntC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAO/M,KAAKC,MAAM2sC,cAAgB5sC,KAAKC,MAAM2sC,cAAiB5sC,KAAKC,MAAMgsC,gBAAkB,YAAc,WAI/GzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAKC,MAAM4sC,cACTrtC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACEmH,mBAAoB9sC,KAAKC,MAAM6sC,mBAC/B3gB,wBAAyB,CACvBC,OAAOpsB,KAAKC,MAAM4sC,iBAKtBrtC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,oDAGqD6B,KAAKC,MAAMgsC,gBAAkBjsC,KAAK4K,MAAM87B,cAAc91B,QAAQ,GAAK,MAHxH,IAGiI5Q,KAAK4K,MAAM67B,aAAezmC,KAAKC,MAAMgsC,gBAAX,kBAAArnC,OAA+C5E,KAAKC,MAAMO,YAAYqD,MAAtE,KAAAe,OAA+E5E,KAAKC,MAAMoH,iBAA1F,aAAwH,GAHnR,MAQN7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhB+hC,GACExsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJD,GAAI,EACJjC,GAAI,EACJvlB,MAAO,EACPoF,aAAc,EACdyK,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB7L,gBAAiB,cACjBwpB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAOyD,YAE7CoD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAKC,MAAM0pC,SAAX,0HAGE,4GAIN3pC,KAAKC,MAAM0pC,UACTnqC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxW,MAAO,gCACPijB,QAASp0B,KAAK4K,MAAMq8B,wBACpBllB,SAAW,SAAA3T,GAAC,OAAI/E,EAAKm/B,8BAA8Bp6B,EAAEtO,OAAOs0B,aAMpEp0B,KAAKC,MAAMO,YAAYiX,UAAUoxB,kBAAkBa,UAAUluB,IAAI,SAAC4tB,EAAa74B,GAC7E,IAAMk8B,EAAerD,EAAar8B,KAClC,OACEvN,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACT+rB,UAAU5c,EAAKpJ,MAAM9G,MAAMR,OAAO+D,SAEpCohB,IAAG,WAAAlZ,OAAa2L,GAChBqO,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK3M,QAAQ0R,EAAEq+B,KAEhCrD,EAAaj4B,YAS3BnR,KAAK4K,MAAM03B,WAAWiE,QAAQzf,QAChCtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,uBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWiE,QAAQlQ,OACpCoP,WAAU,gCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAKC,MAAM8sC,YAAc/sC,KAAKC,MAAM8sC,YAApC,mBAAAnoC,OAAuE5E,KAAKC,MAAMgsC,gBAA0B,GAAR,MAApG,KAAArnC,OAAmH5E,KAAK4K,MAAM67B,aAA9H,mDAGJjnC,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKgqC,iBAAiB/+B,KAAKjL,OAL1C,cAeTA,KAAK4K,MAAM03B,WAAWtiC,KAAK4K,MAAM9N,QAAQgqB,QAgExCtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB+C,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/CktB,KAAMltB,KAAK4K,MAAM03B,WAAWtiC,KAAK4K,MAAM9N,QAAQu5B,OAC/CoP,WAAU,cAAA7gC,OAAgB5E,KAAK4K,MAAM9N,OAA3B,eACV4oC,SAAQ,GAAA9gC,OAAK5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QAA9C,oBAxEZ0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACXgE,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,SAC7CsrB,YAAW,UAAAjjB,OAAY5E,KAAK4K,MAAM67B,aAAvB,WACXj4B,MAAoD,OAA7CxO,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,QAAmBkD,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAASsZ,WAAa,KAE7I5W,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAY,GACZ8D,YAAa,kBAAI98B,EAAKq+B,uBAAuB,KAC7CxoB,SAAUlf,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAYqP,SAAS,MAE3E3M,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAY,GACZ8D,YAAa,kBAAI98B,EAAKq+B,uBAAuB,KAC7CxoB,SAAUlf,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAYqP,SAAS,MAE3E3M,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAY,GACZ8D,YAAa,kBAAI98B,EAAKq+B,uBAAuB,KAC7CxoB,SAAUlf,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAYqP,SAAS,MAE3E3M,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAY,IACZ8D,YAAa,kBAAI98B,EAAKq+B,uBAAuB,MAC7CxoB,SAAUlf,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAYqP,SAAS,QAG7E3M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJxV,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,CAAC,EAAE,IACTlC,SAASgI,KAAK4K,MAAMg8B,eACpBnpB,MAAM,CACJyO,cAAc,eAGlBtN,YAAa5e,KAAK4K,MAAMg8B,eAAiB,KAAO5mC,KAAK2nC,cAAc18B,KAAKjL,OAEvEA,KAAK4K,MAAM9N,WAsB1B0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZjK,KAAKC,MAAMgsC,iBAAmBjsC,KAAK4K,MAAMi8B,kBACzCrnC,EAAAC,EAAAC,cAACqsC,EAAD,MAGF/rC,KAAKC,MAAMC,SAAWF,KAAKC,MAAMC,SAAW,aA1yCpCC,aCm+BP6sC,8MAh9BbpiC,MAAQ,CACNqiC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXrwC,OAAO,UACPswC,cAAc,GACd5sC,YAAY,KACZ8hC,WAAW,CACT+K,MAAM,CACJhX,OAAO,KACPvP,SAAQ,IAGZwmB,cAAa,EACb7/B,cAAc,KACd8/B,gBAAe,EACfC,gBAAe,EACfxmC,gBAAgB,KAChBK,iBAAiB,KACjBomC,oBAAmB,EACnBtjB,oBAAoB,KACpB7iB,oBAAoB,KACpBomC,qBAAoB,EACpBvG,2BAA0B,EAC1BhkB,2BAA2B,QAI7B1iB,cAAgB,OAgShB2mC,UAAY,SAACtqC,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUu4B,SAASv4B,EAAO4T,gBAC1DrQ,EAAK4L,SAAS,CACZnP,cAKNiuC,kBAAoB,WAClB1qC,EAAKstC,cACLttC,EAAK4L,SAAS,CACZwhC,oBAAmB,gFAxSjBztC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,YACLpJ,KAAK4tC,sMAGkBziC,EAAUqC,4EACjCxN,KAAKoJ,cAEoB+B,EAAU0iC,UAAUC,SAAW9tC,KAAKC,MAAM4tC,UAAUC,wCAErE9tC,KAAKqlB,oBAGmB7X,EAAUnG,mBAAqBrH,KAAK4K,MAAMvD,mBAElEoG,EAAgB7N,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBAAiB,GAC9DhH,KAAK2gC,YAAYlzB,IAGUD,EAAUC,gBAAkBzN,KAAK4K,MAAM6C,eAElEzN,KAAK2tC,8SAMDjF,EAAwB1oC,KAAK4K,MAAMuf,oBAAoB0e,2BAEvD/jC,QAAQC,IAAI,CAChB/E,KAAKC,MAAMwlB,aAAaijB,EAAsB37B,KAAK27B,EAAsB9hC,QAAQ8hC,EAAsBljB,KACvGxlB,KAAKC,MAAMwlB,aAAazlB,KAAK4K,MAAMpK,YAAYuM,KAAK/M,KAAK4K,MAAMpK,YAAYoG,QAAQ5G,KAAK4K,MAAMpK,YAAYglB,8BAGnD1gB,QAAQC,IAAI,CACnE/E,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,aAC7F/M,KAAKS,cAAcqoC,mBAAmB9oC,KAAK4K,MAAMpK,YAAYuM,KAAK27B,EAAsB9hC,QAAQ5G,KAAKC,MAAMuB,iDAFtGusC,OAAe5G,OAKhB97B,EAAW,GACX+hC,EAAgB,GAChBF,EAAc,GAChBK,GAAiB,EAEE,OAAnBQ,mBACOC,EAAa,eAAGA,GAAcD,qCACCjpC,QAAQC,IAAI,CAChD/E,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,cAAc,CAACihC,IAC5GhuC,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,gBAAgB,CAAC/M,KAAKC,MAAMuB,QAAQwsC,0CAF9HC,OAAWC,OAIZD,GAA6B,OAAfA,IAChBf,EAAYc,GAAchuC,KAAKS,cAAc+C,iBAAiByqC,EAAWjuC,KAAK4K,MAAMpK,YAAYiD,WAE7E,OAAjByqC,IACFA,EAAeluC,KAAKS,cAAc+C,iBAAiB0qC,EAAaluC,KAAK4K,MAAMpK,YAAYiD,WACtEsT,GAAG,KAElBq2B,EAAcY,GAAcE,EAExBF,EAAaD,IACfR,GAAiB,YAf+BS,4BAqBxD3iC,EAAS+hC,cAAgBA,UAGrBE,EAAgBF,GAAiBxtC,OAAO4H,KAAK4lC,GAAetqC,OAAO,EAEnEqrC,EAAmBnuC,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAC/D8sC,EAAsBS,EAAiBrC,eAE7CzgC,EAASmiC,gBAAiB,EAC1BniC,EAAS6hC,YAAcA,EACvB7hC,EAASiiC,aAAeA,EACxBjiC,EAASkiC,eAAiBA,EAC1BliC,EAASqiC,oBAAsBA,EAC/BriC,EAAS4hC,SAAWM,GAAkBD,EACtCjiC,EAASvO,OAASwwC,EAAe,SAAW,UAC5CjiC,EAAS8hC,YAAcG,GAAgBI,EACvCriC,EAAS87B,0BAA4BA,EAErCnnC,KAAKiM,SAASZ,0QAMdrL,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAjE,eAAAiM,EAAArT,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAkF,SAAAkC,EAAOW,GAAP,IAAArD,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAC1Ed,EAAc6I,EAAKpJ,MAAMqlB,UAAUte,gBAAgBnD,GACnCwF,EAAK5I,cAAc8kB,kBAAkB/kB,EAAYqD,SACjDrD,EAAYglB,IAH8C,CAAAriB,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAIxE+H,EAAKpJ,MAAMwlB,aAAajlB,EAAYqD,MAAMrD,EAAYoG,QAAQpG,EAAYglB,KAJF,wBAAAriB,EAAAtB,SAAAqB,EAAAlD,SAAlF,gBAAA2F,GAAA,OAAAsN,EAAA1Q,MAAAvC,KAAAwC,YAAA,IAQM8E,EAAsB1H,OAAO4H,KAAKxH,KAAKC,MAAMqH,qBAAqBkU,IAAK,SAAA4yB,GAC3E,IAAMC,EAAiBhlC,EAAK5I,cAAcG,gBAAgB,CAAC,aAAawtC,IACxE,MAAO,CACL5/B,MAAM4/B,EACN98B,KAAK+8B,EAAe/8B,KACpBH,MAAMk9B,EAAe30C,SAIrB2N,EAAmBC,EAAoB,GAAGkH,OAC1Cf,EAAgBzN,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAMqlB,UAAUte,gBAAgBhH,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAM4tC,UAAUC,OAAS,QAE7I3jB,EAAsBnqB,KAAKC,MAAMqlB,UAAUte,gBAAgByG,GACjEA,EAAgB0c,EAAoB9G,UACpChc,EAAmB8iB,EAAoBikB,UAGzCpuC,KAAKiM,SAAS,CACZ3E,uBACA,WACA+B,EAAKilC,eAAejnC,EAAiBoG,sLAcnBpG,8FAAiBoG,iCAAc,KAC7CzG,EAAkBpH,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBACtDoV,OAAO,SAAA0B,GAAG,OAAIzP,EAAKpO,MAAMqlB,UAAUte,gBAAgB8W,GAAKswB,WAAa/mC,IACrEknC,OAAO,SAACC,EAAK1wB,GACZ,IAAMtd,EAAc6N,EAAKpO,MAAMqlB,UAAUte,gBAAgB8W,GACnD2wB,EAAkBpgC,EAAKpO,MAAMqH,oBAAoBD,GAAkB7G,EAAY6iB,WAOrF,OALA7iB,EAAYglB,IAAMipB,EAAgBjpB,IAClChlB,EAAYqD,MAAQ4qC,EAAgB5qC,MACpCrD,EAAYoG,QAAU6nC,EAAgB7nC,QACtCpG,EAAYiD,SAAWgrC,EAAgBhrC,SACvC+qC,EAAIhuC,EAAY6iB,WAAa7iB,EACtBguC,GACN,IAELxuC,KAAKiM,SAAS,CACZjF,kBACAK,oBACA,WACIoG,GACFY,EAAKsyB,YAAYlzB,oLAKJA,iGAEX0c,EAAsBnqB,KAAK4K,MAAM5D,gBAAgByG,GACjDihC,EAA0B1uC,KAAKC,MAAMqH,oBAAoB6iB,EAAoBikB,UAE7EK,EAAkBC,EAAwBvkB,EAAoBtmB,QAE9DrD,EAAc,CAClBuM,KAAK0hC,EAAgB5qC,MACrBA,MAAM4qC,EAAgB5qC,MACtB+C,QAAQ6nC,EAAgB7nC,QACxBnD,SAASgrC,EAAgBhrC,WAIfoB,KAAO4pC,EAAgB5pC,KAG7B6S,EAAc,CAClB8N,IAAIipB,EAAgBjpB,IACpBzY,KAAK0hC,EAAgB5qC,MACrBA,MAAM4qC,EAAgB5qC,MACtB+C,QAAQ6nC,EAAgB7nC,SAGpBiiC,EAAoB1e,EAAoB0e,kBAG1C4F,EAAgBE,kBAClB9F,EAAkBa,UAAU,GAAG38B,KAAO0hC,EAAgBE,iBAGxDnuC,EAAYiX,UAAY,CACtB9S,SAAQ,EACR+S,cACAmxB,oBACA4E,oBAAmB,aAGfztC,KAAKC,MAAM2uC,iBAAiBzkB,EAAoBikB,SAASK,EAAgB5qC,eAE/E7D,KAAKiM,SAAS,CACZzL,cACAiN,gBACA0c,uBACA,WAEA,GAAIA,EAAoBikB,WAAavoB,EAAKjb,MAAMvD,iBAAiB,CAC/D,IAAMA,EAAmB8iB,EAAoBikB,SAC7CvoB,EAAKyoB,eAAejnC,sQAMnBrH,KAAK4K,MAAM2iC,wDACP,cAGO,EACO,EACjBsB,EAAUjvC,OAAO4H,KAAKxH,KAAK4K,MAAMwiC,eAAe,GAEhD0B,EAAgB,SAACzyB,EAAG8lB,GACxB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBpkB,cAAa,iBACbC,YAAa,QACbC,WAAY6qB,EAAK9uC,MAAMwN,cACvB46B,WAAYl8B,SAXO,IAcjBg2B,IACFiG,EAAUlkB,WAAa6qB,EAAKtuC,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrBoxC,EAAKtuC,cAAcsjB,yBAAyBqkB,GAG9C2G,EAAK9iC,SAAS,SAACuB,GAAD,MAAgB,CAC5BggC,eAAerF,EACf7F,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAM,CACJhX,OAAO,KACPvP,SAAQ,SAMVkoB,EAAuB,SAAC3yB,GAC5B,IAAMga,EAASha,EAAGksB,gBAClBwG,EAAK9iC,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAMztC,OAAA0L,EAAA,EAAA1L,CAAA,GACD4N,EAAU80B,WAAW+K,MADrB,CAEHhX,iBAMRr2B,KAAKC,MAAMmC,0BAA0BpC,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAM,WAAY,CAAC8hC,GAAU,KAAMC,EAAeE,GAExIhvC,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAMztC,OAAA0L,EAAA,EAAA1L,CAAA,GACD4N,EAAU80B,WAAW+K,MADrB,CAEHvmB,SAxDU,4IA6ET,IAAAmoB,EAAAjvC,KAEP,IAAKA,KAAK4K,MAAMvD,iBACd,OAAO,KAGT,IAAMwnC,EAAU7uC,KAAK4K,MAAMwiC,eAAiBxtC,OAAO4H,KAAKxH,KAAK4K,MAAMwiC,eAAetqC,OAAO,EAAIlD,OAAO4H,KAAKxH,KAAK4K,MAAMwiC,eAAe,GAAK,KAClIc,EAAeluC,KAAK4K,MAAMwiC,eAAiBxtC,OAAO+X,OAAO3X,KAAK4K,MAAMwiC,eAAetqC,OAAO,EAAIlD,OAAO+X,OAAO3X,KAAK4K,MAAMwiC,eAAe,GAAK,KAC3I8B,EAAuBlvC,KAAK4K,MAAMvD,iBAAmBrH,KAAK4K,MAAMtD,oBAAoByQ,KAAM,SAAAo3B,GAAC,OAAIA,EAAE3gC,QAAUygC,EAAKrkC,MAAMvD,mBAAqBrH,KAAK4K,MAAMtD,oBAAoB,GAwGhL,OACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,wBAKAlS,EAAAC,EAAAC,cAACojB,GAADljB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE8M,KAAM,WACNqU,cAAc,EACdb,aAAc2uB,EACdzuB,kBAjIgB,SAAAxgB,GACxB,IAAMkR,EAAQlR,EAAMkR,MACd3Q,EAAc,CAClB8Q,KAAKrR,EAAMqM,KAAKgF,MAGlB,OACE9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,UAEZvK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOsN,EACP3Q,YAAaA,EACb4R,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHxoB,MAAM,MACN+E,OAAO,UAIbO,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOsN,EACPiB,UAAW,CACTrF,KAAK,YACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,mBA+FVkiB,QAASrgB,KAAK4K,MAAMtD,oBACpBya,SAAU/hB,KAAKsuC,eAAerjC,KAAKjL,MACnC0gB,qBAxFmB,SAAAzgB,GAE3B,IACMihB,GAA4D,IADlDjhB,EAAMihB,YAAYb,QACNpI,QAAQhY,EAAMihB,YAAY1S,OAAgBvO,EAAMihB,YAAY1S,MAAQ,KAEhG,IAAK0S,EACH,OAAO,KAGT,IAAM/P,EAAQ+P,EAAY/P,MACpB3Q,EAAc,CAClB8Q,KAAK4P,EAAY5P,MAGnB,OACE9R,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE4d,MAAO,CACLoF,KAAK,KAEP5Y,eAAgB,iBACZhK,EAAM2gB,YAEVphB,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEsK,EAAG,EACHjQ,MAAO,GACH+F,EAAM2gB,WAHZ,CAIE7W,WAAY,SACZC,cAAe,MACfyT,MAAO,CAACoD,OAAO,WACf5W,eAAgB,eAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOsN,EACP3Q,YAAaA,EACb4R,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,UAIbO,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOsN,EACPiB,UAAW,CACTrF,KAAK,YACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,uBA2CZ6B,KAAK4K,MAAM5D,iBACTxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,4BAKAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJ8R,aAAa,EACbxB,cAAc,EACdW,SAAU/hB,KAAK2gC,YAAY11B,KAAKjL,MAChCyN,cAAezN,KAAK4K,MAAM6C,cAC1BzG,gBAAiBhH,KAAK4K,MAAM5D,oBAKlChH,KAAK4K,MAAMuf,sBAAwBnqB,KAAK4K,MAAMuiC,YAAcntC,KAAK4K,MAAMqiC,WACrEztC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuX,GAAG,EACHjC,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAMu8B,0BAA4B,WAAa,WAC3DhpC,MAAQ6B,KAAK4K,MAAMu8B,0BAA4BnnC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAEzG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,uCASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM0iC,aAAe,WAAa,WAC9CnvC,MAAQ6B,KAAK4K,MAAM0iC,aAAettC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE5F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,gBAMgBzR,KAAK4K,MAAM6C,gBAG7BjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM2iC,eAAiB,WAAa,SAChDpvC,MAAQ6B,KAAK4K,MAAM2iC,eAAiBvtC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE9F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,uCASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM4iC,eAAiB,WAAa,SAChDrvC,MAAQ6B,KAAK4K,MAAM4iC,eAAiBxtC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE9F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,cAMczR,KAAK4K,MAAMpK,YAAYqE,KAAKhB,UAOlD7D,KAAK4K,MAAM5D,iBAAmBhH,KAAK4K,MAAM6C,eACvCjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GAER8F,KAAK4K,MAAMu8B,4BAA8BnnC,KAAK4K,MAAMuiC,YAAcntC,KAAK4K,MAAMqiC,WAC3EztC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,sBAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV,OAAO8I,EAAKrkC,MAAMuiC,WAAa8B,EAAK7H,UAAU,WAAa,OAG/DrsB,eAAe,EACfkE,YAAcjf,KAAK4K,MAAMuiC,WACzBjuB,SAAiC,YAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,WAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAQJxP,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV,OAAO8I,EAAKrkC,MAAMqiC,SAAWgC,EAAK7H,UAAU,UAAY,OAG5DrsB,eAAe,EACfkE,YAAcjf,KAAK4K,MAAMqiC,SACzB/tB,SAAiC,WAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,UAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAYY,YAAtBhP,KAAK4K,MAAM9N,OACTkD,KAAK4K,MAAM8iC,oBACTluC,EAAAC,EAAAC,cAAC0vC,GAADxvC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEmsC,aAAa,EACbnD,eAAe,EACfgD,iBAAiB,EACjBjB,qBAAqB,EACrB4B,cAAe,eACflH,SAAU,uBACVllC,YAAaR,KAAK4K,MAAMpK,YACxBiN,cAAezN,KAAK4K,MAAM6C,cAC1Bk9B,gBAAiB,GACjBV,gBAAiBjqC,KAAK2tC,YAAY1iC,KAAKjL,MACvCqH,iBAAkBrH,KAAKC,MAAMoH,iBAC7B0jC,kBAAmB/qC,KAAK+qC,kBAAkB9/B,KAAKjL,MAC/C6sC,cAAa,gBAAAjoC,OAAkB5E,KAAK4K,MAAM6C,cAA7B,+CAAA7I,OAAwF5E,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAApH,OAGV7D,KAAKC,MAAMuB,QAoCVhC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAIH8oB,EACErvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,mBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAK4K,MAAM2iC,eACT/tC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,qFAIAqB,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,mCAGmC+vC,EAAat9B,QAAQ,GAHxD,IAG6D5Q,KAAK4K,MAAM6C,cAHxE,kEAK+C,qBAApCzN,KAAK4K,MAAMsiC,YAAY2B,IAC9BrvC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YAEPqB,EAAAC,EAAAC,cAAA,WAHF,eAGqBM,KAAK4K,MAAMsiC,YAAY2B,GAASj+B,QAAQ,GAH7D,IAGkE5Q,KAAK4K,MAAM6C,kBAQvFzN,KAAK4K,MAAM6iC,mBACbjuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,wCAMwCzR,KAAK4K,MAAM6C,cANnD,qBAUFjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,sBAMsBzR,KAAK4K,MAAM6C,cANjC,sBA9GRjO,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,QACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,uDAQAjS,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKC,MAAMovC,2BAL1B,cAuGV7vC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAGLvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,WACPsT,UAAW,UAHb,+CAWNjS,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAIH/lB,KAAK4K,MAAM03B,WAAW+K,MAAMvmB,QAC1BtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CAAevJ,KAAMhjC,KAAKC,MAAM+iC,KAAM0C,SAAQ,qBAAwBD,WAAU,gCAAmCvY,KAAMltB,KAAK4K,MAAM03B,WAAW+K,MAAMhX,UAErJr2B,KAAK4K,MAAM4iC,eACbhuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,wCAMwCzR,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MANpE,KAQArE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJhO,UAAW,SACX+V,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAI6gC,EAAKhvC,MAAMqvC,YAAYL,EAAKrkC,MAAMuf,oBAAoBikB,SAAS,IAAIa,EAAKrkC,MAAMuf,oBAAoB9G,aAJnH,wBASArjB,KAAK4K,MAAM2iC,eACb/tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,eAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,+BAM8BjS,EAAAC,EAAAC,cAAA,WAN9B,0BAM4DM,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MANxF,KAQArE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACT+rB,UAAUjmB,KAAKC,MAAM9G,MAAMR,OAAO6D,QAEpCoiB,YAAc,SAAAxQ,GAAC,OAAI6gC,EAAK5B,UAN1B,WAaJ7tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,mBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAEXjS,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,mCAGmC+vC,EAAat9B,QAAQ,GAHxD,IAG6D5Q,KAAK4K,MAAM6C,cAHxE,2DAG+IzN,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAH3K,IAK+C,qBAApC7D,KAAK4K,MAAMsiC,YAAY2B,IAC9BrvC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YAEPqB,EAAAC,EAAAC,cAAA,WAHF,eAGqBM,KAAK4K,MAAMsiC,YAAY2B,GAASj+B,QAAQ,GAH7D,IAGkE5Q,KAAK4K,MAAM6C,6BA97BpFtN,0FC+RZovC,8MAhTb3kC,MAAQ,CACNpK,YAAY,KACZyiB,kBAAkB,KAClBC,kBAAkB,KAClBuqB,oBAAmB,EACnBtqB,2BAA2B,QAI7B1iB,cAAgB,OA0ChB+uC,gBAAkB,SAAC/hC,GACjB,IAAMgiC,EAAcpvC,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,mBAChEP,EAAKJ,MAAMqvC,YAAX,SAAA1qC,OAAgC6qC,EAAYnD,MAA5C,KAAA1nC,OAAqD6I,OAGvD2V,sDAAkB,SAAAniB,EAAOgiB,GAAP,IAAAysB,EAAAxsB,EAAAC,EAAA,OAAApiB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACVouC,EAAYrvC,EAAKJ,MAAMqlB,UAAUte,gBAAgBic,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7C9iB,EAAKJ,MAAMqlB,UAAUhe,oBAAsCjH,EAAKJ,MAAMqlB,UAAUhe,oBAAsB1H,OAAO4H,KAAKnH,EAAKJ,MAAMqH,sBAE5I4C,QAAS,SAAAkkC,GAC3B,IACMK,EAD2BpuC,EAAKJ,MAAMqH,oBAAoB8mC,GAChBsB,EAAUrsB,WAC1D,IAAKorB,EACH,OAAO,SAIFA,EAAgBn9B,KAElB4R,IACHA,EAAoBurB,EAAgB5pC,KAAKhB,OAE3C4qC,EAAgBL,SAAWA,EAC3BK,EAAgBprB,UAAYqsB,EAAUrsB,UACtCF,EAA2BsrB,EAAgB5pC,KAAKhB,OAAS4qC,IAG3DpuC,EAAK4L,SAAS,CACZzL,YAAY,KACZyiB,oBACAE,8BACA,WACA9iB,EAAKijB,gBAAgBJ,KA/BP,wBAAA9hB,EAAAS,SAAAZ,EAAAjB,iEAmClBsjB,sDAAkB,SAAAthB,EAAOkhB,GAAP,IAAAysB,EAAAD,EAAAlvC,EAAAkX,EAAAmxB,EAAA,OAAA9nC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAEVquC,EAAkBtvC,EAAKuK,MAAMuY,2BAA2BD,GACxDwsB,EAAYrvC,EAAKJ,MAAMqlB,UAAUte,gBAAgB3G,EAAKuK,MAAMqY,oBAE5DziB,EAAc,CAClBqD,MAAM8rC,EAAgBtsB,UACtBzc,QAAQ+oC,EAAgB/oC,QACxBnD,SAASksC,EAAgBlsC,WAIfoB,KAAO8qC,EAAgB9qC,KAG7B6S,EAAc,CAClB8N,IAAIkqB,EAAUlqB,IACdzY,KAAK2iC,EAAU7rC,MACfA,MAAM6rC,EAAU7rC,MAChB+C,QAAQ8oC,EAAU9oC,SAGdiiC,EAAoBxoC,EAAKJ,MAAMqlB,UAAUujB,kBAG3C6G,EAAUf,kBACZ9F,EAAkBa,UAAU,GAAG38B,KAAO2iC,EAAUf,iBAGlDnuC,EAAYiX,UAAY,CACtB9S,SAAQ,EACR+S,cACAmxB,oBACA4E,oBAAmB,GAjCLtrC,EAAAb,KAAA,GAoCVjB,EAAKJ,MAAM2uC,iBAAiBe,EAAgBvB,SAASsB,EAAUrsB,WApCrD,QAsChBhjB,EAAK4L,SAAS,CACZzL,cACA0iB,sBAxCc,yBAAA/gB,EAAAN,SAAAG,EAAAhC,iEA4ClB+qC,kBAAoB,WAClB1qC,EAAK4L,SAAS,CACZwhC,oBAAmB,gFA7HjBztC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAKqlB,gRAILpC,EAAoBjjB,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAMqlB,UAAUte,gBAAgBhH,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAM4tC,UAAUC,OAASluC,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAiB,YAEvMhH,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAjE,eAAA2L,EAAA/S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAkF,SAAAkC,EAAOW,GAAP,IAAArD,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAChFd,EAAc6I,EAAKpJ,MAAMqlB,UAAUte,gBAAgBnD,GACnCwF,EAAK5I,cAAc8kB,kBAAkB/kB,EAAYqD,SACjDrD,EAAYglB,IAHoD,CAAAriB,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAI9E+H,EAAKpJ,MAAMwlB,aAAajlB,EAAYqD,MAAMrD,EAAYoG,QAAQpG,EAAYglB,KAJI,wBAAAriB,EAAAtB,SAAAqB,EAAAlD,SAAlF,gBAAA2F,GAAA,OAAAgN,EAAApQ,MAAAvC,KAAAwC,YAAA,WAQFygB,GAAqBA,IAAsBjjB,KAAKC,MAAM4tC,UAAUC,QAClE9tC,KAAKwvC,gBAAgBvsB,GAGvBjjB,KAAKojB,gBAAgBH,wLAGE9X,EAAUqC,sEACjCxN,KAAKoJ,cAEoB+B,EAAU0iC,UAAUC,SAAW9tC,KAAKC,MAAM4tC,UAAUC,wCAErE9tC,KAAKqlB,mJAgGb,OAAKrlB,KAAK4K,MAAMqY,kBAKdzjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,4BAGAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJ8R,aAAa,EACbxB,cAAc,EACdW,SAAU/hB,KAAKwvC,gBACf/hC,cAAezN,KAAK4K,MAAMqY,kBAC1Bjc,gBAAiBhH,KAAKC,MAAMqlB,UAAUte,oBAIxChH,KAAK4K,MAAMuY,4BAA8BnjB,KAAK4K,MAAMsY,mBAClD1jB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,6BAGAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJ8R,aAAa,EACbb,SAAU/hB,KAAKsjB,gBACf7V,cAAezN,KAAK4K,MAAMsY,kBAC1Blc,gBAAiBhH,KAAK4K,MAAMuY,+BAKlCnjB,KAAK4K,MAAMqY,mBAAqBjjB,KAAK4K,MAAMsY,kBACzC1jB,EAAAC,EAAAC,cAAC0vC,GAADxvC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEmsC,aAAa,EACbnD,eAAe,EACfgD,iBAAiB,EACjBzrC,YAAaR,KAAK4K,MAAMpK,YACxBuqC,kBAAmB/qC,KAAK+qC,kBACxBt9B,cAAezN,KAAK4K,MAAMqY,kBAC1B5b,iBAAkBrH,KAAKC,MAAMoH,mBAG1BrH,KAAKC,MAAMuB,QAoCVhC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAIHzf,KAAK4K,MAAM6iC,mBACTjuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,QAMQzR,KAAK4K,MAAMqY,kBANnB,sCAUFzjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,sBAMsBzR,KAAK4K,MAAMqY,kBANjC,sBAvERzjB,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,QACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,uDAQAjS,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKC,MAAMovC,2BAL1B,cA+DR,OAxJH,YAlJgBlvC,aC2xBdyvC,8MAxwBbhlC,MAAQ,CACNqiC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXrwC,OAAO,UACPswC,cAAc,GACd5sC,YAAY,KACZ8hC,WAAW,CACT+K,MAAM,CACJhX,OAAO,KACPvP,SAAQ,IAGZwmB,cAAa,EACb7/B,cAAc,KACd8/B,gBAAe,EACfC,gBAAe,EACfC,oBAAmB,EACnBtjB,oBAAoB,KACpBgd,2BAA0B,EAC1BhkB,2BAA2B,QAI7B1iB,cAAgB,OAwGhB2iB,sDAAkB,SAAAniB,EAAOwM,GAAP,IAAA0c,EAAAukB,EAAAD,EAAAjuC,EAAAkX,EAAAmxB,EAAA,OAAA9nC,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEV6oB,EAAsB9pB,EAAKJ,MAAMqlB,UAAUte,gBAAgByG,GAC3DihC,EAA2BruC,EAAKJ,MAAMqH,oBAAoB6iB,EAAoBikB,UAE9EK,EAAkBC,EAAwBvkB,EAAoB9G,YAE9D7iB,EAAc,CAClBqD,MAAMsmB,EAAoB9G,UAC1Bzc,QAAQujB,EAAoBvjB,QAC5BnD,SAAS0mB,EAAoB1mB,WAInBoB,KAAO4pC,EAAgB5pC,KAG7B6S,EAAc,CAClB8N,IAAI2E,EAAoB3E,IACxBzY,KAAKod,EAAoBpd,KACzBlJ,MAAMsmB,EAAoBtmB,MAC1B+C,QAAQujB,EAAoBvjB,SAGxBiiC,EAAoB1e,EAAoB0e,kBAG1C4F,EAAgBE,kBAClB9F,EAAkBa,UAAU,GAAG38B,KAAO0hC,EAAgBE,iBAGxDnuC,EAAYiX,UAAY,CACtB9S,SAAQ,EACR+S,cACAmxB,oBACA4E,oBAAmB,GAnCLrsC,EAAAE,KAAA,GAsCVjB,EAAKJ,MAAM2uC,iBAAiBzkB,EAAoBikB,SAASK,EAAgBprB,WAtC/D,QAwChBhjB,EAAK4L,SAAS,CACZzL,cACAiN,gBACA0c,wBA3Cc,yBAAA/oB,EAAAS,SAAAZ,EAAAjB,iEA+ClBqtC,2BAAQ,SAAArrC,IAAA,IAAA6sC,EAAAC,EAAAE,EAAA,OAAAjuC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UACDjB,EAAKuK,MAAM2iC,eADV,CAAAprC,EAAAb,KAAA,eAAAa,EAAAP,OAAA,SAEG,MAFH,QAKU,EACO,EACjBitC,EAAUjvC,OAAO4H,KAAKnH,EAAKuK,MAAMwiC,eAAe,GAEhD0B,EAAgB,SAACzyB,EAAG8lB,GACxB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBpkB,cAAa,iBACbC,YAAa,QACbC,WAAY7jB,EAAKJ,MAAMwN,cACvB46B,WAAYl8B,SAXO,IAcjBg2B,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5BggC,eAAerF,EACf7F,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAM,CACJhX,OAAO,KACPvP,SAAQ,SAMVkoB,EAAuB,SAAC3yB,GAC5B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAMztC,OAAA0L,EAAA,EAAA1L,CAAA,GACD4N,EAAU80B,WAAW+K,MADrB,CAEHhX,iBAMRh2B,EAAKJ,MAAMmC,0BAA0B/B,EAAKuK,MAAMuf,oBAAoB0e,kBAAkB97B,KAAM,WAAY,CAAC8hC,GAAU,KAAMC,EAAeE,GAExI3uC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAER+K,MAAMztC,OAAA0L,EAAA,EAAA1L,CAAA,GACD4N,EAAU80B,WAAW+K,MADrB,CAEHvmB,SAxDU,SALV,wBAAA3kB,EAAAN,SAAAG,EAAAhC,WAmERonC,UAAY,SAACtqC,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUu4B,SAASv4B,EAAO4T,gBAC1DrQ,EAAK4L,SAAS,CACZnP,cAKNiuC,kBAAoB,WAClB1qC,EAAKstC,cACLttC,EAAK4L,SAAS,CACZwhC,oBAAmB,gFAlOjBztC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAKqlB,0SAKLqjB,EAAwB1oC,KAAK4K,MAAMuf,oBAAoB0e,2BAEvD/jC,QAAQC,IAAI,CAChB/E,KAAKC,MAAMwlB,aAAaijB,EAAsB37B,KAAK27B,EAAsB9hC,QAAQ8hC,EAAsBljB,KACvGxlB,KAAKC,MAAMwlB,aAAazlB,KAAK4K,MAAMuf,oBAAoBpd,KAAK/M,KAAK4K,MAAMuf,oBAAoBvjB,QAAQ5G,KAAK4K,MAAMuf,oBAAoB3E,8BAG3E1gB,QAAQC,IAAI,CACnE/E,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,aAC7F/M,KAAKS,cAAcqoC,mBAAmB9oC,KAAK4K,MAAMuf,oBAAoBpd,KAAK27B,EAAsB9hC,QAAQ5G,KAAKC,MAAMuB,iDAF9GusC,OAAe5G,OAKhB97B,EAAW,GACX+hC,EAAgB,GAChBF,EAAc,GAChBK,GAAiB,EAEE,OAAnBQ,mBACOC,EAAa,eAAGA,GAAcD,qCACCjpC,QAAQC,IAAI,CAChD/E,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,cAAc,CAACihC,IAC5GhuC,KAAKS,cAAcuC,oBAAoBhD,KAAK4K,MAAMuf,oBAAoB0e,kBAAkB97B,KAAK,gBAAgB,CAAC/M,KAAKC,MAAMuB,QAAQwsC,0CAF9HC,OAAWC,OAIZD,GAA6B,OAAfA,IAChBf,EAAYc,GAAchuC,KAAKS,cAAc+C,iBAAiByqC,EAAWjuC,KAAK4K,MAAMuf,oBAAoB1mB,WAErF,OAAjByqC,IACFA,EAAeluC,KAAKS,cAAc+C,iBAAiB0qC,EAAaluC,KAAK4K,MAAMuf,oBAAoB1mB,WAC9EsT,GAAG,KAElBq2B,EAAcY,GAAcE,EAExBF,EAAaD,IACfR,GAAiB,YAf+BS,4BAqBxD3iC,EAAS+hC,cAAgBA,UAGrBE,EAAgBF,GAAiBxtC,OAAO4H,KAAK4lC,GAAetqC,OAAO,EAEnE6oC,EAAqB3rC,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,mBACjEirC,EAA+BF,EAAmBG,eAExDzgC,EAASmiC,gBAAiB,EAC1BniC,EAAS6hC,YAAcA,EACvB7hC,EAASkiC,eAAiBA,EAC1BliC,EAASiiC,aAAeA,EACxBjiC,EAAS8hC,YAAcG,GAAgBzB,EACvCxgC,EAAS4hC,SAAWM,GAAkBD,EACtCjiC,EAASvO,OAASwwC,EAAe,SAAW,UAC5CjiC,EAAS87B,0BAA4BA,EAErCnnC,KAAKiM,SAASZ,uQAIRoC,EAAgBzN,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAMqlB,UAAUte,gBAAgBhH,KAAKC,MAAM4tC,UAAUC,QAAU9tC,KAAKC,MAAM4tC,UAAUC,OAASluC,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAiB,YAEnMhH,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAMqlB,UAAUte,iBAAjE,eAAA9C,EAAAtE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAkF,SAAAqC,EAAOQ,GAAP,IAAArD,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,UAChFd,EAAc6I,EAAKpJ,MAAMqlB,UAAUte,gBAAgBnD,GACnCwF,EAAK5I,cAAc8kB,kBAAkB/kB,EAAYqD,SACjDrD,EAAYglB,IAHoD,CAAAjiB,EAAAjC,KAAA,eAAAiC,EAAAjC,KAAA,EAI9E+H,EAAKpJ,MAAMwlB,aAAajlB,EAAYqD,MAAMrD,EAAYoG,QAAQpG,EAAYglB,KAJI,wBAAAjiB,EAAA1B,SAAAwB,EAAArD,SAAlF,gBAAAsC,GAAA,OAAA4B,EAAA3B,MAAAvC,KAAAwC,YAAA,WAQNxC,KAAKojB,gBAAgB3V,wLAGEtC,EAAUqC,sEACjCxN,KAAKoJ,cAEoB+B,EAAU0iC,UAAUC,SAAW9tC,KAAKC,MAAM4tC,UAAUC,wCAErE9tC,KAAKqlB,oBAGgB7X,EAAUC,gBAAkBzN,KAAK4K,MAAM6C,eAElEzN,KAAK2tC,oJAqIA,IAAAt/B,EAAArO,KAEP,IAAKA,KAAK4K,MAAM6C,cACd,OAAO,KAGT,IACMo+B,EADqB7rC,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,mBACfkrC,eAElD+C,EAAU7uC,KAAK4K,MAAMwiC,eAAiBxtC,OAAO4H,KAAKxH,KAAK4K,MAAMwiC,eAAetqC,OAAO,EAAIlD,OAAO4H,KAAKxH,KAAK4K,MAAMwiC,eAAe,GAAK,KAClIc,EAAeluC,KAAK4K,MAAMwiC,eAAiBxtC,OAAO+X,OAAO3X,KAAK4K,MAAMwiC,eAAetqC,OAAO,EAAIlD,OAAO+X,OAAO3X,KAAK4K,MAAMwiC,eAAe,GAAK,KAEjJ,OACE5tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,4BAGAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJ8R,aAAa,EACbxB,cAAc,EACdW,SAAU/hB,KAAKojB,gBACf3V,cAAezN,KAAK4K,MAAM6C,cAC1BzG,gBAAiBhH,KAAKC,MAAMqlB,UAAUte,qBAIvChH,KAAK4K,MAAMuiC,YAAcntC,KAAK4K,MAAMqiC,WACnCztC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuX,GAAG,EACHjC,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAMu8B,0BAA4B,WAAa,WAC3DhpC,MAAQ6B,KAAK4K,MAAMu8B,0BAA4BnnC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAEzG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,yCASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM0iC,aAAe,WAAa,WAC9CnvC,MAAQ6B,KAAK4K,MAAM0iC,aAAettC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE5F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,gBAMgBzR,KAAK4K,MAAMuf,oBAAoBtmB,QAGjDrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM2iC,eAAiB,WAAa,SAChDpvC,MAAQ6B,KAAK4K,MAAM2iC,eAAiBvtC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE9F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,sCASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM4iC,eAAiB,WAAa,SAChDrvC,MAAQ6B,KAAK4K,MAAM4iC,eAAiBxtC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAE9F4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,cAMczR,KAAK4K,MAAM6C,cANzB,SAaRzN,KAAK4K,MAAM6C,cACTjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GAER8F,KAAK4K,MAAMu8B,4BAA8BnnC,KAAK4K,MAAMuiC,YAAcntC,KAAK4K,MAAMqiC,WAC3EztC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,sBAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV,OAAO93B,EAAKzD,MAAMuiC,WAAa9+B,EAAK+4B,UAAU,WAAa,OAG/DrsB,eAAe,EACfkE,YAAcjf,KAAK4K,MAAMuiC,WACzBjuB,SAAiC,YAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,WAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAQJxP,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV,OAAO93B,EAAKzD,MAAMqiC,SAAW5+B,EAAK+4B,UAAU,UAAY,OAG5DrsB,eAAe,EACfkE,YAAcjf,KAAK4K,MAAMqiC,SACzB/tB,SAAiC,WAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,UAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAYY,YAAtBhP,KAAK4K,MAAM9N,OACT+uC,EACErsC,EAAAC,EAAAC,cAAC0vC,GAADxvC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEmsC,aAAa,EACbzB,gBAAiB,GACjB1B,eAAe,EACfgD,iBAAiB,EACjBW,cAAe,eACflH,SAAU,uBACVllC,YAAaR,KAAK4K,MAAMpK,YACxBiN,cAAezN,KAAK4K,MAAM6C,cAC1Bw8B,gBAAiBjqC,KAAK2tC,YAAY1iC,KAAKjL,MACvCqH,iBAAkBrH,KAAKC,MAAMoH,iBAC7B0jC,kBAAmB/qC,KAAK+qC,kBAAkB9/B,KAAKjL,MAC/C6sC,cAAa,gBAAAjoC,OAAkB5E,KAAK4K,MAAMuf,oBAAoBtmB,MAAjD,+CAAAe,OAAoG5E,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAAhI,OAGV7D,KAAKC,MAAMuB,QAoCVhC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAIH8oB,EACErvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,mBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAK4K,MAAM2iC,eACT/tC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,qFAIAqB,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,mCAGmC+vC,EAAat9B,QAAQ,GAHxD,IAG6D5Q,KAAK4K,MAAMuf,oBAAoBtmB,MAH5F,kEAK+C,qBAApC7D,KAAK4K,MAAMsiC,YAAY2B,IAC9BrvC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YAEPqB,EAAAC,EAAAC,cAAA,WAHF,eAGqBM,KAAK4K,MAAMsiC,YAAY2B,GAASj+B,QAAQ,GAH7D,IAGkE5Q,KAAK4K,MAAMuf,oBAAoBtmB,UAQ3G7D,KAAK4K,MAAM6iC,mBACbjuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,wCAMwCzR,KAAK4K,MAAMuf,oBAAoBtmB,MANvE,qBAUFrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,sBAMsBzR,KAAK4K,MAAMuf,oBAAoBtmB,MANrD,sBA9GRrE,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,QACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,uDAQAjS,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKC,MAAMovC,2BAL1B,cAuGV7vC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAGLvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,WACPsT,UAAW,UAHb,iDAWNjS,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,IAIH/lB,KAAK4K,MAAM03B,WAAW+K,MAAMvmB,QAC1BtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CAAevJ,KAAMhjC,KAAKC,MAAM+iC,KAAM0C,SAAQ,qBAAwBD,WAAU,gCAAmCvY,KAAMltB,KAAK4K,MAAM03B,WAAW+K,MAAMhX,UAErJr2B,KAAK4K,MAAM4iC,eACbhuC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,wCAMwCzR,KAAK4K,MAAM6C,cANnD,QAQAjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJhO,UAAW,SACX+V,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKpO,MAAMqvC,YAAYjhC,EAAKzD,MAAMuf,oBAAoBikB,SAAS,IAAI//B,EAAKzD,MAAMuf,oBAAoB9G,aAJnH,wBASArjB,KAAK4K,MAAM2iC,eACb/tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,eAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,+BAM8BjS,EAAAC,EAAAC,cAAA,WAN9B,0BAM4DM,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MANxF,QAQArE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACT+rB,UAAUjmB,KAAKC,MAAM9G,MAAMR,OAAO6D,QAEpCoiB,YAAc,SAAAxQ,GAAC,OAAIC,EAAKg/B,UAN1B,WAaJ7tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,mBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAEXjS,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YADT,mCAGmC+vC,EAAat9B,QAAQ,GAHxD,IAG6D5Q,KAAK4K,MAAMuf,oBAAoBtmB,MAH5F,qEAK+C,qBAApC7D,KAAK4K,MAAMsiC,YAAY2B,IAC9BrvC,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACExnC,MAAO,YAEPqB,EAAAC,EAAAC,cAAA,WAHF,eAGqBM,KAAK4K,MAAMsiC,YAAY2B,GAASj+B,QAAQ,GAH7D,IAGkE5Q,KAAK4K,MAAMuf,oBAAoBtmB,YAYnH,cAlwBa1D,wFCavB0vC,GAAMC,qkCA0zEG/+B,GAxzEO,CACpBg/B,QAAS,OACTC,QAAS,OACTC,QAAS,uBACT5sB,UAAW,MACX6d,UAAU,CACRgP,IAAM,2BACNC,IAAM,iBACNC,IAAM,YACNC,IAAM,SACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,YACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,eACNC,IAAM,eAERC,KAAK,CACHC,eAAc,EACdC,iBAAgB,GAElBC,WAAW,CACTC,SAAS,CACPxsC,SAAQ,EACR+4B,WAAW,qBAEb0T,MAAM,CACJzsC,SAAQ,EACR+4B,WAAW,yBAEb2T,OAAO,CACL1sC,SAAQ,EACR2M,KAAK,aACLosB,WAAW,qBAEb4T,SAAS,CACP3sC,SAAQ,EACR2M,KAAK,eACLosB,WAAW,gCAEb6T,YAAY,CACV5sC,SAAQ,EACR+4B,WAAW,6BAEb8T,cAAc,CACZ7sC,SAAQ,EACR8sC,UAAU,oBACV/T,WAAW,wBAEbgU,WAAW,CACT/sC,SAAQ,EACR2M,KAAK,eACLvE,KAAK,kBACL2wB,WAAW,wBAEbiU,UAAU,CACRhtC,SAAQ,EACR+4B,WAAW,2BAEbkU,OAAO,CACLjtC,SAAQ,EACR+4B,WAAW,qBAEbmU,UAAU,CACRltC,SAAQ,EACR+4B,WAAW,uBAEboU,MAAM,CACJntC,SAAQ,EACR2M,KAAK,YACLosB,WAAW,+BAEbqU,OAAO,CACLptC,SAAQ,EACR+4B,WAAW,mBAEbsU,OAAO,CACLrtC,SAAQ,EACR+4B,WAAW,oBAGfuU,uBAAuB,CACrBC,SAAS,iDAEXC,SAAS,CACPC,WAAW,sBACXC,SAAS,0BACT5/B,WAAW,2DACX6/B,YAAY,2DACZC,mBAAmB,8EACnBj0B,kBAAkB,mFAClBk0B,WAAW,4FACXC,eAAe,qGACfC,YAAY,iIACZr0B,sBAAsB,iHACtBs0B,0BAA0B,6IAC1BvX,QAAQ,8TACRE,aAAa,0bACbD,UAAS,0aACTuX,kBAAiB,4bAEnB1T,UAAU,CACRC,OAAO,CACLC,OAAO,CACLz6B,SAAQ,EACRkuC,sBAAqB,EACrBC,cAAa,KAInBC,OAAO,CACLC,wBAAuB,EACvBC,qBAAoB,EACpBv2C,QAAQ,CACNiI,SAAQ,GAEVuuC,QAAQ,CACNvuC,SAAQ,EACRwuC,UAAU,SAGdC,UAAU,CACRC,UAAU,cAEZC,WAAW,CACTC,MAAK,EACL5uC,SAAQ,EACR6uC,WAAW,SACXH,UAAU,cACVpzC,MAAM,CACJM,UAAU,OACVkzC,mBAAmB,CACjBC,OACAC,eACAC,iBACAC,iBACAC,oBAGJC,UAAU,CACRC,UAAU,OACVV,WAAW,kBAGf/4B,MAAM,CACJ5V,SAAQ,EACRsvC,OAAO,CACLC,QAAQ,EACR/iC,MAAM,QACNm7B,MAAM,mBACNrP,MAAM,6BACNkX,cAAc,kCAEhBC,MAAM,CACJC,KAAK,CAAC,MAAM,MAAM,QAClBnC,SAAS,4CAEXoC,aAAa,CACX7wC,SAAS,GACT+hB,IAAI+uB,GACJxnC,KAAK,4BACLlJ,MAAM,4BACN+C,QAAQ,8CAEV4tC,gBAAgB,CACdhvB,IAAIivB,GACJ1nC,KAAK,mBACLnG,QAAQ,8CAEV8tC,cAAc,CACZlvB,IAAImvB,GACJ5nC,KAAK,mBACLnG,QAAQ,8CAEVguC,YAAY,CACVpvB,IAAIqvB,GACJ9nC,KAAK,eACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIivB,GACJ1nC,KAAK,mBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,mBAIX/F,gBAAgB,CACd8tC,aAAa,CACXrxC,SAAS,GACTkB,SAAQ,EACR0e,UAAU,MACVxf,MAAM,eACN+C,QAAQ,6CACR+jC,gBAAgB,CACduJ,QAAQ,EACRa,UAAU,IAGdC,cAAc,CACZvxC,SAAS,GACTkB,SAAQ,EACR0e,UAAU,OACVxf,MAAM,gBACN+C,QAAQ,6CACR+jC,gBAAgB,CACduJ,QAAQ,EACRa,UAAU,IAGdE,cAAc,CACZxxC,SAAS,GACTkB,SAAQ,EACR0e,UAAU,OACVxf,MAAM,gBACN+C,QAAQ,6CACR+jC,gBAAgB,CACduJ,QAAQ,EACRa,UAAU,MAKlBxiC,UAAU,CACRmhC,KAAK,CACHluB,IAAIkuB,EACJjwC,SAAS,GACTI,MAAM,OACNc,SAAQ,EACRuwC,SAAQ,EACR19B,SAAQ,EACR29B,SAAS,OACT7+B,WAAU,EACVsM,aAAY,EACZwyB,gBAAe,EACf/sC,sBAAsB,MACtBlK,MAAM,sBACNmT,KAAK,yBACL1K,QAAQ,8CAGVyuC,KAAK,CACH7vB,IAAI6vB,EACJ5xC,SAAS,GACTI,MAAM,OACNc,SAAQ,EACRuwC,SAAQ,EACR19B,SAAQ,EACRlB,WAAU,EACVsM,aAAY,EACZuyB,SAAS,WACTC,gBAAe,EACf/sC,sBAAsB,MACtBlK,MAAM,sBACNyI,QAAQ,+CAIZmtC,UAAU,CACRJ,YAAY,CACVnuB,IAAImuB,GACJ/sC,QAAQ,8CAGV0uC,SAAS,CACP9vB,IAAI8vB,GACJ1uC,QAAQ,8CAGVitC,cAAc,CACZruB,IAAIquB,GACJjtC,QAAQ,8CAGV2uC,cAAc,CACZ/vB,IAAI+vB,GACJ3uC,QAAQ,8CAGVktC,eAAe,CACbtuB,IAAIsuB,GACJltC,QAAQ,8CAGV4uC,aAAa,CACThwB,IAAIgwB,GACJ5uC,QAAQ,8CAGZgtC,cAAc,CACZpuB,IAAIouB,GACJhtC,QAAQ,8CAGV6uC,YAAY,CACVjwB,IAAIiwB,GACJ7uC,QAAQ,8CAGV8uC,cAAc,CACZlwB,IAAImwB,GACJ/uC,QAAQ,+CAGZgvC,OAAO,CACLC,IAAI,CACFC,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACd/iC,cAAe,SAIvBgjC,KAAK,CACHL,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACd/iC,cAAe,UAKzBijC,WAAW,CACTC,KAAK,CACHxyC,MAAM,MACN1F,MAAM,UACNm4C,YAAW,EACXhkC,cAAa,EACbikC,aAAa,KACb78C,MAAM,aACN0jC,SAAS,WACToZ,kBAAiB,EACjBtuB,UAAW4R,GACX2c,WAAW,kBACXnlC,KAAK,gCACLolC,aAAa,iCACbntB,KAAK,8CACLotB,SAAS,4lBACTC,UAAU,0JAEZC,KAAK,CACHhzC,MAAM,MACN1F,MAAM,UACNm4C,YAAW,EACXC,aAAa,KACbjkC,cAAa,EACb8qB,SAAS,WACT1jC,MAAM,gBACN88C,kBAAiB,EACjBtuB,UAAW4R,GACX2c,WAAW,mBACXnlC,KAAK,gCACLolC,aAAa,iCACbntB,KAAK,oDACLotB,SAAS,6aACTC,UAAU,wGAEZE,IAAI,CACFjzC,MAAM,MACN1F,MAAM,UACNm4C,YAAW,EACXhkC,cAAa,EACb8qB,SAAS,SACT1jC,MAAM,cACN+8C,WAAW,mBACXnlC,KAAK,gCACLiY,KAAK,mCACLmtB,aAAa,iCACbC,SAAS,6aACTC,UAAU,yGAGd5lC,MAAM,CACJrM,SAAQ,EACRyvC,MAAM,CACJ2C,IAAI,IACJ7E,SAAS,mCAEX8E,OAAO,CACLD,IAAI,IACJ7E,SAAS,oCAEX+E,SAAS,CAYPC,GAAG,CACD/lC,MAAM,UACNgmC,oBAAoB,GACpBC,aAAa,WACb3iC,eAAe,WACf4iC,wBAAuB,EACvBC,iBAAiB,CACfT,KAAK,CACHO,aAAa,aAGjBG,kBAAkB,CAAC,OAAO,QAC1B1tB,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,SAEnD2tB,GAAG,CACDrmC,MAAM,UACNimC,aAAa,KACb3iC,eAAe,WACf8iC,kBAAkB,CAAC,OAAO,QAC1BF,wBAAuB,EACvBC,iBAAiB,CACfT,KAAK,CACHpiC,eAAe,aAGnBoV,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,QACjDstB,oBAAoB,CAClB,CACE1zC,SAAS,GACT0xC,SAAS,WACTpoC,KAAK,uBAKb6oC,OAAO,CACLC,IAAI,CACFpyC,SAAS,GACTkB,SAAQ,EACRxG,MAAM,CACJs5C,IAAI,CAAC,IAAI,IAAI,IACbC,IAAI,UACJzmC,IAAI,CAAC,KAAM,MAAO,QAEpB0mC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCnjC,eAAe,aACf7N,QAAQ,6CACRixC,mBAAmB,8KAErBC,IAAI,CACFnzC,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,KACfxmC,IAAI,CAAC,KAAM,MAAO,QAEpB0mC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvChxC,QAAQ,KACR6N,eAAe,cAEjB0hC,KAAK,CACH1yC,SAAS,EACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,GAAG,IAAI,KACZxmC,IAAI,CAAC,MAAO,MAAO,QAErB0mC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCnjC,eAAe,aACf7N,QAAQ,6CACRixC,mBAAmB,8KAErBE,KAAK,CACHt0C,SAAS,EACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACdxmC,IAAI,CAAC,MAAO,MAAO,QAErB0mC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCnjC,eAAe,aACf7N,QAAQ,6CACRixC,mBAAmB,8KAErBG,KAAK,CACHv0C,SAAS,GACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,EAAG,GAAI,KACZxmC,IAAI,CAAC,MAAO,OAAQ,QAEtB0mC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCnjC,eAAe,aACf7N,QAAQ,8CAEVqxC,KAAK,CACHx0C,SAAS,GACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,IACbxmC,IAAI,CAAC,MAAO,MAAO,QAErB0mC,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCnjC,eAAe,aACf7N,QAAQ,8CAEVsxC,KAAK,CACHz0C,SAAS,EACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,IACfxmC,IAAI,CAAC,KAAM,MAAO,QAEpBwD,eAAe,aACfqa,oBAAoB,eACpB6oB,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErChxC,QAAQ,6CACRixC,mBAAmB,8KAErBxC,KAAK,CACH5xC,SAAS,GACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,EAAG,IAAK,KACbxmC,IAAI,CAAC,MAAO,OAAQ,QAEtBwD,eAAe,aACfqa,oBAAoB,eACpB6oB,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErChxC,QAAQ,8CAEV8sC,KAAK,CACHjwC,SAAS,GACTkB,SAAQ,EACRxG,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,KACbxmC,IAAI,CAAC,MAAO,MAAO,QAErBwD,eAAe,aACfnD,KAAK,yBACLwd,oBAAoB,eACpB6oB,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErChxC,QAAQ,8CAEVuxC,4BAA4B,CAC1B10C,SAAS,GACTkB,SAAQ,EACRoI,KAAK,WACL5O,MAAM,CACJu5C,IAAI,UACJD,IAAI,CAAC,IAAK,EAAG,GACbxmC,IAAI,CAAC,IAAK,OAAQ,QAEpBwD,eAAe,eAGnBpE,UAAU,CACR+nC,SAAS,CACPz7C,QAAO,EACPwU,MAAM,WACNhT,MAAM,CACJs5C,IAAI,CAAC,EAAG,IAAK,KACbxmC,IAAI,CAAC,MAAO,OAAQ,SAGxBonC,iBAAiB,CACfC,UAAU,CAAC,OAAO,yBAClBnnC,MAAM,kBACNhT,MAAM,CACJs5C,IAAI,CAAC,EAAG,IAAK,KACbxmC,IAAI,CAAC,MAAO,OAAQ,SAGxBsnC,QAAQ,CACN57C,QAAO,EACPwU,MAAM,UACNhT,MAAM,CACJs5C,IAAI,CAAC,EAAG,IAAK,KACbxmC,IAAI,CAAC,MAAO,MAAO,SAGvBunC,IAAI,CACFrnC,MAAM,MACNG,KAAK,WACLnT,MAAM,CACJs5C,IAAI,CAAC,IAAK,GAAI,IACdxmC,IAAI,CAAC,MAAO,MAAO,SAGvBwnC,KAAK,CACHtnC,MAAM,OACNxU,QAAO,EACPwB,MAAM,CACJs5C,IAAI,CAAC,GAAI,GAAI,IACbxmC,IAAI,CAAC,MAAO,KAAM,SAGtBynC,MAAM,CACJvnC,MAAM,SAERwnC,KAAK,CACHxnC,MAAM,OACNxU,QAAO,EACPwB,MAAM,CACJs5C,IAAI,CAAC,IAAK,IAAK,KACfxmC,IAAI,CAAC,MAAO,MAAO,QAErB3E,KAAK,CACHssC,6CAA6C,CAACC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,sBAAsBC,QAAU,uBACx7EC,6CAA6C,CAACC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUC,QAAU,UAAUnaAGpqDljC,MAAM,CACJpJ,MAAM,GACNhT,MAAM,CACJs5C,IAAI,CAAC,EAAG,GAAI,KACZxmC,IAAI,CAAC,MAAO,OAAQ,SAGxBpM,KAAK,CACHsM,MAAM,OACNhT,MAAM,CACJs5C,IAAI,CAAC,EAAG,GAAI,KACZxmC,IAAI,CAAC,MAAO,OAAQ,WAK5BgtC,SAAS,CACP9c,QAAQ,CACN3kC,OAAO,CACL0hD,eAAc,EACdjX,yBAAwB,GAE1BxqC,QAAQ,CACN0hD,UAAS,EACTC,iBAAiB,IACjBC,yBAAwB,EACxBpX,yBAAwB,EACxBqX,cAAc,CACZ35C,SAAQ,EACR6gB,IAAI+4B,GACJxxC,KAAK,kBACLyxC,SAAS,sBACT53C,QAAQ,+CAGZlK,QAAQ,CACNwhD,eAAc,EACdxT,sBAAsB,IACtB+T,4BAA4B,KAE9BC,gBAAgB,CACd/5C,SAAQ,GAEVg6C,UAAU,CACRh6C,SAAQ,EACR6gB,IAAIo5B,MAIVC,QAAQ,CACNC,kBAAkB,CAChBn4B,EAAE,UACFE,EAAE,UACFk4B,EAAE,UACFC,GAAG,SAELC,UAAS,EACTC,gBAAgB,EAChBz4C,cAAc,QACdovB,iBAAiB,QACjBspB,sBAAuB,EACvBC,sBAAuB,EACvBngB,UAAU,CACRogB,OAAO,CACL14B,EAAG,gCACHq4B,GAAI,+BAENM,UAAU,CACR36C,SAAQ,EACR46C,UAAU,CACR54B,EAAG,+BACHq4B,GAAI,uCAGRrV,SAAS,CACPhlC,SAAQ,EACR66C,aAAY,EACZC,kBAAkB,CAAC,EAAE,IACrBC,gBAAgB,CAAC,aACjBH,UAAU,CACRI,OAAO,mDAET1L,OAAO,CACL2L,OAAO,EACPC,OAAQhQ,GAAIiQ,uBACZC,OAAQlQ,GAAImQ,yBACZC,MAAO,yCAGXC,SAAS,CACPv7C,SAAQ,EACR86C,kBAAkB,CAAC,EAAE,IACrBxL,OAAO,CACL4L,OAAQhQ,GAAIsQ,uBACZC,UAAWvQ,GAAIwQ,8BACfC,OAAQ,KACRC,YAAaC,gBAAaC,MAG9BC,SAAS,CACP/7C,SAAQ,EACR86C,kBAAkB,CAAC,GACnBkB,WAAW,SAACC,EAAU9B,GACpB,IAAI+B,EAAc,KAClB,OAAQD,GACN,KAAK,EACHC,EAAc,UAChB,MACA,QACEA,EAAc/B,EAAkB8B,GAAa9B,EAAkB8B,GAAWlwC,cAAgB,UAG9F,OAAOmwC,GAET5M,OAAO,CACL6M,UAAWh2C,OAAOi2C,SAASC,OAC3BjR,QAAS,OACTkR,MAAO,uCACPC,qBAAqB,EACrBrC,QAAS,cAKjBsC,MAAM,CACJjT,aAAa,CACXvpC,SAAQ,EACRy8C,cAAa,EACbtV,gBAAe,EACfx6B,KAAK,eACLg7B,MAAM,gBACNn7B,MAAM,gBACNkwC,aAAarU,GACbzjB,KAAK,0FACLtpB,MAAM,CACJ+G,gBAAgB,CACd8tC,aAAa,CACXrxC,SAAS,GACT2qC,SAAS,OACT/qB,UAAU,MACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,wBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACE38B,KAAK,UACLy5B,WAAU,EACVr1B,MAAM,UACNk4B,YAAY,aAKpB2L,cAAc,CACZvxC,SAAS,GACT2qC,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACE38B,KAAK,UACLoE,MAAM,UACNq1B,WAAU,MAKlByO,cAAc,CACZxxC,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKby0C,cAAc,CACZ/9C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb00C,cAAc,CACZh+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACElD,WAAU,EACVr1B,MAAM,UACNpE,KAAK,cAKb20C,cAAc,CACZj+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb40C,YAAY,CACVl+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,MACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,4BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACE38B,KAAK,UACLoE,MAAM,UACNq1B,WAAU,MAKlBob,aAAa,CACXn+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,6BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACE38B,KAAK,UACLoE,MAAM,UACNq1B,WAAU,MAKlBqb,aAAa,CACXp+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVwlB,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,6BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,iBAQnB+0C,eAAe,CACbn9C,SAAQ,EACRy8C,cAAa,EACbtV,gBAAe,EACfx6B,KAAK,eACLg7B,MAAM,kBACNn7B,MAAM,kBACNkwC,aAAazR,GACbrmB,KAAK,gGACLtpB,MAAM,CACJ+G,gBAAgB,CACd8tC,aAAa,CACXrxC,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,MACVtW,KAAK,iBACLlJ,MAAM,iBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,wBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKbioC,cAAc,CACZvxC,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,kBACLlJ,MAAM,kBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKbkoC,cAAc,CACZxxC,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,kBACLlJ,MAAM,kBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKby0C,cAAc,CACZ/9C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,kBACLlJ,MAAM,kBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb00C,cAAc,CACZh+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,kBACLlJ,MAAM,kBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb20C,cAAc,CACZj+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,kBACLlJ,MAAM,kBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,yBACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb40C,YAAY,CACVl+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,MACVtW,KAAK,gBACLlJ,MAAM,gBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,4BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb60C,aAAa,CACXn+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,iBACLlJ,MAAM,iBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,6BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,cAKb80C,aAAa,CACXp+C,SAAS,GACT+hB,IAAI+7B,GACJnT,SAAS,OACT/qB,UAAU,OACVtW,KAAK,iBACLlJ,MAAM,iBACN+C,QAAQ,6CACRiiC,kBAAkB,CAChBrjB,IAAI87B,GACJv0C,KAAK,6BACLnG,QAAQ,6CACR8iC,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,iBAQnBg1C,eAAe,CACbp9C,SAAQ,EACR2M,KAAK,YACLg7B,MAAM,UACNn7B,MAAM,kBACNoY,KAAK,yEACL83B,aAAa9R,GACbtvC,MAAM,CACJ4oC,kBAAkB,CAChB97B,KAAK,kBACLyY,IAAIw8B,GACJp7C,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,uBAIXzF,oBAAoB,CAAC,OAAO,QAC5BN,gBAAgB,CACdk7C,UAAU,CACRz+C,SAAS,GACTkB,SAAQ,EACRwwC,SAAS,OACT9xB,UAAU,MACVmC,IAAI28B,GACJt+C,MAAM,aACNyN,KAAK,4BACLq9B,gBAAgB,oBAChB/nC,QAAQ,8CAEVw7C,KAAK,CACH3+C,SAAS,EACTkB,SAAQ,EACRd,MAAM,OACNwf,UAAU,MACV8xB,SAAS,WACTxG,gBAAgB,4BAChB/nC,QAAQ,8CAEVy7C,KAAK,CACH5+C,SAAS,GACTkB,SAAQ,EACRd,MAAM,OACNwf,UAAU,MACV8xB,SAAS,UACTxG,gBAAgB,2BAChB/nC,QAAQ,8CAEV07C,KAAK,CACH7+C,SAAS,GACTkB,SAAQ,EACRd,MAAM,OACNsxC,SAAS,OACT9xB,UAAU,MACVsrB,gBAAgB,wBAChB/nC,QAAQ,8CAEV27C,OAAO,CACL9+C,SAAS,GACTkB,SAAQ,EACRd,MAAM,SACN2hB,IAAI+8B,GAAO/8B,IACXnC,UAAU,MACV8xB,SAAS,QACT7jC,KAAK,yBACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEV47C,OAAO,CACL/+C,SAAS,GACTkB,SAAQ,EACRd,MAAM,SACNwf,UAAU,MACVmC,IAAI+8B,GAAO/8B,IACX2vB,SAAS,QACT7jC,KAAK,yBACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEV67C,WAAW,CACTh/C,SAAS,GACTkB,SAAQ,EACRwwC,SAAS,OACT3vB,IAAI28B,GACJ9+B,UAAU,OACVxf,MAAM,cACNyN,KAAK,6BACLq9B,gBAAgB,oBAChB/nC,QAAQ,8CAEV87C,MAAM,CACJj/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,WACTxG,gBAAgB,4BAChB/nC,QAAQ,8CAEV+7C,MAAM,CACJl/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,UACTxG,gBAAgB,2BAChB/nC,QAAQ,8CAEVg8C,MAAM,CACJn/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNsxC,SAAS,OACT9xB,UAAU,OACVsrB,gBAAgB,wBAChB/nC,QAAQ,8CAEVi8C,QAAQ,CACNp/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACNsxC,SAAS,QACT3vB,IAAIq9B,GAAQr9B,IACZnC,UAAU,OACV/R,KAAK,0BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEVk8C,QAAQ,CACNr/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACNsxC,SAAS,QACT3vB,IAAIq9B,GAAQr9B,IACZnC,UAAU,OACV/R,KAAK,0BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEVm8C,MAAM,CACJt/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,WACTxG,gBAAgB,4BAChB/nC,QAAQ,8CAEVo8C,MAAM,CACJv/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,UACTxG,gBAAgB,2BAChB/nC,QAAQ,8CAEVq8C,MAAM,CACJx/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNsxC,SAAS,OACT9xB,UAAU,OACVsrB,gBAAgB,wBAChB/nC,QAAQ,8CAEVs8C,QAAQ,CACNz/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACN2hB,IAAI09B,GAAQ19B,IACZ2vB,SAAS,QACT9xB,UAAU,OACV/R,KAAK,0BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEVu8C,QAAQ,CACN1/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,UACN2hB,IAAI09B,GAAQ19B,IACZ2vB,SAAS,QACT9xB,UAAU,OACV/R,KAAK,0BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEVw8C,WAAW,CACT3/C,SAAS,GACTkB,SAAQ,EACR6gB,IAAI28B,GACJhN,SAAS,OACT9xB,UAAU,OACVxf,MAAM,mBACNyD,oBAAoB,CAAC,QACrBqnC,gBAAgB,oBAChBr9B,KAAK,kCACL1K,QAAQ,8CAEVy8C,MAAM,CACJ5/C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNsxC,SAAS,OACT9xB,UAAU,OACVsrB,gBAAgB,wBAChB/nC,QAAQ,8CAEV08C,QAAQ,CACN7/C,SAAS,GACTkB,SAAQ,EACRd,MAAM,UACN2hB,IAAI89B,GACJjgC,UAAU,OACV8xB,SAAS,QACT7tC,oBAAoB,CAAC,QACrBgK,KAAK,4BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEV28C,WAAW,CACT9/C,SAAS,GACTkB,SAAQ,EACR6gB,IAAI28B,GACJhN,SAAS,OACT9xB,UAAU,OACVxf,MAAM,mBACNyD,oBAAoB,CAAC,QACrBqnC,gBAAgB,oBAChBr9B,KAAK,kCACL1K,QAAQ,8CAEV48C,MAAM,CACJ//C,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNsxC,SAAS,OACT9xB,UAAU,OACVsrB,gBAAgB,wBAChB/nC,QAAQ,8CAEV68C,QAAQ,CACNhgD,SAAS,GACTkB,SAAQ,EACR6gB,IAAIi+B,GACJ5/C,MAAM,UACNwf,UAAU,OACV8xB,SAAS,QACT7jC,KAAK,4BACLq9B,gBAAgB,yBAChB/nC,QAAQ,8CAEV88C,MAAM,CACJjgD,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,WACTxG,gBAAgB,4BAChB/nC,QAAQ,8CAEV+8C,MAAM,CACJlgD,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNwf,UAAU,OACV8xB,SAAS,UACTxG,gBAAgB,2BAChB/nC,QAAQ,8CAEVg9C,MAAM,CACJngD,SAAS,EACTkB,SAAQ,EACRd,MAAM,QACNsxC,SAAS,OACT9xB,UAAU,OACVsrB,gBAAgB,wBAChB/nC,QAAQ,iDAKhBi9C,SAAS,CACPl/C,SAAQ,EACR2M,KAAK,mBACLg7B,MAAM,YACNn7B,MAAM,YACNoY,KAAK,8CACL83B,aAAa1jB,GACbmmB,YAAY,CACVrkB,YAAW,EACX8B,eAAc,IAGlBwiB,UAAU,CACRp/C,SAAQ,EACR2M,KAAK,WACLg7B,MAAM,eACNn7B,MAAM,eACNoY,KAAK,8CACL83B,aAAa76B,GACbvmB,MAAM,CACJ+G,gBAAgB,CACdg9C,IAAM,CAACngD,MAAQ,OACfgyC,IAAM,CAAChyC,MAAQ,SAGnBigD,YAAY,CACVG,IAAI,gCACJr9C,QAAQ,+CAGZs9C,UAAU,CACRv/C,SAAQ,EACR2M,KAAK,OACLg7B,MAAM,aACNn7B,MAAM,aACNoY,KAAK,4CACL83B,aAAar+B,GACb/iB,MAAM,CACJ+G,gBAAgB,CACdg9C,IAAM,CAACngD,MAAQ,OACfgyC,IAAM,CAAChyC,MAAQ,OACfo0C,KAAO,CAACp0C,MAAQ,QAChBm0C,KAAO,CAACn0C,MAAQ,QAChBsyC,KAAO,CAACtyC,MAAQ,QAChBsgD,KAAO,CAACtgD,MAAQ,QAChBk0C,KAAO,CAACl0C,MAAQ,QAChBq0C,KAAO,CAACr0C,MAAQ,QAChBugD,KAAO,CAACvgD,MAAQ,QAChBwgD,KAAO,CAACxgD,MAAQ,QAChBygD,KAAO,CAACzgD,MAAQ,QAChB0gD,OAAO,CAAC1gD,MAAQ,QAChB2gD,IAAM,CAAC3gD,MAAQ,OACf4gD,MAAQ,CAAC5gD,MAAQ,SACjB6gD,KAAO,CAAC7gD,MAAQ,QAChB8gD,IAAM,CAAC9gD,MAAQ,OACf+gD,IAAM,CAAC/gD,MAAQ,OACfghD,KAAO,CAAChhD,MAAQ,QAChBihD,IAAM,CAACjhD,MAAQ,OACfkhD,IAAM,CAAClhD,MAAQ,OACfmhD,IAAM,CAACnhD,MAAQ,OACfohD,IAAM,CAACphD,MAAQ,OACfqhD,IAAM,CAACrhD,MAAQ,OACfshD,IAAM,CAACthD,MAAQ,OACfuhD,IAAM,CAACvhD,MAAQ,OACfwhD,IAAM,CAACxhD,MAAQ,OACfyhD,IAAM,CAACzhD,MAAQ,OACf0hD,IAAM,CAAC1hD,MAAQ,OACf2hD,IAAM,CAAC3hD,MAAQ,OACf4hD,IAAM,CAAC5hD,MAAQ,OACf6hD,MAAQ,CAAC7hD,MAAQ,SACjB8hD,IAAM,CAAC9hD,MAAQ,OACf+hD,IAAM,CAAC/hD,MAAQ,OACfgiD,IAAM,CAAChiD,MAAQ,OACfiiD,IAAM,CAACjiD,MAAQ,OACfkiD,IAAM,CAACliD,MAAQ,OACfmiD,KAAO,CAACniD,MAAQ,QAChBoiD,IAAM,CAACpiD,MAAQ,OACfqiD,IAAM,CAACriD,MAAQ,OACfsiD,KAAO,CAACtiD,MAAQ,QAChBuiD,KAAO,CAACviD,MAAQ,QAChBwiD,KAAO,CAACxiD,MAAQ,QAChByiD,IAAM,CAACziD,MAAQ,OACf0iD,KAAO,CAAC1iD,MAAQ,QAChB2iD,IAAM,CAAC3iD,MAAQ,OACf4iD,IAAM,CAAC5iD,MAAQ,OACf6iD,IAAM,CAAC7iD,MAAQ,OACf8iD,IAAM,CAAC9iD,MAAQ,OACf+iD,IAAM,CAAC/iD,MAAQ,OACfgjD,IAAM,CAAChjD,MAAQ,OACfijD,IAAM,CAACjjD,MAAQ,OACfkjD,MAAQ,CAACljD,MAAQ,SACjBmjD,KAAO,CAACnjD,MAAQ,QAChBojD,IAAM,CAACpjD,MAAQ,OACfqjD,IAAM,CAACrjD,MAAQ,OACfsjD,IAAM,CAACtjD,MAAQ,OACfujD,IAAM,CAACvjD,MAAQ,OACfwjD,KAAO,CAACxjD,MAAQ,QAChByjD,IAAM,CAACzjD,MAAQ,OACf0jD,IAAM,CAAC1jD,MAAQ,OACf2jD,KAAO,CAAC3jD,MAAQ,QAChB4jD,KAAO,CAAC5jD,MAAQ,QAChB6jD,GAAK,CAAC7jD,MAAQ,MACd8jD,IAAM,CAAC9jD,MAAQ,OACf+jD,IAAM,CAAC/jD,MAAQ,OACfgkD,IAAM,CAAChkD,MAAQ,OACfikD,IAAM,CAACjkD,MAAQ,OACfkkD,IAAM,CAAClkD,MAAQ,OACfmkD,IAAM,CAACnkD,MAAQ,OACfokD,IAAM,CAACpkD,MAAQ,OACfqkD,IAAM,CAACrkD,MAAQ,OACfskD,IAAM,CAACtkD,MAAQ,OACfukD,IAAM,CAACvkD,MAAQ,OACfwkD,IAAM,CAACxkD,MAAQ,OACfykD,IAAM,CAACzkD,MAAQ,OACf0kD,MAAQ,CAAC1kD,MAAQ,SACjB2kD,IAAM,CAAC3kD,MAAQ,OACf4kD,IAAM,CAAC5kD,MAAQ,OACf6kD,IAAM,CAAC7kD,MAAQ,OACf8kD,KAAO,CAAC9kD,MAAQ,QAChB+kD,IAAM,CAAC/kD,MAAQ,OACfglD,IAAM,CAAChlD,MAAQ,OACfilD,IAAM,CAACjlD,MAAQ,SAGnBigD,YAAY,KAIhB9kB,SAAU,CACRmC,QAAQ,CACN4nB,KAAK,CACHhpB,gBAAgB,KAChBO,iBAAgB,EAChBrgC,MAAM,CACJi9B,SAAS,kBACTG,QAAQ,iBAGZ2rB,KAAK,CACHjpB,gBAAgB,KAChBO,iBAAgB,EAChBrgC,MAAM,CACJi9B,SAAS,wBACTG,QAAQ,gBAGZ4rB,OAAO,CACLlpB,gBAAgB,gBAChBO,iBAAgB,EAChBrgC,MAAM,CACJi9B,SAAS,6BACTG,QAAQ,kBACRF,WAAW,CACTh+B,QAAQ,CAAC,IAAI,WAKrB8/B,UAAW,CACTiqB,KAAM,CACJvkD,SAAS,EACTu4B,SAAU,2BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,QAClBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACxDZ,gBAAgB,CAAC,OAAO,MAAM,OAC9Bjc,gBAAgB,GAChB0rB,IAAI,OACJsZ,UAAU,CACR5V,KAAK,CACH6V,UAAU,kBAEZC,KAAK,CACHD,UAAU,mBAGdzpB,QAAS,SAAC1/B,GACR,IAAMxB,EAAO,GACb,GAAIwB,EAAM29B,gBAAkB39B,EAAM29B,eAChC,OAAQ39B,EAAM29B,gBACZ,IAAK,OACHn/B,EAAKi/B,WAAL,8BACF,MACA,IAAK,OACHj/B,EAAKi/B,WAAL,4BAMN,OAAOj/B,GAETolB,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,GAClC,IAAMyR,EAAM9+B,EAAciuB,SAASC,UAAUiqB,KAAKrZ,IAE5CyZ,EADYv4C,EAAciuB,SAASC,UAAUiqB,KAAKC,UAAUtZ,GAC9BuZ,UAG9BnV,EAAS,CACbsV,KAAI,YAAA3kD,OAAc3E,EAAMuB,SACxBgoD,aAAcprB,EAAU3wB,cAAgB2wB,EAAU3wB,cAAkBxN,EAAMO,YAAY0oD,MAAQjpD,EAAMO,YAAY0oD,KAAKM,aAAevpD,EAAMO,YAAY0oD,KAAKM,aAAevpD,EAAMwN,cAChL67C,oBACAG,YAAY14C,EAAck/B,SAI5B,MAAO,GAAArrC,OAVK,oCAUL,KAAUhF,OAAO4H,KAAKysC,GACxBz4B,IAAI,SAAAkuC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1V,EAAOyV,MACjEx4C,KAAK,MAEZ4S,OAAQ,SAACF,EAAWkP,EAAO7yB,EAAM8Q,GAE/B,IADmBtF,SAASC,eAAe,eAC3B,CACd,IAAMk+C,EAAYn+C,SAAS/L,cAAc,OA2BzC,GA1BAkqD,EAAUC,UAAV,68BAAAjlD,OASegf,EATf,2dAAAhf,OAgBsBmM,EAAciuB,SAASC,UAAUiqB,KAAKhsB,SAhB5D,oQAuBAzxB,SAASq+C,KAAK7kC,YAAY2kC,IAGrBn+C,SAASC,eAAe,oBAAoB,CAC/C,IAAMq+C,EAAYt+C,SAAS/L,cAAc,SACzCqqD,EAAUj5C,GAAK,mBACfi5C,EAAUF,UAAV,4aAaAp+C,SAASq+C,KAAK7kC,YAAY8kC,OAKlCC,KAAM,CACJrlD,SAAQ,EACRu4B,SAAU,2BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAU,0BACVwC,iBAAiB,CAAC,QAClB1C,MAAO,CACL3kC,KAAK,iBACLsF,MAAM,OACNq0B,QAAQ,WAEVwO,mBAAmB,CAAC,MAAM,OAC1BZ,gBAAgB,CAAC,MAAM,MAAM,QAC7Bvc,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,GACnC,MAAO,CACL6rB,YAAa,OACZC,YAAajqD,EAAMuB,QACnB2oD,WAAYta,GAAIua,mBAChBtrB,QAAS7+B,EAAMmL,SAAW,SAAW,UACrCi/C,YAAW,GAAAzlD,OAAKmM,EAAck/B,QAAnB,0BACXqa,UAAWlsB,EAAU3wB,cAAgB2wB,EAAU3wB,cAAkBxN,EAAMO,YAAYwpD,MAAQ/pD,EAAMO,YAAYwpD,KAAKM,UAAYrqD,EAAMO,YAAYwpD,KAAKM,UAAYrqD,EAAMwN,gBAG3KqW,OAAQ,SAACF,EAAWkP,EAAO7yB,EAAM8Q,GAC/B,IAAIw5C,KAAe3mC,GAChB4H,GAAG,IADN,eAAAlB,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KACW,SAAAC,EAAOupD,GAAP,IAAA/pD,EAAA8tB,EAAAnB,EAAA,OAAArsB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACDb,EAAgB,IAAIE,GAAcV,GACpCsuB,EAAgB,KAChBnB,EAAc,KAHXhsB,EAAAgE,GAKColD,EAAMhhD,KALPpI,EAAAE,KAMA,wBANAF,EAAAgE,GAAA,yBAQHnF,EAAM8+B,oBARH39B,EAAAE,KAAA,EAUmBrB,EAAMupC,mBAVzB,cAUHjb,EAVGntB,EAAAK,KAYH2rB,EAAco9B,EAAMC,QAAQC,SAASt9B,YACrCA,EAAc3sB,EAAciB,MAAM0rB,EAAYhX,YAAY3Q,IAAIhF,EAAciB,MAAMqX,KAAK4xC,IAAI,GAAGx+C,SAASoiB,IAAgBnY,aAAaA,WAGpItL,OAAO0zB,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAA95B,OAAKwoB,EAAL,KAAAxoB,OAAoB3E,EAAMwN,cAA1B,2BAChBkxB,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YArBR19B,EAAAQ,OAAA,2BAAAR,EAAAQ,OAAA,qCAAAR,EAAAS,SAAAZ,EAAAjB,SADX,gBAAAqC,GAAA,OAAAioB,EAAA/nB,MAAAvC,KAAAwC,YAAA,IA8BGooD,SAGPC,QAAS,CACPlmD,SAAQ,EACRu4B,SAAU,8BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAU,+BACVwC,iBAAiB,CAAC,OAAO,QACzBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9DZ,gBAAgB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,QACzDjc,gBAAgB,CAAC2mC,0CAA0C,IAC3Djb,IAAI,OACJrS,MAAM,CACJ3kC,KAAK,UACL25B,QAAQ,WAEV22B,UAAU,CACR5V,KAAK,CACHsM,OAAOhQ,GAAIkb,2BACX3mC,IAAI,8BAENilC,KAAK,CACHxJ,OAAOhQ,GAAImb,2BACX5mC,IAAI,+BAGRub,QAAS,SAAC1/B,GACR,IAAMxB,EAAO,GAEPm/B,EAAiB39B,EAAM29B,gBAAkB39B,EAAM29B,eACjDrnB,EAAyB,SAAnBqnB,EAA4B,OAAS,OAE/C,GAAI39B,EAAM69B,iBAAmB79B,EAAM69B,gBAAgBtvB,MACjD,OAAQvO,EAAM69B,gBAAgBtvB,MAAMgU,eAClC,IAAK,MACH/jB,EAAK++B,MAAQ,CACX3kC,KAAK,UACL25B,QAAQ,WAEV/zB,EAAKi/B,WAAL,KAAA94B,OAAuB2R,EAAvB,oBACF,MACA,IAAK,MACHA,EAAM,OACN9X,EAAK++B,MAAQ,CACX3kC,KAAK,UACL25B,QAAQ,WAEV/zB,EAAKi/B,WAAL,KAAA94B,OAAuB2R,EAAvB,oBACF,MACA,IAAK,MAED9X,EAAK++B,MADgB,SAAnBI,EACW,CACX/kC,KAAK,OACLsF,MAAM,WACNq0B,QAAQ,WAGG,CACX35B,KAAK,UACL25B,QAAQ,WAGZ/zB,EAAKi/B,WAAL,KAAA94B,OAAuB2R,EAAvB,oBAMN,OAAO9X,GAETolB,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,GAClC,IAAMyR,EAAM9+B,EAAciuB,SAASC,UAAU4rB,QAAQhb,IAC/CsZ,EAAYp4C,EAAciuB,SAASC,UAAU4rB,QAAQ1B,UAAUtZ,GAEjEob,EAAe,KAEnB,GAAI7sB,EAAUN,iBAAmBM,EAAUN,gBAAgBtvB,MACzD,OAAQ4vB,EAAUN,gBAAgBtvB,MAAMgU,eACtC,IAAK,MACHyoC,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,QACEA,EAAe,MAKrB,IAAIC,EAAqB9sB,EAAU3wB,cAAgB2wB,EAAU3wB,cAAciD,cAAkBzQ,EAAMO,YAAYqqD,SAAW5qD,EAAMO,YAAYqqD,QAAQM,aAAelrD,EAAMO,YAAYqqD,QAAQM,aAAelrD,EAAMwN,cAClNy9C,EAAqBA,EAAmB1oC,cAOxC,MAAO,CACLq9B,OANasJ,EAAUtJ,OAOvBqL,qBACAE,cAPoBnrD,EAAMuB,QAQ1BypD,eACAI,kBARwBprD,EAAMuB,QAS9B8pD,0BAR+B,EAS/BpxD,MAAM,OACN+E,OAAO,SAIX6kB,OAAQ,SAACF,EAAWkP,EAAO7yB,EAAM8Q,GAC/B,GAAIjG,OAAOygD,cAAc,CAGvB,IADsB9/C,SAASC,eAAe,kBAC3B,CACjB,IAAMk+C,EAAYn+C,SAAS/L,cAAc,OAmBzC,GAlBAkqD,EAAUC,UAAV,szCAAAjlD,OAQsBmM,EAAciuB,SAASC,UAAU4rB,QAAQ3tB,SAR/D,iQAeAzxB,SAASq+C,KAAK7kC,YAAY2kC,IAGrBn+C,SAASC,eAAe,uBAAuB,CAClD,IAAM8/C,EAAe//C,SAAS/L,cAAc,SAC5C8rD,EAAa16C,GAAK,sBAClB06C,EAAa3B,UAAb,6cAaAp+C,SAASq+C,KAAK7kC,YAAYumC,IAI9B1gD,OAAOygD,cAAcznC,OAAOF,EAAY,+BAI9C6nC,QAAS,CACP9mD,SAAQ,EACRu4B,SAAU,8BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAY,eACZwC,iBAAiB,CAAC,OAAO,QACzBc,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChFZ,gBAAgB,CAAC,OAAO,MAAM,OAC9ByP,IAAI,OACJsZ,UAAU,CACR5V,KAAK,CACHnvB,IAAI,iCACJy7B,OAAOhQ,GAAI6b,4BAEbrC,KAAK,CACHjlC,IAAI,yBACJy7B,OAAOhQ,GAAI8b,6BAGfhsB,QAAS,SAAC1/B,GACR,IAAMxB,EAAO,GACb,GAAIwB,EAAM29B,gBAAkB39B,EAAM29B,eAChC,OAAQ39B,EAAM29B,gBACZ,IAAK,OACH,GAAI39B,EAAM69B,iBAAmB79B,EAAM69B,gBAAgBtvB,MACjD,OAAQvO,EAAM69B,gBAAgBtvB,MAAMgU,eAClC,IAAK,MACH/jB,EAAK++B,MAAQ,CACX3kC,KAAK,OACLsF,MAAM,WACNq0B,QAAQ,WAEV/zB,EAAKi/B,WAAL,yBACF,MACA,IAAK,MACHj/B,EAAK++B,MAAQ,CACX3kC,KAAK,OAEP4F,EAAKi/B,WAAL,yBACF,MACA,QACEj/B,EAAK++B,MAAQ,KACb/+B,EAAKi/B,WAAL,6BAIR,MACA,IAAK,OACHj/B,EAAK++B,MAAQ,KACb/+B,EAAKi/B,WAAL,aAMN,OAAOj/B,GAETolB,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,GAClC,IAAMyR,EAAM9+B,EAAciuB,SAASC,UAAUwsB,QAAQ5b,IAC/CsZ,EAAYp4C,EAAciuB,SAASC,UAAUwsB,QAAQtC,UAAUtZ,GAE/DoE,EAAS,CACb4L,OAFasJ,EAAUtJ,OAGvBsL,aAAc/sB,EAAU3wB,cAAgB2wB,EAAU3wB,cAAciD,cAAkBzQ,EAAMO,YAAYirD,SAAWxrD,EAAMO,YAAYirD,QAAQN,aAAelrD,EAAMO,YAAYirD,QAAQN,aAAelrD,EAAMwN,cAAciD,cACrN06C,cAAcnrD,EAAMuB,QACpBoqD,iBAAiB,MACjBC,uBAAuB,GAGnB1qB,EAAU,CACd4nB,KAAO,CACL5Y,IAAM,oBACNK,IAAM,sBAERwY,KAAO,qBAGHlrB,EAAkBM,EAAUN,iBAAmBM,EAAUN,gBAAgBtvB,MAAQ4vB,EAAUN,gBAAgBtvB,MAAMgU,cAAgB,KAGvI,GAAI4b,EAAUR,eACZ,OAAQQ,EAAUR,gBAChB,IAAK,OAEH,OADAqW,EAAO6X,sBAAwB3qB,EAAQ/C,EAAUR,gBAAlB,IACvBE,GACN,IAAK,MACL,IAAK,MACHmW,EAAO6X,sBAAwB3qB,EAAQ/C,EAAUR,gBAAgBE,GACnE,MACA,QACEmW,EAAO6X,sBAAwBlsD,OAAO+X,OAAOwpB,EAAQ/C,EAAUR,iBAAiB1sB,KAAK,KAG3F,MACA,IAAK,OACL,QACE+iC,EAAO6X,sBAAwB3qB,EAAQ/C,EAAUR,gBAMvD,OAAQE,GACN,IAAK,MACHmW,EAAO2X,iBAAmB,MAC5B,MACA,IAAK,MACH3X,EAAO2X,iBAAmB,MAC5B,MACA,QACE3X,EAAO2X,iBAAmB,MAI9B,IAAIxnC,EAAM+kC,EAAU/kC,IAWpB,OARe2nC,UAAUC,UAAU/zC,QAAQ,WAAa,IAEjDxM,SAASwgD,OAAO7wC,MAAM,+CACzB3P,SAASwgD,OAAS,qEAClB7nC,GAAO,gBAIJ,GAAAxf,OAAGwf,EAAH,KAAUxkB,OAAO4H,KAAKysC,GACxBz4B,IAAI,SAAAkuC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1V,EAAOyV,MACjEx4C,KAAK,MAEZ4S,OAAQ,SAACF,EAAWkP,EAAO7yB,EAAM8Q,GAE/B,IADsBtF,SAASC,eAAe,kBAC3B,CACjB,IAAMk+C,EAAYn+C,SAAS/L,cAAc,OA8BzC,GA7BAkqD,EAAUC,UAAV,iqBAAAjlD,OAQiBgf,EARjB,yeAAAhf,OAewBmM,EAAciuB,SAASC,UAAUwsB,QAAQvuB,SAfjE,iwBA0BAzxB,SAASq+C,KAAK7kC,YAAY2kC,IAGrBn+C,SAASC,eAAe,uBAAuB,CAClD,IAAMwgD,EAAezgD,SAAS/L,cAAc,SAC5CwsD,EAAap7C,GAAK,sBAClBo7C,EAAarC,UAAb,qbAaAp+C,SAASq+C,KAAK7kC,YAAYinC,OAKlCpW,cAAe,CACbnxC,SAAS,EACTu4B,SAAU,oCACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBjc,gBAAgB,CAACgoC,uCAAuC,IACxDtoC,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,EAAUC,EAAUC,GAEtD,IAAM8tB,EAAcr7C,EAAc6kC,OAAOxX,EAAU3wB,eAC7C4+C,EAAgBvhD,OAAOwhD,mBAAqBxhD,OAAOwhD,mBAAmBD,cAAgB,KAE5F,OAAKD,EAAYtW,cAIV,CACL8K,UAAW7vC,EAAc8tC,QAAQK,gBACjCqN,QAASx7C,EAAc8tC,QAAQK,gBAC/B/gB,SAAUkuB,GAAiC,aAAhBA,GAA8BvhD,OAAOwhD,mBAAmBE,UAAUH,EAAc37C,eAAiB5F,OAAOwhD,mBAAmBE,UAAU1hD,OAAOwhD,mBAAmBD,cAAc37C,eAAeytB,SAAWrzB,OAAO2hD,SACzO1W,YAAaqW,EAAYtW,cAAcC,YACvCE,cAAemW,EAAYtW,cAAcG,cACzCyW,yBAA0BN,EAAYtW,cAAcE,UACpD2W,oBAAqB,CAACP,EAAYtW,cAAcE,WAChD4W,gCAAgC,EAChCvuB,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cAbtB,MAgBXxa,OAAQ,SAACF,EAAWkP,GACdhoB,OAAOgrC,eAAiBlyB,IACtBkP,IACFlP,EAAWipC,sBAAwBjhD,WAAWknB,IAEhDhoB,OAAOgrC,cAAchyB,OAAOF,EAAY,WAI9CkpC,UAAW,CACTnoD,SAAS,EACTu4B,SAAU,4BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,YACTI,WAAY,MACZC,WAAY,gBACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,MAAM,OAAO,OAAO,OAAO,QACnD2sB,iBAAiB,CACfpoD,SAAS,EACTqoD,gBAAiB,6CACjBC,eAAgB,CACd,CACEC,aAAgB,UAChBngD,KAAQ,gBACRvD,KAAQ,WAEV,CACE0jD,aAAgB,UAChBngD,KAAQ,gBACRvD,KAAQ,WAEV,CACE0jD,aAAgB,UAChBngD,KAAQ,eACRvD,KAAQ,WAEV,CACE0jD,aAAgB,UAChBngD,KAAQ,eACRvD,KAAQ,aAId2a,gBAAgB,CACdgpC,iDAAiD,GACjDC,gDAAgD,CAC9CpoC,cAAcvZ,SAASq+C,KACvBnlC,QAAS,SAAC1kB,EAAM8Q,EAAc0S,GAI5B,IADA,IAAM/kB,EAAU+M,SAAS4hD,iBAAiB,wBACjC98C,EAAE,EAAEA,EAAE7R,EAAQoE,OAAOyN,IAC5B7R,EAAQ6R,GAAG+8C,SASb,IADA,IAAMC,EAAU9hD,SAAS4hD,iBAAiB,qBACjC98C,EAAE,EAAEA,EAAEg9C,EAAQzqD,OAAOyN,IAC5Bg9C,EAAQh9C,GAAG+8C,SAGb,IAAM3pC,EAAW1jB,EAAM0jB,SAAW1jB,EAAM0jB,SAAvB,iBAAA/e,OAAmD3E,EAAMwN,eAC1E,IAAKhC,SAASC,eAAeiY,GAAU,CACrC,IAAMlkB,EAAIgM,SAAS/L,cAAc,KACjCD,EAAEqR,GAAK6S,EACPlkB,EAAE2lB,KAAO3B,EAAaI,cAAc5jB,EAAM8Q,GAC1CtR,EAAEK,OAAS,SACXL,EAAEM,IAAM,+BACRN,EAAE8f,UAAY,kDACd9f,EAAE/F,MAAQ,kBACV+F,EAAEge,MAAQ,gBACVhS,SAASq+C,KAAK7kC,YAAYxlB,OAKlCokB,cAAe,SAAC5jB,EAAM8Q,GAAiCvO,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,OAC/C6gB,EAAYpjB,EAAMojB,UAAYpjB,EAAMojB,UAAY,MAChD4wB,EAAS,CACbuZ,KAAK,KACLhkD,KAAK,OACLikD,KAAK,SACLt0D,MAAM,cACNu0D,iBAAgB,EAEhBC,aAAY,GAAA/oD,OAAIye,EAAJ,KAAAze,OAAiB3E,EAAMwN,eACnC/T,MAAK,QAAAkL,OAASye,EAAT,SAAAze,OAA0B3E,EAAMwN,eACrCmgD,YAAW,GAAAhpD,OAAIye,EAAJ,KAAAze,OAAiB3E,EAAMwN,eAClCogD,aAAa,6CACbhP,QAAmD,IAA1C9tC,EAAc8tC,QAAQK,gBAAwB,UAAY,QAKrE,MAAO,GAAAt6C,OAFM,uCAEN,KAAUhF,OAAO4H,KAAKysC,GACxBz4B,IAAI,SAAAkuC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1V,EAAOyV,MACjEx4C,KAAK,MAEZ4S,OAAQ,SAACF,EAAWkP,EAAO7yB,GACzB,IAAM0jB,EAAW1jB,EAAM0jB,SAAW1jB,EAAM0jB,SAAvB,iBAAA/e,OAAkD3E,EAAMwN,eACnEhO,EAAIgM,SAASC,eAAeiY,GAC9BlkB,GACFA,EAAEquD,UAgCRC,QAAS,CACPppD,SAAS,EACTu4B,SAAU,8BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAY,aACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxByP,IAAI,aACJ1rB,gBAAgB,CAAC6pC,mDAAmD,IACpEnqC,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,EAAU6vB,EAAW3vB,GACvD,MAAO,CACLuR,IAAK,aACL4d,KAAM,MACN5pD,MAAO5D,EAAMO,YAAYoG,QACzByc,UAAW,MACX4qC,WAAYA,GAA0B,aACtC3vB,QAASA,GAAoB,eAGjCxa,OAAQ,SAACF,EAAWkP,EAAO7yB,GACrB6K,OAAOojD,iBACLp7B,IACFlP,EAAWkP,OAASA,EAAO1c,YAE7BtL,OAAOojD,eAAepqC,OAAOF,EAAW,WAI9CuqC,MAAO,CACLxpD,SAAS,EACTu4B,SAAU,4BACVC,WAAY,CACVjjC,MAAO,CAAC,OAAO,QACf+E,OAAQ,CAAC,OAAO,QAChB8mB,GAAI,OAENsX,QAAS,WACTI,WAAY,MACZC,WAAY,aACZwC,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxByP,IAAI,aACJ1rB,gBAAgB,CAACiqC,0CAA0C,IAC3DvqC,cAAe,SAAC5jB,EAAM8Q,EAAcqtB,EAAU6vB,EAAW3vB,GACvD,MAAO,CACL+vB,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B3O,OAAQ,KACR4O,uBAAwB,OAG5B3qC,OAAQ,SAACF,EAAWkP,EAAO7yB,GACzB,GAAI6K,OAAO4jD,YAAY,CACrB,IAAMC,EAAS,eACf,IAAKljD,SAASC,eAAeijD,GAAQ,CACnC,IAAMC,EAAuBnjD,SAAS/L,cAAc,OACpDkvD,EAAqB99C,GAAK69C,EAC1BljD,SAASq+C,KAAK7kC,YAAY2pC,GAG5B9jD,OAAO4jD,YAAYrxD,QAAQwxD,IAAIjrC,EAAWnY,SAASC,eAAeijD,UC/0ExEG,GAAgBC,EAAQ,MACxBlf,GAAMC,qkCAgyJGnvC,cAvxJb,SAAAA,EAAYV,GAAM,IAAAI,EAAAL,KAAAJ,OAAAU,EAAA,EAAAV,CAAAI,KAAAW,GAAAX,KAJlBC,MAAQ,GAIUD,KAHlBgvD,aAAe,KAGGhvD,KAKlBU,SAAW,SAAAT,GACTI,EAAKJ,MAAQA,GANGD,KAQlBivD,QAAU,SAAAhsB,GACR,OAAO5iC,EAAKqB,MAAMuhC,GAAKryB,QAAQ,IATf5Q,KAWlBkvD,KAAO,SAAA5xC,GAAC,OAAI,IAAIjd,EAAKJ,MAAM+iC,KAAKmsB,MAAMC,GAAG9xC,IAXvBtd,KAYlBqvD,MAAQ,SAAAC,GACN,OAAKjvD,EAAKJ,MAAM+iC,KAGT3iC,EAAKJ,MAAM+iC,KAAKmsB,MAAMI,SAC1BD,GAAO,GAAGl5C,WACX,SAJO,MAdOpW,KAqBlBwvD,MAAQ,SAAAvsB,GACN,OAAK5iC,EAAKJ,MAAM+iC,KAGT3iC,EAAKJ,MAAM+iC,KAAKmsB,MAAMK,OAC1BvsB,GAAO,GAAG7sB,WACX,SAJO,MAvBOpW,KA8BlByvD,UAAY,SAAAtgB,GAAC,OAAI,IAAIugB,IAAUvgB,IA9BbnvC,KA+BlB0B,MAAQ,SAAAytC,GAAC,OAAI,IAAIugB,IAAwB,kBAANvgB,EAAiBA,EAAIwgB,OAAOxgB,KA/B7CnvC,KAgClB+iC,UAAY,WAAc,QAAA6sB,EAAAptD,UAAAM,OAAV7C,EAAU,IAAA4vD,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV7vD,EAAU6vD,GAAAttD,UAAAstD,GAAM/+C,GAAcggC,KAAKE,iBAAiB5wC,EAAK0iC,UAALxgC,MAAAlC,EAAI,CAAW0vD,MAAS12C,OAAO,aAA3BzU,OAA0C3E,KAhChGD,KAiClBgwD,eAAiB,WAAc,QAAAC,EAAAC,EAAA1tD,UAAAM,OAAV7C,EAAU,IAAA4vD,MAAAK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVlwD,EAAUkwD,GAAA3tD,UAAA2tD,GAAMp/C,GAAcggC,KAAKC,gBAAeif,EAAAG,SAAQjuB,MAAR5/B,MAAA0tD,EAAA,CAAcF,MAAS12C,OAAO,aAA9BzU,OAA6C3E,KAjClGD,KAkClBulB,kBAAoB,SAAC8qC,GACnB,IAAMpS,EAAW59C,EAAKJ,MAAM8zC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASsjD,IAC3D,QAAKpS,GAGEA,EAASA,UAvCAj+C,KAyClBuwD,8BAAgC,SAACjzC,GAC/B,OAAOA,EAAEkzC,QAAQ,YAAY,MACpBA,QAAQ,OAAO,IACfA,QAAQ,QAAQ,IAChBA,QAAQ,UAAU,KAClBA,QAAQ,SAAS,KA9CVxwD,KAgDlBoR,WAAa,SAACq/C,GACZ,OAAOA,EAAI5lC,OAAO,EAAE,GAAGrI,cAAciuC,EAAI5lC,OAAO,IAjDhC7qB,KAmDlBmZ,YAAc,SAACmW,GAAqB,IAAhBjW,EAAgB7W,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KACzB,OAAOutD,IAAOzgC,EAAKjW,IApDHrZ,KAsDlBomC,kBAAoB,SAACsqB,EAAKC,GAOxB,OANIA,GAAQ/wD,OAAO4H,KAAKmpD,GAAM7tD,QAC5BlD,OAAO4H,KAAKmpD,GAAMzmD,QAAQ,SAAAC,GACxBumD,EAAKvmD,GAAKwmD,EAAKxmD,KAIZumD,GA7DS1wD,KA+DlB4wD,UAAY,SAACC,GACV,IAAIC,EAAMrlD,SAAS/L,cAAc,OAEjC,OADAoxD,EAAIjH,UAAYgH,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IAlE5BhxD,KAqElBixD,SAAW,SAACC,EAAIh0C,GACd,IAAME,EAAQtS,OAAOqmD,QACfC,EAASF,EAAK9zC,EAEhBi0C,EAAc,EAElBt4C,KAAKu4C,cAAgB,SAAUC,EAAGh8B,EAAG+6B,EAAGpiD,GAEtC,OADAqjD,GAAKrjD,EAAE,GACC,EAAUoiD,EAAE,EAAEiB,EAAEA,EAAIh8B,GAEpB+6B,EAAE,KADViB,GACkBA,EAAE,GAAK,GAAKh8B,IAGV,SAAhBi8B,IACFH,GAXc,GAYd,IAAII,EAAM14C,KAAKu4C,cAAcD,EAAaj0C,EAAOg0C,EAAQl0C,GACzDpS,OAAOmmD,SAAS,EAAEQ,GACfJ,EAAcn0C,GACfpS,OAAOu5B,WAAWmtB,EAfN,IAmBlBA,IA3FgBxxD,KA6FlBw1B,YAAc,SAACnZ,EAAG7b,GAEhB,IAAMwF,EAAmBxF,EAAYqE,KAAK+B,QACpC8qD,EAA2BrxD,EAAKO,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChF+wD,EAAwBnxD,EAAYiX,WAAajX,EAAYiX,UAAUoxB,kBAAoBroC,EAAYiX,UAAUoxB,kBAAkBjiC,QAAU,KAC7IgrD,EAA4BpxD,EAAYiX,WAAajX,EAAYiX,UAAUoxB,mBAAqBroC,EAAYiX,UAAUoxB,kBAAkBoZ,aAAezhD,EAAYiX,UAAUoxB,kBAAkBoZ,aAAe,GAC9MH,EAAiBzhD,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBJ,EAAYqE,KAAKhB,QAC3GguD,EAA6B/P,GAAkBA,EAAejZ,kBAAoBiZ,EAAejZ,kBAAkBjiC,QAAU,KAG7HkrD,EADqBD,GAA8Bx1C,EAAGvM,KAAKY,gBAAkBmhD,EAA2BnhD,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAC5MihD,IAA0Bt1C,EAAGvM,KAAKY,gBAAkBihD,EAAsBjhD,gBAAuH,IAAtGkhD,EAA0Bp2C,IAAI,SAAC9M,GAAQ,OAAOA,EAAEgC,gBAAkBuH,QAAQoE,EAAGvM,KAAKY,iBAA2B2L,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,cACrSqhD,GAAoBD,GAAiBz1C,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,cACzJshD,GAAuBF,GAAiBz1C,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,cAC1JuhD,GAAeH,IAAkBC,IAAqBC,IAAwB31C,EAAG60C,GAAGxgD,gBAAkB1K,EAAiB0K,eAAkBghD,GAA4Br1C,EAAG60C,GAAGxgD,gBAAkBghD,EAAyB9qD,QAAQ8J,eAC9NwhD,GAAcJ,IAAkBC,IAAqBC,GAAuB31C,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,cACvHyhD,GAAYL,IAAkBC,IAAqBC,IAAwBC,GAAe51C,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,cAE9M5T,EAAS,KAkBb,OAhBIm1D,EACFn1D,EAAS,UACAo1D,EACTp1D,EAAS,SACAg1D,EACTh1D,EAAS,UACAi1D,EACTj1D,EAAS,OACAk1D,EACTl1D,EAAS,UACAq1D,EACTr1D,EAAS,OACAq1D,IACTr1D,EAAS,WAGJA,GAhISkD,KAkIlBu6B,oBAlIkB36B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkII,SAAAgB,IAAA,IAAAgF,EAAAxF,EAAA6oB,EAAA+nC,EAAAC,EAAA7vD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAAO0F,EAAPqrD,EAAAvvD,OAAA,QAAAC,IAAAsvD,EAAA,GAAAA,EAAA,GAAuB,KAAK7wD,EAA5B6wD,EAAAvvD,OAAA,QAAAC,IAAAsvD,EAAA,GAAAA,EAAA,GAAoC,KAClDhoC,EAAY,CAChByC,cAAc,GACdgO,aAAaz6B,EAAKqB,MAAM,IAG1BsF,EAAkBA,GAAoC3G,EAAKJ,MAAM+G,iBACjExF,EAAUA,GAAoBnB,EAAKJ,MAAMuB,UAExBwF,EATG,CAAA7E,EAAAb,KAAA,eAAAa,EAAAP,OAAA,SAUXyoB,GAVW,cAAAloB,EAAAb,KAAA,EAadjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAAjF,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAC,EAAO4C,GAAP,IAAArD,EAAAmW,EAAAlE,EAAA0D,EAAA,OAAApV,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7Cd,EAAcwG,EAAgBnD,GADezC,EAAAE,KAAA,EAEpBjB,EAAKkB,gBAAgBf,EAAYqE,KAAKhB,MAAMrC,GAFxB,YAE7CmV,EAF6CvV,EAAAK,MAAA,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKxBjB,EAAKkqB,kBAAkB/pB,GALC,OAK3CiS,EAL2CrR,EAAAK,KAM3C0U,EAAeQ,EAAiBnR,MAAMiN,GAEvCA,EAAW9Q,SAAYwU,EAAaxU,UACvC0oB,EAAUyC,cAAcjpB,GAAS,CAC/B4O,aACA0D,eACAQ,oBAIF0T,EAAUyQ,aAAezQ,EAAUyQ,aAAa5yB,KAAKiO,IAhBN,yBAAA/U,EAAAS,SAAAZ,EAAAjB,SAA/C,gBAAAqC,GAAA,OAAAN,EAAAQ,MAAAvC,KAAAwC,YAAA,IAbc,cAkCd4vD,EAAuB,GAC7BxyD,OAAO4H,KAAKR,GAAiBkD,QAAS,SAAArG,GAChCwmB,EAAUyC,cAAcjpB,KAC1BuuD,EAAqBvuD,GAASwmB,EAAUyC,cAAcjpB,MAI1DwmB,EAAUyC,cAAgBslC,EAzCNjwD,EAAAP,OAAA,SA2CbyoB,GA3Ca,yBAAAloB,EAAAN,SAAAG,EAAAhC,SAlIJA,KA+KlBsyD,oBA/KkB1yD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+KI,SAAA0B,IAAA,IAAAmnB,EAAAroB,EAAAwF,EAAAguB,EAAAu9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/vD,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAAOuoB,EAAPjnB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAqB,GAAGpB,EAAxBoB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAgC,OAAhCA,EAAAE,OAAA,QAAAC,IAAAH,EAAA,KAAAA,EAAA,GACpBpB,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QADrB,CAAAqB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAIX,IAJW,cAOdoF,EAAkB3G,EAAKuyD,0BAExB/oC,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKR,IAG1BguB,EAAe,GACbu9B,EAAkB,GACpBC,EAAqBnyD,EAAKqB,MAAM,GAfhBmB,EAAAvB,KAAA,GAgBGjB,EAAKwyD,YAAYrxD,EAAQ,EAAE,SAASqoB,GAhBvC,eAgBd4oC,EAhBc5vD,EAAApB,OAkBJgxD,EAAS3vD,QAEvB2vD,EAASvoD,QAAQ,SAACmS,EAAG4Q,GAGnB,IAAK5Q,EAAG6Q,OAAS7Q,EAAGy2C,cAAgBz2C,EAAG02C,gBACrC,OAAO,EAGT,IAAM3lC,EAAc/sB,EAAKqB,MAAM2a,EAAG+Q,aAC9B0lC,EAAczyD,EAAKqB,MAAM2a,EAAGy2C,aAC1BC,EAAkB1yD,EAAKqB,MAAM2a,EAAG02C,iBAEtC,OAAQ12C,EAAGvf,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAduf,EAAGvf,QACDmwB,EAAM,GAAKulC,EAAmBz7C,GAAG,GACnC,OAICie,EAAa3Y,EAAG6Q,QACnB8H,EAAa3Y,EAAG6Q,MAAQ,CACtB8lC,MAAM,KACNC,SAAS,KACTC,SAAS,KACTC,UAAU9yD,EAAKqB,MAAM,KAIzBszB,EAAa3Y,EAAG6Q,MAAMimC,UAAYn+B,EAAa3Y,EAAG6Q,MAAMimC,UAAUjrD,KAAKklB,GAChC,OAAnC4H,EAAa3Y,EAAG6Q,MAAM+lC,WACxBj+B,EAAa3Y,EAAG6Q,MAAM8lC,MAAQD,EAC9B/9B,EAAa3Y,EAAG6Q,MAAM+lC,SAAWH,EAAYttD,MAAMutD,IAIvD,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAYttD,MAAMnF,EAAKqB,OAAO,IAO3C6wD,EAAgBl2C,EAAG6Q,SACtBslC,EAAqBA,EAAmBtqD,KAAK4qD,IACtBztD,IAAI,KACzBmtD,EAAqBnyD,EAAKqB,MAAM,IAKlC6wD,EAAgBl2C,EAAG6Q,OAAQ,KAO7BwlC,EAAcryD,EAAKqB,MAAM,GACzBixD,EAAiBtyD,EAAKqB,MAAM,GAChC9B,OAAO+X,OAAOqd,GAAc9qB,QAAS,SAAAmS,GACnC,IAAM62C,EAAW72C,EAAG42C,SAASxtD,IAAI4W,EAAG82C,WAAWz3C,MAAM,GACrDg3C,EAAcA,EAAYxqD,KAAKgrD,EAAS1tD,MAAM6W,EAAG82C,YACjDR,EAAiBA,EAAezqD,KAAKmU,EAAG82C,aAG1CT,EAAcA,EAAYjtD,IAAIktD,GAAgBntD,OAAO,GA5FjC3C,EAAAjB,OAAA,SAiGb8wD,GAjGa,yBAAA7vD,EAAAhB,SAAAa,EAAA1C,SA/KJA,KAkRlBozD,oBAlRkBxzD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkRI,SAAAkC,IAAA,IAAA2mB,EAAAroB,EAAAwF,EAAAguB,EAAAkD,EAAAs6B,EAAAC,EAAAY,EAAA7wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAAOuoB,EAAPwpC,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAAqB,GACzC7xD,GAD4CA,EAAxB6xD,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAAgC,OACtBhzD,EAAKJ,MAAMuB,QADrB,CAAA2B,EAAA7B,KAAA,eAAA6B,EAAAvB,OAAA,SAIX,IAJW,cAOdoF,EAAkB3G,EAAKuyD,0BAExB/oC,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKR,IAGxBguB,EAAe,GACjBkD,EAAc73B,EAAKqB,MAAM,GACzB8wD,EAAqBnyD,EAAKqB,MAAM,GAfhByB,EAAA7B,KAAA,GAgBGjB,EAAKwyD,YAAYrxD,EAAQ,EAAE,SAASqoB,GAhBvC,eAgBd4oC,EAhBctvD,EAAA1B,OAoBJgxD,EAAS3vD,QAEvB2vD,EAASvoD,QAAQ,SAACmS,EAAG4Q,GAMnB,GAJK+H,EAAa3Y,EAAG6Q,QACnB8H,EAAa3Y,EAAG6Q,MAAQ,KAGtB8H,EAAa3Y,EAAG6Q,MAAMmI,SAAShZ,EAAGvf,QAAtC,CAKA,IAAKuf,EAAG6Q,OAAS7Q,EAAGy2C,cAAgBz2C,EAAG02C,gBACrC,OAAO,EAGT,IAAMO,EAAkBp7B,EACpB46B,EAAczyD,EAAKqB,MAAM2a,EAAGy2C,aAC1BC,EAAkB1yD,EAAKqB,MAAM2a,EAAG02C,iBAGtC,OAAQ12C,EAAGvf,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAduf,EAAGvf,QACDmwB,EAAM,GAAKulC,EAAmBz7C,GAAG,GACnC,OAGJmhB,EAAc46B,EAAYttD,MAAMutD,GAAiB7qD,KAAKorD,EAAgB9tD,MAAMgtD,IAAqB/sD,IAAI+sD,EAAmBtqD,KAAK4qD,IAC/H,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAYttD,MAAMnF,EAAKqB,OAAO,KAOhD8wD,EAAqBA,EAAmBtqD,KAAK4qD,IACtBztD,IAAI,KACzB6yB,EAAc73B,EAAKqB,MAAM,GACzB8wD,EAAqBnyD,EAAKqB,MAAM,IAGlCszB,EAAa3Y,EAAG6Q,MAAMrc,KAAKwL,EAAGvf,WAvEdqG,EAAAvB,OAAA,SA+Ebs2B,GA/Ea,yBAAA/0B,EAAAtB,SAAAqB,EAAAlD,SAlRJA,KAmWlBw4B,eAnWkB54B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmWD,SAAAqC,IAAA,IAAAwmB,EAAAroB,EAAAgH,EAAAqkB,EAAA0mC,EAAA/wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,UAAOuoB,EAAP0pC,EAAAzwD,OAAA,QAAAC,IAAAwwD,EAAA,GAAAA,EAAA,GAAqB,IACpC/xD,GADuCA,EAAxB+xD,EAAAzwD,OAAA,EAAAywD,EAAA,QAAAxwD,IACe1C,EAAKJ,MAAMuB,UAExBqoB,GAAkBA,EAAc/mB,QAAWzC,EAAKJ,MAAM+G,gBAHxD,CAAAzD,EAAAjC,KAAA,eAAAiC,EAAA3B,OAAA,SAIN,IAJM,cAOT4G,EAAS,GAPAjF,EAAAjC,KAAA,EAQYjB,EAAKusB,gBAAgBprB,EAAQ,EAAE,SAASqoB,GARpD,cAQTgD,EARStpB,EAAA9B,KAUfooB,EAAc3f,QAAS,SAAAuD,GAErBjF,EAAOiF,GAAiB,GACxB,IAAIyqB,EAAc73B,EAAKqB,MAAM,GAEzB8xD,EAAmBnzD,EAAKqB,MAAM,GAC5BsrB,EAAcptB,OAAO+X,OAAOkV,GAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,QAAU4J,IAEvEuf,GAAeA,EAAYlqB,QAE7BkqB,EAAY9iB,QAAQ,SAACmS,EAAG4Q,GAGtB,IAAK5Q,EAAG6Q,MAAS7Q,EAAG1e,QAAwB,YAAd0e,EAAG1e,SAA0B0e,EAAGiR,aAAejR,EAAG5J,WAC9E,OAAO,EAGT,IAAM6gD,EAAkBp7B,EACpB5K,EAAajtB,EAAKqB,MAAM2a,EAAGiR,YACzB7a,EAAapS,EAAKqB,MAAM2a,EAAG5J,YAGjC,OAAQ4J,EAAGvf,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACHo7B,EAAc5K,EAAW9nB,MAAMiN,GAAYvK,KAAKorD,EAAgB9tD,MAAMguD,IAAoB/tD,IAAI+tD,EAAkBtrD,KAAKolB,IACvH,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAW9nB,MAAMnF,EAAKqB,OAAO,KAO9C8xD,EAAoBA,EAAkBtrD,KAAKolB,IACrBjoB,IAAI,KACxB6yB,EAAc73B,EAAKqB,MAAM,GACzB8xD,EAAoBnzD,EAAKqB,MAAM,MAOrC8G,EAAOiF,GAAiByqB,IA9DX30B,EAAA3B,OAAA,SAiER4G,GAjEQ,yBAAAjF,EAAA1B,SAAAwB,EAAArD,SAnWCA,KAsalByzD,oBAtakB7zD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsaI,SAAA4C,IAAA,IAAAimB,EAAAroB,EAAAqrB,EAAA6mC,EAAAjvD,EAAAjC,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,UAAOuoB,EAAPplB,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,GAAAA,EAAA,GAAqB,IACzCjD,GAD4CA,EAAxBiD,EAAA3B,OAAA,EAAA2B,EAAA,QAAA1B,IACU1C,EAAKJ,MAAMuB,UAExBqoB,GAAkBA,EAAc/mB,QAAWzC,EAAKJ,MAAM+G,gBAHnD,CAAAtC,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,SAIX,IAJW,cAAA8C,EAAApD,KAAA,EAOOjB,EAAKusB,gBAAgBprB,EAAQ,EAAE,SAASqoB,GAP/C,cAOdgD,EAPcnoB,EAAAjD,KASdiyD,EAAW,GAEjB7pC,EAAc3f,QAAQ,SAACuD,GACrB,IAAIiJ,EAAarW,EAAKqB,MAAM,GACxBiyD,EAAmB,KACvBD,EAASjmD,GAAiBkmD,EAE1B,IAAM3mC,EAAcptB,OAAO+X,OAAOkV,GAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,QAAU4J,IACvEuf,GAAeA,EAAYlqB,QAE7BkqB,EAAY9iB,QAAQ,SAACmS,EAAG4Q,GAEtB,IAAK5Q,EAAG6Q,MAAS7Q,EAAG1e,QAAwB,YAAd0e,EAAG1e,SAA0B0e,EAAG+Q,YAC5D,OAAO,EAGT,OAAQ/Q,EAAGvf,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACH4Z,EAAaA,EAAWxO,KAAKmU,EAAG+Q,aAC3BumC,IACHA,EAAmBt3C,EAAG8Q,WAE1B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHzW,EAAaA,EAAWgF,MAAMW,EAAG+Q,aAOjC1W,EAAW2W,GAAG,KAChB3W,EAAarW,EAAKqB,MAAM,GACxBiyD,EAAmB,QAMzBD,EAASjmD,GAAiBkmD,IAtDRjvD,EAAA9C,OAAA,SAyDb8xD,GAzDa,yBAAAhvD,EAAA7C,SAAA+B,EAAA5D,SAtaJA,KAielB4zD,mBAjekB,eAAA1vD,EAAAtE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAieG,SAAA+E,EAAOvF,EAAYgB,GAAnB,IAAA2C,EAAA2B,EAAAqQ,EAAA09C,EAAAC,EAAA,OAAA/yD,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cAAA6E,EAAA7E,KAAA,EACqBwD,QAAQC,IAAI,CAClD1E,EAAKkB,gBAAgBf,EAAYqE,KAAKhB,MAAMrC,GAC5CnB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAO,gBAAiB,CAACrC,MAHlD,UAAA2C,EAAAgC,EAAA1E,KAAAqE,EAAAlG,OAAAsF,EAAA,EAAAtF,CAAAuE,EAAA,GACdgS,EADcrQ,EAAA,GACD+tD,EADC/tD,EAAA,IAMfqQ,IAAgB09C,EAND,CAAA1tD,EAAA7E,KAAA,gBAOjBuyD,EAAexzD,EAAKmD,iBAAiBqwD,EAAarzD,EAAYiD,UACxDqwD,EAAkB39C,EAAa3Q,MAAMquD,GAR1B1tD,EAAAvE,OAAA,SASVkyD,GATU,eAAA3tD,EAAAvE,OAAA,SAYZ,MAZY,yBAAAuE,EAAAtE,SAAAkE,EAAA/F,SAjeH,gBAAAsC,EAAAqD,GAAA,OAAAzB,EAAA3B,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+elB83B,cA/ekBl4B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+eF,SAAAwF,IAAA,IAAAqjB,EAAAroB,EAAAqrB,EAAAkL,EAAAg8B,EAAAvxD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,UAAOuoB,EAAPkqC,EAAAjxD,OAAA,QAAAC,IAAAgxD,EAAA,GAAAA,EAAA,GAAqB,IAEnCvyD,GAFsCA,EAAxBuyD,EAAAjxD,OAAA,EAAAixD,EAAA,QAAAhxD,IAEgB1C,EAAKJ,MAAMuB,UAExBqoB,GAAkBA,EAAc/mB,QAAWzC,EAAKJ,MAAM+G,gBAJzD,CAAAL,EAAArF,KAAA,eAAAqF,EAAA/E,OAAA,SAKL,IALK,cAAA+E,EAAArF,KAAA,EAQajB,EAAKusB,gBAAgBprB,EAAQ,EAAE,SAASqoB,GARrD,cAQRgD,EARQlmB,EAAAlF,KAURs2B,EAAc,GAEpBlO,EAAc3f,QAAQ,SAACuD,GACrB,IAAIiJ,EAAarW,EAAKqB,MAAM,GAC5Bq2B,EAAYtqB,GAAiBiJ,EAE7B,IAAMsW,EAAcptB,OAAO+X,OAAOkV,GAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,QAAU4J,IACvEuf,GAAeA,EAAYlqB,QAE7BkqB,EAAY9iB,QAAQ,SAACmS,EAAG4Q,GAEtB,IAAK5Q,EAAG6Q,MAAS7Q,EAAG1e,QAAwB,YAAd0e,EAAG1e,SAA0B0e,EAAG+Q,YAC5D,OAAO,EAGT,OAAQ/Q,EAAGvf,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH4Z,EAAaA,EAAWxO,KAAKmU,EAAG+Q,aAClC,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACH1W,EAAaA,EAAWgF,MAAMW,EAAG+Q,aAOjC1W,EAAW2W,GAAG,KAChB3W,EAAarW,EAAKqB,MAAM,MAM9Bq2B,EAAYtqB,GAAiBiJ,IApDjB/P,EAAA/E,OAAA,SAuDPm2B,GAvDO,yBAAApxB,EAAA9E,SAAA2E,EAAAxG,SA/eEA,KAwiBlBg0D,oBAxiBkBp0D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwiBI,SAAA0G,IAAA,IAAAlG,EAAAq0B,EAAAo+B,EAAApqC,EAAAxiB,EAAA6sD,EAAAhV,EAAAiV,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtyD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UAAOE,EAAPszD,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,IAAAA,EAAA,GAAqBj/B,EAArBi/B,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,GAAAA,EAAA,GAAsC,EAAEb,EAAxCa,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,GAAAA,EAAA,GAAuD,SAASjrC,EAAhEirC,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,GAAAA,EAAA,GAA8E,IAClGtzD,EAAUA,GAAoBnB,EAAKJ,MAAMuB,UAExBqoB,GAAkBA,EAAc/mB,OAH7B,CAAAkF,EAAA1G,KAAA,eAAA0G,EAAApG,OAAA,SAIX,IAJW,UAOpBJ,EAAUA,EAAQkP,cAEZrJ,EAAmBhH,EAAKJ,MAAMoH,iBAG9B6sD,EAAuB7zD,EAAKO,gBAAgB,CAAC,UAAU,qBAC7Di1B,EAAmB9c,KAAKG,IAAIg7C,EAAqBr+B,GAE3CqpB,EAAkBnuC,GAAc8tC,QAAQK,gBACxCiV,EAAgBpjD,GAAc8tC,QAAQ5f,UAAUqgB,UAElD8U,EAAU,GACVC,EAAmB,KACnBC,EAAwB,MAGxBH,EAAcxvD,UAAWwvD,EAAc5U,UAAUL,GAvBjC,CAAAl3C,EAAA1G,KAAA,YAwBZizD,EAAkBJ,EAAc5U,UAAUL,GAGhDoV,EAAqB,GAAA1vD,OAAM2vD,EAAN,cAAA3vD,OAAkCyC,EAAlC,YAAAzC,OAA6DirC,GAAIklB,wBAAjE,2CAAAnwD,OAAkIpD,EAAlI,gBAAAoD,OAAwJsvD,EAAxJ,cAAAtvD,OAAyLqvD,EAAzL,gBACrBI,EAAmBh0D,EAAK20D,iBAAiBV,KAGjBD,EAAiB/nD,KAAK2oD,QAAUr1D,OAAO+X,OAAO08C,EAAiB/nD,KAAK2oD,QAAQnyD,QA/BlF,CAAAkF,EAAA1G,KAAA,gBAiCVkzD,EAAe50D,OAAO+X,OAAO08C,EAAiB/nD,KAAK2oD,QAAQ1wC,MAC3DkwC,EAAwBD,GAAgBA,EAAax+B,YAAc7pB,SAASqoD,EAAax+B,aAAa,EAAIH,EAE1G6+B,EApCU,GAAA9vD,OAoCsB2vD,EApCtB,cAAA3vD,OAoCkDyC,EApClD,YAAAzC,OAoC6EirC,GAAIklB,wBApCjF,2CAAAnwD,OAoCkJpD,EApClJ,gBAAAoD,OAoCwK6vD,EApCxK,cAAA7vD,OAoC0MqvD,EApC1M,aAAAjsD,EAAA1G,KAAA,GAqCMjB,EAAK60D,kBAAkBR,EAA2B,IArCxD,cAqCZC,EArCY3sD,EAAAvG,OAuCCkzD,EAAUroD,KAAK2oD,QAAUN,EAAUroD,KAAK2oD,OAAOnyD,QAvChD,CAAAkF,EAAA1G,KAAA,gBAAA0G,EAAA1G,KAAA,GAyCIjB,EAAK80D,mBAAmBR,EAAUroD,KAAK2oD,OAAOprC,GAAc,GAAK,GAzCrE,SAyCd8qC,EAzCc3sD,EAAAvG,OA2CG7B,OAAO+X,OAAOg9C,GAAW7xD,SAElC8xD,EAAqBh1D,OAAO+X,OAAOg9C,GAAWn5C,IAAK,SAAAmT,GAAM,OAAKxiB,SAASwiB,EAAOqH,eACxDjd,KAAKG,IAAL3W,MAAAwW,KAAInZ,OAAA0hC,EAAA,EAAA1hC,CAAQg1D,KAGfH,IAEvB70D,OAAO+X,OAAOg9C,GAAWzqD,QAAQ,SAACmS,GAChBzc,OAAO4H,KAAK6sD,EAAiB/nD,KAAK2oD,QAAQ5/B,SAAShZ,EAAG0Z,WAEpEs+B,EAAiB/nD,KAAK2oD,OAAO54C,EAAG0Z,SAAW1Z,KAK/Chc,EAAK+0D,iBAAiBd,EAAsBD,EAAiB/nD,KAAK2oD,UA3DxD,QAAAjtD,EAAA1G,KAAA,iBAgEhB+yD,EAAmB,KAhEH,WAmEdQ,EAAMR,EAnEQ,CAAArsD,EAAA1G,KAAA,gBAAA0G,EAAA1G,KAAA,GAuEJjB,EAAK+mB,YAAYktC,GAvEb,QAuEhBO,EAvEgB7sD,EAAAvG,KAAA,aA0EdozD,GAAOA,EAAIvoD,MAAQuoD,EAAIvoD,KAAK2oD,QA1Ed,CAAAjtD,EAAA1G,KAAA,SA2EhB8yD,EAAUS,EAAIvoD,KAAK2oD,OA3EHjtD,EAAA1G,KAAA,wBAAA0G,EAAApG,OAAA,SA6ET,IA7ES,eAAAoG,EAAApG,OAAA,SAiFb,CACLwyD,UACAC,mBACAC,0BApFkB,yBAAAtsD,EAAAnG,SAAA6F,EAAA1H,SAxiBJA,KA+nBlB6yD,YA/nBkBjzD,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+nBJ,SAAA+F,IAAA,IAAAvF,EAAAq0B,EAAAo+B,EAAApqC,EAAAuqC,EAAAjtD,EAAA3E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAOE,EAAP2F,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,IAAAA,EAAA,GAAqB0uB,EAArB1uB,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAAsC,EAAE8sD,EAAxC9sD,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAAuD,SAAS0iB,EAAhE1iB,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAA9F,KAAA,EACUjB,EAAKusB,gBAAgBprB,EAAQq0B,EAAiBo+B,EAAepqC,GADvE,cACNuqC,EADMhtD,EAAA3F,KAAA2F,EAAAxF,OAAA,SAGLvB,EAAKg1D,eAAejB,EAAQvqC,IAHvB,wBAAAziB,EAAAvF,SAAAkF,EAAA/G,SA/nBIA,KAooBlBo1D,iBAAmB,SAACljB,EAAS2iB,GAC3B,IAAMS,EAAa,GACnB11D,OAAO4H,KAAKqtD,GAAK3qD,QAAQ,SAAAmsB,GACvB,IAAMha,EAAKw4C,EAAIx+B,IACXha,EAAG2Z,aAAiB3Z,EAAG1e,QAAsC,YAA5B0e,EAAG1e,OAAO+S,gBAC7C4kD,EAAWj/B,GAAUha,KAKzB,IAAMk5C,EAAgB,CACpBjpD,KAAK,CACH2oD,OAAOK,IAGXj1D,EAAKm1D,kBAAkBtjB,GAAS,EAAMqjB,IAnpBtBv1D,KAqpBlB4sB,gBArpBkBhtB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqpBA,SAAA6H,IAAA,IAAArH,EAAAq0B,EAAAo+B,EAAApqC,EAAAjiB,EAAAwsD,EAAAC,EAAAC,EAAAznC,EAAA4oC,EAAAC,EAAAlzD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAOE,EAAPk0D,EAAA5yD,OAAA,QAAAC,IAAA2yD,EAAA,IAAAA,EAAA,GAAqB7/B,EAArB6/B,EAAA5yD,OAAA,QAAAC,IAAA2yD,EAAA,GAAAA,EAAA,GAAsC,EAAEzB,EAAxCyB,EAAA5yD,OAAA,QAAAC,IAAA2yD,EAAA,GAAAA,EAAA,GAAuD,SAAS7rC,EAAhE6rC,EAAA5yD,OAAA,QAAAC,IAAA2yD,EAAA,GAAAA,EAAA,GAA8E,GAA9EzsD,EAAA3H,KAAA,EAKNjB,EAAK2zD,oBAAoBxyD,EAAQq0B,EAAiBo+B,EAAepqC,GAL3D,UAAAjiB,EAAAqB,EAAAxH,KAEd2yD,EAFcxsD,EAEdwsD,QACAC,EAHczsD,EAGdysD,iBACAC,EAJc1sD,EAId0sD,sBAIEznC,EAAe,IACfwnC,EATY,CAAAprD,EAAA3H,KAAA,gBAAA2H,EAAA3H,KAAA,GAWOjB,EAAKs1D,iBAAiBvB,EAAQvqC,GAXrC,QAWdgD,EAXc5jB,EAAAxH,KAAAwH,EAAA3H,KAAA,wBAaRm0D,EAAqB71D,OAAO4H,KAAKnH,EAAKJ,MAAM+G,iBAbpCiC,EAAA3H,KAAA,GAeOjB,EAAK80D,mBAAmBf,EAAQqB,GAfvC,SAed5oC,EAfc5jB,EAAAxH,OAkBM7B,OAAO4H,KAAKqlB,GAAc/pB,QAC5CzC,EAAK+0D,iBAAiBd,EAAsBznC,GAnBhC,eAAA5jB,EAAArH,OAAA,SAuBThC,OACE+X,OAAOkV,GACPzQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,OAASgmB,EAAcwL,SAAShZ,EAAGxY,MAAM2e,iBAC1D8S,KAAK,SAAC71B,EAAE81B,GAAH,OAAU91B,EAAE0tB,UAAYoI,EAAEpI,WAAa,EAAI,KA1BzC,yBAAAlkB,EAAApH,SAAAgH,EAAA7I,SArpBAA,KAirBlBq1D,eAjrBkB,eAAA13C,EAAA/d,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAirBD,SAAAuH,EAAO6rD,GAAP,IAAAvqC,EAAA7iB,EAAAyrD,EAAA/pD,EAAAlG,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,UAAeuoB,EAAfnhB,EAAA5F,OAAA,QAAAC,IAAA2F,EAAA,GAAAA,EAAA,GAA6B,GAEvC0rD,GAAYA,EAAQtxD,QAAqC,oBAApBsxD,EAAQlqD,QAFnC,CAAAvB,EAAArH,KAAA,eAAAqH,EAAA/G,OAAA,SAGN,IAHM,cAMToF,EAAkB3G,EAAKJ,MAAM+G,gBAAkB3G,EAAKJ,MAAM+G,gBAAkB3G,EAAKuyD,0BAElF/oC,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKR,KAGxByrD,EAAW2B,EAAQh4C,OAAQ,SAAAC,GAAE,OAAKwN,EAAcwL,SAAShZ,EAAGxY,QAAU,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBAAmBwxB,SAAShZ,EAAGvf,WAErMgG,QACX2vD,EAASn9B,KAAK,SAAC71B,EAAE81B,GAAH,OAAU91B,EAAE0tB,UAAYoI,EAAEpI,WAAa,EAAI,IAf5CxkB,EAAA/G,OAAA,SAkBR6wD,GAlBQ,wBAAA9pD,EAAA9G,SAAA0G,EAAAvI,SAjrBC,gBAAA4F,GAAA,OAAA+X,EAAApb,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqsBlBm1D,mBArsBkB,eAAAvsD,EAAAhJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqsBG,SAAA40D,EAAOxB,GAAP,IAAAvqC,EAAAqL,EAAAygC,EAAA9oC,EAAAgpC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3zD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAi1D,GAAA,cAAAA,EAAA/0D,KAAA+0D,EAAA90D,MAAA,UAAeuoB,EAAfssC,EAAArzD,OAAA,QAAAC,IAAAozD,EAAA,GAAAA,EAAA,GAA6B,GAAGjhC,IAAhCihC,EAAArzD,OAAA,QAAAC,IAAAozD,EAAA,KAAAA,EAAA,GAAgDR,IAAhDQ,EAAArzD,OAAA,QAAAC,IAAAozD,EAAA,KAAAA,EAAA,GACd/B,GAAYA,EAAQtxD,QAAqC,oBAApBsxD,EAAQlqD,QAD/B,CAAAksD,EAAA90D,KAAA,eAAA80D,EAAAx0D,OAAA,SAEV,IAFU,UAKdioB,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKnH,EAAKJ,MAAM+G,kBAGrC6lB,EAAe,GACfgpC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB11D,EAAKO,gBAAgB,CAAC,QAAQ,gBACjDo1D,EAAoB31D,EAAKO,gBAAgB,CAAC,QAAQ,iBAClDq1D,EAAoB51D,EAAKO,gBAAgB,CAAC,QAAQ,sBAClDs1D,EAAuB71D,EAAKO,gBAAgB,CAAC,QAAQ,oBAI3DipB,EAAc3f,QAAQ,SAAArG,GACpB,IAAMrD,EAAcH,EAAKJ,MAAM+G,gBAAgBnD,GACzC6tD,EAA2BrxD,EAAKO,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChF+wD,EAAwBnxD,EAAYiX,WAAajX,EAAYiX,UAAUoxB,kBAAoBroC,EAAYiX,UAAUoxB,kBAAkBjiC,QAAU,KAC7IgrD,EAA4BpxD,EAAYiX,WAAajX,EAAYiX,UAAUoxB,mBAAqBroC,EAAYiX,UAAUoxB,kBAAkBoZ,aAAezhD,EAAYiX,UAAUoxB,kBAAkBoZ,aAAe,GAC9MoU,EAA2Bh2D,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,sBAElFkhD,EAAiBzhD,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBJ,EAAYqE,KAAKhB,QAC3GguD,EAA6B/P,GAAkBA,EAAejZ,kBAAoBiZ,EAAejZ,kBAAkBjiC,QAAU,KAG7H0vD,EAAmBj2D,EAAKO,gBAAgB,CAAC,QAAQ,kBAAkBJ,EAAYqE,KAAKhB,QAE1FuwD,EAAQlqD,QAAS,SAAAmS,GACf,IAAIkS,EAAgB/tB,EAAYiD,SAC1B8yD,EAAY/1D,EAAYqE,KAAKhB,MAC7B2yD,EAAcpC,EAAQh4C,OAAO,SAAAq6C,GAAC,OAAIA,EAAEvpC,OAAS7Q,EAAG6Q,OAChDwpC,EAAeF,EAAY1zD,OAAO,GAAK0zD,EAAYp6C,OAAO,SAAAu6C,GAAG,OAAIA,EAAI3J,gBAAgBt8C,gBAAkBlQ,EAAYoG,QAAQ8J,gBAAe5N,OAAO,EACjJivD,EAA0C,IAAvByE,EAAY1zD,QAAgBuZ,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAC3KshD,EAA6C,IAAvBwE,EAAY1zD,QAAgBuZ,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAC5KkmD,EAAqB/E,GAA8Bx1C,EAAGvM,KAAKY,gBAAkBmhD,EAA2BnhD,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,cAEnPmmD,EAAsBH,GAAgBF,EAAYz+C,KAAM,SAAA4+C,GAAG,OAAIA,EAAI7mD,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,gBAAkBimD,EAAIzF,GAAGxgD,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,eAAkBghD,GAA4BiF,EAAIzF,GAAGxgD,gBAAkBghD,EAAyB9qD,QAAQ8J,eAAiB8lD,EAAYp6C,OAAO,SAAA06C,GAAI,OAAIA,EAAK9J,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,gBAAe5N,OAAO,KAC3Zi0D,EAAqBL,GAAgBF,EAAYz+C,KAAM,SAAA4+C,GAAG,OAAIA,EAAI3J,gBAAgBt8C,gBAAkBlQ,EAAYoG,QAAQ8J,eAAiB8lD,EAAYp6C,OAAO,SAAA06C,GAAI,OAAIA,EAAK9J,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,gBAAe5N,QAAU6zD,EAAIzF,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,gBAEzSohD,EAAgB8E,GAAuBjF,IAA0Bt1C,EAAGvM,KAAKY,gBAAkBihD,EAAsBjhD,eAAiBkhD,EAA0Bp2C,IAAI,SAAC9M,GAAQ,OAAOA,EAAEgC,gBAAkB2kB,SAAShZ,EAAGvM,KAAKY,iBAAoB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cACvSsmD,EAAiBX,IAA6Bh6C,EAAGvM,KAAKY,gBAAkB2lD,EAAyBzvD,QAAQ8J,eAAiB2lD,EAAyBpU,aAAazmC,IAAI,SAAC9M,GAAQ,OAAOA,EAAEgC,gBAAkB2kB,SAAShZ,EAAGvM,KAAKY,iBAAmB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cACtWuhD,EAAcyE,IAAiB5E,GAAiBz1C,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,gBAAkB2L,EAAG60C,GAAGxgD,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,eAAkBghD,GAA4Br1C,EAAG60C,GAAGxgD,gBAAkBghD,EAAyB9qD,QAAQ8J,eAAiB8lD,EAAYp6C,OAAO,SAAAu6C,GAAG,OAAIA,EAAI3J,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,gBAAe5N,OAAO,GACvYovD,EAAawE,IAAiB5E,IAAkB+E,GAAuBx6C,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYoG,QAAQ8J,eAAiB8lD,EAAYp6C,OAAO,SAAAu6C,GAAG,OAAIA,EAAI3J,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,gBAAe5N,QAAUuZ,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,cAC9SumD,EAAeT,EAAY1zD,OAAO,GAAK0zD,EAAYp6C,OAAO,SAAAu6C,GAAG,OAAIn2D,EAAY6P,UAAUmL,IAAI,SAAArR,GAAC,OAAIA,EAAEvD,QAAQ8J,gBAAe2kB,SAASshC,EAAI3J,gBAAgBt8C,iBAAiB5N,OAAO,GAAKuZ,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAGjP1K,EAAmBswD,GAAoBA,EAAiB1vD,QAAU0vD,EAAiB1vD,QAAUpG,EAAYqE,KAAK+B,QAG9GswD,EAAUV,EAAYz+C,KAAM,SAAAsE,GAAE,OAAKA,EAAG2wC,gBAAgBt8C,gBAAkBslD,EAAkBpvD,QAAQ8J,gBAAkB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,iBAC7NymD,OAAwBp0D,IAAZm0D,EAEZE,EAAmBD,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBulD,EAAkBrvD,QAAQ8J,eAAiB2L,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GAChQsgD,EAAkBF,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkB1K,EAAiB0K,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAGvM,KAAKY,gBAAkBulD,EAAkBrvD,QAAQ8J,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GAE/PugD,EAAmBH,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYoG,QAAQ8J,eAAiB2L,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBwlD,EAAqBtvD,QAAQ8J,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GACtQwgD,EAAoBJ,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYoG,QAAQ8J,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAGvM,KAAKY,gBAAkBwlD,EAAqBtvD,QAAQ8J,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GAEvQygD,EAAeL,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkBslD,EAAkBpvD,QAAQ8J,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAGvM,KAAKY,gBAAkBqlD,EAAiBnvD,QAAQ8J,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GACpQ0gD,EAAgBN,GAAa96C,EAAG2wC,gBAAgBt8C,gBAAkBslD,EAAkBpvD,QAAQ8J,eAAiB2L,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG60C,GAAGxgD,gBAAkBqlD,EAAiBnvD,QAAQ8J,eAAiBrQ,EAAKqB,MAAM2a,EAAG7N,OAAOuI,GAAG,GAErQ2gD,EAAqBr7C,EAAG2wC,gBAAgBt8C,gBAAkBslD,EAAkBpvD,QAAQ8J,gBAAkB+mD,IAAkBJ,GAAmEh7C,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,cACxOinD,EAAoBt7C,EAAG2wC,gBAAgBt8C,gBAAkBslD,EAAkBpvD,QAAQ8J,gBAAkB8mD,IAAiBJ,GAAoE/6C,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,cAErOknD,GAAeT,IAAcpF,IAAqBkF,IAAiBF,IAAuBlqC,EAAaxQ,EAAG6Q,OAAS7Q,EAAGvM,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAC/OyhD,GAAYgF,IAAcnF,IAAwBgF,IAAmBH,IAAwBhqC,EAAaxQ,EAAG6Q,OAAS7Q,EAAG60C,GAAGxgD,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAAiB2L,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAMtP,GAAIqhD,GAAoBC,GAAuBF,GAAiBG,GAAeC,GAAcC,GAAYyF,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAkB,CAEjT,IAAIz6D,EAAS,KACTi5B,EAAU1Z,EAAG6Q,KAEb+kC,EACFn1D,EAAS,UACAo1D,EACTp1D,EAAS,SACAg1D,GAAiBkF,EAC1Bl6D,EAAS,UACAi1D,EACTj1D,EAAS,OACAk1D,EACTl1D,EAAS,UACAq1D,EACTr1D,EAAS,OACA86D,EACT96D,EAAS,UACAm6D,EACTn6D,EAAS,WACAs6D,EACTt6D,EAAS,UACAu6D,EACTv6D,EAAS,WACA06D,EACT16D,EAAS,aACA26D,EACT36D,EAAS,cACAw6D,EACTx6D,EAAS,iBACAy6D,EACTz6D,EAAS,kBACA66D,EACT76D,EAAS,kBACA46D,IACT56D,EAAS,oBAGX,IAAIg2D,EAAc,KAoBlB,GAnBIqE,IACFphC,GAAW,IAAI1Z,EAAG0W,YAClB+/B,EAAczyD,EAAKmD,iBAAiB0zD,EAAQ1oD,MAAMwnD,EAAkBvyD,WAG/Dk0D,GAAqBD,KACxB3hC,GAAS,IAAIj5B,IAMbuf,EAAG2wC,gBAAgBt8C,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cAChE6d,EAAgB,GACP4oC,IACT5oC,EAAgBpiB,SAASkQ,EAAGw7C,eAI1BhrC,EAAakJ,GAEf,OAAQlJ,EAAakJ,GAASj5B,QAC5B,IAAK,UACC+vB,EAAakJ,GAASj5B,SAAWA,GAAUo1D,IAC7CrlC,EAAakJ,GAAS+hC,WAAaz3D,EAAKmD,iBAAiB6Y,EAAG7N,MAAM+f,IAEtE,MACA,QACE,IAAK2oC,EAAQ,CACX,IAAMa,EAAWlrC,EAAakJ,GAASvnB,MAAMtG,KAAK7H,EAAKmD,iBAAiB6Y,EAAG7N,MAAM+f,IACjF1B,EAAakJ,GAASvnB,MAAQupD,QAMpC,GAAIJ,GAAqBD,EAClB5B,EAA0BzgC,SAAShZ,EAAG6Q,KAAKxc,iBAC9CoiD,EAAczyD,EAAKmD,iBAAiB6Y,EAAG7N,MAAMwnD,EAAkBvyD,UAC/DoyD,EAAkBhlD,KAAlBjR,OAAA0L,EAAA,EAAA1L,CAAA,GAA2Byc,EAA3B,CAA+B0Z,UAASlyB,QAAO0yD,YAAWzD,cAAah2D,SAAQ0R,MAAOnO,EAAKmD,iBAAiB6Y,EAAG7N,MAAM+f,YAWvH,OARA1B,EAAakJ,GAAbn2B,OAAA0L,EAAA,EAAA1L,CAAA,GAA6Byc,EAA7B,CAAiC0Z,UAASlyB,QAAO0yD,YAAWzD,cAAah2D,SAAQ0R,MAAOnO,EAAKmD,iBAAiB6Y,EAAG7N,MAAM+f,KAGlHunC,EAA0BzgC,SAAShZ,EAAG6Q,KAAKxc,gBAC9ColD,EAA0BjlD,KAAKwL,EAAG6Q,KAAKxc,eAIjC5T,GACN,IAAK,WACH,IAAMk7D,EAAOxB,EAAYp6C,OAAO,SAAAu6C,GAAG,OAAKA,IAAQt6C,IAChD,GAAI27C,EAAKl1D,OAAO,EAAE,CAChB,IAAM6zD,EAAMqB,EAAK,GACjBnrC,EAAakJ,GAASkiC,eAAiB53D,EAAKmD,iBAAiBmzD,EAAInoD,MAAMmoD,EAAIkB,cAC3EhrC,EAAakJ,GAAShD,YAAc4jC,EAAI5jC,YAE5C,MACA,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACHlG,EAAakJ,GAAShD,YAAclvB,QAWlDgyD,EAAkB3rD,QAAS,SAAAmS,GACpBy5C,EAA0BzgC,SAAShZ,EAAG6Q,KAAKxc,iBAC9Cmc,EAAaxQ,EAAG0Z,SAAW1Z,MAI3B6Y,EAxMe,CAAAkhC,EAAA90D,KAAA,gBAAA80D,EAAA90D,KAAA,GAyMIjB,EAAK63D,6BAA6BrrC,EAAahD,EAAc8rC,GAzMjE,QAyMjB9oC,EAzMiBupC,EAAA30D,KAAA,eAAA20D,EAAAx0D,OAAA,SA8MZirB,GA9MY,yBAAAupC,EAAAv0D,SAAA+zD,EAAA51D,SArsBH,gBAAAsG,GAAA,OAAAsC,EAAArG,MAAAvC,KAAAwC,YAAA,GAAAxC,KAq5BlBm4D,qBAAuB,SAACC,EAAM3lC,GAE5B,IAAMjxB,EAAUnB,EAAKJ,OAASI,EAAKJ,MAAMuB,QAAUnB,EAAKJ,MAAMuB,QAAU,KAClEiM,EAAgBpN,EAAKJ,OAASI,EAAKJ,MAAMwN,cAAgBpN,EAAKJ,MAAMwN,cAAgB,KAE1F,IAAKjM,IAAYiM,IAAkBpN,EAAKJ,MAAM+G,kBAAoB3G,EAAKJ,MAAM+G,gBAAgByG,GAC3F,OAAO,EAGT,IACM4qD,EADch4D,EAAKJ,MAAM+G,gBAAgByG,GAClB5I,KAAKhB,MAE9By0D,EAAYj4D,EAAKk4D,wBAChBD,EAAU92D,KACb82D,EAAU92D,GAAW,IAGlB82D,EAAU92D,GAAS62D,KACtBC,EAAU92D,GAAS62D,GAAY,IAGjCC,EAAU92D,GAAS62D,GAAUD,GAAS3lC,EACtCpyB,EAAKm4D,yBAAyBF,IA36Bdt4D,KA66BlBw4D,yBAA2B,SAAA37D,GACzBwD,EAAKwkC,gBAAgB,eAAe1kB,KAAKC,UAAUvjB,KA96BnCmD,KAm7BlBu4D,sBAAwB,WAAmD,IAAlD/2D,EAAkDgB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA1C,KAAK61D,EAAqC71D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA5B,KAAKiL,EAAuBjL,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC1D81D,EAAYj4D,EAAKo4D,cAAc,gBAAe,EAAK,IACnD57D,EAAewD,EAAKJ,MAAMpD,aAAX+C,OAAA0L,EAAA,EAAA1L,CAAA,GAA+BS,EAAKJ,MAAMpD,cAAiB,GAC5E2L,EAAS8vD,EAsBb,OApBI92D,IACE82D,EAAU92D,IACZgH,EAAS8vD,EAAU92D,GACf62D,IACF7vD,EAASA,EAAO6vD,GAAY7vD,EAAO6vD,GAAY,GAE3C5qD,GACF7N,OAAO4H,KAAK3K,GAAcqN,QAAQ,SAAAkuD,GAChC,IAAM/7C,EAAKxf,EAAau7D,IACnB5vD,EAAO4vD,IAAU/7C,EAAGxY,OAASwY,EAAGxY,MAAM2e,gBAAkB/U,EAAc+U,gBACzEha,EAAO4vD,GAASv7D,EAAau7D,QAMrC5vD,EAAS,IAINA,GA58BSxI,KA88BlBk4D,6BA98BkB,eAAApvD,EAAAlJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA88Ba,SAAA03D,EAAO7rC,GAAP,IAAAhD,EAAA8rC,EAAAgD,EAAAL,EAAAM,EAAAC,EAAAC,EAAA/C,EAAAgD,EAAAv2D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA63D,GAAA,cAAAA,EAAA33D,KAAA23D,EAAA13D,MAAA,cAAoBuoB,EAApBkvC,EAAAj2D,OAAA,QAAAC,IAAAg2D,EAAA,GAAAA,EAAA,GAAkC,GAAGpD,IAArCoD,EAAAj2D,OAAA,QAAAC,IAAAg2D,EAAA,KAAAA,EAAA,GAExBlvC,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKnH,EAAKJ,MAAM+G,kBAGrC2xD,EAAa,GAI4B,kBAHzCL,EAAYj4D,EAAKk4D,yBAGAl4D,EAAKJ,MAAMuB,WAC9B82D,EAAUj4D,EAAKJ,MAAMuB,SAAW,IAI5Bo3D,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBz4D,EAAKO,gBAAgB,CAAC,QAAQ,oBAC3DhB,OAAO4H,KAAKsxD,GAAsB5uD,QAAS,SAAArG,GACzC,IAAMyyD,EAAmBwC,EAAqBj1D,GACxC4qC,EAAkBpuC,EAAKO,gBAAgB,CAAC,QAAQ,SAAS01D,EAAiBjzC,YAC1E41C,EAAmBxqB,EAAgB7nC,QAAQ8J,cACjDkoD,EAAkBK,GAAoBxqB,EACtCmqB,EAAkBK,GAAkBp1D,MAAQyyD,EAAiBjzC,UAC7Dw1C,EAAoBhoD,KAAKooD,KAGrBlD,EAAmB11D,EAAKO,gBAAgB,CAAC,QAAQ,gBA3B1Bo4D,EAAA13D,KAAA,GAgCvBjB,EAAKkH,aAAasiB,EAAlB,eAAA9gB,EAAAnJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgC,SAAAk4D,EAAOzrD,GAAP,IAAAjN,EAAA63D,EAAA9B,EAAA4C,EAAAnsC,EAAA,OAAAjsB,EAAAtB,EAAA0B,KAAA,SAAAi4D,GAAA,cAAAA,EAAA/3D,KAAA+3D,EAAA93D,MAAA,UAE9Bd,EAAcH,EAAKJ,MAAM+G,gBAAgByG,GACzC4qD,EAAW73D,EAAYqE,KAAKhB,MAC5B0yD,EAAY/1D,EAAYqE,KAAKhB,MAGoB,kBAA5Cy0D,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,KACvCC,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAY,IAGtCc,EAX8Bv5D,OAAA0L,EAAA,EAAA1L,CAAA,GAWf04D,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,MAE7CrrC,EAAcptB,OAAO+X,OAAOkV,GAAczQ,OAAO,SAAAC,GAAE,OAAKA,EAAGxY,QAAU4J,OACxDuf,EAAYlqB,OAdK,CAAAs2D,EAAA93D,KAAA,eAAA83D,EAAA93D,KAAA,EAgB5BjB,EAAKkH,aAAaylB,EAAlB,eAAAqsC,EAAAz5D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8B,SAAAs4D,EAAOj9C,EAAG4Q,GAAV,IAAAmrC,EAAAmB,EAAA9mD,EAAA6a,EAAAksC,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAA/zD,EAAAg0D,EAAA,OAAAj5D,EAAAtB,EAAA0B,KAAA,SAAA84D,GAAA,cAAAA,EAAA54D,KAAA44D,EAAA34D,MAAA,UAC5B82D,EAD4B,KAAAxzD,OACfyX,EAAG8Q,UADY,OAE5BosC,EAAWjB,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAASE,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,EAE/G5J,EAAa,MAEb8mD,EAAS9mD,YAAepS,EAAKqB,MAAM63D,EAAS9mD,YAAY9Q,QAN1B,CAAAs4D,EAAA34D,KAAA,QAOhCmR,EAAapS,EAAKqB,MAAM63D,EAAS9mD,YAPDwnD,EAAA34D,KAAA,uBAAA24D,EAAA34D,KAAA,EASbjB,EAAKkqB,kBAAkB/pB,EAAY6b,EAAG2Z,YAAY3Z,EAAG8Q,WATxC,OAShC1a,EATgCwnD,EAAAx4D,KAUhC83D,EAAS9mD,WAAaA,EAVU,QAa9B6a,EAAajtB,EAAKqB,MAAM2a,EAAG7N,OAC3BgrD,EAAmB/mD,EAAWjN,MAAM8nB,GAGnCisC,EAAShxB,kBACZgxB,EAAShxB,gBAAkBlsB,EAAG6Q,MAlBE+sC,EAAA70D,GAsB1BiX,EAAGvf,OAtBuBm9D,EAAA34D,KAuB3B,SAvB2B24D,EAAA70D,GAAA,GAwB3B,YAxB2B60D,EAAA70D,GAAA,GAyB3B,SAzB2B60D,EAAA70D,GAAA,GA0B3B,YA1B2B60D,EAAA70D,GAAA,GA2B3B,YA3B2B60D,EAAA70D,GAAA,GAmC3B,YAnC2B60D,EAAA70D,GAAA,GAoC3B,WApC2B60D,EAAA70D,GAAA,GA2C3B,aA3C2B60D,EAAA70D,GAAA,GAkD3B,YAlD2B60D,EAAA70D,GAAA,GAmD3B,aAnD2B60D,EAAA70D,GAAA,GA2D3B,oBA3D2B60D,EAAA70D,GAAA,GA4D3B,qBA5D2B60D,EAAA70D,GAAA,GAqE3B,eArE2B60D,EAAA70D,GAAA,GAsE3B,gBAtE2B60D,EAAA70D,GAAA,GAkH3B,mBAlH2B60D,EAAA70D,GAAA,GAmH3B,oBAnH2B60D,EAAA70D,GAAA,2BA4BzBm0D,EAASnsC,cACZmsC,EAASjsC,WAAaA,EACtBisC,EAAS/qD,MAAQgrD,EACjBD,EAASnsC,YAAcosC,EACvBD,EAASxmC,YAActlB,GAhCKwsD,EAAAr4D,OAAA,2BAqCzB23D,EAASnsC,cACZmsC,EAAS/qD,MAAQ8e,EACjBisC,EAASnsC,YAAcE,EACvBisC,EAASjsC,WAAaA,EAAW7nB,IAAIgN,IAxCTwnD,EAAAr4D,OAAA,2BA4CzB23D,EAASnsC,cACZmsC,EAASjsC,WAAaA,EACtBisC,EAASnsC,YAAcosC,EACvBD,EAAS/qD,MAAQ+qD,EAAStB,gBA/CEgC,EAAAr4D,OAAA,uBAoDzB23D,EAASnsC,YApDgB,CAAA6sC,EAAA34D,KAAA,gBAAA24D,EAAA34D,KAAA,GAqDEjB,EAAK65D,mBAAmB79C,EAAG2Z,aArD7B,QAqDtB+8B,EArDsBkH,EAAAx4D,KAsD5B83D,EAASjsC,WAAaA,EACtBisC,EAASnsC,YAAcosC,EACvBD,EAASxG,gBAAkBA,EAxDC,eAAAkH,EAAAr4D,OAAA,uBA6DzB23D,EAASxG,gBA7DgB,CAAAkH,EAAA34D,KAAA,gBAAA24D,EAAA34D,KAAA,GA8DEjB,EAAK65D,mBAAmB79C,EAAG2Z,aA9D7B,QA8DtB+8B,EA9DsBkH,EAAAx4D,KA+D5B83D,EAASxG,gBAAkBA,EAC3BwG,EAASnsC,YAAc/sB,EAAKqB,MAAM63D,EAASzG,aAAattD,MAAM+zD,EAASxG,iBAhE3C,eAmE9BwG,EAASjsC,WAAajtB,EAAKqB,MAAM,GAnEHu4D,EAAAr4D,OAAA,uBAuEzB23D,EAASxG,gBAvEgB,CAAAkH,EAAA34D,KAAA,gBAAA24D,EAAA34D,KAAA,GAwEEjB,EAAK65D,mBAAmB79C,EAAG2Z,aAxE7B,QAwEtB+8B,EAxEsBkH,EAAAx4D,KAyE5B83D,EAASxG,gBAAkBA,EAzEC,WA4EzBwG,EAASnsC,YA5EgB,CAAA6sC,EAAA34D,KAAA,YA8E5Bi4D,EAASnsC,YAAc/sB,EAAKqB,MAAM,GAClC63D,EAASjsC,WAAajtB,EAAKqB,MAAM,IAEVi3D,EAAWt8C,EAAG0Z,SAjFT,CAAAkkC,EAAA34D,KAAA,SAAA24D,EAAA1hD,GAiFoBogD,EAAWt8C,EAAG0Z,SAjFlCkkC,EAAA34D,KAAA,wBAAA24D,EAAA34D,KAAA,GAiFoD,IAAIwD,QAAJ,eAAAq1D,EAAAv6D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAo5D,EAAOv3B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAk5D,GAAA,cAAAA,EAAAh5D,KAAAg5D,EAAA/4D,MAAA,OAC3FjB,EAAKJ,MAAM+iC,KAAKC,IAAIq3B,sBAAsBj+C,EAAG6Q,KAAK,SAACgW,EAAI7mB,GACjD6mB,GACFJ,EAAOI,GAETL,EAAQxmB,KALiF,wBAAAg+C,EAAAx4D,SAAAu4D,EAAAp6D,SAAb,gBAAAu6D,EAAAC,GAAA,OAAAL,EAAA53D,MAAAvC,KAAAwC,YAAA,IAjFpD,QAAAy3D,EAAA1hD,GAAA0hD,EAAAx4D,KAAA,SAiFtBk4D,EAjFsBM,EAAA1hD,MA6FrBogD,EAAWt8C,EAAG0Z,WACjB4iC,EAAWt8C,EAAG0Z,SAAW4jC,GAGrBC,EAAeD,EAAe5oB,KAAK30B,OAAQ,SAAAq+C,GAAG,OAAK5B,EAAoBxjC,SAASolC,EAAI7zD,QAAQ8J,gBAAkB+pD,EAAIC,OAAOD,EAAIC,OAAO53D,OAAO,GAAG4N,gBAAhC,4BAAA9L,OAA8EmxD,EAAiBnvD,QAAQ4pD,QAAQ,IAAI,IAAI9/C,iBAE3OrQ,EAAK0iC,UAAU,eAAe62B,GAE1BA,GAAgBA,EAAa92D,QAC/B82D,EAAa1vD,QAAS,SAAAuwD,GACpB,IAAIrtC,EAAcjhB,SAASsuD,EAAInuD,KAAK,IAC9BquD,EAAmB/B,EAAkB6B,EAAI7zD,QAAQ8J,eACjD6d,EAAgBosC,EAAiBl3D,SACvC2pB,EAAc/sB,EAAKmD,iBAAiB4pB,EAAYmB,GAChDgrC,EAASnsC,YAAcmsC,EAASnsC,YAAYllB,KAAKklB,GACjD/sB,EAAK0iC,UAAU,oBAAoB1mB,EAAG6Q,KAAK,IAAIytC,EAAiB92D,MAAMupB,EAAYxc,QAAQ,GAAG2oD,EAASnsC,YAAYxc,QAAQ,OA5GpG,eAAAqpD,EAAAr4D,OAAA,uBAoHzB23D,EAASxG,gBApHgB,CAAAkH,EAAA34D,KAAA,gBAAA24D,EAAA34D,KAAA,GAqHEjB,EAAK65D,mBAAmB79C,EAAG2Z,aArH7B,QAqHtB+8B,EArHsBkH,EAAAx4D,KAsH5B83D,EAASxG,gBAAkBA,EAtHC,WAyH9BwG,EAASnsC,YAAc/sB,EAAKqB,MAAM63D,EAAS/qD,OAEtC+qD,EAASjsC,WA3HgB,CAAA2sC,EAAA34D,KAAA,aA6HLq3D,EAAWt8C,EAAG0Z,SA7HT,CAAAkkC,EAAA34D,KAAA,SAAA24D,EAAAW,GA6HoBjC,EAAWt8C,EAAG0Z,SA7HlCkkC,EAAA34D,KAAA,wBAAA24D,EAAA34D,KAAA,GA6HoD,IAAIwD,QAAJ,eAAA+1D,EAAAj7D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA85D,EAAOj4B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAA45D,GAAA,cAAAA,EAAA15D,KAAA05D,EAAAz5D,MAAA,OAC3FjB,EAAKJ,MAAM+iC,KAAKC,IAAIq3B,sBAAsBj+C,EAAG6Q,KAAK,SAACgW,EAAI7mB,GACjD6mB,GACFJ,EAAOI,GAETL,EAAQxmB,KALiF,wBAAA0+C,EAAAl5D,SAAAi5D,EAAA96D,SAAb,gBAAAg7D,EAAAC,GAAA,OAAAJ,EAAAt4D,MAAAvC,KAAAwC,YAAA,IA7HpD,QAAAy3D,EAAAW,GAAAX,EAAAx4D,KAAA,SA6HtBk4D,EA7HsBM,EAAAW,MAuIpBtE,EAAmBj2D,EAAKO,gBAAgB,CAAC,QAAQ,kBAAkB21D,IACnEwD,EAAoBzD,GAAoBA,EAAiB7yD,SAAW6yD,EAAiB7yD,SAAW,GAChGuC,EAAmBswD,GAAoBA,EAAiB1vD,QAAU0vD,EAAiB1vD,QAAUpG,EAAYqE,KAAK+B,QAG/G+xD,EAAWt8C,EAAG0Z,WACjB4iC,EAAWt8C,EAAG0Z,SAAW4jC,IAGrBC,EAAeD,EAAe5oB,KAAK30B,OAAQ,SAAAq+C,GAAG,OAAKA,EAAI7zD,QAAQ8J,gBAAgB1K,MACjE4zD,EAAa92D,SAC/BwqB,EAAanhB,SAASytD,EAAa,GAAGttD,KAAK,IAC3CghB,EAAajtB,EAAKmD,iBAAiB8pB,EAAWysC,GAC9CR,EAASjsC,WAAaA,IApJE,uBAAA2sC,EAAAr4D,OAAA,oBA8JlC23D,EAAS11D,MAAQ4J,EAGjBof,EAAaxQ,EAAG0Z,SAAWwjC,EAG3BjB,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAASmB,SAG1CJ,EAASf,GAvKkB,yBAAA6B,EAAAp4D,SAAAy3D,EAAAt5D,SAA9B,gBAAAkJ,EAAAgyD,GAAA,OAAA7B,EAAA92D,MAAAvC,KAAAwC,YAAA,IAhB4B,WA4LhCmzD,EA5LgC,CAAAyD,EAAA93D,KAAA,gBAAA83D,EAAA93D,KAAA,GA6LbjB,EAAKs1D,iBAAiB9oC,EAAa,CAACpf,GAAepN,EAAKJ,MAAMpD,cA7LjD,QA6LlCgwB,EA7LkCusC,EAAA33D,KAAA,yBAAA23D,EAAAv3D,SAAAq3D,EAAAl5D,SAAhC,gBAAAmI,GAAA,OAAAY,EAAAxG,MAAAvC,KAAAwC,YAAA,IAhCuB,eAkOzB81D,GACFj4D,EAAKm4D,yBAAyBF,GAnOHU,EAAAp3D,OAAA,SAsOtBirB,GAtOsB,yBAAAmsC,EAAAn3D,SAAA62D,EAAA14D,SA98Bb,gBAAA6G,GAAA,OAAAiC,EAAAvG,MAAAvC,KAAAwC,YAAA,GAAAxC,KAsrClB21D,iBAtrCkB,eAAAwF,EAAAv7D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsrCC,SAAAo6D,EAAOvuC,GAAP,IAAAhD,EAAAwxC,EAAA/C,EAAAgD,EAAA94D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAo6D,GAAA,cAAAA,EAAAl6D,KAAAk6D,EAAAj6D,MAAA,cAAoBuoB,EAApByxC,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAAkC,GAAGD,EAArCC,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAAkD,KAE9DzxC,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKnH,EAAKJ,MAAM+G,mBAGrCsxD,EAAYj4D,EAAKo4D,cAAc,gBAAe,EAAK,KAGxCp4D,EAAKJ,MAAMuB,WACxB82D,EAAUj4D,EAAKJ,MAAMuB,SAAW,IAGlCqrB,EAAejtB,OAAOC,OAAO,GAAGgtB,GAbf0uC,EAAAj6D,KAAA,EAiBXjB,EAAKkH,aAAasiB,EAAlB,eAAA2xC,EAAA57D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgC,SAAAy6D,EAAOhuD,GAAP,IAAAjN,EAAA63D,EAAA,OAAAt3D,EAAAtB,EAAA0B,KAAA,SAAAu6D,GAAA,cAAAA,EAAAr6D,KAAAq6D,EAAAp6D,MAAA,cAE9Bd,EAAcH,EAAKJ,MAAM+G,gBAAgByG,GACzC4qD,EAAW73D,EAAYqE,KAAKhB,MAG7By0D,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,KACjCC,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAY,IAG5CgD,EAAeA,GAAgBz7D,OAAO+X,OAAO0jD,GAAcv4D,OAASu4D,EAAeh7D,EAAKk4D,sBAAsBl4D,EAAKJ,MAAMuB,QAAQ62D,EAAS5qD,GAVtGiuD,EAAAp6D,KAAA,EA6B9BjB,EAAKkH,aAAa3H,OAAO4H,KAAK6zD,GAA9B,eAAAM,EAAA/7D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA4C,SAAA46D,EAAOxD,EAAM7nD,GAAb,IAAA8L,EAAAw/C,EAAAC,EAAAC,EAAA5zB,EAAA6zB,EAAAC,EAAA5lC,EAAA6lC,EAAApK,EAAAruD,EAAA04D,EAAA1pD,EAAA2pD,EAAAC,EAAAC,EAAAx/D,EAAAy/D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlL,EAAA3E,EAAA8P,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAn8D,EAAAtB,EAAA0B,KAAA,SAAAg8D,GAAA,cAAAA,EAAA97D,KAAA87D,EAAA77D,MAAA,WAC1C+a,EAAKg/C,EAAajD,KAGZ/7C,EAAGxY,OAASwY,EAAGxY,MAAM2e,gBAAkB/U,EAAc+U,cAJjB,CAAA26C,EAAA77D,KAAA,eAAA67D,EAAAv7D,OAAA,UAKvC,GALuC,UAQ1Ci6D,EAAavD,GAAaA,EAAUj4D,EAAKJ,MAAMuB,UAAY82D,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,IAAaC,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAE9I0D,EAAiB,CACrBsB,cAAc,UACdC,gBAAgB,SAChBC,kBAAkB,UAClBC,oBAAoB,UACpBC,sBAAsB,UACtBC,uBAAuB,UACvBC,uBAAuB,UACvBC,yBAAyB,UACzBC,0BAA0B,WAEtB7B,EAAgB,CAAC,UAAU,WAC3B5zB,EAA4B,YAAd9rB,EAAG1e,OACjBq+D,EAAYD,EAAc1mC,SAAShZ,EAAG1e,QACtCs+D,EAAyB,2BAAd5/C,EAAG+kB,OACd/K,EAASha,EAAGksB,gBAAkBlsB,EAAGksB,gBAAkB,KACnD2zB,EAAkBt8D,OAAO4H,KAAKs0D,GAAgBzmC,SAAShZ,EAAG+kB,UAG5D/K,GAAUxJ,EAAawJ,IAAWxJ,EAAawJ,GAAQ5jB,YA7BX,CAAA0qD,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UA8BvC,GA9BuC,aAiC5Co6D,GAAa3lC,IAAWxJ,EAAawJ,IAAW6lC,GAAmB7/C,EAAG43B,OAAOnxC,QAjCjC,CAAAq6D,EAAA77D,KAAA,gBAmCxCwwD,EAA8C,YAA9BgK,EAAez/C,EAAG+kB,QAClC39B,EAAWquD,EAAgB,GAAKtxD,EAAYiD,SAClDopB,EAAY,IAAAjoB,OAAKyX,EAAGwhD,UAAa,CAC/BlgE,OAAO,UACPkG,MAAM4J,EACN3Q,OAAOg/D,EAAez/C,EAAG+kB,QACzBjU,UAAUhhB,SAASkQ,EAAGwhD,QAAQ,KAC9B3wC,KAAKmJ,EAASha,EAAGksB,gBAAkB,KACnCxV,YAAY++B,EAAgBtxD,EAAYqE,KAAKhB,MAAQ4J,EACrDe,MAAO6N,EAAG7N,MAAQ6N,EAAG7N,MAAQnO,EAAKmD,iBAAiB6Y,EAAG43B,OAAO,GAAGxwC,GAAU2S,YA5C9B+mD,EAAAv7D,OAAA,UA+CvC,GA/CuC,WAmD3CumC,GAAgB9R,GAAW6lC,EAnDgB,CAAAiB,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAoDvC,GApDuC,WAuD5Cu6D,EAAS9/C,EAAG8/C,OAAS9/C,EAAG8/C,OAAS,KAvDW,CAAAgB,EAAA77D,KAAA,gBAAA67D,EAAA77D,KAAA,GA2D9B,IAAIwD,QAAJ,eAAAg5D,EAAAl+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA+8D,EAAOl7B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAA68D,GAAA,cAAAA,EAAA38D,KAAA28D,EAAA18D,MAAA,OAC3BjB,EAAKJ,MAAM+iC,KAAKC,IAAIL,eAAevmB,EAAGksB,gBAAgB,SAACrF,EAAI+6B,GACrD/6B,GACFJ,EAAOI,GAETL,EAAQo7B,KALiB,wBAAAD,EAAAn8D,SAAAk8D,EAAA/9D,SAAb,gBAAAk+D,EAAAC,GAAA,OAAAL,EAAAv7D,MAAAvC,KAAAwC,YAAA,IA3D8B,QA2D9C25D,EA3D8CgB,EAAA17D,KAAA,WAwE3C06D,IAAYF,GAAYE,EAAOrsD,KAAKY,gBAAkBrQ,EAAKJ,MAAMuB,QAAQkP,eAxE9B,CAAAysD,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAyEvC,GAzEuC,eAAAu7D,EAAA77D,KAAA,GA4EvBjB,EAAKkqB,kBAAkB/pB,EAAY27D,EAAOnmC,YAAYmmC,EAAOhvC,WA5EtC,QA4E1C1a,EA5E0C0qD,EAAA17D,KA8EhD06D,EAAOx+D,OAAS,YAChBw+D,EAAOr/D,OAASg/D,EAAez/C,EAAG+kB,QAClC+6B,EAAOnP,gBAAkBxsD,EAAYoG,QACrCu1D,EAAOhvC,UAAYhhB,SAASkQ,EAAGwhD,QAAQ,KAEnCzB,EAAU,KAnFkCe,EAAA/3D,GAoFxCiX,EAAG+kB,OApFqC+7B,EAAA77D,KAqFzC,kBArFyC67D,EAAA/3D,GAAA,GAsFzC,wBAtFyC+3D,EAAA/3D,GAAA,GAgHzC,oBAhHyC+3D,EAAA/3D,GAAA,GA+HzC,2BA/HyC+3D,EAAA/3D,GAAA,GAkNzC,8BAlNyC+3D,EAAA/3D,GAAA,GAmNzC,6BAnNyC+3D,EAAA/3D,GAAA,GAoNzC,0BApNyC+3D,EAAA/3D,GAAA,GAqNzC,2BArNyC+3D,EAAA/3D,GAAA,GAsNzC,sBAtNyC+3D,EAAA/3D,GAAA,wBAuFvCiX,EAAG43B,OAvFoC,CAAAkpB,EAAA77D,KAAA,gBAwFtCu6D,IACFvD,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,GAzFT8gD,EAAAv7D,OAAA,UA2FnC,GA3FmC,WA8FxCu6D,EAAOjL,GAAGxgD,gBAAkBlQ,EAAYqE,KAAK+B,QAAQ8J,cA9Fb,CAAAysD,EAAA77D,KAAA,gBAgGtCu6D,UACKvD,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAjGP+E,EAAAv7D,OAAA,UAoGnC,GApGmC,WAuG5Cw6D,EAAU//C,EAAG43B,OAAS5zC,EAAKmD,iBAAiB6Y,EAAG43B,OAAO,GAAGzzC,EAAYiD,UAAU2S,WAAa,EAvGhD,CAAA+mD,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UA0GnC,GA1GmC,eA6G5Cu6D,EAAO3tD,MAAQ4tD,EACfD,EAAO/uC,YAAcgvC,EA9GuBe,EAAAv7D,OAAA,wBAiHvCya,EAAG43B,OAjHoC,CAAAkpB,EAAA77D,KAAA,gBAkHtCu6D,IACFvD,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,GAnHT8gD,EAAAv7D,OAAA,UAqHnC,GArHmC,eAwHvCu6D,EAAO1pD,aACJ4pD,EAAqBh8D,EAAKmD,iBAAiB6Y,EAAG43B,OAAO,GAAG,IAAIzuC,MAAMiN,GACxE0pD,EAAO1pD,WAAaA,EACpB0pD,EAAO3tD,MAAQ6tD,EACfF,EAAO/uC,YAAcivC,GA5HqBc,EAAAv7D,OAAA,wBAgIxC06D,EAAgCjgD,EAAG4hD,UAAY5hD,EAAG4hD,UAAY,KAhItB,CAAAd,EAAA77D,KAAA,gBAAA67D,EAAA77D,KAAA,GAmIH,IAAIwD,QAAJ,eAAAs5D,EAAAx+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAq9D,EAAOx7B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAm9D,GAAA,cAAAA,EAAAj9D,KAAAi9D,EAAAh9D,MAAA,OAClDjB,EAAKJ,MAAM+iC,KAAKC,IAAIq3B,sBAAsBj+C,EAAGksB,gBAAgB,SAACrF,EAAI7mB,GAC5D6mB,GACFJ,EAAOI,GAETL,EAAQxmB,KALwC,wBAAAiiD,EAAAz8D,SAAAw8D,EAAAr+D,SAAb,gBAAAu+D,EAAAC,GAAA,OAAAJ,EAAA77D,MAAAvC,KAAAwC,YAAA,IAnIG,QAmI1C85D,EAnI0Ca,EAAA17D,KAAA,WA6IvC66D,EA7IuC,CAAAa,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UA8InC,GA9ImC,WAkJvCya,EAAG4hD,YACN5hD,EAAG4hD,UAAY3B,EACXT,IACFvD,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,IAIjDvf,EAAS,KACTy/D,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBp8D,EAAKO,gBAAgB,CAAC,WAAW,UAAU,kBAGnEJ,EAAYiX,WAAajX,EAAYiX,UAAUC,cAC7C4kD,EAA8BvrB,MAChCwrB,EAAqC/7D,EAAYiX,UAAUC,YAAY9Q,QAAQ4pD,QAAQ,IAAI,IAAI9/C,cAC/F8rD,EAA0CF,EAA8BvrB,KAAK30B,OAAO,SAACC,GAAS,OAAOA,EAAGzV,QAAQ8J,gBAAgBlQ,EAAYoG,QAAQ8J,eAAiB2L,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4E23D,MACxOD,EAA8Bl9B,SACvCo9B,EAA0C58D,OAAO+X,OAAO2kD,EAA8Bl9B,QAAQhjB,OAAO,SAACC,GAAS,OAAOA,EAAGzV,QAAQ8J,gBAAgBlQ,EAAYoG,QAAQ8J,iBAGnK8rD,EAAwC15D,SAC1ChG,EAAS,YAKR0/D,EAAwC15D,SACvCw5D,EAA8BvrB,MAChCwrB,EAAqC/7D,EAAYqE,KAAK+B,QAAQ4pD,QAAQ,IAAI,IAAI9/C,gBAC9E8rD,EAA0CF,EAA8BvrB,KAAK30B,OAAO,SAACC,GAAS,OAAOA,EAAGzV,QAAQ8J,gBAAgBlQ,EAAYoG,QAAQ8J,eAAiB2L,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4E23D,MAGpMz5D,QAAU25D,IACrDF,EAAqCE,EAAoB71D,QAAQ4pD,QAAQ,IAAI,IAAI9/C,cACjF8rD,EAA0CF,EAA8BvrB,KAAK30B,OAAO,SAACC,GAAS,OAAOA,EAAGzV,QAAQ8J,gBAAgBlQ,EAAYoG,QAAQ8J,eAAiB2L,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4E23D,OAE1OD,EAA8Bl9B,SACvCo9B,EAA0C58D,OAAO+X,OAAO2kD,EAA8Bl9B,QAAQhjB,OAAO,SAACC,GAAS,OAAOA,EAAGzV,QAAQ8J,gBAAgBlQ,EAAYoG,QAAQ8J,iBAGnK8rD,EAAwC15D,SAC1ChG,EAAS,YAIR0/D,EAAwC15D,OAhMD,CAAAq6D,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAiMnC,GAjMmC,WAoMtC86D,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBpwD,KAAOH,SAASuwD,EAAiBpwD,KAAK,IAAOowD,EAAiB+B,KAAO/B,EAAiB+B,IAAInyD,KAAQH,SAASuwD,EAAiB+B,IAAInyD,KAAK,IAAM,KAtMpI,CAAA6wD,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAyMnC,GAzMmC,eA4MtCg7D,EAAmBv8D,EAAKmD,iBAAiBm5D,EAAYn8D,EAAYiD,UACvE04D,EAAOr/D,OAASA,EAChBq/D,EAAO3tD,MAAQouD,EACfT,EAAO/uC,YAAcwvC,EA/MuBO,EAAAv7D,OAAA,wBAuNvCpB,EAAYiX,WAAcjX,EAAYiX,UAAUC,YAvNT,CAAAylD,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAwNnC,GAxNmC,WA2NxCi7D,EAAqBxgD,EAAG4hD,UAAY5hD,EAAG4hD,UAAY,KA3NX,CAAAd,EAAA77D,KAAA,gBAAA67D,EAAA77D,KAAA,GA8Nd,IAAIwD,QAAJ,eAAA45D,EAAA9+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA29D,EAAO97B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAy9D,GAAA,cAAAA,EAAAv9D,KAAAu9D,EAAAt9D,MAAA,OACvCjB,EAAKJ,MAAM+iC,KAAKC,IAAIq3B,sBAAsBj+C,EAAGksB,gBAAgB,SAACrF,EAAI7mB,GAC5D6mB,GACFJ,EAAOI,GAETL,EAAQxmB,KAL6B,wBAAAuiD,EAAA/8D,SAAA88D,EAAA3+D,SAAb,gBAAA6+D,EAAAC,GAAA,OAAAJ,EAAAn8D,MAAAvC,KAAAwC,YAAA,IA9Nc,QA8N1Cq6D,EA9N0CM,EAAA17D,KAAA,WAwOvCo7D,EAxOuC,CAAAM,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAyOnC,GAzOmC,WA6OvCya,EAAG4hD,YACN5hD,EAAG4hD,UAAYpB,EACXhB,IACFvD,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,IAI/Cs1C,EAAwBnxD,EAAYiX,UAAUoxB,kBAAkBjiC,QAAQ8J,cAAc8/C,QAAQ,IAAI,IAClGxD,EAAkBxsD,EAAYqE,KAAK+B,QAAQ8J,cAAc8/C,QAAQ,IAAI,KACrEsM,EAA+BD,EAAmB9rB,KAAK30B,OAAO,SAACC,GAAS,OAAOA,EAAGq+C,OAAO53D,QAAQ,GAAKuZ,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4E+sD,IAA2Bt1C,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4EooD,MAE7PlqD,OAxPU,CAAAq6D,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAyPnC,GAzPmC,WA4PtCm7D,EAA4BD,EAA6Bv4C,OAEzDy4C,EAAc38D,EAAKJ,MAAM+iC,KAAKC,IAAIzd,IAAIu5C,UAAU,CACpD,CACE7R,aAAc,UACdngD,KAAM,SACNvD,KAAM,YAERuzD,EAA0BzwD,KAAKywD,EAA0BrC,UAEtCsC,EAAYgC,OAtQW,CAAA7B,EAAA77D,KAAA,gBAAA67D,EAAAv7D,OAAA,UAuQnC,GAvQmC,eA0QtCq7D,EAAiBD,EAAYgC,OAC7B9B,EAAsB78D,EAAKmD,iBAAiBy5D,EAAez8D,EAAYiD,UAC7E04D,EAAO3tD,MAAQ0uD,EAAoB9mD,WA5QS+mD,EAAAv7D,OAAA,6BAAAu7D,EAAAv7D,OAAA,sBAkRhDu6D,EAAO1pD,WAAaA,EACpB0pD,EAAOt4D,MAAQ4J,EACf0uD,EAAOppC,YAActlB,EACrB0uD,EAAO7uC,WAAa7a,EAAWjN,MAAMnF,EAAKqB,MAAMy6D,EAAO3tD,QAGvDqe,EAAawJ,GAAU8lC,EAIlB9/C,EAAG8/C,SACN9/C,EAAG8/C,OAASA,EACZ7D,EAAUj4D,EAAKJ,MAAMuB,SAAS62D,GAAUD,GAAS/7C,GA9RH,0BAAA8gD,EAAAt7D,SAAA+5D,EAAA57D,SAA5C,gBAAAi/D,EAAAC,GAAA,OAAAvD,EAAAp5D,MAAAvC,KAAAwC,YAAA,IA7B8B,wBAAAk5D,EAAA75D,SAAA45D,EAAAz7D,SAAhC,gBAAAm/D,GAAA,OAAA3D,EAAAj5D,MAAAvC,KAAAwC,YAAA,IAjBW,cAkVb81D,GACFj4D,EAAKm4D,yBAAyBF,GAnVfiD,EAAA35D,OAAA,SAsVVirB,GAtVU,yBAAA0uC,EAAA15D,SAAAu5D,EAAAp7D,SAtrCD,gBAAAo/D,GAAA,OAAAjE,EAAA54D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8gDlBw1D,kBAAoB,SAACtjB,GAA8B,IAArBmtB,EAAqB78D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAAT8J,EAAS9J,UAAAM,OAAA,EAAAN,UAAA,QAAAO,EAC3C+a,EAAMuhD,GAAgBntB,EACxBotB,EAAiBj/D,EAAK+F,8BAA8B,iBAAiB,IACnE0T,EAAY3N,UAAS,IAAIiN,MAAOI,UAAU,KAKhD,OAJA8lD,EAAexhD,GAAO,CACpBxR,OACAwN,aAEKzZ,EAAKgG,8BAA8B,iBAAiBi5D,IAthD3Ct/D,KAwhDlBg1D,iBAAmB,SAAC9iB,GAAyB,IAAhBmtB,EAAgB78D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GACrCsb,EAAMuhD,GAAgBntB,EACxBotB,EAAiBj/D,EAAK+F,8BAA8B,iBAAiB,IAEzE,OAAIk5D,GAAkBA,EAAexhD,GAC5BwhD,EAAexhD,GAAKxR,KAEtB,MA/hDStM,KAiiDlBonB,YAjiDkB,eAAAm4C,EAAA3/D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiiDJ,SAAAw+D,EAAMttB,GAAN,IAAAutB,EAAAC,EAAApzD,EAAAqzD,EAAAn9D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAy+D,GAAA,cAAAA,EAAAv+D,KAAAu+D,EAAAt+D,MAAA,cAAem+D,EAAfE,EAAA78D,OAAA,QAAAC,IAAA48D,EAAA,IAAAA,EAAA,GAAoCD,EAApCC,EAAA78D,OAAA,QAAAC,IAAA48D,EAAA,GAAAA,EAAA,GAA2C,KAA3CC,EAAAt+D,KAAA,EACO+hC,IACJC,IAAI4O,EAASwtB,GACbG,MAAM,SAAA38B,GACyB,oBAAnBu8B,GACTA,EAAev8B,KALrB,cACN52B,EADMszD,EAAAn+D,KAAAm+D,EAAAh+D,OAAA,SAQL0K,GARK,wBAAAszD,EAAA/9D,SAAA29D,EAAAx/D,SAjiDI,gBAAA8/D,GAAA,OAAAP,EAAAh9D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA2iDlBk1D,kBA3iDkB,eAAA6K,EAAAngE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2iDE,SAAAg/D,EAAO9tB,GAAP,IAAA6E,EAAAkpB,EAAAZ,EAAAvhD,EAAAhE,EAAAwlD,EAAAhzD,EAAA4zD,EAAA19D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAg/D,GAAA,cAAAA,EAAA9+D,KAAA8+D,EAAA7+D,MAAA,UAAgBy1C,EAAhBmpB,EAAAp9D,OAAA,QAAAC,IAAAm9D,EAAA,GAAAA,EAAA,GAAoB,EAAED,EAAtBC,EAAAp9D,OAAA,QAAAC,IAAAm9D,EAAA,IAAAA,EAAA,GAAwCb,EAAxCa,EAAAp9D,OAAA,QAAAC,IAAAm9D,EAAA,IAAAA,EAAA,GACZpiD,EAAMuhD,GAAgBntB,EACtBp4B,EAAY3N,UAAS,IAAIiN,MAAOI,UAAU,QAG5C8lD,EAAiBj/D,EAAK+F,8BAA8B,iBAAiB,MAEnDk5D,EAAexhD,IAAQwhD,EAAexhD,GAAKhE,WAAaA,EAAUwlD,EAAexhD,GAAKhE,UAAUi9B,GAPpG,CAAAopB,EAAA7+D,KAAA,eAAA6+D,EAAAv+D,OAAA,SAQR09D,EAAexhD,GAAKxR,MAAQ2zD,EAAcX,EAAexhD,GAAKxR,KAAKA,KAAOgzD,EAAexhD,GAAKxR,MARtF,cAAA6zD,EAAA7+D,KAAA,GAWCjB,EAAK+mB,YAAY8qB,GAXlB,eAWZ5lC,EAXY6zD,EAAA1+D,KAalB69D,EAAexhD,GAAO,CACpBxR,OACAwN,aAEFzZ,EAAKgG,8BAA8B,iBAAiBi5D,GAjBlCa,EAAAv+D,OAAA,SAkBV0K,GAAQ2zD,EAAc3zD,EAAKA,KAAOA,GAlBxB,yBAAA6zD,EAAAt+D,SAAAm+D,EAAAhgE,SA3iDF,gBAAAogE,GAAA,OAAAL,EAAAx9D,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+jDlBsoC,oBAAsB,SAAAnG,GACpB,IAAI35B,EAAS,QACb,GAAI2D,SAASg2B,EAAMk+B,MAAM,CACvB,IAAMC,EAAYn0D,SAASg2B,EAAMk+B,MACjC,OAAQC,GACN,KAAK,KACH93D,EAAS,SACX,MACA,QACEA,EAAM,SAAA5D,OAAY07D,SAGbn+B,EAAMzlB,UACflU,EAAS25B,EAAMzlB,QAAQ4H,MAAM,MAAM,IAGrC,OAAO9b,GA/kDSxI,KAilDlBujB,iBAAmB,WACjB,OAAOxS,IAllDS/Q,KAolDlBugE,aAAe,SAAClsB,EAAKmsB,GACnB,GAAInsB,EAAKvxC,OAAO,EAAE,CAChB,IAAM29D,EAAOpsB,EAAKqsB,QAClB,IAAKrsB,EAAKvxC,OACR,OAAO09D,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOpgE,EAAKkgE,aAAalsB,EAAKmsB,EAAMC,IAGxC,OAAO,MA7lDSzgE,KA+lDlBY,gBAAkB,SAACyzC,GAAuB,IAAlBssB,EAAkBn+D,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAExC,GADAm+D,EAAUA,GAAoB5vD,GAC1BsjC,EAAKvxC,OAAO,EAAE,CAChB,IAAM29D,EAAOpsB,EAAKqsB,QAClB,IAAKrsB,EAAKvxC,OACR,OAAO69D,EAAQF,GAAQE,EAAQF,GAAQ,KAClC,GAAIE,EAAQF,GACjB,OAAOpgE,EAAKO,gBAAgByzC,EAAKssB,EAAQF,IAG7C,OAAO,MAzmDSzgE,KA2mDlB4gE,eAAiB,WACf,OAAO91D,OAAOi2C,SAASC,OAAOtwC,cAAc2kB,SAAStkB,GAAck/B,QAAQv/B,gBA5mD3D1Q,KA8mDlB+jB,yBA9mDkB,eAAA88C,EAAAjhE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8mDS,SAAA8/D,EAAO14B,GAAP,IAAAnmC,EAAA8+D,EAAAjuB,EAAAkuB,EAAAC,EAAAC,EAAA1+D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAggE,GAAA,cAAAA,EAAA9/D,KAAA8/D,EAAA7/D,MAAA,UAAiBW,EAAjBi/D,EAAAp+D,OAAA,QAAAC,IAAAm+D,EAAA,GAAAA,EAAA,GAA0B,KAE7CH,EAAmBhwD,GAAcmuB,UAAUC,OAAOC,OAClD0T,EAAeiuB,EAAiBjuB,aAChCkuB,EAAWl2D,OAAOi2C,SAASC,OAAOtwC,cAAc2kB,SAAStkB,GAAck/B,QAAQv/B,gBAEjFqwD,EAAiBp8D,UAAWmG,OAAOs2D,KAAQtuB,IAAgBkuB,EANtC,CAAAG,EAAA7/D,KAAA,eASnBy/D,EAAiBluB,uBAE2B,IAA1C9hC,GAAc8tC,QAAQK,iBAClB+hB,EAAiBlwD,GAAc8tC,QAAQC,kBAAkB/tC,GAAc8tC,QAAQK,iBACrF9W,EAAUpkB,eAAV,IAAApf,OAA+Bq8D,IAEtBnuB,IAAiBkuB,IAC1B54B,EAAUpkB,eAAiB,UAhBRm9C,EAAA7/D,KAAA,EAoBhB,IAAIwD,QAAJ,eAAAu8D,EAAAzhE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAsgE,EAAOz+B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAogE,GAAA,cAAAA,EAAAlgE,KAAAkgE,EAAAjgE,MAAA,OAClB8mC,EAAUo5B,YAAc,WACtB3+B,GAAQ,IAEVuF,EAAUq5B,gBAAkB,WAC1B3+B,KAGFh4B,OAAOs2D,GAAG,OAAQ,QAASh5B,GART,wBAAAm5B,EAAA1/D,SAAAy/D,EAAAthE,SAAb,gBAAA0hE,EAAAC,GAAA,OAAAN,EAAA9+D,MAAAvC,KAAAwC,YAAA,IApBgB,OA+BC,oBAAbP,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBk/D,EAAAv/D,OAAA,UAwClB,GAxCkB,yBAAAu/D,EAAAt/D,SAAAi/D,EAAA9gE,SA9mDT,gBAAA4hE,GAAA,OAAAf,EAAAt+D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAwpDlB6hE,eAxpDkB,eAAAC,EAAAliE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwpDD,SAAA+gE,EAAOh1D,EAAMnG,EAAS4e,GAAtB,IAAAy4B,EAAA,OAAAl9C,EAAAtB,EAAA0B,KAAA,SAAA6gE,GAAA,cAAAA,EAAA3gE,KAAA2gE,EAAA1gE,MAAA,cAAA0gE,EAAA3gE,KAAA,EAEP48C,EAAW,IAAI59C,EAAKJ,MAAM+iC,KAAKC,IAAIg/B,SAASz8C,EAAK5e,GAF1Co7D,EAAApgE,OAAA,SAGN,CAACmL,OAAMkxC,aAHD,OAAA+jB,EAAA3gE,KAAA,EAAA2gE,EAAA58D,GAAA48D,EAAA,SAKb3hE,EAAK2vD,eAAe,6BAA6BjjD,EAAKnG,EAAtDo7D,EAAA58D,IALa,cAAA48D,EAAApgE,OAAA,SAOR,MAPQ,wBAAAogE,EAAAngE,SAAAkgE,EAAA/hE,KAAA,YAxpDC,gBAAAkiE,EAAAC,EAAAC,GAAA,OAAAN,EAAAv/D,MAAAvC,KAAAwC,YAAA,GAAAxC,KAiqDlBqiE,kBAAoB,WAClB,OAAOhiE,EAAKo4D,cAAc,kBAAiB,EAAM,OAlqDjCz4D,KAoqDlBsiE,qBAAuB,SAACC,EAAS7hB,GAU/B,OATK6hB,EAAS37D,SAAWvG,EAAKJ,MAAMuB,UAClC+gE,EAAS37D,QAAUvG,EAAKJ,MAAMuB,SAE3B+gE,EAASpkC,WACZokC,EAASpkC,SAAW99B,EAAKgiE,qBAEG,qBAAnBE,EAASC,OAA0BD,EAASC,cAC9CD,EAASC,QAEbD,EAAS37D,aAGd85C,EAAWA,IAAuBrgD,EAAKJ,MAAMygD,SAAWrgD,EAAKJ,MAAMygD,SAA+C,oBAA5BrgD,EAAKJ,MAAMwiE,aAA8BpiE,EAAKJ,MAAMwiE,eAAiB,QAElJ/hB,EAASgiB,aAAaH,KAnrDfviE,KAurDlB2iE,2BAA6B,SAACC,GAC5B,OAAOA,EAAa,2BAA2BA,EAAa,MAxrD5C5iE,KA0rDlB6iE,uBAAyB,SAACj8D,GACxB,OAAOA,EAAU,gCAAgCA,EAAU,MA3rD3C5G,KA6rDlByJ,YAAc,SAACqpB,GAA6D,IAArDgwC,EAAqDtgE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAtC,EAAGua,EAAmCva,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAzB,IAAKugE,EAAoBvgE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEsgE,EAAe/pD,KAAKiqD,IAAIF,GACxBA,EAAenhE,MAAMmhE,GAAgB,EAAIA,EAEzC,IAAMG,EAAenwC,EAAS,EAAI,IAAM,GAEpCviB,EAAIpE,SAAS2mB,EAAS/Z,KAAKiqD,IAAIE,OAAOpwC,IAAW,GAAGliB,QAAQkyD,IAAe1sD,WAC3EiO,EAAK9T,EAAEzN,OAAS,EAAKyN,EAAEzN,OAAS,EAAI,EAExC,OAAOmgE,GAAgB5+C,EAAI9T,EAAEsa,OAAO,EAAGxG,GAAK0+C,EAAY,IAAMxyD,EAAEsa,OAAOxG,GAAGmsC,QAAQ,iBAAkB,KAAOuS,IAAcD,EAAe/lD,EAAUhE,KAAKiqD,IAAIlwC,EAASviB,GAAGK,QAAQkyD,GAAcrxC,MAAM,GAAK,IACxM,MAAOrjB,GACP,OAAO,OAzsDOpO,KA4sDlB6Z,gBA5sDkB,eAAAspD,EAAAvjE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4sDA,SAAAoiE,EAAOx8D,GAAP,IAAAuL,EAAAsC,EAAA2iC,EAAAisB,EAAAlwB,EAAAmwB,EAAAC,EAAAv/D,EAAAiC,EAAAu9D,EAAAC,EAAAC,EAAAxxB,EAAA+B,EAAA72B,EAAA5U,EAAA8D,EAAAq3D,EAAAnhE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAyiE,GAAA,cAAAA,EAAAviE,KAAAuiE,EAAAtiE,MAAA,UAAe6Q,EAAfwxD,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAAsB,KAAKlvD,EAA3BkvD,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAA0C,KAAKvsB,EAA/CusB,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAA4D,KAAKN,EAAjEM,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,IAAAA,EAAA,GAA2FxwB,EAA3FwwB,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAAqG,KAAKL,EAA1GK,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAAgH,KAAKJ,EAArHI,EAAA7gE,OAAA,QAAAC,IAAA4gE,EAAA,GAAAA,EAAA,GAA2H,KAC/F,IAAxC5yD,GAAc8tC,QAAQK,iBAAwBnuC,GAAcC,MAAMrM,QADtD,CAAAi/D,EAAAtiE,KAAA,eAAAsiE,EAAAhiE,OAAA,SAEP,IAFO,UAMVoC,EANU,gBAAAY,OAMsBgC,EANtB,KAAAhC,OAMiCuN,EANjC,KAAAvN,OAM2CuuC,EAN3C,KAAAvuC,OAMwD0+D,EANxD,KAAA1+D,OAMiE2+D,KAC7Et9D,EAAa5F,EAAKoZ,cAAczV,IAPpB,CAAA4/D,EAAAtiE,KAAA,eAWRkiE,EAAqBv9D,EAAWmW,OAAQ,SAAAk0C,GAAC,OAA0B,OAAnBA,EAAE77C,gBAA0BA,GAAkB67C,EAAE77C,gBAAgBA,KAAsC,OAAjB67C,EAAElZ,cAAwBA,GAAgBkZ,EAAElZ,cAAcA,OAE3KosB,EAAmB1gE,OAAO,GAbtC,CAAA8gE,EAAAtiE,KAAA,cAcNmiE,EAAeD,EAAmBj/C,MAAMjY,MAdlC,CAAAs3D,EAAAtiE,KAAA,gBAAAsiE,EAAAhiE,OAAA,SAgBH6hE,EAAarnD,OAAQ,SAAAlO,GAAC,QAAOuG,GAAkBvG,EAAE4L,WAAWrF,MAAqB2iC,GAAgBlpC,EAAE4L,WAAWs9B,MAhB3G,eAAAwsB,EAAAhiE,OAAA,SAkBL,MAlBK,QAAAgiE,EAAAtiE,KAAA,iBAsBd2E,EAAa,GAtBC,eAyBVy9D,EAAU3yD,GAAcC,MAAMojC,MAChClC,EA1BY,GAAAttC,OA0BE8+D,EAAQxxB,UA1BVttC,OA0BqBgC,IAEjC6N,GAAkB2iC,GAA2B,OAAXjlC,GAAiC,OAAdghC,KACjDc,EAAS,GAEXx/B,GAAkBtI,SAASsI,KACzB4uD,EACFpvB,EAAOpjC,KAAP,SAAAjM,OAAqB6P,KAEf2I,EAAQ3I,EAAgB,OAC9Bw/B,EAAOpjC,KAAP,SAAAjM,OAAqBwY,MAIrBg6B,GAAgBjrC,SAASirC,IAC3BnD,EAAOpjC,KAAP,OAAAjM,OAAmBwyC,IAGN,OAAXjlC,GACF8hC,EAAOpjC,KAAP,UAAAjM,OAAsBuN,IAGN,OAAdghC,GAAsBhnC,SAASgnC,IACjCc,EAAOpjC,KAAP,aAAAjM,OAAyBuuC,IAGb,OAAVmwB,GACFrvB,EAAOpjC,KAAP,SAAAjM,OAAqB0+D,IAGT,OAAVC,GAAkBp3D,SAASo3D,IAC7BtvB,EAAOpjC,KAAP,SAAAjM,OAAqB2+D,IAGnBtvB,EAAOnxC,SACTovC,GAAY,IAAI+B,EAAO/iC,KAAK,OA7DhB0yD,EAAAtiE,KAAA,GAiEGjB,EAAK+mB,YAAY8qB,GAjEpB,WAiEZ1pC,EAjEYo7D,EAAAniE,KAAA,CAAAmiE,EAAAtiE,KAAA,gBAAAsiE,EAAAhiE,OAAA,SAmEP,IAnEO,eAsEZ0K,EAAO9D,EAAO8D,KACH,OAAX6F,IACF7F,EAAOA,EAAK8P,OAAQ,SAAAlO,GAAC,OAAMA,EAAEiE,SAAWA,KAG1ClM,EAAW4K,KAAK,CACdvE,OACA6F,SACAilC,eACA3iC,mBAGFpU,EAAKqF,cAAc1B,EAAciC,GAlFjB29D,EAAAhiE,OAAA,SAoFT0K,GApFS,yBAAAs3D,EAAA/hE,SAAAuhE,EAAApjE,SA5sDA,gBAAA6jE,GAAA,OAAAV,EAAA5gE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkyDlBwpC,iBAlyDkB,eAAAs6B,EAAAlkE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkyDC,SAAA+iE,EAAO1T,GAAP,OAAAtvD,EAAAtB,EAAA0B,KAAA,SAAA6iE,GAAA,cAAAA,EAAA3iE,KAAA2iE,EAAA1iE,MAAA,cACjB+uD,EAAeA,GAA8BhwD,EAAKJ,MAAMwN,cADvCu2D,EAAA1iE,KAAA,EAEJjB,EAAK2C,oBAAoBqtD,EAAa,YAFlC,cAAA2T,EAAApiE,OAAA,SAAAoiE,EAAAviE,MAAA,wBAAAuiE,EAAAniE,SAAAkiE,EAAA/jE,SAlyDD,gBAAAikE,GAAA,OAAAH,EAAAvhE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAsyDlBsI,UAAY,SAAC47D,EAAKC,EAAY17D,GAC5B,GAAIy7D,GAAQC,GAAe17D,EAAgB,CACzC,IAAIiwB,EAAS94B,OAAO4H,KAAK08D,GAAM31B,OAAO,SAAC61B,EAAY3zD,GACjD,IAAM4zD,EAAahkE,EAAKqB,MAAMyiE,EAAY1zD,IACpC6zD,EAAMjkE,EAAKqB,MAAMwiE,EAAKzzD,IAC5B,OAAOpQ,EAAKqB,MAAM0iE,GAAal8D,KAAKm8D,EAAW7+D,MAAM8+D,KACrD,GAEF,GAAI5rC,EACF,OAAOr4B,EAAKqB,MAAMg3B,GAAQjzB,IAAIgD,GAGlC,OAAO,MAlzDSzI,KAozDlB4Z,oBAAsB,SAACu5B,GAAyB,IAAfoxB,EAAe/hE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAN,EAMxC,MAL0B,CACxBgiE,KAAK,KACLC,IAAI,MACJC,KAAK,QAEkBvxB,GAAWoxB,GA1zDpBvkE,KA4zDlB2kE,yBAA2B,SAACC,GAC1B,OAAOvkE,EAAKJ,MAAMO,YAAY6P,UAAU0H,KAAK,SAAAu4C,GAAC,OAAIA,EAAE1pD,QAAQ8J,gBAAkBk0D,EAAKl0D,iBA7zDnE1Q,KA+zDlBirC,aAAe,SAAAz8B,GACb,OAAOnO,EAAKqB,MAAM8M,GAAOy8B,aAAaykB,IAAUmV,aAAaj0D,WAh0D7C5Q,KAk0DlB8kE,uBAAyB,SAAAv2C,GACvB,OAAOluB,EAAKqB,MAAL,KAAAkD,OAAgB2pB,KAn0DPvuB,KAq0DlBkoC,qBAAuB,SAAC/xB,EAAaoY,KAA6B/rB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,OAC1DuiE,EAA0B1kE,EAAKykE,uBAAuBv2C,GAC5D,OAAOluB,EAAKqB,MAAMyU,GAAc3Q,MAAMu/D,GAAyB95B,aAAaykB,IAAUmV,aAAaj0D,WAv0DnF5Q,KAy0DlBwD,iBAAmB,SAAC2S,EAAaoY,EAAcy2C,GAC7C,IAAMD,EAA0B1kE,EAAKykE,uBAAuBv2C,GACxDrtB,EAAUb,EAAKqB,MAAMyU,GAAc1Q,IAAIs/D,GAI3C,OAHIC,IAAiBA,EAAarjE,UAChCT,EAAUA,EAAQsE,MAAMw/D,IAEnB9jE,GA/0DSlB,KAi1DlBilE,oBAj1DkBrlE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi1DI,SAAAkkE,IAAA,IAAA7U,EAAA8U,EAAAC,EAAA5iE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAkkE,GAAA,cAAAA,EAAAhkE,KAAAgkE,EAAA/jE,MAAA,cACpB+uD,GAD2BA,EAAP+U,EAAAtiE,OAAA,QAAAC,IAAAqiE,EAAA,GAAAA,EAAA,GAAoB,OACK/kE,EAAKJ,MAAMO,YAAYqE,KAAKhB,MADrDwhE,EAAA/jE,KAAA,EAESjB,EAAK2C,oBAAoBqtD,EAAc,SAAU,GAAI,IAAIwP,MAAM,SAAA38B,GAC1F7iC,EAAK2vD,eAAe,yBAA0B9sB,KAH5B,cAEdiiC,EAFcE,EAAA5jE,KAAA4jE,EAAAzjE,OAAA,SAMbujE,GANa,wBAAAE,EAAAxjE,SAAAqjE,EAAAllE,SAj1DJA,KAy1DlBy4D,cAAgB,SAAC36C,GAA4C,IAAxCwnD,IAAwC9iE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAAxB+iE,EAAwB/iE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAC9CgG,EAAS+8D,EACb,GAAIz6D,OAAO45B,aAAa,CACtB,IAAMjV,EAAOiV,aAAaC,QAAQ7mB,GAC9B2R,IACFjnB,EAASinB,EACL61C,IACF98D,EAAS2X,KAAKykB,MAAMnV,KAI1B,OAAKjnB,GACI+8D,GAr2DOvlE,KAy2DlBwlE,gBAAkB,WAAoB,IAAnBC,EAAmBjjE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAP,GAC7B,GAAIsI,OAAO45B,aAAa,CAEtB,IAAK+gC,IAAgBA,EAAY3iE,OAC/B,OAAOgI,OAAO45B,aAAaghC,QAI7B,IADA,IAAMC,EAAqB,GAClBp1D,EAAE,EAAEA,EAAEzF,OAAO45B,aAAa5hC,OAAOyN,IAAI,CAC5C,IAAMq1D,EAAY96D,OAAO45B,aAAa5mB,IAAIvN,GACrCk1D,EAAYpwC,SAASuwC,IACxBD,EAAmB90D,KAAK+0D,GAG5BD,EAAmBz7D,QAAQ,SAAC07D,GAC1BvlE,EAAKwlE,iBAAiBD,OAx3DV5lE,KA43DlB6lE,iBAAmB,SAAC/nD,GAClB,QAAIhT,OAAO45B,eACT55B,OAAO45B,aAAaohC,WAAWhoD,IACxB,IA/3DO9d,KAm4DlB6kC,gBAAkB,SAAC/mB,EAAItP,GAA0B,IAApB4R,EAAoB5d,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAC/C,GAAIsI,OAAO45B,aACT,IAGE,OAFAl2B,EAAQ4R,EAAYD,KAAKC,UAAU5R,GAASA,EAC5C1D,OAAO45B,aAAaqhC,QAAQjoD,EAAItP,IACzB,EACP,MAAO2zB,GAEPr3B,OAAO45B,aAAaohC,WAAWhoD,GAGnC,OAAO,GA94DS9d,KAg5DlBgmE,eAh5DkB,eAAAC,EAAArmE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAg5DD,SAAAklE,EAAO1lE,GAAP,IAAA2lE,EAAAC,EAAAC,EAAAC,EAAAl3C,EAAAm3C,EAAAC,EAAA/Q,EAAAgR,EAAAC,EAAAC,EAAAtiE,EAAAiJ,EAAA,OAAAvM,EAAAtB,EAAA0B,KAAA,SAAAylE,GAAA,cAAAA,EAAAvlE,KAAAulE,EAAAtlE,MAAA,WAEVd,GAAeH,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,aAGtBuQ,GAAcktC,SAAS9c,QAAQwd,UAAUh6C,SAAYnE,EAN3C,CAAAomE,EAAAtlE,KAAA,eAAAslE,EAAAhlE,OAAA,UAON,GAPM,cAAAglE,EAAAtlE,KAAA,EAUUjB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAO,cAV3D,UAUTsiE,EAVSS,EAAAnlE,KAAA,CAAAmlE,EAAAtlE,KAAA,eAAAslE,EAAAhlE,OAAA,UAaN,GAbM,cAAAglE,EAAAtlE,KAAA,GAgBsBjB,EAAKwhE,eAAe,yBAAyBsE,EAAWp1D,GAAcktC,SAAS9c,QAAQwd,UAAUn5B,KAhBvH,YAgBT4gD,EAhBSQ,EAAAnlE,OAmBiB2kE,EAAuBnoB,SAnBxC,CAAA2oB,EAAAtlE,KAAA,gBAAAslE,EAAAhlE,OAAA,UAoBN,GApBM,QA2Bf,IAHMykE,EAAsB,GACtBC,EAA0B,GAzBjBl3C,EAAA,SA2BNm3C,GACP,IAAMM,EAAoB,IAAI/hE,QAAJ,eAAAgiE,EAAAlnE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAA+lE,EAAOlkC,EAASC,GAAhB,IAAAuhC,EAAA,OAAAtjE,EAAAtB,EAAA0B,KAAA,SAAA6lE,GAAA,cAAAA,EAAA3lE,KAAA2lE,EAAA1lE,MAAA,cAAA0lE,EAAA3lE,KAAA,EAAA2lE,EAAA1lE,KAAA,EAEV8kE,EAAuBnoB,SAAS9c,QAAQ8lC,YAAYV,GAAej7B,OAFzD,OAE7B+4B,EAF6B2C,EAAAvlE,KAGnCohC,EAAQ,CACNwhC,aACAkC,kBALiCS,EAAA1lE,KAAA,gBAAA0lE,EAAA3lE,KAAA,EAAA2lE,EAAA5hE,GAAA4hE,EAAA,SAQnCnkC,EAAQ,MAR2B,yBAAAmkC,EAAAnlE,SAAAklE,EAAA/mE,KAAA,YAAb,gBAAAknE,EAAAC,GAAA,OAAAL,EAAAvkE,MAAAvC,KAAAwC,YAAA,IAW1B6jE,EAAoBx1D,KAAKg2D,GAEzB,IAAMO,EAAwB,IAAItiE,QAAJ,eAAAuiE,EAAAznE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAsmE,EAAOzkC,EAASC,GAAhB,IAAAryB,EAAA,OAAA1P,EAAAtB,EAAA0B,KAAA,SAAAomE,GAAA,cAAAA,EAAAlmE,KAAAkmE,EAAAjmE,MAAA,cAAAimE,EAAAlmE,KAAA,EAAAkmE,EAAAjmE,KAAA,EAEZjB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAO,qBAAsB,CAAC0iE,IAF5D,OAEjC91D,EAFiC82D,EAAA9lE,KAGvCohC,EAAQ,CACNpyB,eACA81D,kBALqCgB,EAAAjmE,KAAA,gBAAAimE,EAAAlmE,KAAA,EAAAkmE,EAAAniE,GAAAmiE,EAAA,SAQvC1kC,EAAQ,MAR+B,yBAAA0kC,EAAA1lE,SAAAylE,EAAAtnE,KAAA,YAAb,gBAAAwnE,EAAAC,GAAA,OAAAJ,EAAA9kE,MAAAvC,KAAAwC,YAAA,IAW9B8jE,EAAwBz1D,KAAKu2D,IAzBtBb,EAAc,EAAEA,EAAc/lE,EAAY6P,UAAUvN,OAAOyjE,IAAgBn3C,EAA3Em3C,GA3BM,OAuDXC,EAAkB,KAClB/Q,EAAqB,KAxDVmR,EAAAvlE,KAAA,GAAAulE,EAAAtlE,KAAA,GA2DWwD,QAAQC,IAAIshE,GA3DvB,eA2DbG,EA3DaI,EAAAnlE,KAAAmlE,EAAAtlE,KAAA,GA4DcwD,QAAQC,IAAIuhE,GA5D1B,QA4Db7Q,EA5DamR,EAAAnlE,KAAAmlE,EAAAtlE,KAAA,iBAAAslE,EAAAvlE,KAAA,GAAAulE,EAAAxhE,GAAAwhE,EAAA,qBAiEfJ,EAAkBA,GAAmBA,EAAgB1jE,OAAS0jE,EAAgBpqD,OAAO,SAAA1N,GAAC,OAAW,OAANA,IAAe,MAC1G+mD,EAAqBA,GAAsBA,EAAmB3yD,OAAS2yD,EAAmBr5C,OAAO,SAAA1N,GAAC,OAAW,OAANA,IAAe,OAEzF+mD,EAAmB3yD,QAAa0jE,GAAoBA,EAAgB1jE,OApElF,CAAA8jE,EAAAtlE,KAAA,gBAAAslE,EAAAhlE,OAAA,UAqEN,GArEM,eAyEX6kE,EAAqBpmE,EAAKqB,MAAM,GAC9BglE,EAA0BjR,EAAmBlnB,OAAO,SAACm5B,EAAYC,GACrE,GAAIA,EAAmBl3D,aAAa,CAClC,IAAMm3D,EAAiBpB,EAAgBzuD,KAAK,SAAArJ,GAAO,OAAOA,EAAE63D,gBAAkBoB,EAAmBpB,gBACjG,GAAIqB,EAAe,CACjB,IAAMvD,EAAahkE,EAAKqB,MAAMkmE,EAAevD,YAC7CqD,EAAYC,EAAmBl3D,aAAaC,eAAiB2zD,EAC7DoC,EAAqBA,EAAmBv+D,KAAKm8D,IAGjD,OAAOqD,GACP,IAGEf,GAAkB,EAvFPC,EAAAtlE,KAAA,GAyFejB,EAAK4E,mBAAmBzE,GAzFvC,eAyFT6D,EAzFSuiE,EAAAnlE,KA4FyB,kBAFlC6L,EAA2BjJ,EAAkBA,EAAgBiJ,yBAA2B,OAG5F1N,OAAO4H,KAAK8F,GAA0BpD,QAAQ,SAACuG,GAG7C,IAAMo3D,EAAqBv6D,EAAyBmD,GAC9Cq3D,EAAyBl8D,WAAWi8D,GAAoBj3D,QAAQ,GAGhEm3D,EAAwBrB,EAAwBj2D,EAAaC,eAAiBg2D,EAAwBj2D,EAAaC,eAAiBrQ,EAAKqB,MAAM,GAKjJomE,KAJ8BC,EAAwBn8D,WAAWm8D,EAAsBtiE,IAAIghE,IAAqB71D,QAAQ,GAAKvQ,EAAKqB,MAAM,MAK1IilE,GAAkB,KA1GTC,EAAAhlE,OAAA,SA+GR+kE,GA/GQ,yBAAAC,EAAA/kE,SAAAqkE,EAAAlmE,KAAA,cAh5DC,gBAAAgoE,GAAA,OAAA/B,EAAA1jE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAigElBwW,eAjgEkB,eAAAyxD,EAAAroE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAigED,SAAAknE,EAAO1nE,EAAYgB,GAAnB,IAAAqlC,EAAAE,EAAAG,EAAAx0B,EAAAk1B,EAAAlwB,EAAAmxB,EAAA,OAAA9nC,EAAAtB,EAAA0B,KAAA,SAAAgnE,GAAA,cAAAA,EAAA9mE,KAAA8mE,EAAA7mE,MAAA,UAEVd,GAAgBgB,EAFN,CAAA2mE,EAAA7mE,KAAA,eAAA6mE,EAAAvmE,OAAA,UAGN,GAHM,UAMXilC,GAAmB,EACnBE,EAAqB,KACrBG,EAA2B,KAE3Bx0B,EAA8B,MAG9BlS,EAAYiX,YAAajX,EAAYiX,UAAU9S,QAbpC,CAAAwjE,EAAA7mE,KAAA,YAcPsmC,EAAkBpnC,EAAYiX,UAAUC,YAAY3K,KACpD2K,EAAcrX,EAAKklB,kBAAkBqiB,GACrCiB,EAAoBxoC,EAAKklB,kBAAkB/kB,EAAYiX,UAAUoxB,kBAAkB97B,OAIrF2K,IAAemxB,EApBN,CAAAs/B,EAAA7mE,KAAA,gBAAA6mE,EAAA7mE,KAAA,GAsBsBjB,EAAKmpC,iBAAiB5B,GAtB5C,eAsBXV,EAtBWihC,EAAA1mE,KAAA0mE,EAAA7mE,KAAA,GAgCgBjB,EAAKopC,mBAAmB7B,EAAgBpmC,GAhCxD,SAgCXulC,EAhCWohC,EAAA1mE,QAmCTiR,EAA8BrS,EAAKmD,iBAAiBujC,EAAmBG,GAEvEL,EAAmBxmC,EAAKqB,MAAMqlC,GAAoBhwB,GAAG,IArC5C,eAAAoxD,EAAAvmE,OAAA,SA6CR,CACLilC,mBACAE,qBACAG,2BACAx0B,gCAjDa,yBAAAy1D,EAAAtmE,SAAAqmE,EAAAloE,SAjgEC,gBAAAooE,EAAAC,GAAA,OAAAJ,EAAA1lE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAsjElB09D,uBAtjEkB,eAAA4K,EAAA1oE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsjEO,SAAAunE,EAAOtqB,EAAUiM,EAAase,EAAkBvmE,EAAUwmE,GAA1D,IAAAC,EAAAhlC,EAAA,OAAA3iC,EAAAtB,EAAA0B,KAAA,SAAAwnE,GAAA,cAAAA,EAAAtnE,KAAAsnE,EAAArnE,MAAA,cAAAqnE,EAAAtnE,KAAA,EAAAsnE,EAAArnE,KAAA,EASEjB,EAAKJ,MAAM+iC,KAAKC,IAAI2lC,cATtB,OASfllC,EATeilC,EAAAlnE,MAWVinE,EAAAzqB,EAAS9c,SACjBu8B,uBADQn7D,MAAAmmE,EAAA,CACexe,GADftlD,OAAAhF,OAAA0hC,EAAA,EAAA1hC,CAC+B4oE,KACvCzrE,KAAK,CACJ+S,KAAMo6C,EACNxmB,aAIDlY,GAAG,kBAAmB,SAAS0B,GAChCltB,KAAK+iC,UAAL,yCAAAn+B,OAAwDsoB,IACxDu7C,MACCI,KAAK,eAAgB,SAASC,EAAoBC,GACnD/oE,KAAK+iC,UAAU,iCAAiCgmC,GAChDN,EAAiBM,KAxBEJ,EAAArnE,KAAA,gBAAAqnE,EAAAtnE,KAAA,EAAAsnE,EAAAvjE,GAAAujE,EAAA,SA2BrBtoE,EAAK0iC,UAAL4lC,EAAAvjE,IACAnD,EAAS,KAAD0mE,EAAAvjE,IA5Ba,yBAAAujE,EAAA9mE,SAAA0mE,EAAAvoE,KAAA,YAtjEP,gBAAAgpE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA/lE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAslElBqpE,0BAA4B,SAAAC,GAC1B,IAAKjpE,EAAKJ,MAAM+iC,KAAKmsB,MAAMoa,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgB5kE,OAAO0kE,EAAW,iCAGtC,IAAI7S,EAAI6S,EAAU73C,MAAM,EAAG,IACvB0d,EAAI,KAAKvqC,OAAO0kE,EAAU73C,MAAM,GAAI,MACpC/iB,EAAI,KAAK9J,OAAO0kE,EAAU73C,MAAM,IAAK,MAGzC,OAFA/iB,EAAIrO,EAAKJ,MAAM+iC,KAAKmsB,MAAMsa,YAAY/6D,GACjC,CAAC,GAAI,IAAI2mB,SAAS3mB,KAAIA,GAAK,IACzB,CACL+nD,EAAGA,EACHtnB,EAAGA,EACHzgC,EAAGA,IApmEW1O,KAwmElB0pE,gCAAkC,SAACpjC,EAAOimB,EAAS1hB,EAAmBmiB,GACpE,OAAO8B,GAAc6a,aACnB,CAAC,UAAU,UAAU,UAAU,SAC/B,CAACrjC,EAAO0mB,EAAiBT,EAASqd,mBAAS/+B,MA3mE7B7qC,KA+mElB4pC,oBA/mEkB,eAAAigC,EAAAjqE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+mEI,SAAA8oE,EAAO5f,GAAP,IAAA6f,EAAAC,EAAA,OAAAjpE,EAAAtB,EAAA0B,KAAA,SAAA8oE,GAAA,cAAAA,EAAA5oE,KAAA4oE,EAAA3oE,MAAA,cACdyoE,EAAe1pE,EAAKO,gBAAgB,CAAC,UAAU,YAAY,aAD7CqpE,EAAA3oE,KAAA,EAEFjB,EAAK+mB,YAAL,GAAAxiB,OAAoBmlE,EAAaxqB,UAAUI,OAA3C,iBAAA/6C,OAAiEslD,EAAjE,WAAAtlD,OAAsFmlE,EAAa91B,OAAOgM,OAAQ,KAAK,CACvIiqB,QAAQ,CACNC,YAAYJ,EAAa91B,OAAO4L,UAJhB,YAEdmqB,EAFcC,EAAAxoE,QAQTuoE,EAAI19D,KARK,CAAA29D,EAAA3oE,KAAA,eAAA2oE,EAAAroE,OAAA,SASXooE,EAAI19D,MATO,cAAA29D,EAAAroE,OAAA,SAYb,MAZa,wBAAAqoE,EAAApoE,SAAAioE,EAAA9pE,SA/mEJ,gBAAAoqE,GAAA,OAAAP,EAAAtnE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8nElBqqE,iBA9nEkB,eAAAC,EAAA1qE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8nEC,SAAAupE,EAAOla,EAAama,EAAWC,EAAankC,EAAMrkC,EAASwmE,GAA3D,IAAAiC,EAAAzsB,EAAApT,EAAAqf,EAAAqC,EAAAoe,EAAArB,EAAAsB,EAAAnU,EAAAtnB,EAAAzgC,EAAA,OAAA3N,EAAAtB,EAAA0B,KAAA,SAAA0pE,GAAA,cAAAA,EAAAxpE,KAAAwpE,EAAAvpE,MAAA,UACX28C,EAAW59C,EAAKklB,kBAAkB8qC,GADvB,CAAAwa,EAAAvpE,KAAA,eAIfW,EAAS,KAAK,sBAJC4oE,EAAAjpE,OAAA,UAKR,GALQ,UAQZq8C,EAAS9c,QAAQqpC,GARL,CAAAK,EAAAvpE,KAAA,eASfW,EAAS,KAAK,oBATC4oE,EAAAjpE,OAAA,UAUR,GAVQ,cAaXipC,GAAoB6/B,EAAAzsB,EAAS9c,SAAQqpC,GAAjBjoE,MAAAmoE,EAAA9qE,OAAA0hC,EAAA,EAAA1hC,CAAgC6qE,IAAct/B,YAbvD0/B,EAAAxpE,KAAA,EAgBT6oD,EAAc7pD,EAAKJ,MAAMuB,QACzB+qD,EAAUlsD,EAAKO,gBAAgB,CAAC,UAAU,oBAC1C+pE,EAAgBtqE,EAAKqpE,gCAAgCpjC,EAAOimB,EAAS1hB,EAAmBoT,EAAS6sB,UAlBxFD,EAAAvpE,KAAA,GAoBSjB,EAAKJ,MAAM+iC,KAAKC,IAAI8nC,SAASC,KACnD,KAAOL,EAAcv0D,SAAS,OAC9B8zC,GAtBa,eAoBTof,EApBSuB,EAAAppE,KAAAmpE,EAyBKvqE,EAAKgpE,0BAA0BC,GAA3C7S,EAzBOmU,EAyBPnU,EAAGtnB,EAzBIy7B,EAyBJz7B,EAAGzgC,EAzBCk8D,EAyBDl8D,EAEdrO,EAAK+B,0BAA0BiuD,EAAcma,EAAYC,EAAa7lE,OAAO,CAAC0hC,EAAOmwB,EAAGtnB,EAAGzgC,IAAKzM,EAAUwmE,GA3B3FoC,EAAAjpE,OAAA,UA6BR,GA7BQ,eAAAipE,EAAAxpE,KAAA,GAAAwpE,EAAAzlE,GAAAylE,EAAA,SA+Bfza,QAAQjuB,MAAR0oC,EAAAzlE,IACAnD,EAAS,KAAD4oE,EAAAzlE,IAhCOylE,EAAAjpE,OAAA,UAiCR,GAjCQ,yBAAAipE,EAAAhpE,SAAA0oE,EAAAvqE,KAAA,aA9nED,gBAAAirE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAA/nE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAmqElBorC,+BAnqEkB,eAAAmgC,EAAA3rE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmqEe,SAAAwqE,EAAOnb,EAAaxlB,EAAkB5oC,EAASwmE,GAA/C,IAAAxqB,EAAAiM,EAAA5jB,EAAAimB,EAAAoe,EAAArB,EAAAmC,EAAAhV,EAAAtnB,EAAAzgC,EAAA,OAAA3N,EAAAtB,EAAA0B,KAAA,SAAAuqE,GAAA,cAAAA,EAAArqE,KAAAqqE,EAAApqE,MAAA,UACzB28C,EAAW59C,EAAKklB,kBAAkB8qC,GADT,CAAAqb,EAAApqE,KAAA,eAI7BW,EAAS,KAAK,sBAJeypE,EAAA9pE,OAAA,UAKtB,GALsB,cAAA8pE,EAAArqE,KAAA,EAUvB6oD,EAAc7pD,EAAKJ,MAAMuB,QAVFkqE,EAAApqE,KAAA,EAWT28C,EAAS9c,QAAQwqC,SAASzhB,GAAa5e,OAX9B,cAWvBhF,EAXuBolC,EAAAjqE,KAYvB8qD,EAAUlsD,EAAKO,gBAAgB,CAAC,UAAU,oBAC1C+pE,EAAgBtqE,EAAKqpE,gCAAgCpjC,EAAOimB,EAAS1hB,EAAmBoT,EAAS6sB,UAb1EY,EAAApqE,KAAA,GAeLjB,EAAKJ,MAAM+iC,KAAKC,IAAI8nC,SAASC,KACnD,KAAOL,EAAcv0D,SAAS,OAC9B8zC,GAjB2B,eAevBof,EAfuBoC,EAAAjqE,KAAAgqE,EAoBTprE,EAAKgpE,0BAA0BC,GAA3C7S,EApBqBgV,EAoBrBhV,EAAGtnB,EApBkBs8B,EAoBlBt8B,EAAGzgC,EApBe+8D,EAoBf/8D,EAEdrO,EAAK+B,0BAA0BiuD,EAAc,yBAA0B,CAACnG,EAAarf,EAAmB4rB,EAAGtnB,EAAGzgC,GAAIzM,EAAUwmE,GAtB/FiD,EAAA9pE,OAAA,UAwBtB,GAxBsB,eAAA8pE,EAAArqE,KAAA,GAAAqqE,EAAAtmE,GAAAsmE,EAAA,SA0B7Btb,QAAQjuB,MAARupC,EAAAtmE,IACAnD,EAAS,KAADypE,EAAAtmE,IA3BqBsmE,EAAA9pE,OAAA,UA4BtB,GA5BsB,yBAAA8pE,EAAA7pE,SAAA2pE,EAAAxrE,KAAA,aAnqEf,gBAAA4rE,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAhpE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAmsElBurC,WAnsEkB,eAAAygC,EAAApsE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmsEL,SAAAirE,EAAOC,EAAkBC,EAAQC,EAAqB5B,EAAYC,EAAcnkC,EAAOwE,EAAQ7oC,EAAUwmE,GAAzG,IAAA4D,EAAAC,EAAArX,EAAA1I,EAAAggB,EAAAC,EAAAC,EAAAC,EAAApgE,EAAA,OAAAvL,EAAAtB,EAAA0B,KAAA,SAAAwrE,GAAA,cAAAA,EAAAtrE,KAAAsrE,EAAArrE,MAAA,UAEL+qE,EAAehsE,EAAKklB,kBAAkB2mD,GACtCI,EAAkBjsE,EAAKklB,kBAAkB6mD,GAE1CC,GAAiBC,EALX,CAAAK,EAAArrE,KAAA,eAMTW,EAAS,KAAK,sBANL0qE,EAAA/qE,OAAA,UAOF,GAPE,cAAA+qE,EAAArrE,KAAA,EAUUjB,EAAKJ,MAAM+iC,KAAKC,IAAI2pC,IAAIC,QAVlC,OAUL5X,EAVK0X,EAAAlrE,KAWL8qD,EAAUpgD,SAAS8oD,GAEnBsX,EAAS,CACb,CAAEx/D,KAAM,OAAQvD,KAAM,UACtB,CAAEuD,KAAM,UAAWvD,KAAM,UACzB,CAAEuD,KAAM,UAAWvD,KAAM,WACzB,CAAEuD,KAAM,oBAAqBvD,KAAM,YAG/BgjE,EAAS,CACb,CAAEz/D,KAAM,SAAUvD,KAAM,WACxB,CAAEuD,KAAM,UAAWvD,KAAM,WACzB,CAAEuD,KAAM,QAASvD,KAAM,WACvB,CAAEuD,KAAM,SAAUvD,KAAM,WACxB,CAAEuD,KAAM,UAAWvD,KAAM,SAGrBijE,EAAUH,EAAgBxB,SAC1B4B,EAAoBL,EAAavB,SAkBjCx+D,EAAO,CACXwgE,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAtBiB,CACjBhgB,UACAvc,QAAS,IACT08B,oBACA3/D,KAAMm/D,GAmBNxvD,QAfc,CACdyvD,SACAM,UACAnmC,QACAwE,SACAjB,SAAS,IAaXxpC,EAAKJ,MAAM+iC,KAAKkqC,gBAAgBnwE,KAAK,CACnCowE,QAAS,MACTr8D,GAAIsI,KAAKg0D,MAAMh3D,WAAWi3D,UAAU,GACpCjsC,OAAQ,oBACR6S,OAAQ,CAACk4B,EAAQ7/D,GACjBwD,KAAMq8D,GACL,SAAChqC,EAAOmrC,GACP,GAAInrC,GAAUmrC,GAAYA,EAASnrC,MACjC,OAAOlgC,EAAS,KAAKkgC,GAChB,GAAImrC,GAAYA,EAASrY,OAAQ,CACtC,IAAMuT,EAAmBnoE,EAAKgpE,0BAA0BiE,EAASrY,QACzDwB,EAAY+R,EAAZ/R,EAAGtnB,EAASq5B,EAATr5B,EAAGzgC,EAAM85D,EAAN95D,EAEdrO,EAAK+B,0BAA0BgqE,EAAqB5B,EAAYC,EAAa7lE,OAAO,CAAC0hC,EAAO53B,EAAG+nD,EAAGtnB,IAAKltC,EAAUwmE,MAtE5G,yBAAAkE,EAAA9qE,SAAAoqE,EAAAjsE,SAnsEK,gBAAAutE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA/B,EAAAzpE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8wElBguE,aA9wEkB,eAAAC,EAAAruE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8wEH,SAAAktE,EAAO7d,EAAarD,EAAgBniB,EAAkB5oC,EAASwmE,GAA/D,IAAAsE,EAAAoB,EAAA5hB,EAAA6hB,EAAAnwB,EAAAiM,EAAA5jB,EAAA5pB,EAAA2xD,EAAA,OAAAttE,EAAAtB,EAAA0B,KAAA,SAAAmtE,GAAA,cAAAA,EAAAjtE,KAAAitE,EAAAhtE,MAAA,cAEPyrE,EAAe,CACnB,CAAEhgE,KAAM,OAAQvD,KAAM,UACtB,CAAEuD,KAAM,UAAWvD,KAAM,UACzB,CAAEuD,KAAM,UAAWvD,KAAM,WACzB,CAAEuD,KAAM,oBAAqBvD,KAAM,YAG/B2kE,EAAkB,CACtB,CAAEphE,KAAM,QAASvD,KAAM,WACvB,CAAEuD,KAAM,OAAQvD,KAAM,WACtB,CAAEuD,KAAM,oBAAqBvD,KAAM,UAZxB8kE,EAAAhtE,KAAA,EAeSjB,EAAKJ,MAAM+iC,KAAKC,IAAIsrC,aAf7B,UAePhiB,EAfO+hB,EAAA7sE,KAiBP2sE,EAAa,CACjB7hB,UACAvc,QAAS,IACTjjC,KAAMsjD,EACNqc,kBAAmB1f,GAGf/O,EAAW59C,EAAKklB,kBAAkB8qC,GAxB3B,CAAAie,EAAAhtE,KAAA,gBA2BXW,EAAS,KAAK,sBA3BHqsE,EAAA1sE,OAAA,UA4BJ,GA5BI,eA+BTsoD,EAAc7pD,EAAKJ,MAAMuB,QA/BhB8sE,EAAAhtE,KAAA,GAgCK28C,EAAS9c,QAAQwqC,SAASzhB,GAAa5e,OAhC5C,QAgCThF,EAhCSgoC,EAAA7sE,MAiCTib,EAAU,IACN4pB,MAAQA,EAChB5pB,EAAQ5M,KAAOo6C,EACfxtC,EAAQmuB,kBAAoBA,EAEtBwjC,EAAaluD,KAAKC,UAAU,CAChC0sD,MAAO,CACLC,eACAoB,mBAEF5B,OAAQ6B,EACRnB,YAAa,kBACbvwD,YAKFrc,EAAKJ,MAAM+iC,KAAKkqC,gBAAgBnwE,KAC9B,CACEowE,QAAS,MACTr8D,GAAI,aACJhB,KAAMo6C,EACN9oB,OAAQ,uBACR6S,OAAQ,CAACiW,EAAamkB,IAExB,SAAClsC,EAAOmrC,GACN,GAAInrC,GAAUmrC,GAAYA,EAASnrC,MACjC,OAAOlgC,EAAS,KAAKkgC,GAChB,GAAImrC,GAAYA,EAASrY,OAAQ,CACtC,IAAMuT,EAAmBnoE,EAAKgpE,0BAA0BiE,EAASrY,QACzDwB,EAAY+R,EAAZ/R,EAAGtnB,EAASq5B,EAATr5B,EAAGzgC,EAAM85D,EAAN95D,EAEdrO,EAAK+B,0BAA0BiuD,EAAc,yBAA0B,CAACnG,EAAarf,EAAmB4rB,EAAGtnB,EAAGzgC,GAAIzM,EAAUwmE,MAjErH,yBAAA6F,EAAAzsE,SAAAqsE,EAAAluE,SA9wEG,gBAAAwuE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAX,EAAA1rE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAq1ElB8oC,mBAr1EkB,eAAA+lC,EAAAjvE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq1EG,SAAA8tE,EAAOze,EAAa0e,EAAaC,GAAjC,IAAAxgE,EAAAygE,EAAA,OAAAluE,EAAAtB,EAAA0B,KAAA,SAAA+tE,GAAA,cAAAA,EAAA7tE,KAAA6tE,EAAA5tE,MAAA,cACbkN,EAAQnO,EAAKJ,MAAM+iC,KAAKmsB,MAAMK,MAAM,IAAI,SAD3B0f,EAAA5tE,KAAA,EAEKjB,EAAK8uE,aAAa9e,EAAa0e,EAAaC,GAFjD,cAEbC,EAFaC,EAAAztE,KAAAytE,EAAAttE,OAAA,SAGZqtE,GAAa5uE,EAAKqB,MAAMutE,GAAWl4D,GAAG1W,EAAKqB,MAAM8M,EAAM4H,cAH3C,wBAAA84D,EAAArtE,SAAAitE,EAAA9uE,SAr1EH,gBAAAovE,EAAAC,EAAAC,GAAA,OAAAT,EAAAtsE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA01ElBmvE,aA11EkB,eAAAI,EAAA3vE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA01EH,SAAAwuE,EAAOnf,EAAa0e,EAAaC,GAAjC,OAAAjuE,EAAAtB,EAAA0B,KAAA,SAAAsuE,GAAA,cAAAA,EAAApuE,KAAAouE,EAAAnuE,MAAA,UACR+uD,GAAiB0e,GAAiBC,EAD1B,CAAAS,EAAAnuE,KAAA,eAAAmuE,EAAA7tE,OAAA,UAEJ,GAFI,cAIbvB,EAAK0iC,UAAU,eAAestB,EAAa0e,EAAaC,GAJ3CS,EAAAnuE,KAAA,EAKAjB,EAAK2C,oBAChBqtD,EAAc,YAAa,CAAC2e,EAAYD,IAN7B,cAAAU,EAAA7tE,OAAA,SAAA6tE,EAAAhuE,MAAA,wBAAAguE,EAAA5tE,SAAA2tE,EAAAxvE,SA11EG,gBAAA0vE,EAAAC,EAAAC,GAAA,OAAAL,EAAAhtE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAm2ElBoC,0BAA4B,SAACiuD,EAAama,EAAWv2B,EAAOhyC,EAASwmE,EAAiBoH,GACpFxvE,EAAKJ,MAAMmC,0BAA0BiuD,EAAcma,EAAYv2B,EAAQ,KAAM,SAAC53B,GACpD,oBAAbpa,GACTA,EAASoa,IAEV,SAACA,GAC8B,oBAArBosD,GACTA,EAAiBpsD,IAElB,KAAMwzD,IA52EO7vE,KA82ElBmqC,YAAc,SAACkmB,EAAazpD,EAAQ3E,EAASwmE,GAG3CpoE,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,UAAW,CAC5DzpD,EACAvG,EAAKJ,MAAM+iC,KAAKmsB,MAAM2gB,iBAAiB,OACvC,KAAK,SAACzzD,GACkB,oBAAbpa,GACTA,EAASoa,IAEV,SAACA,GAC8B,oBAArBosD,GACTA,EAAiBpsD,MA13ELrc,KA83ElBkW,eA93EkB,eAAA65D,EAAAnwE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA83ED,SAAAgvE,EAAOC,EAAMpsE,EAAMrD,EAAYgB,GAA/B,IAAA8Q,EAAA49D,EAAA1nE,EAAA+J,EAAA49D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn4D,EAAAo4D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAz9D,EAAAE,EAAAX,EAAAD,EAAAo+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzd,EAAA3lC,EAAAqjD,EAAAriB,EAAAzuD,EAAAqd,EAAAnX,EAAA6qE,EAAAC,EAAAC,EAAArnD,EAAAsnD,EAAAC,EAAAt5C,EAAAu5C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx6D,GAAAy6D,GAAAj6C,GAAAk6C,GAAA3tE,GAAA6R,GAAAQ,GAAAu7D,GAAAC,GAAAC,GAAAx+D,GAAAZ,GAAAD,GAAAs/D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA57D,GAAA67D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAx8D,GAAAy8D,GAAAC,GAAA5wE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAkyE,GAAA,cAAAA,EAAAhyE,KAAAgyE,EAAA/xE,MAAA,OAAuCgR,IAAvC8gE,GAAAtwE,OAAA,QAAAC,IAAAqwE,GAAA,KAAAA,GAAA,GAAyDlD,EAAzDkD,GAAAtwE,OAAA,QAAAC,IAAAqwE,GAAA,IAAAA,GAAA,GAEX5qE,EAAS,KACP+J,EAAYlS,EAAKO,gBAAgB,CAAC,cAGlCuvE,EAAe9vE,EAAKO,gBAAgB,CAAC,aAAaP,EAAKJ,MAAMoH,mBAC/DiL,GAAgB69D,GAAqD,qBAA9BA,EAAa79D,eACtDA,EAAe69D,EAAa79D,cAI1B89D,EAA0B,KAC1B/vE,EAAKJ,MAAMoH,kBAAoBhH,EAAKJ,MAAMwN,eACtC4iE,EAAiBhwE,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,kBAAkBhH,EAAKJ,MAAMwN,mBAE5F2iE,EAA0B,IACFC,EAAexsE,OAASwsE,GAExCzwE,OAAO4H,KAAK+K,GAAW8iB,SAASxxB,MAC1CusE,EAA0B,IACFvsE,GAASrD,GArBpB6yE,EAAAjuE,GAwBP6qE,EAxBOoD,EAAA/xE,KAyBR,oBAzBQ+xE,EAAAjuE,GAAA,GA4CR,sBA5CQiuE,EAAAjuE,GAAA,GAuDR,aAvDQiuE,EAAAjuE,GAAA,GA0DR,qBA1DQiuE,EAAAjuE,GAAA,GA6DR,2BA7DQiuE,EAAAjuE,GAAA,GAiER,kCAjEQiuE,EAAAjuE,GAAA,GAyFR,iBAzFQiuE,EAAAjuE,GAAA,GAmGR,qBAnGQiuE,EAAAjuE,GAAA,GA0GR,SA1GQiuE,EAAAjuE,GAAA,GAiHR,0BAjHQiuE,EAAAjuE,GAAA,GAoIR,qBApIQiuE,EAAAjuE,GAAA,GAoKR,sBApKQiuE,EAAAjuE,GAAA,IAqLR,QArLQiuE,EAAAjuE,GAAA,IAsMR,QAtMQiuE,EAAAjuE,GAAA,IAsNR,WAtNQiuE,EAAAjuE,GAAA,IAgOR,qBAhOQiuE,EAAAjuE,GAAA,IAsOR,eAtOQiuE,EAAAjuE,GAAA,IA6OR,eA7OQiuE,EAAAjuE,GAAA,IA6PR,QA7PQiuE,EAAAjuE,GAAA,IAgQR,iBAhQQiuE,EAAAjuE,GAAA,IA8QR,qBA9QQiuE,EAAAjuE,GAAA,IAoRR,6BApRQiuE,EAAAjuE,GAAA,IAySR,sBAzSQiuE,EAAAjuE,GAAA,IAuUR,kBAvUQiuE,EAAAjuE,GAAA,IAuVR,aAvVQiuE,EAAAjuE,GAAA,6BAAAiuE,EAAA/xE,KAAA,GA8BDwD,QAAQC,IAAI,CACpB1E,EAAKiyD,sBACLjyD,EAAK+yD,oBAAoB,GAAG5xD,GAC5BnB,EAAKizE,qBAAqB9xE,GAAQ,KAjCzB,eAAA8uE,EAAA+C,EAAA5xE,KAAA8uE,EAAA3wE,OAAAsF,EAAA,EAAAtF,CAAA0wE,EAAA,GA2BTl4D,EA3BSm4D,EAAA,GA4BTC,EA5BSD,EAAA,GA6BTE,EA7BSF,EAAA,GAoCPC,GAAoBC,IACtBjoE,EAASnI,EAAKqB,MAAM+uE,GAAmBjrE,MAAMgrE,GACzCp4D,IACF5P,EAASA,EAAOkT,MAAMlT,EAAOhD,MAAM4S,MAvC5Bi7D,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GA6C2CwD,QAAQC,IAAI,CAChE1E,EAAK6V,eAAe,kBAAkBrS,EAAMrD,EAAYgB,GACxDnB,EAAK6V,eAAe,yBAAyBrS,EAAMrD,EAAYgB,KA/CtD,eAAAkvE,EAAA2C,EAAA5xE,KAAAkvE,EAAA/wE,OAAAsF,EAAA,EAAAtF,CAAA8wE,EAAA,GA6CNE,EA7CMD,EAAA,GA6CWE,EA7CXF,EAAA,GAkDPC,GAAoBC,GAA0BD,EAAiB75D,GAAG,IAAM85D,EAAuB95D,GAAG,KACpGvO,EAASqoE,EAAuBprE,IAAImrE,GAAkBl1D,MAAM,GAAGlW,MAAM,MAnD5D6tE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GAwDIjB,EAAKyW,cAxDT,eAwDXtO,EAxDW6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GA2DIjB,EAAKiyD,sBA3DT,eA2DX9pD,EA3DW6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GA8DIjB,EAAKkzE,6BAA6B/xE,GA9DtC,eA8DXgH,EA9DW6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GAsEDwD,QAAQC,IAAI,CACpB1E,EAAK6V,eAAe,WAAWrS,EAAMrD,EAAYgB,GACjDnB,EAAK6V,eAAe,kBAAkBrS,EAAMrD,EAAYgB,GACxDnB,EAAK6V,eAAe,yBAAyBrS,EAAMrD,EAAYgB,KAzEtD,eAAAsvE,EAAAuC,EAAA5xE,KAAAsvE,EAAAnxE,OAAAsF,EAAA,EAAAtF,CAAAkxE,EAAA,GAmETx9D,EAnESy9D,EAAA,GAoETv9D,EApESu9D,EAAA,GAqETl+D,EArESk+D,EAAA,GA4EPn+D,EAA4B,KAE5BC,GAA+BS,GAAYE,IACvCw9D,EAAiBx9D,EAAgBhO,MAAM8N,EAAS7N,IAAI,MAC1DmN,EAA4BC,EAA4B3K,KAAK8oE,IAI/DxoE,EAAS,CACPoK,4BACAC,+BAtFSwgE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GA0FkCwD,QAAQC,IAAI,CACvD1E,EAAK6V,eAAe,aAAarS,EAAMrD,EAAYgB,GAAQ,GAC3DnB,EAAK6V,eAAe,oBAAoBrS,EAAMrD,EAAYgB,GAAQ,KA5FzD,eAAAyvE,EAAAoC,EAAA5xE,KAAAyvE,EAAAtxE,OAAAsF,EAAA,EAAAtF,CAAAqxE,EAAA,GA0FNE,EA1FMD,EAAA,GA0FME,EA1FNF,EAAA,GA+FPC,GAAeC,GAAsBD,EAAYp6D,GAAG,KACtDvO,EAAS4oE,EAAmB3rE,IAAI0rE,GAAaz1D,MAAM,GAAGlW,MAAM,MAhGnD6tE,EAAAzxE,OAAA,4BAAAyxE,EAAA/xE,KAAA,GAoGoBjB,EAAK6V,eAAe,mBAAmBrS,EAAMrD,EAAYgB,GApG7E,eAoGLmyD,EApGK0f,EAAA5xE,QAsGHusB,EAAgB7hB,UAAS,IAAIiN,MAAOI,UAAU,KACpDhR,GAAUwlB,EAAc2lC,GAAkB,OAvGjC0f,EAAAzxE,OAAA,yBA2GPhC,OAAO4H,KAAK+K,GAAW8iB,SAASxxB,GA3GzB,CAAAwvE,EAAA/xE,KAAA,gBAAA+xE,EAAA/xE,KAAA,GA4GMjB,EAAKmzE,gBAAgB3vE,EAAOusE,GA5GlC,QA4GT5nE,EA5GS6qE,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,wBAAA+xE,EAAA/xE,KAAA,GA8GMjB,EAAKozE,aAAajzE,EAAY8R,GA9GpC,QA8GT9J,EA9GS6qE,EAAA5xE,KAAA,eAAA4xE,EAAAzxE,OAAA,qBAAAyxE,EAAA96D,GAkHH1U,EAlHGwvE,EAAA/xE,KAmHJ,SAnHI+xE,EAAA96D,GAAA,GAsHJ,SAtHI86D,EAAA96D,GAAA,2BAAA86D,EAAA/xE,KAAA,GAoHQjB,EAAKqzE,wBAAwBlyE,EAAQ4uE,GApH7C,eAoHP5nE,EApHO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,2BAuHDotD,EAAe3uD,EAAKszE,kBAvHnBN,EAAA/xE,KAAA,GAwHQ0tD,EAAaloD,oBAAoBtF,EAAQ4uE,GAxHjD,eAwHP5nE,EAxHO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,2BAAAyxE,EAAAzxE,OAAA,2BA6HP4G,IAAWnI,EAAKqB,MAAM8G,GAAQ7G,UAChC6G,EAASnI,EAAKqB,MAAM8G,GAAQ/C,IAAI,SAE9B+C,EAASnI,EAAK+H,qBAAqBI,EAAOhI,EAAY6H,wBAhI/CgrE,EAAAzxE,OAAA,4BAqILotD,EAAe3uD,EAAKszE,kBACpBpzE,EAAYF,EAAKO,gBAAgB,CAAC,aAAa,QAAQ,cACvDgd,EAAiBvd,EAAKO,gBAAgB,CAAC,YAAYL,IAvI9C8yE,EAAA/xE,KAAA,GAwII0tD,EAAanpD,SAASrF,EAAYqE,KAAK+B,SAxI3C,aAwIX4B,EAxIW6qE,EAAA5xE,MAAA,CAAA4xE,EAAA/xE,KAAA,UA4ITkH,EAASnI,EAAKmD,iBAAiBgF,EAAOoV,EAAena,UAE/CgD,EAAgBpG,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBA9IxDyyE,EAAAzY,GA+IDh9C,EAAevV,sBA/IdgrE,EAAA/xE,KAgJF,QAhJE+xE,EAAAzY,GAAA,IAoJF,SApJEyY,EAAAzY,GAAA,IAwJF,UAxJEyY,EAAAzY,GAAA,IA4JF,SA5JEyY,EAAAzY,GAAA,8BAiJC0W,EAAe7qE,EAAchB,IAAI,YACvC+C,EAASA,EAAOhD,MAAM8rE,GAlJjB+B,EAAAzxE,OAAA,6BAqJC2vE,EAAgB9qE,EAAchB,IAAI,SACxC+C,EAASA,EAAOhD,MAAM+rE,GAtJjB8B,EAAAzxE,OAAA,6BAyJC4vE,EAAiB/qE,EAAchB,IAAI,IACzC+C,EAASA,EAAOhD,MAAMgsE,GA1JjB6B,EAAAzxE,OAAA,6BA6JL4G,EAASA,EAAOhD,MAAMiB,GA7JjB4sE,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,sBAqKLuoB,EAAsBimD,EAAwB/vE,EAAKJ,MAAMwN,eArKpD4lE,EAAAO,GAsKH/vE,EAtKGwvE,EAAA/xE,KAuKJ,SAvKI+xE,EAAAO,GAAA,IA0KJ,SA1KIP,EAAAO,GAAA,8BAAAP,EAAA/xE,KAAA,IAwKQjB,EAAKwzE,oBAAoB1pD,GAxKjC,gBAwKP3hB,EAxKO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,6BA2KDotD,EAAe3uD,EAAKszE,kBA3KnBN,EAAA/xE,KAAA,IA4KQ0tD,EAAanpD,SAASskB,EAAoBtlB,KAAK+B,SA5KvD,gBA4KP4B,EA5KO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,6BAiLP4G,IAAWnI,EAAKqB,MAAM8G,GAAQ7G,UAChC6G,EAASnI,EAAKqB,MAAM8G,GAAQ/C,IAAI,OAlLvB4tE,EAAAzxE,OAAA,sBAAAyxE,EAAAS,GAsLHjwE,EAtLGwvE,EAAA/xE,KAuLJ,SAvLI+xE,EAAAS,GAAA,IA0LJ,SA1LIT,EAAAS,GAAA,8BAAAT,EAAA/xE,KAAA,IAwLQjB,EAAK0zE,cAAc3D,GAxL3B,gBAwLP5nE,EAxLO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,6BA2LDotD,EAAe3uD,EAAKszE,kBA3LnBN,EAAA/xE,KAAA,IA4LQ0tD,EAAa1mD,UAAU8nE,GA5L/B,gBA4LP5nE,EA5LO6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IA+LiBjB,EAAKo4B,aAAaj4B,GAAY,EAAM8R,GA/LrD,gBA+LD8lB,EA/LCi7C,EAAA5xE,OAgM+B,OAArB22B,EAAUM,SACzBlwB,EAAS4vB,EAAUM,QAjMd26C,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IAuMajB,EAAKo4B,aAAaj4B,GAAY,EAAM8R,GAvMjD,cAuMLq/D,EAvMK0B,EAAA5xE,OA2M2B,OAArBkwE,EAAUh5C,OA3MhB,CAAA06C,EAAA/xE,KAAA,aA4MTkH,EAASmpE,EAAUh5C,QAEfu3C,EA9MK,CAAAmD,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IA+MgBjB,EAAKyW,cA/MrB,UA+MD86D,EA/MCyB,EAAA5xE,QAiNL+G,EAASA,EAAON,KAAK0pE,IAjNhB,gBAAAyB,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IAuNmCwD,QAAQC,IAAI,CACxD1E,EAAK6V,eAAe,mBAAmBrS,EAAMrD,EAAYgB,GACzDnB,EAAK6V,eAAe,eAAerS,EAAMrD,EAAYgB,KAzN5C,gBAAAqwE,EAAAwB,EAAA5xE,KAAAqwE,EAAAlyE,OAAAsF,EAAA,EAAAtF,CAAAiyE,EAAA,GAuNJE,EAvNID,EAAA,GAuNav6D,GAvNbu6D,EAAA,GA4NPC,GAAoBx6D,KACtB/O,EAAS+O,GAAa/R,MAAM,KAAKC,IAAIssE,IA7N5BsB,EAAAzxE,OAAA,0BAiOeJ,EAjOf,CAAA6xE,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IAiO+BjB,EAAKozD,oBAAoB,CAAC5vD,GAAOrC,GAjOhE,SAAA6xE,EAAAW,GAAAX,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,mBAAA+xE,EAAAW,IAiO2E,EAjO3E,gBAiOLhC,GAjOKqB,EAAAW,KAkOchC,GAAkBnuE,KACzC2E,EAASwpE,GAAkBnuE,IAnOlBwvE,EAAAzxE,OAAA,0BAwOSJ,EAxOT,CAAA6xE,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IAwOyBjB,EAAKy3B,cAAc,CAACj0B,GAAOrC,GAxOpD,SAAA6xE,EAAAY,GAAAZ,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,mBAAA+xE,EAAAY,IAwO+D,EAxO/D,gBAwOLl8C,GAxOKs7C,EAAAY,KAyOQl8C,GAAYl0B,KAC7B2E,EAASuvB,GAAYl0B,IA1OZwvE,EAAAzxE,OAAA,0BA8OPhC,OAAO4H,KAAK+K,GAAW8iB,SAASxxB,GA9OzB,CAAAwvE,EAAA/xE,KAAA,iBA+OHsc,GAAiBrL,EAAU1O,GAC3BS,GAAiBjE,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAhPrDyyE,EAAAhyE,KAAA,IAAAgyE,EAAA/xE,KAAA,IAkPQjB,EAAK8E,yBAAyBb,GAAesZ,IAlPrD,SAkPPpV,EAlPO6qE,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,mBAAA+xE,EAAAhyE,KAAA,IAAAgyE,EAAAa,GAAAb,EAAA,oBAsPJ7qE,IAAUnI,EAAKqB,MAAM8G,GAAQ7G,UAChC6G,EAAS,KAvPF6qE,EAAA/xE,KAAA,0BAAA+xE,EAAA/xE,KAAA,IA0PMjB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAO,cA1PvD,SA0PT2E,EA1PS6qE,EAAA5xE,KAAA,gBAAA4xE,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IA8PIjB,EAAK8zE,iBAAiB3zE,EAAYgB,GA9PtC,gBA8PXgH,EA9PW6qE,EAAA5xE,KAAA4xE,EAAAzxE,OAAA,0BAiQPhC,OAAO4H,KAAK+K,GAAW8iB,SAASxxB,GAjQzB,CAAAwvE,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IAkQMjB,EAAKkB,gBAAgBsC,EAAMrC,GAlQjC,UAkQTgH,EAlQS6qE,EAAA5xE,QAmQM+G,EAAO7G,UACpB6G,EAAS,KApQF6qE,EAAA/xE,KAAA,uBAuQUE,EAvQV,CAAA6xE,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IAuQ0BjB,EAAKkB,gBAAgBf,EAAYqD,MAAMrC,GAvQjE,SAAA6xE,EAAAe,GAAAf,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,mBAAA+xE,EAAAe,IAuQ4E,EAvQ5E,UAuQLj+D,GAvQKk9D,EAAAe,MAwQYj+D,GAAaxU,UAChCwU,GAAe,KAEjB3N,EAAS2N,GA3QA,gBAAAk9D,EAAAzxE,OAAA,0BA+QcJ,EA/Qd,CAAA6xE,EAAA/xE,KAAA,iBAAA+xE,EAAA/xE,KAAA,IA+Q8BjB,EAAKkB,gBAAgBf,EAAYqE,KAAKhB,MAAMrC,GA/Q1E,SAAA6xE,EAAAgB,GAAAhB,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,mBAAA+xE,EAAAgB,IA+QqF,EA/QrF,gBA+QL19D,GA/QK08D,EAAAgB,MAiRT7rE,EAASmO,IAjRA08D,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IAqRgDwD,QAAQC,IAAI,CACrE1E,EAAK6V,eAAe,MAAMrS,EAAMrD,EAAYgB,GAAQ,GACpDnB,EAAK6V,eAAe,aAAarS,EAAMrD,EAAYgB,GAAQ,GAC3DnB,EAAK6V,eAAe,oBAAoBrS,EAAMrD,EAAYgB,GAAQ,KAxRzD,gBAAA0wE,GAAAmB,EAAA5xE,KAAA0wE,GAAAvyE,OAAAsF,EAAA,EAAAtF,CAAAsyE,GAAA,GAqRNE,GArRMD,GAAA,GAqRIv+D,GArRJu+D,GAAA,GAqRgBn/D,GArRhBm/D,GAAA,GA2RPp/D,GAAuB,KAEvBC,IAA0Bo/D,IAAax+D,KACnCo9D,GAAiBp9D,GAAYpO,MAAM4sE,GAAU3sE,IAAI,MACvDsN,GAAuBC,GAAuB9K,KAAK8oE,KAKrDxoE,EAAS,CACPuK,wBACAC,2BAtSSqgE,EAAAzxE,OAAA,0BA0SPhC,OAAO4H,KAAK+K,GAAW8iB,SAASxxB,GA1SzB,CAAAwvE,EAAA/xE,KAAA,iBA2SHsc,GAAiBrL,EAAU1O,GA3SxBwvE,EAAA/xE,KAAA,IA4SMjB,EAAKi0E,uBAAuB12D,GAAepc,EAAQ4uE,GA5SzD,SA4ST5nE,EA5SS6qE,EAAA5xE,KAAA4xE,EAAA/xE,KAAA,0BAAA+xE,EAAA/xE,KAAA,IAkTCwD,QAAQC,IAAI,CACpB1E,EAAKkqB,kBAAkB/pB,GACvBH,EAAK6V,eAAe,mBAAmBrS,EAAMrD,EAAYgB,GACzD8Q,EAAejS,EAAK06B,6BAA6Bv5B,EAAQ4uE,EAAwBvsE,GAAS,OArTnF,SAAA0uE,GAAAc,EAAA5xE,KAAA+wE,GAAA5yE,OAAAsF,EAAA,EAAAtF,CAAA2yE,GAAA,GA+SPE,GA/SOD,GAAA,GAgTPE,GAhTOF,GAAA,GAiTPG,GAjTOH,GAAA,GAwTLE,IAAqBD,KACjBt8D,GAAeu8D,GAAkBltE,MAAMitE,IAEzCz7D,GAAoBb,GAEpBw8D,KAAqBtyE,EAAKqB,MAAMixE,IAAkBhxE,UACpDqV,GAAoBA,GAAkB9O,KAAK7H,EAAKqB,MAAMixE,MAGxDnqE,EAASwO,IAjUF,gBAAAq8D,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IAwU4CwD,QAAQC,IAAI,CACjE1E,EAAK6V,eAAe,kBAAkBrS,EAAMrD,EAAYgB,GACxDnB,EAAK6V,eAAe,yBAAyBrS,EAAMrD,EAAYgB,KA1UtD,gBAAAqxE,GAAAQ,EAAA5xE,KAAAqxE,GAAAlzE,OAAAsF,EAAA,EAAAtF,CAAAizE,GAAA,GAwUNE,GAxUMD,GAAA,GAwUWE,GAxUXF,GAAA,GA6UNC,KACHA,GAAmB1yE,EAAKqB,MAAM,IAG3BsxE,KACHA,GAA0B3yE,EAAKqB,MAAM,IAGvC8G,EAASwqE,GAAwBt3D,MAAMq3D,IArV5BM,EAAAzxE,OAAA,6BAAAyxE,EAAA/xE,KAAA,IAwViCwD,QAAQC,IAAI,CACtD1E,EAAK6V,eAAe,aAAarS,EAAMrD,EAAYgB,GAAQ,GAC3DnB,EAAK6V,eAAe,oBAAoBrS,EAAMrD,EAAYgB,GAAQ,KA1VzD,gBAAAyxE,GAAAI,EAAA5xE,KAAAyxE,GAAAtzE,OAAAsF,EAAA,EAAAtF,CAAAqzE,GAAA,GAwVNv8D,GAxVMw8D,GAAA,GAwVKC,GAxVLD,GAAA,GA6VNx8D,KACHA,GAAarW,EAAKqB,MAAM,IAErByxE,KACHA,GAAqB9yE,EAAKqB,MAAM,KAGlC8G,EAAS2qE,GAAmBz3D,MAAMhF,KAIvB2W,GAAGhtB,EAAKqB,MAAM,MACvB8G,EAASnI,EAAKqB,MAAM,IAzWX2xE,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,6BAAAyxE,EAAAzxE,OAAA,SAgXR4G,GAhXQ,0BAAA6qE,EAAAxxE,SAAAmuE,EAAAhwE,KAAA,gBA93EC,gBAAAu0E,EAAAC,EAAAC,EAAAC,GAAA,OAAA3E,EAAAxtE,MAAAvC,KAAAwC,YAAA,GAAAxC,KAgvFlBuqB,kBAhvFkB,eAAAoqD,EAAA/0E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAgvFE,SAAA4zE,EAAOp0E,GAAP,IAAAw1B,EAAAlc,EAAA9V,EAAAiC,EAAAxC,EAAAgP,EAAAN,EAAAsC,EAAA2iC,EAAAy9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhzE,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAs0E,GAAA,cAAAA,EAAAp0E,KAAAo0E,EAAAn0E,MAAA,UAAmB00B,EAAnBw/C,EAAA1yE,OAAA,QAAAC,IAAAyyE,EAAA,GAAAA,EAAA,GAA+B,SAAS17D,EAAxC07D,EAAA1yE,OAAA,QAAAC,IAAAyyE,EAAA,IAAAA,EAAA,GAEZxxE,EAFY,kBAAAY,OAEsBpE,EAAYqE,KAAKhB,MAFvC,KAAAe,OAEgDoxB,KAE1D/vB,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAL1B,CAAA8zE,EAAAn0E,KAAA,eAAAm0E,EAAA7zE,OAAA,SAMPvB,EAAKqB,MAAMuE,IANJ,cAUdxC,EAAWjD,EAAYiD,SAVTgyE,EAAAn0E,KAAA,EAYKjB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAM,aAAa,GAAG,GAAGmyB,GAZxE,WAYdvjB,EAZcgjE,EAAAh0E,QAeCqY,EAfD,CAAA27D,EAAAn0E,KAAA,gBAgBV6Q,EAAyC,SAAhC9R,EAAKJ,MAAMoH,iBACpBoN,EAAiBtI,SAAS2N,GAAY,KACtCs9B,EAAejrC,SAAS2N,GAAY,KAlB1B27D,EAAAn0E,KAAA,GAmBQjB,EAAKwZ,gBAAgBrZ,EAAYoG,QAAQuL,EAAOsC,EAAe2iC,GAAa,GAnBpF,QAmBVy9B,EAnBUY,EAAAh0E,KAqBZqzE,EAAc,CAChBxoE,KAAK,KACL8oE,SAAS,MAGPL,EAAa,CACfzoE,KAAK,KACL8oE,SAAS,MAGXP,EAAU3qE,QAAS,SAAAgE,GACjB,IAAMknE,EAAWr8D,KAAKiqD,IAAI72D,SAAS+B,EAAE4L,WAAW3N,SAAS2N,IACrD3N,SAAS+B,EAAE4L,WAAW3N,SAAS2N,MAAgBg7D,EAAYM,UAAYA,EAASN,EAAYM,YAC9FN,EAAYM,SAAWA,EACvBN,EAAYxoE,KAAO4B,GAGjB/B,SAAS+B,EAAE4L,WAAW3N,SAAS2N,KAAei7D,EAAWK,WAC3DL,EAAWK,SAAWA,EACtBL,EAAWzoE,KAAO4B,KAKlB4mE,EAAYxoE,MAAQyoE,EAAWzoE,OAC3B0oE,EAAmB30E,EAAKqB,MAAMozE,EAAYxoE,KAAKmP,WAC/Cw5D,EAAkB50E,EAAKqB,MAAMqzE,EAAWzoE,KAAKmP,WAC7Cy5D,EAAa70E,EAAKqB,MAAMozE,EAAYxoE,KAAKwN,WACzCq7D,EAAY90E,EAAKqB,MAAMqzE,EAAWzoE,KAAKwN,WACvCs7D,EAAWD,EAAUz5D,MAAMw5D,GAC3BG,EAAYJ,EAAgBv5D,MAAMs5D,GAClCM,EAAoBD,EAAU5vE,IAAI2vE,GAClCG,EAA0Bl1E,EAAKqB,MAAMoY,GAAW4B,MAAMw5D,GAC5DziE,EAAauiE,EAAiB9sE,KAAKotE,EAAkB9vE,MAAM+vE,KAtD7C,eA2Dd9iE,IAAepS,EAAKqB,MAAM+Q,GAAY9Q,UACxC8Q,EAAapS,EAAKmD,iBAAiBiP,EAAWhP,MAI3CgP,GAAcpS,EAAKqB,MAAM+Q,GAAY9Q,SAAWtB,EAAKqB,MAAM+Q,GAAY4a,GAAG,MAC7E5a,EAAapS,EAAKqB,MAAM,IAIxBrB,EAAKgG,8BAA8BrC,EAAcyO,GArEjCgjE,EAAA7zE,OAAA,SA0EX6Q,GA1EW,yBAAAgjE,EAAA5zE,SAAA+yE,EAAA50E,SAhvFF,gBAAA01E,GAAA,OAAAf,EAAApyE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4zFlB21E,gBAAkB,WAOhB,OANIt1E,EAAKJ,MAAM01E,iBAAyD,oBAA/Bt1E,EAAKJ,MAAM01E,iBAElDt1E,EAAKJ,MAAM01E,mBAIN,GAn0FS31E,KAw0FlB0F,cAAgB,SAACoY,EAAIxR,GAAiB,IAAZyqC,EAAYv0C,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAR,IAK5B,OAJInC,EAAKJ,MAAMyF,eAAqD,oBAA7BrF,EAAKJ,MAAMyF,eAEhDrF,EAAKJ,MAAMyF,cAAcoY,EAAIxR,EAAKyqC,GAE7BzqC,GA70FStM,KA+0FlBqG,8BAAgC,SAACyX,EAAIxR,GAAiB,IAAZyqC,EAAYv0C,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAR,IAI5C,OAHInC,EAAKJ,MAAMyF,eAAqD,oBAA7BrF,EAAKJ,MAAMyF,eAChDrF,EAAKJ,MAAMyF,cAAcoY,EAAIxR,EAAKyqC,GAAI,GAEjCzqC,GAn1FStM,KAq1FlBoG,8BAAgC,SAAC0X,GAA0B,IAAtByC,EAAsB/d,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAChD,OAAOnC,EAAKoZ,cAAcqE,EAAIyC,GAAa,IAt1F3BvgB,KAw1FlByZ,cAAgB,SAACqE,GAAgD,IAA5CyC,EAA4C/d,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA/B,KAAKozE,EAA0BpzE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAC3DyD,EAAa,KAcjB,OAZI5F,EAAKJ,MAAMgG,YAAc5F,EAAKJ,MAAMgG,WAAW6X,EAAIpN,eACrDzK,EAAa5F,EAAKJ,MAAMgG,WAAW6X,EAAIpN,eAE9BklE,IAGP3vE,GAFFA,EAAa5F,EAAKo4D,cAAc,gBACdxyD,EAAW6X,EAAIpN,eAClBzK,EAAW6X,EAAIpN,eAEf,MAIbzK,GAAcA,EAAWqG,QAAUrG,EAAW4vE,gBAAkB5vE,EAAW4vE,gBAAgB1pE,UAAS,IAAIiN,MAAOI,UAAU,MACpHvT,EAAWqG,KAEbiU,GA12FSvgB,KA42FlBiI,iBA52FkB,eAAA6tE,EAAAl2E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA42FC,SAAA+0E,EAAO/G,EAAWxuE,GAAlB,IAAAw1E,EAAAC,EAAAziB,EAAA0iB,EAAAC,EAAA,OAAAp1E,EAAAtB,EAAA0B,KAAA,SAAAi1E,GAAA,cAAAA,EAAA/0E,KAAA+0E,EAAA90E,MAAA,cAAA80E,EAAA90E,KAAA,EAIPwD,QAAQC,IAAI,CACpB1E,EAAKkB,gBAAgBf,EAAYqE,KAAKhB,MAAMmrE,GAAW,GACvD3uE,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAM,iBANjC,cAAAmyE,EAAAI,EAAA30E,KAAAw0E,EAAAr2E,OAAAsF,EAAA,EAAAtF,CAAAo2E,EAAA,GAEfxiB,EAFeyiB,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAY91E,EAAKqB,MAAM,GACvB8xD,GAAqB0iB,IACvBC,EAAY91E,EAAKqB,MAAM8xD,GAAmB/tD,IAAIpF,EAAKqB,MAAMw0E,KAX1CE,EAAAx0E,OAAA,SAcVu0E,GAdU,wBAAAC,EAAAv0E,SAAAk0E,EAAA/1E,SA52FD,gBAAAq2E,EAAAC,GAAA,OAAAR,EAAAvzE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA43FlBuB,gBA53FkB,eAAAg1E,EAAA32E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA43FA,SAAAw1E,EAAOnmB,EAAa2e,GAApB,IAAAyH,EAAAzyE,EAAA0yE,EAAAC,EAAApoD,EAAApY,EAAAygE,EAAAp0E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA01E,GAAA,cAAAA,EAAAx1E,KAAAw1E,EAAAv1E,MAAA,UAA+Bm1E,IAA/BG,EAAA9zE,OAAA,QAAAC,IAAA6zE,EAAA,KAAAA,EAAA,GACX5H,EADW,CAAA6H,EAAAv1E,KAAA,eAAAu1E,EAAAj1E,OAAA,UAEP,GAFO,cAMVoC,EANU,gBAAAY,OAMsByrD,EANtB,KAAAzrD,OAMsCoqE,EANtC,KAAApqE,OAMoD6xE,GANpDI,EAAAv1E,KAAA,EAiBNwD,QAAQC,IAAI,CACpB1E,EAAKmpC,iBAAiB6mB,GACtBhwD,EAAKopC,mBAAmB4mB,EAAa2e,KAnBvB,UAAA0H,EAAAG,EAAAp1E,KAAAk1E,EAAA/2E,OAAAsF,EAAA,EAAAtF,CAAA82E,EAAA,GAednoD,EAfcooD,EAAA,KAgBdxgE,EAhBcwgE,EAAA,KAAAE,EAAAv1E,KAAA,YAuBVm1E,IACFtgE,EAAe9V,EAAKmD,iBAAiB2S,EAAaoY,IAI/CluB,EAAKqB,MAAMyU,GAAcxU,QA5BhB,CAAAk1E,EAAAv1E,KAAA,gBAAAu1E,EAAAj1E,OAAA,SA6BLvB,EAAKgG,8BAA8BrC,EAAcmS,IA7B5C,QAAA0gE,EAAAv1E,KAAA,iBAgCdjB,EAAK2vD,eAAe,gCAAgCK,GAhCtC,eAAAwmB,EAAAj1E,OAAA,SAkCT,MAlCS,yBAAAi1E,EAAAh1E,SAAA20E,EAAAx2E,SA53FA,gBAAA82E,EAAAC,GAAA,OAAAR,EAAAh0E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAg6FlBg3E,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAASC,OAAsB,CACxCD,EAASC,SACTD,EAASE,kBAAkB,EAAG,OAC9B,IAAMnN,EAAMv+D,SAAS2rE,YAAY,QAEjC,OADAH,EAASE,kBAAkB,EAAG,GACvBnN,EAET,OAAO,GAx6FShqE,KA06FlBq3E,WAAa,SAACjzD,EAAInkB,EAAMgC,GACtB,IAAMwiB,EAAShZ,SAAS/L,cAAc,UACtC+kB,EAAO9S,IAAMyS,EAGTnkB,GACFL,OAAO4H,KAAKvH,GAAOiK,QAAQ,SAACotE,EAAK/mE,GAC/BkU,EAAO6yD,GAAQr3E,EAAMq3E,KAID,oBAAbr1E,IACLwiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5B5iB,MAIJwiB,EAAOK,OAAS7iB,GAIfwiB,EAAO3T,IAAOrF,SAASC,eAAe+Y,EAAO3T,KAChDrF,SAASq+C,KAAK7kC,YAAYR,IAn8FZzkB,KAs8FlBu3E,YAAc,SAAA9mB,GACZ,IACEtwC,KAAKykB,MAAM6rB,GACX,MAAOriD,GACP,OAAO,EAET,OAAO,GA58FSpO,KA88FlBw3E,aAAe,SAAC5wE,GACd,OAAmB,OAAZA,GAA4D,OAAzCA,EAAQwU,MAAM,wBA/8FxBpb,KAi9FlBypC,mBAj9FkB,eAAAguC,EAAA73E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi9FG,SAAA02E,EAAOrnB,EAAazpD,GAApB,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAAw2E,GAAA,cAAAA,EAAAt2E,KAAAs2E,EAAAr2E,MAAA,cAAAq2E,EAAAr2E,KAAA,EACNjB,EAAKu3E,mBAAmBvnB,EAAazpD,GAD/B,cAAA+wE,EAAA/1E,OAAA,SAAA+1E,EAAAl2E,MAAA,wBAAAk2E,EAAA91E,SAAA61E,EAAA13E,SAj9FH,gBAAA63E,EAAAC,GAAA,OAAAL,EAAAl1E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAo9FlB43E,mBAp9FkB,eAAAG,EAAAn4E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAo9FG,SAAAg3E,EAAO3nB,EAAazpD,GAApB,OAAA7F,EAAAtB,EAAA0B,KAAA,SAAA82E,GAAA,cAAAA,EAAA52E,KAAA42E,EAAA32E,MAAA,cACnBsF,EAAUA,GAAoBvG,EAAKJ,MAAMO,YAAYqE,KAAK+B,QADvCqxE,EAAA32E,KAAA,EAENjB,EAAK2C,oBAAoBqtD,EAAc,YAAa,CAACzpD,IAF/C,cAAAqxE,EAAAr2E,OAAA,SAAAq2E,EAAAx2E,MAAA,wBAAAw2E,EAAAp2E,SAAAm2E,EAAAh4E,SAp9FH,gBAAAk4E,EAAAC,GAAA,OAAAJ,EAAAx1E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAw9FlBo4E,QAx9FkB,eAAAC,EAAAz4E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAw9FR,SAAAs3E,EAAOjoB,GAAP,OAAAtvD,EAAAtB,EAAA0B,KAAA,SAAAo3E,GAAA,cAAAA,EAAAl3E,KAAAk3E,EAAAj3E,MAAA,cACR+uD,EAAeA,GAA8BhwD,EAAKJ,MAAMO,YAAYqE,KAAKhB,MADjE00E,EAAAj3E,KAAA,EAEKjB,EAAK2C,oBAAoBqtD,EAAc,WAF5C,cAAAkoB,EAAA32E,OAAA,SAAA22E,EAAA92E,MAAA,wBAAA82E,EAAA12E,SAAAy2E,EAAAt4E,SAx9FQ,gBAAAw4E,GAAA,OAAAH,EAAA91E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA49FlBy4E,gBA59FkB,eAAAC,EAAA94E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA49FA,SAAA23E,EAAOnO,GAAP,IAAAv2B,EAAA2kC,EAAAC,EAAAr2E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA23E,GAAA,cAAAA,EAAAz3E,KAAAy3E,EAAAx3E,MAAA,cAAmB2yC,EAAnB4kC,EAAA/1E,OAAA,QAAAC,IAAA81E,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAA/1E,OAAA,QAAAC,IAAA81E,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAAx3E,KAAA,EACHjB,EAAK2C,oBAAoB3C,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO2mE,EAAYv2B,EAAQ2kC,GAAY/Y,MAAM,SAAA38B,GAC7G7iC,EAAK2vD,eAAe,yBAA0B9sB,KAFhC,cAAA41C,EAAAl3E,OAAA,SAAAk3E,EAAAr3E,MAAA,wBAAAq3E,EAAAj3E,SAAA82E,EAAA34E,SA59FA,gBAAA+4E,GAAA,OAAAL,EAAAn2E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAi+FlBg5E,YAj+FkB,eAAAC,EAAAr5E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi+FJ,SAAAk4E,EAAO7oB,EAAcma,GAArB,IAAA2O,EAAAllC,EAAA2kC,EAAA36B,EAAAm7B,EAAA52E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAk4E,GAAA,cAAAA,EAAAh4E,KAAAg4E,EAAA/3E,MAAA,UAAiC2yC,EAAjCmlC,EAAAt2E,OAAA,QAAAC,IAAAq2E,EAAA,GAAAA,EAAA,GAA0C,GAAIR,EAA9CQ,EAAAt2E,OAAA,QAAAC,IAAAq2E,EAAA,GAAAA,EAAA,GAA2D,GACnEn7B,EAAW59C,EAAKklB,kBAAkB8qC,GAD1B,CAAAgpB,EAAA/3E,KAAA,eAIVjB,EAAK2vD,eAAe,sBAAuBK,GAJjCgpB,EAAAz3E,OAAA,SAKH,MALG,cAAAy3E,EAAA/3E,KAAA,GAQC63E,EAAAl7B,EAAS9c,SAAQqpC,GAAjBjoE,MAAA42E,EAAAv5E,OAAA0hC,EAAA,EAAA1hC,CAAgCq0C,IAAQ+kC,YAAYJ,GARrD,cAAAS,EAAAz3E,OAAA,SAAAy3E,EAAA53E,MAAA,wBAAA43E,EAAAx3E,SAAAq3E,EAAAl5E,SAj+FI,gBAAAs5E,EAAAC,GAAA,OAAAN,EAAA12E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA2+FlBw5E,iBA3+FkB,eAAAC,EAAA75E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2+FC,SAAA04E,EAAOr9D,EAAGs9D,EAAQC,EAAWrgB,GAA7B,IAAA0E,EAAA4b,EAAA,OAAA94E,EAAAtB,EAAA0B,KAAA,SAAA24E,GAAA,cAAAA,EAAAz4E,KAAAy4E,EAAAx4E,MAAA,UAEb28D,EAAY1E,GAAYA,EAAS0E,UAAY1E,EAAS0E,UAAY,KAFrD,CAAA6b,EAAAx4E,KAAA,eAAAw4E,EAAAx4E,KAAA,EAKI,IAAIwD,QAAJ,eAAAi1E,EAAAn6E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAg5E,EAAOn3C,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAA84E,GAAA,cAAAA,EAAA54E,KAAA44E,EAAA34E,MAAA,OAC9BjB,EAAKJ,MAAM+iC,KAAKC,IAAIq3B,sBAAsBj+C,EAAG6Q,KAAK,SAACgW,EAAI7mB,GACjD6mB,GACFJ,EAAOI,GAETL,EAAQxmB,KALoB,wBAAA49D,EAAAp4E,SAAAm4E,EAAAh6E,SAAb,gBAAAk6E,EAAAC,GAAA,OAAAJ,EAAAx3E,MAAAvC,KAAAwC,YAAA,IALJ,OAKfy7D,EALe6b,EAAAr4E,KAAA,UAgBZw8D,EAhBY,CAAA6b,EAAAx4E,KAAA,eAAAw4E,EAAAl4E,OAAA,SAiBR,MAjBQ,WAoBXi4E,EAAoB5b,EAAUltB,KAAK30B,OAAO,SAACC,GAAS,OAAOA,EAAGq+C,OAAOr+C,EAAGq+C,OAAO53D,OAAO,GAAG4N,gBAA9B,4BAAA9L,OAA4E+0E,MAEtH72E,OAtBN,CAAAg3E,EAAAx4E,KAAA,gBAAAw4E,EAAAl4E,OAAA,SAuBR,MAvBQ,eAAAk4E,EAAAz4E,KAAA,GAAAy4E,EAAAl4E,OAAA,SA2BR,CACLq8D,EACA59D,EAAKJ,MAAM+iC,KAAKC,IAAIzd,IAAIu5C,UAAU6a,EAAWC,EAAkB,GAAGvtE,KAAKutE,EAAkB,GAAGnf,UA7B/E,eAAAof,EAAAz4E,KAAA,GAAAy4E,EAAA10E,GAAA00E,EAAA,UAAAA,EAAAl4E,OAAA,SAgCR,MAhCQ,yBAAAk4E,EAAAj4E,SAAA63E,EAAA15E,KAAA,cA3+FD,gBAAAo6E,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAl3E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8gGlBw6E,eA9gGkB56E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8gGD,SAAAy5E,IAAA,OAAA15E,EAAAtB,EAAA0B,KAAA,SAAAu5E,GAAA,cAAAA,EAAAr5E,KAAAq5E,EAAAp5E,MAAA,cAAAo5E,EAAAp5E,KAAA,EACFjB,EAAKJ,MAAM+iC,KAAKC,IAAIu3C,iBADlB,cAAAE,EAAA94E,OAAA,SAAA84E,EAAAj5E,MAAA,wBAAAi5E,EAAA74E,SAAA44E,EAAAz6E,SA9gGCA,KAihGlB26E,sBAjhGkB,eAAAC,EAAAh7E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAihGM,SAAA65E,EAAOxqB,EAAama,GAApB,IAAAv2B,EAAAgK,EAAA68B,EAAAt4E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA45E,GAAA,cAAAA,EAAA15E,KAAA05E,EAAAz5E,MAAA,UAA+B2yC,EAA/B6mC,EAAAh4E,OAAA,QAAAC,IAAA+3E,EAAA,GAAAA,EAAA,GAAwC,GACzDzqB,EADiB,CAAA0qB,EAAAz5E,KAAA,eAAAy5E,EAAAn5E,OAAA,SAEb,MAFa,UAKhBq8C,EAAW59C,EAAKklB,kBAAkB8qC,GALlB,CAAA0qB,EAAAz5E,KAAA,eAQpBjB,EAAK2vD,eAAe,sBAAuBK,GARvB0qB,EAAAn5E,OAAA,SASb,MATa,cAAAm5E,EAAAz5E,KAAA,EAYT28C,EAAS+8B,cAAcxQ,EAAYv2B,GAZ1B,cAAA8mC,EAAAn5E,OAAA,SAAAm5E,EAAAt5E,MAAA,yBAAAs5E,EAAAl5E,SAAAg5E,EAAA76E,SAjhGN,gBAAAi7E,EAAAC,GAAA,OAAAN,EAAAr4E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+hGlBgD,oBA/hGkB,eAAAm4E,EAAAv7E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+hGI,SAAAo6E,EAAO/qB,EAAcma,GAArB,IAAAv2B,EAAA2kC,EAAA5iD,EAAAioB,EAAAo9B,EAAA7sE,EAAA8sE,EAAA94E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAo6E,GAAA,cAAAA,EAAAl6E,KAAAk6E,EAAAj6E,MAAA,UAAiC2yC,EAAjCqnC,EAAAx4E,OAAA,QAAAC,IAAAu4E,EAAA,GAAAA,EAAA,GAA0C,GAAI1C,EAA9C0C,EAAAx4E,OAAA,QAAAC,IAAAu4E,EAAA,GAAAA,EAAA,GAA2D,GAAItlD,EAA/DslD,EAAAx4E,OAAA,QAAAC,IAAAu4E,EAAA,GAAAA,EAAA,GAA6E,SAE5FjrB,EAFe,CAAAkrB,EAAAj6E,KAAA,eAAAi6E,EAAA35E,OAAA,SAGX,MAHW,UAMdq8C,EAAW59C,EAAKklB,kBAAkB8qC,GANpB,CAAAkrB,EAAAj6E,KAAA,eASlBjB,EAAK0iC,UAAU,sBAAuBstB,GATpBkrB,EAAA35E,OAAA,SAUX,MAVW,UAafq8C,EAAS9c,QAAQqpC,GAbF,CAAA+Q,EAAAj6E,KAAA,gBAclBjB,EAAK0iC,UAAU,oBAAqBynC,GAdlB+Q,EAAA35E,OAAA,SAeX,MAfW,eAkBpBo0B,EAA8B,WAAhBA,GAA4BA,IAAgBr0B,MAAMq0B,GAAe7pB,SAAS6pB,GAAeA,EAlBnFulD,EAAAl6E,KAAA,GAqBlBhB,EAAK0iC,UAAL,yBAAAn+B,OAAwCyrD,EAAxC,OAAAzrD,OAA0D4lE,IArBxC+Q,EAAAj6E,KAAA,IAsBE+5E,EAAAp9B,EAAS9c,SAAQqpC,GAAjBjoE,MAAA84E,EAAAz7E,OAAA0hC,EAAA,EAAA1hC,CAAgCq0C,IAAQ3I,KAAKstC,EAAW5iD,GAAa6pC,MAAM,SAAA19B,GAC7F9hC,EAAK0iC,UAAL,GAAAn+B,OAAkByrD,EAAlB,qBAAAzrD,OAAkD4lE,EAAlD,YAAwEroC,KAvBxD,eAsBZ3zB,EAtBY+sE,EAAA95E,KAyBlBpB,EAAK0iC,UAAL,yBAAAn+B,OAAwCyrD,EAAxC,OAAAzrD,OAA0D4lE,EAA1D,OAAA5lE,OAA0E4J,IAzBxD+sE,EAAA35E,OAAA,SA0BX4M,GA1BW,QAAA+sE,EAAAl6E,KAAA,GAAAk6E,EAAAn2E,GAAAm2E,EAAA,UA4BlBl7E,EAAK0iC,UAAU,4BAAfw4C,EAAAn2E,IA5BkB,yBAAAm2E,EAAA15E,SAAAu5E,EAAAp7E,KAAA,cA/hGJ,gBAAAw7E,EAAAC,GAAA,OAAAN,EAAA54E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8jGlBuH,aA9jGkB,eAAAm0E,EAAA97E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8jGH,SAAA26E,EAAOnb,EAAOv+D,GAAd,IAAAgrB,EAAA2uD,EAAAp5E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA06E,GAAA,cAAAA,EAAAx6E,KAAAw6E,EAAAv6E,MAAA,cAAAs6E,EAAA94E,OAAA,QAAAC,IAAA64E,EAAA,KAAAA,EAAA,KAAAC,EAAAv6E,KAAA,eAAAu6E,EAAAv6E,KAAA,EAELwD,QAAQC,IAAIy7D,EAAMhlD,IAAK,SAAC80C,EAAErjC,GAC9B,OAAOhrB,EAASquD,EAAGrjC,EAAOuzC,MAHjB,OAAAqb,EAAAv6E,KAAA,gBAMF2rB,EAAQ,EANN,YAMSA,EAAQuzC,EAAM19D,QANvB,CAAA+4E,EAAAv6E,KAAA,gBAAAu6E,EAAAv6E,KAAA,GAOHW,EAASu+D,EAAMvzC,GAAQA,EAAOuzC,GAP3B,QAM+BvzC,IAN/B4uD,EAAAv6E,KAAA,iCAAAu6E,EAAAh6E,SAAA85E,EAAA37E,SA9jGG,gBAAA87E,EAAAC,GAAA,OAAAL,EAAAn5E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAykGlBg8E,QAAU,SAAC1X,GACT,OAAQjkE,EAAKqB,MAAM,GAAGwG,KAAK7H,EAAKqB,MAAM4iE,GAAK7+D,IAAI,KAAMklD,IAAI,IAAIjvC,MAAM,IA1kGnD1b,KA4kGlBi8E,iBA5kGkB,eAAAC,EAAAt8E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4kGC,SAAAm7E,EAAO37E,GAAP,IAAA47E,EAAA,OAAAr7E,EAAAtB,EAAA0B,KAAA,SAAAk7E,GAAA,cAAAA,EAAAh7E,KAAAg7E,EAAA/6E,MAAA,cAAA+6E,EAAA/6E,KAAA,EACSjB,EAAKu3E,mBAAmBp3E,EAAYqD,MAAMrD,EAAYqE,KAAK+B,SADpE,cACbw1E,EADaC,EAAA56E,QAGf26E,EAAgB/7E,EAAKmD,iBAAiB44E,EAAc57E,EAAYiD,WAHjD44E,EAAAz6E,OAAA,SAKVw6E,GALU,wBAAAC,EAAAx6E,SAAAs6E,EAAAn8E,SA5kGD,gBAAAs8E,GAAA,OAAAJ,EAAA35E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAmlGlByzE,aAnlGkB,eAAA8I,EAAA38E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmlGH,SAAAw7E,EAAOh8E,GAAP,IAAA8R,EAAAtO,EAAAiC,EAAA5B,EAAAE,EAAAk4E,EAAAj6E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAu7E,GAAA,cAAAA,EAAAr7E,KAAAq7E,EAAAp7E,MAAA,UAAmBgR,IAAnBmqE,EAAA35E,OAAA,QAAAC,IAAA05E,EAAA,KAAAA,EAAA,GAEPz4E,EAFO,aAAAY,OAEsBpE,EAAYqE,KAAK+B,QAFvC,KAAAhC,OAEkD0N,KACzDrM,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAJ7B,CAAA+6E,EAAAp7E,KAAA,eAAAo7E,EAAA96E,OAAA,SAKJvB,EAAKqB,MAAMuE,IALP,cAAAy2E,EAAAp7E,KAAA,EAQiBjB,EAAK4E,mBAAmBzE,GAAY,EAAM8R,GAR3D,YAQPjO,EAROq4E,EAAAj7E,QASU4C,EAAgBkB,0BAT1B,CAAAm3E,EAAAp7E,KAAA,YAULiD,EAAYF,EAAgBkB,0BAC7BlF,EAAKqB,MAAM6C,GAAW5C,QAXhB,CAAA+6E,EAAAp7E,KAAA,gBAAAo7E,EAAA96E,OAAA,SAYFvB,EAAKgG,8BAA8BrC,EAAcO,IAZ/C,eAAAm4E,EAAA96E,OAAA,SAgBN,MAhBM,yBAAA86E,EAAA76E,SAAA26E,EAAAx8E,SAnlGG,gBAAA28E,GAAA,OAAAJ,EAAAh6E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAwmGlBiF,mBAxmGkB,eAAA23E,EAAAh9E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAwmGG,SAAA67E,EAAOr8E,GAAP,IAAAs8E,EAAAxqE,EAAAtO,EAAAiC,EAAAwC,EAAApE,EAAA04E,EAAAC,EAAA3vE,EAAAC,EAAA8uE,EAAAa,EAAApuD,EAAAquD,EAAA16E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAg8E,GAAA,cAAAA,EAAA97E,KAAA87E,EAAA77E,MAAA,UAAmBw7E,EAAnBI,EAAAp6E,OAAA,QAAAC,IAAAm6E,EAAA,IAAAA,EAAA,GAAuC5qE,IAAvC4qE,EAAAp6E,OAAA,QAAAC,IAAAm6E,EAAA,KAAAA,EAAA,GAEd18E,EAAYqE,KAFE,CAAAs4E,EAAA77E,KAAA,eAAA67E,EAAAv7E,OAAA,UAGV,GAHU,UAOboC,EAPa,mBAAAY,OAOsBpE,EAAYqE,KAAK+B,QAPvC,KAAAhC,OAOkD0N,KAC/DrM,EAAa5F,EAAKoZ,cAAczV,IARnB,CAAAm5E,EAAA77E,KAAA,eAAA67E,EAAAv7E,OAAA,SAUVqE,GAVU,cAafwC,EAAkBpI,EAAKqB,MAAM,GAE3B2C,EAAkB,CACtBq0B,OAAQ,KACR0jD,cAAc,KACd3zE,gBAAgB,KAChBu0E,kBAAkB,GAClB3vE,qBAAqB,KACrBC,yBAAyB,KACzB8vE,yBAAyB,KACzB73E,0BAA0B,KAC1B83E,mCAAmC,MAG/BN,EAAgB,GAChBC,EAAoB,GACpB3vE,EAAuB,GACvBC,EAA2B,GA9Bd6vE,EAAA77E,KAAA,GAgCbjB,EAAKkH,aAAa/G,EAAY6P,UAA9B,eAAAitE,EAAA19E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAAu8E,EAAOjtE,EAAaC,GAApB,IAAA8/C,EAAA5/C,EAAA+sE,EAAAC,EAAAlvD,EAAAmvD,EAAA1Y,EAAA6C,EAAA,OAAA9mE,EAAAtB,EAAA0B,KAAA,SAAAw8E,GAAA,cAAAA,EAAAt8E,KAAAs8E,EAAAr8E,MAAA,cACtC+uD,EAAe//C,EAAazM,MAC5B4M,EAAeH,EAAa1J,QAAQ8J,cAFEitE,EAAAr8E,KAAA,EAQlCwD,QAAQC,IAAI,CACpB1E,EAAKmpC,iBAAiB6mB,GACtBhwD,EAAKu3E,mBAAmBvnB,EAAa7vD,EAAYqE,KAAK+B,SACpD0J,EAAao5B,UAAUs7B,aAAe3kE,EAAK2C,oBAAoBqtD,EAAa//C,EAAao5B,UAAUs7B,aAAaj4D,KAAKuD,EAAao5B,UAAUs7B,aAAa/wB,QAAU,OAX3H,UAAAupC,EAAAG,EAAAl8E,KAAAg8E,EAAA79E,OAAAsF,EAAA,EAAAtF,CAAA49E,EAAA,GAK1CjvD,EAL0CkvD,EAAA,GAM1CC,EAN0CD,EAAA,GAO1CzY,EAP0CyY,EAAA,GAcvCC,EAduC,CAAAC,EAAAr8E,KAAA,gBAAAq8E,EAAA/7E,OAAA,kBAkBxCojE,GAAgB10D,EAAa7M,WAC/Bs5E,EAActsE,GAAgBu0D,EAC9BA,EAAe3kE,EAAKmD,iBAAiBwhE,EAAa10D,EAAa7M,YAG7DokE,EAAqBxnE,EAAKmD,iBAAiBk6E,EAAgBnvD,EAAcy2C,IAEtD33C,GAAGhtB,EAAKqB,MAAM,SACnCg8E,EAAkBr9E,EAAKqB,MAAM,GAC7BmmE,EAAqBxnE,EAAKqB,MAAM,IAGlCs7E,EAAkBvsE,GAAgBitE,EAClCrwE,EAAqBoD,GAAgBo3D,EACrCp/D,EAAkBA,EAAgBP,KAAK2/D,GAhCK,yBAAA8V,EAAA97E,SAAA07E,EAAAv9E,SAAxC,gBAAA49E,EAAAC,GAAA,OAAAP,EAAA/6E,MAAAvC,KAAAwC,YAAA,IAhCa,eAqEnB6B,EAAgB+3E,cAAgB/7E,EAAKqB,MAAM,GAC3C2C,EAAgBkB,0BAA4BlF,EAAKqB,MAAM+G,GAtEpC00E,EAAA77E,KAAA,GAyEOjB,EAAK47E,iBAAiBz7E,GAzE7B,YAyEf47E,EAzEee,EAAA17E,QA2EjB4C,EAAgB+3E,cAAgBA,EAChC/3E,EAAgBkB,0BAA4BlB,EAAgBkB,0BAA0B2C,KAAKk0E,IAK7Fx8E,OAAO4H,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IACMu3D,EADqBz6D,EAAqBoD,GACEhL,IAAIgD,GACtD6E,EAAyBmD,GAAgBq3D,IAG3CzjE,EAAgBoE,gBAAkBA,EAClCpE,EAAgBgJ,qBAAuBA,EACvChJ,EAAgBiJ,yBAA2BA,GAEvCgF,EA3Fe,CAAA6qE,EAAA77E,KAAA,gBAAA67E,EAAA77E,KAAA,GA4FejB,EAAKy9E,qBAAqBt9E,EAAYqE,KAAK+B,SA5F1D,aA4FXq2E,EA5FWE,EAAA17E,MA+FKs8E,MA/FL,CAAAZ,EAAA77E,KAAA,gBAAA67E,EAAA77E,KAAA,GAgGsBjB,EAAK29E,uBAAuBx9E,GAAY,GAhG9D,SAgGTquB,EAhGSsuD,EAAA17E,QAkGbw7E,EAAkBc,MAAQd,EAAkBc,MAAMt4E,IAAIopB,IAGxDxqB,EAAgBkB,0BAA4BlB,EAAgBkB,0BAA0B2C,KAAK+0E,EAAkBc,OArG9F,eAAAZ,EAAA77E,KAAA,GA2G8BjB,EAAKiF,oBAAoBjB,EAAgBoE,gBAAgBjI,EAAYqD,MAAMrD,GA3GzG,eA2GnB6D,EAAgB+4E,yBA3GGD,EAAA17E,KAAA07E,EAAA77E,KAAA,GA4GwCjB,EAAKiF,oBAAoBjB,EAAgBkB,0BAA0B/E,EAAYqD,MAAMrD,GA5G7H,eA4GnB6D,EAAgBg5E,mCA5GGF,EAAA17E,KA8Gfq7E,IACFz4E,EAAgBq0B,OAASr4B,EAAKiI,UAAUw0E,EAAczvE,EAAqB5E,IA/G1D00E,EAAAv7E,OAAA,SAkHZvB,EAAKqF,cAAc1B,EAAcK,IAlHrB,yBAAA84E,EAAAt7E,SAAAg7E,EAAA78E,SAxmGH,gBAAAi+E,GAAA,OAAArB,EAAAr6E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4tGlBk+E,8BA5tGkB,eAAAC,EAAAv+E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4tGc,SAAAo9E,EAAO/pC,GAAP,IAAAoM,EAAA49B,EAAA,OAAAt9E,EAAAtB,EAAA0B,KAAA,SAAAm9E,GAAA,cAAAA,EAAAj9E,KAAAi9E,EAAAh9E,MAAA,cACxBm/C,EAAMpgD,EAAKykE,uBAAuB,IADVwZ,EAAAh9E,KAAA,EAETjB,EAAK2C,oBAAoB,gBAAgB,eAAe,CAACy9C,EAAI7vC,UAAUyjC,IAF9D,cAExBgqC,EAFwBC,EAAA78E,KAAA68E,EAAA18E,OAAA,SAGvBy8E,GAHuB,wBAAAC,EAAAz8E,SAAAu8E,EAAAp+E,SA5tGd,gBAAAu+E,GAAA,OAAAJ,EAAA57E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAiuGlBmF,yBAjuGkB,eAAAq5E,EAAA5+E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAiuGS,SAAAy9E,EAAOC,EAAgBC,GAAvB,IAAA36E,EAAAiC,EAAAw6C,EAAA49B,EAAArrB,EAAA,OAAAjyD,EAAAtB,EAAA0B,KAAA,SAAAy9E,GAAA,cAAAA,EAAAv9E,KAAAu9E,EAAAt9E,MAAA,UAGnB0C,EAHmB,yBAAAY,OAGsB85E,EAAgB93E,QAHtC,KAAAhC,OAGiD+5E,EAAgB/3E,WACpFX,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QALjB,CAAAi9E,EAAAt9E,KAAA,eAAAs9E,EAAAh9E,OAAA,SAMhBvB,EAAKqB,MAAMuE,IANK,cAAA24E,EAAAv9E,KAAA,EAUN,6CACXo/C,EAAMpgD,EAAKykE,uBAAuB,IAXjB8Z,EAAAt9E,KAAA,EAYFjB,EAAK2C,oBAAoB,gBAAgB,eAAe,CAACy9C,EAAI7vC,UAAU,CAAC8tE,EAAgB93E,QAF5F,6CAE+G+3E,EAAgB/3E,WAZzH,YAYjBy3E,EAZiBO,EAAAn9E,MAAA,CAAAm9E,EAAAt9E,KAAA,gBAcf0xD,EAAQ3yD,EAAKqB,MAAM28E,EAAO,IAAI54E,IAAIg7C,GAdnBm+B,EAAAh9E,OAAA,SAedvB,EAAKgG,8BAA8BrC,EAAcgvD,IAfnC,eAAA4rB,EAAAh9E,OAAA,SAiBhB,MAjBgB,eAAAg9E,EAAAv9E,KAAA,GAAAu9E,EAAAx5E,GAAAw5E,EAAA,SAAAA,EAAAh9E,OAAA,SAmBhB,MAnBgB,yBAAAg9E,EAAA/8E,SAAA48E,EAAAz+E,KAAA,aAjuGT,gBAAA6+E,EAAAC,GAAA,OAAAN,EAAAj8E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6wGlB++E,wBA7wGkB,eAAAC,EAAAp/E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6wGQ,SAAAi+E,EAAOz9E,GAAP,IAAAqoB,EAAA4oC,EAAAysB,EAAAC,EAAAC,EAAA58E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAk+E,GAAA,cAAAA,EAAAh+E,KAAAg+E,EAAA/9E,MAAA,UAAeuoB,EAAfu1D,EAAAt8E,OAAA,QAAAC,IAAAq8E,EAAA,GAAAA,EAAA,GAA6B,GACrD59E,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QAEpCqoB,GAAkBA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKnH,EAAKJ,MAAM+G,kBAGpCxF,GAAYqoB,GAAkBA,EAAc/mB,OAPzB,CAAAu8E,EAAA/9E,KAAA,eAAA+9E,EAAAz9E,OAAA,SAQf,IARe,cAAAy9E,EAAA/9E,KAAA,EAWDjB,EAAKwyD,YAAYrxD,EAAQ,EAAE,SAASqoB,GAXnC,OAWlB4oC,EAXkB4sB,EAAA59E,KAalBy9E,EAAqB,GACvBC,EAAuB9+E,EAAKqB,MAAM,GAItC+wD,EAASvoD,QAAS,SAAAmS,GAEhB,IAAMk6C,EAAYl6C,EAAGk6C,UACfjpC,EAAajtB,EAAKqB,MAAM2a,EAAGiR,YAMjC,OAJK4xD,EAAmB3oB,KACtB2oB,EAAmB3oB,GAAal2D,EAAKqB,MAAM,IAGrC2a,EAAGvf,QACT,IAAK,UACL,IAAK,aACHoiF,EAAmB3oB,GAAa2oB,EAAmB3oB,GAAWruD,KAAKolB,GACrE,MACA,IAAK,WACL,IAAK,cACCA,EAAWvW,GAAGmoE,EAAmB3oB,MACnC4oB,EAAuBA,EAAqBj3E,KAAKolB,EAAW5R,MAAMwjE,EAAmB3oB,MAEvF2oB,EAAmB3oB,GAAa2oB,EAAmB3oB,GAAW76C,MAAM4R,GAChE4xD,EAAmB3oB,GAAWlpC,GAAG,KACnC6xD,EAAmB3oB,GAAal2D,EAAKqB,MAAM,IAU7Cy9E,EAAqBpoE,GAAG,IAC1BnX,OAAO4H,KAAK03E,GAAoBh1E,QAAS,SAAArG,GACvC,IAAMsS,EAAe+oE,EAAmBr7E,GACpCsS,GAAgBA,EAAaY,GAAG,KAC9BZ,EAAaY,GAAGooE,GAClBD,EAAmBr7E,GAASq7E,EAAmBr7E,GAAO6X,MAAMyjE,IAE5DA,EAAuBA,EAAqBzjE,MAAMwjE,EAAmBr7E,IACrEq7E,EAAmBr7E,GAAS,QAzDd,yBAAAw7E,EAAAx9E,SAAAo9E,EAAAj/E,SA7wGR,gBAAAs/E,GAAA,OAAAN,EAAAz8E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+0GlBu/E,2BA/0GkB,eAAAC,EAAA5/E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+0GW,SAAAy+E,EAAOC,EAAQC,GAAf,IAAA1pB,EAAA2pB,EAAA,OAAA7+E,EAAAtB,EAAA0B,KAAA,SAAA0+E,GAAA,cAAAA,EAAAx+E,KAAAw+E,EAAAv+E,MAAA,cAAAu+E,EAAAv+E,KAAA,EACKjB,EAAKy/E,0BADV,YACrB7pB,EADqB4pB,EAAAp+E,MAAA,CAAAo+E,EAAAv+E,KAAA,eAAAu+E,EAAAv+E,KAAA,EAGGjB,EAAK2C,oBAAoBizD,EAAkBlpD,KAAM,6BAA8B,CAAC2yE,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAp+E,KAAAo+E,EAAAj+E,OAAA,SAKlBg+E,GALkB,cAAAC,EAAAj+E,OAAA,SAOpB,MAPoB,wBAAAi+E,EAAAh+E,SAAA49E,EAAAz/E,SA/0GX,gBAAA+/E,EAAAC,GAAA,OAAAR,EAAAj9E,MAAAvC,KAAAwC,YAAA,GAAAxC,KAw1GlB8W,YAx1GkBlX,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAw1GJ,SAAAi/E,IAAA,IAAAj8E,EAAAiC,EAAAi6E,EAAA9rB,EAAA/f,EAAA/gC,EAAA,OAAAvS,EAAAtB,EAAA0B,KAAA,SAAAg/E,GAAA,cAAAA,EAAA9+E,KAAA8+E,EAAA7+E,MAAA,UAGN0C,EAHM,gBAINiC,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAL9B,CAAAw+E,EAAA7+E,KAAA,eAAA6+E,EAAAv+E,OAAA,SAMHvB,EAAKqB,MAAMuE,IANR,YASNi6E,EAAiB7/E,EAAKO,gBAAgB,CAAC,QAAQ,WATzC,CAAAu/E,EAAA7+E,KAAA,gBAAA6+E,EAAA7+E,KAAA,EAWYjB,EAAK+mB,YAAY84D,EAAehuC,UAX5C,YAWJkiB,EAXI+rB,EAAA1+E,QAYK2yD,EAAQ9nD,KAZb,CAAA6zE,EAAA7+E,KAAA,YAaF+yC,EAAOz0C,OAAO+X,OAAOuoE,EAAe7rC,QACtC/gC,EAAWjT,EAAKkgE,aAAalsB,EAAK+f,EAAQ9nD,OAdtC,CAAA6zE,EAAA7+E,KAAA,YAgBNgS,EAAWjT,EAAKqB,MAAM4R,GAAU9N,MAAM,KACjCnF,EAAKqB,MAAM4R,GAAU3R,QAjBpB,CAAAw+E,EAAA7+E,KAAA,gBAAA6+E,EAAAv+E,OAAA,SAkBGvB,EAAKgG,8BAA8BrC,EAAcsP,IAlBpD,eAAA6sE,EAAAv+E,OAAA,SAuBL,MAvBK,yBAAAu+E,EAAAt+E,SAAAo+E,EAAAjgF,SAx1GIA,KAi3GlB4yD,wBAA0B,WACxB,IAAKvyD,EAAKJ,MAAMqH,oBACd,OAAO,EAET,IAAMwrD,EAAczyD,EAAKO,gBAAgB,CAAC,QAAQ,oBAC5Cw/E,EAAiB//E,EAAKJ,MAAMqH,oBAAX,KASvB,OARwB1H,OAAO4H,KAAK44E,GAAgB7xC,OAAQ,SAACvnC,EAAgBnD,GAC3E,IAAMrD,EAAc4/E,EAAev8E,GAInC,OAHIjE,OAAO4H,KAAKsrD,GAAaz9B,SAAS70B,EAAYqE,KAAKhB,QAAUivD,EAAYtyD,EAAYqE,KAAKhB,OAAOc,UACnGqC,EAAgBnD,GAASrD,GAEpBwG,GACP,KA73GchH,KAi4GlBqgF,oBAj4GkBzgF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi4GI,SAAAs/E,IAAA,IAAArqB,EAAAjgC,EAAAuqD,EAAAC,EAAAC,EAAAhuE,EAAAiuE,EAAAC,EAAAC,EAAA,OAAA7/E,EAAAtB,EAAA0B,KAAA,SAAA0/E,GAAA,cAAAA,EAAAx/E,KAAAw/E,EAAAv/E,MAAA,cAAAu/E,EAAAv/E,KAAA,EACYjB,EAAKy/E,0BADjB,YACd7pB,EADc4qB,EAAAp/E,MAAA,CAAAo/E,EAAAv/E,KAAA,gBAAAu/E,EAAAv/E,KAAA,EAGQjB,EAAKm6E,iBAHb,YAGZxkD,EAHY6qD,EAAAp/E,MAAA,CAAAo/E,EAAAv/E,KAAA,gBAKVi/E,EAA0B,GALhBM,EAAAv/E,KAAA,GAMwBwD,QAAQC,IAAI,CAClD1E,EAAK2C,oBAAoBizD,EAAkBlpD,KAAK,qBAChD1M,EAAK2C,oBAAoBizD,EAAkBlpD,KAAK,oBAAoB,GAAG,GAAGipB,EAAYuqD,KARxE,WAAAC,EAAAK,EAAAp/E,KAAAg/E,EAAA7gF,OAAAsF,EAAA,EAAAtF,CAAA4gF,EAAA,GAMX/tE,EANWguE,EAAA,GAMAC,EANAD,EAAA,IAWZhuE,IAAciuE,EAXF,CAAAG,EAAAv/E,KAAA,gBAaRq/E,EAAmBtgF,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBAAmB6E,IAAI86E,GACrFK,EAAWvgF,EAAKqB,MAAM+Q,GAAYhN,IAAIi7E,GAAgBhlE,MAAM,GAAGlW,MAAMm7E,GAd7DE,EAAAj/E,OAAA,SAePvB,EAAK27E,QAAQ4E,GAAUp7E,MAAM,MAftB,eAAAq7E,EAAAj/E,OAAA,SAmBb,MAnBa,yBAAAi/E,EAAAh/E,SAAAy+E,EAAAtgF,SAj4GJA,KAs5GlB8gF,oBAt5GkBlhF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAs5GI,SAAA+/E,IAAA,IAAA/qB,EAAA,OAAAj1D,EAAAtB,EAAA0B,KAAA,SAAA6/E,GAAA,cAAAA,EAAA3/E,KAAA2/E,EAAA1/E,MAAA,cAAA0/E,EAAA1/E,KAAA,EACYjB,EAAK4gF,uBADjB,YACdjrB,EADcgrB,EAAAv/E,MAAA,CAAAu/E,EAAA1/E,KAAA,eAAA0/E,EAAA1/E,KAAA,EAGLjB,EAAK2C,oBAAoBgzD,EAAkBjpD,KAAK,eAH3C,cAAAi0E,EAAAp/E,OAAA,SAAAo/E,EAAAv/E,MAAA,cAAAu/E,EAAAp/E,OAAA,SAKb,MALa,wBAAAo/E,EAAAn/E,SAAAk/E,EAAA/gF,SAt5GJA,KA65GlBszE,qBA75GkB1zE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA65GK,SAAAkgF,IAAA,IAAA1/E,EAAAi1E,EAAAzgB,EAAAmrB,EAAA3+E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAigF,GAAA,cAAAA,EAAA//E,KAAA+/E,EAAA9/E,MAAA,cAAOE,EAAP2/E,EAAAr+E,OAAA,QAAAC,IAAAo+E,EAAA,GAAAA,EAAA,GAAe,KAAK1K,IAApB0K,EAAAr+E,OAAA,QAAAC,IAAAo+E,EAAA,KAAAA,EAAA,GAAAC,EAAA9/E,KAAA,EACWjB,EAAK4gF,uBADhB,YACfjrB,EADeorB,EAAA3/E,MAAA,CAAA2/E,EAAA9/E,KAAA,gBAGnBE,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QAHtB4/E,EAAA9/E,KAAA,EAINjB,EAAKkB,gBAAgBy0D,EAAkBjpD,KAAKvL,EAAQi1E,GAJ9C,cAAA2K,EAAAx/E,OAAA,SAAAw/E,EAAA3/E,MAAA,eAAA2/E,EAAAx/E,OAAA,SAMd,MANc,yBAAAw/E,EAAAv/E,SAAAq/E,EAAAlhF,SA75GLA,KAq6GlBk6D,mBAr6GkBt6D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAq6GG,SAAAqgF,IAAA,IAAArrD,EAAAygD,EAAA5tC,EAAAkqB,EAAAiD,EAAAsrB,EAAA9+E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAogF,GAAA,cAAAA,EAAAlgF,KAAAkgF,EAAAjgF,MAAA,cAAO00B,EAAPsrD,EAAAx+E,OAAA,QAAAC,IAAAu+E,EAAA,GAAAA,EAAA,GAAmB,SAAS7K,IAA5B6K,EAAAx+E,OAAA,QAAAC,IAAAu+E,EAAA,KAAAA,EAAA,GAAAC,EAAAjgF,KAAA,EACajB,EAAKy/E,0BADlB,cACbj3C,EADa04C,EAAA9/E,KAAA8/E,EAAAjgF,KAAA,EAESjB,EAAK2C,oBAAoB6lC,EAAkB97B,KAAK,oBAAoB,GAAG,GAAGipB,GAFnF,YAEf+8B,EAFewuB,EAAA9/E,MAAA,CAAA8/E,EAAAjgF,KAAA,gBAIjByxD,EAAkB1yD,EAAKqB,MAAMqxD,GACzB0jB,IACIzgB,EAAoB31D,EAAKO,gBAAgB,CAAC,QAAQ,iBACxDmyD,EAAkB1yD,EAAKmD,iBAAiBuvD,EAAgBiD,EAAkBvyD,WAP3D89E,EAAA3/E,OAAA,SASVmxD,GATU,eAAAwuB,EAAA3/E,OAAA,SAWZ,MAXY,yBAAA2/E,EAAA1/E,SAAAw/E,EAAArhF,SAr6GHA,KAk7GlBuzE,6BAl7GkB,eAAAiO,EAAA5hF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAk7Ga,SAAAygF,EAAOjgF,GAAP,IAAAkgF,EAAAC,EAAA5uB,EAAA0d,EAAA,OAAA1vE,EAAAtB,EAAA0B,KAAA,SAAAygF,GAAA,cAAAA,EAAAvgF,KAAAugF,EAAAtgF,MAAA,cAAAsgF,EAAAtgF,KAAA,EACmBwD,QAAQC,IAAI,CAC1D1E,EAAK65D,mBAAmB,UACxB75D,EAAKizE,qBAAqB9xE,KAHC,UAAAkgF,EAAAE,EAAAngF,KAAAkgF,EAAA/hF,OAAAsF,EAAA,EAAAtF,CAAA8hF,EAAA,GACxB3uB,EADwB4uB,EAAA,KACRlR,EADQkR,EAAA,MAKJ5uB,EALI,CAAA6uB,EAAAtgF,KAAA,eAAAsgF,EAAAhgF,OAAA,SAMpBvB,EAAKqB,MAAM+uE,GAAmBjrE,MAAMutD,IANhB,cAAA6uB,EAAAhgF,OAAA,SAQtB,MARsB,wBAAAggF,EAAA//E,SAAA4/E,EAAAzhF,SAl7Gb,gBAAA6hF,GAAA,OAAAL,EAAAj/E,MAAAvC,KAAAwC,YAAA,GAAAxC,KA47GlB8/E,wBA57GkBlgF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA47GQ,SAAA8gF,IAAA,IAAAC,EAAA,OAAAhhF,EAAAtB,EAAA0B,KAAA,SAAA6gF,GAAA,cAAAA,EAAA3gF,KAAA2gF,EAAA1gF,MAAA,YAClBygF,EAAsB1hF,EAAKO,gBAAgB,CAAC,QAAQ,qBADlC,CAAAohF,EAAA1gF,KAAA,WAGKjB,EAAKklB,kBAAkBw8D,EAAoBh1E,QACzCg1E,EAAoBv8D,IAJ3B,CAAAw8D,EAAA1gF,KAAA,eAAA0gF,EAAA1gF,KAAA,EAKSjB,EAAKJ,MAAMwlB,aAAas8D,EAAoBh1E,KAAKg1E,EAAoBn7E,QAAQm7E,EAAoBv8D,KAL1G,OAAAw8D,EAAAvgF,KAAA,cAAAugF,EAAApgF,OAAA,SAQjBmgF,GARiB,wBAAAC,EAAAngF,SAAAigF,EAAA9hF,SA57GRA,KAs8GlBiiF,oBAt8GkBriF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAs8GI,SAAAkhF,IAAA,IAAAC,EAAA,OAAAphF,EAAAtB,EAAA0B,KAAA,SAAAihF,GAAA,cAAAA,EAAA/gF,KAAA+gF,EAAA9gF,MAAA,YACd6gF,EAAkB9hF,EAAKO,gBAAgB,CAAC,QAAQ,iBADlC,CAAAwhF,EAAA9gF,KAAA,WAGKjB,EAAKklB,kBAAkB48D,EAAgBp1E,QACrCo1E,EAAgB38D,IAJvB,CAAA48D,EAAA9gF,KAAA,eAAA8gF,EAAA9gF,KAAA,EAKSjB,EAAKJ,MAAMwlB,aAAa08D,EAAgBp1E,KAAKo1E,EAAgBv7E,QAAQu7E,EAAgB38D,KAL9F,OAAA48D,EAAA3gF,KAAA,cAAA2gF,EAAAxgF,OAAA,SAQbugF,GARa,wBAAAC,EAAAvgF,SAAAqgF,EAAAliF,SAt8GJA,KAg9GlBihF,qBAh9GkBrhF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAg9GK,SAAAqhF,IAAA,IAAAC,EAAA,OAAAvhF,EAAAtB,EAAA0B,KAAA,SAAAohF,GAAA,cAAAA,EAAAlhF,KAAAkhF,EAAAjhF,MAAA,YACfghF,EAAmBjiF,EAAKO,gBAAgB,CAAC,QAAQ,kBADlC,CAAA2hF,EAAAjhF,KAAA,WAGKjB,EAAKklB,kBAAkB+8D,EAAiBv1E,QACtCu1E,EAAiB98D,IAJxB,CAAA+8D,EAAAjhF,KAAA,eAAAihF,EAAAjhF,KAAA,EAKSjB,EAAKJ,MAAMwlB,aAAa68D,EAAiBv1E,KAAKu1E,EAAiB17E,QAAQ07E,EAAiB98D,KALjG,OAAA+8D,EAAA9gF,KAAA,cAAA8gF,EAAA3gF,OAAA,SAQd0gF,GARc,wBAAAC,EAAA1gF,SAAAwgF,EAAAriF,SAh9GLA,KA09GlBwiF,qBA19GkB5iF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA09GK,SAAAyhF,IAAA,IAAA/5C,EAAA,OAAA3nC,EAAAtB,EAAA0B,KAAA,SAAAuhF,GAAA,cAAAA,EAAArhF,KAAAqhF,EAAAphF,MAAA,YACfonC,EAAwBroC,EAAKO,gBAAgB,CAAC,QAAQ,uBADvC,CAAA8hF,EAAAphF,KAAA,WAGKjB,EAAKklB,kBAAkBmjB,EAAsB37B,QAC3C27B,EAAsBljB,IAJ7B,CAAAk9D,EAAAphF,KAAA,eAAAohF,EAAAphF,KAAA,EAKSjB,EAAKJ,MAAMwlB,aAAaijB,EAAsB37B,KAAK27B,EAAsB9hC,QAAQ8hC,EAAsBljB,KALhH,OAAAk9D,EAAAjhF,KAAA,cAAAihF,EAAA9gF,OAAA,SAQd8mC,GARc,wBAAAg6C,EAAA7gF,SAAA4gF,EAAAziF,SA19GLA,KAo+GlB2iF,0BAp+GkB/iF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAo+GU,SAAA4hF,IAAA,IAAAphF,EAAAivE,EAAAoS,EAAA10D,EAAA8nC,EAAA6C,EAAAgqB,EAAAC,EAAA7uC,EAAA8uC,EAAAxgF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA8hF,GAAA,cAAAA,EAAA5hF,KAAA4hF,EAAA3hF,MAAA,UAAOE,EAAPwhF,EAAAlgF,OAAA,QAAAC,IAAAigF,EAAA,GAAAA,EAAA,GAAe,KAAKvS,EAApBuS,EAAAlgF,OAAA,QAAAC,IAAAigF,EAAA,GAAAA,EAAA,GAAsC,KAAKH,EAA3CG,EAAAlgF,OAAA,QAAAC,IAAAigF,EAAA,GAAAA,EAAA,GAAwD,MAC7ExhF,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,EALqB,CAAAyhF,EAAA3hF,KAAA,eAAA2hF,EAAArhF,OAAA,SAMjB,MANiB,cASpBusB,EAAiB,GATG80D,EAAA3hF,KAAA,EAUMjB,EAAKmiF,uBAVX,cAUpBvsB,EAVoBgtB,EAAAxhF,KAWpBq3D,EAAuBz4D,EAAKO,gBAAgB,CAAC,QAAQ,oBAXjCqiF,EAAA3hF,KAAA,GAaKjB,EAAKygF,sBAbV,WAapBgC,EAboBG,EAAAxhF,KAcrBgvE,EAdqB,CAAAwS,EAAA3hF,KAAA,gBAAA2hF,EAAA3hF,KAAA,GAeEjB,EAAKizE,qBAAqB9xE,GAAQ,GAfpC,QAexBivE,EAfwBwS,EAAAxhF,KAAA,YAkBtBgvE,IAAqBqS,EAlBC,CAAAG,EAAA3hF,KAAA,gBAmBlByhF,EAAkB1iF,EAAKqB,MAAM+uE,GAAmBhrE,IAAIpF,EAAKqB,MAAMohF,IAC/D5uC,EAAUt0C,OAAO4H,KAAKsxD,GAAsBh2D,OAE9C+/E,IACFA,EAAexiF,EAAKqB,MAAMmhF,GAAcp9E,IAAIyuC,IAvBtB+uC,EAAA3hF,KAAA,GA4BlBjB,EAAKkH,aAAa3H,OAAO4H,KAAKsxD,GAA9B,eAAAoqB,EAAAtjF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAAmiF,EAAOt/E,GAAP,IAAAyyD,EAAAvhB,EAAAquC,EAAAzsE,EAAA,OAAA5V,EAAAtB,EAAA0B,KAAA,SAAAkiF,GAAA,cAAAA,EAAAhiF,KAAAgiF,EAAA/hF,MAAA,cACnDg1D,EAAmBwC,EAAqBj1D,GACxCkxC,EAAYuhB,EAAiB3rB,gBAAgBoK,UAFMsuC,EAAA/hF,KAAA,EAG3BjB,EAAK2C,oBAAoBizD,EAAkBlpD,KAAK,WAAW,CAACgoC,IAHjC,QAGnDquC,EAHmDC,EAAA5hF,QAKnDkV,EAAmBtW,EAAKqB,MAAM0hF,GAAiB59E,MAAMu9E,GACrDF,IAEFlsE,EAAmBA,EAAiB+E,MAAM/E,EAAiBnR,MAAMq9E,KAEnE10D,EAAe4mB,GAAa10C,EAAK4qC,aAAat0B,IAVS,wBAAA0sE,EAAAxhF,SAAAshF,EAAAnjF,SAArD,gBAAAsjF,GAAA,OAAAJ,EAAA3gF,MAAAvC,KAAAwC,YAAA,IA5BkB,eAAAygF,EAAArhF,OAAA,SA2CnBhC,OAAO+X,OAAOwW,IA3CK,yBAAA80D,EAAAphF,SAAA+gF,EAAA5iF,SAp+GVA,KAmhHlBujF,sBAnhHkB3jF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmhHM,SAAAwiF,IAAA,IAAAhiF,EAAAivE,EAAAgG,EAAAgN,EAAAt1D,EAAAnnB,EAAAivD,EAAA6C,EAAAgqB,EAAAC,EAAAW,EAAAlhF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwiF,GAAA,cAAAA,EAAAtiF,KAAAsiF,EAAAriF,MAAA,UAAOE,EAAPkiF,EAAA5gF,OAAA,QAAAC,IAAA2gF,EAAA,GAAAA,EAAA,GAAe,KAAKjT,EAApBiT,EAAA5gF,OAAA,QAAAC,IAAA2gF,EAAA,GAAAA,EAAA,GAAsC,KAAKjN,EAA3CiN,EAAA5gF,OAAA,QAAAC,IAAA2gF,EAAA,IAAAA,EAAA,GAA6DD,EAA7DC,EAAA5gF,OAAA,QAAAC,IAAA2gF,EAAA,IAAAA,EAAA,IAEjBliF,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,EANiB,CAAAmiF,EAAAriF,KAAA,eAAAqiF,EAAA/hF,OAAA,SAOb,MAPa,cAUhBusB,EAAiB,GACjBnnB,EAAkB3G,EAAKuyD,0BAXP+wB,EAAAriF,KAAA,GAYUjB,EAAKmiF,uBAZf,eAYhBvsB,EAZgB0tB,EAAAliF,KAahBq3D,EAAuBz4D,EAAKO,gBAAgB,CAAC,QAAQ,oBAbrC+iF,EAAAriF,KAAA,GAeSjB,EAAKygF,sBAfd,WAehBgC,EAfgBa,EAAAliF,KAgBjBgvE,EAhBiB,CAAAkT,EAAAriF,KAAA,gBAAAqiF,EAAAriF,KAAA,GAiBMjB,EAAKizE,qBAAqB9xE,GAAQ,GAjBxC,QAiBpBivE,EAjBoBkT,EAAAliF,KAAA,YAoBlBgvE,IAAqBqS,EApBH,CAAAa,EAAAriF,KAAA,gBAqBdyhF,EAAkB1iF,EAAKqB,MAAM+uE,GAAmBhrE,IAAIpF,EAAKqB,MAAMohF,IArBjDa,EAAAriF,KAAA,GAuBdjB,EAAKkH,aAAa3H,OAAO4H,KAAKsxD,GAA9B,eAAA8qB,EAAAhkF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAA6iF,EAAOhgF,GAAP,IAAAyyD,EAAAvhB,EAAAv0C,EAAAsjF,EAAAC,EAAA5rD,EAAAxhB,EAAAqtE,EAAA7tE,EAAA,OAAApV,EAAAtB,EAAA0B,KAAA,SAAA8iF,GAAA,cAAAA,EAAA5iF,KAAA4iF,EAAA3iF,MAAA,cACnDg1D,EAAmBwC,EAAqBj1D,GACxCkxC,EAAYuhB,EAAiB3rB,gBAAgBoK,UAC7Cv0C,EAAcwG,EAAgBsvD,EAAiBjzC,WAHI4gE,EAAA3iF,KAAA,EAO/CwD,QAAQC,IAAI,CACpB1E,EAAKkqB,kBAAkB/pB,GACvBH,EAAK2C,oBAAoBizD,EAAkBlpD,KAAK,WAAW,CAACgoC,MATL,OAAA+uC,EAAAG,EAAAxiF,KAAAsiF,EAAAnkF,OAAAsF,EAAA,EAAAtF,CAAAkkF,EAAA,GAKvD3rD,EALuD4rD,EAAA,GAMvDptE,EANuDotE,EAAA,GAYnDC,EAAmB3jF,EAAKqB,MAAMiV,GAAkBnR,MAAMnF,EAAKqB,MAAMy2B,IACnEhiB,EAAe6tE,EAAiBx+E,MAAMu9E,GACtCtM,IACFtgE,EAAe9V,EAAKmD,iBAAiB2S,EAAa,KAGpDgY,EAAemoC,EAAiBjzC,WAAaogE,EAAepjF,EAAK4qC,aAAa90B,GAAgBA,EAlBrC,yBAAA8tE,EAAApiF,SAAAgiF,EAAA7jF,SAArD,gBAAAkkF,GAAA,OAAAN,EAAArhF,MAAAvC,KAAAwC,YAAA,IAvBc,eAAAmhF,EAAA/hF,OAAA,SA6Cf6hF,EAAe7jF,OAAO+X,OAAOwW,GAAkBA,GA7ChC,yBAAAw1D,EAAA9hF,SAAA2hF,EAAAxjF,SAnhHNA,KAokHlBmkF,gBApkHkB,eAAAC,EAAAxkF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAokHA,SAAAqjF,EAAOxgF,EAAMivB,GAAb,IAAAr2B,EAAAijF,EAAA14E,EAAA8xD,EAAAwrB,EAAA9hF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAojF,GAAA,cAAAA,EAAAljF,KAAAkjF,EAAAjjF,MAAA,cAAoB7E,EAApB6nF,EAAAxhF,OAAA,QAAAC,IAAAuhF,EAAA,IAAAA,EAAA,GACV5E,EAAU,GACV14E,EAAkB3G,EAAKuyD,0BACvBkG,EAAuBz4D,EAAKO,gBAAgB,CAAC,QAAQ,oBAH3C2jF,EAAAjjF,KAAA,EAKVjB,EAAKkH,aAAa3H,OAAO4H,KAAKsxD,GAA9B,eAAA0rB,EAAA5kF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAqD,SAAAyjF,EAAOluB,GAAP,IAAAD,EAAA3rB,EAAAoK,EAAAv0C,EAAA23B,EAAA,OAAAp3B,EAAAtB,EAAA0B,KAAA,SAAAujF,GAAA,cAAAA,EAAArjF,KAAAqjF,EAAApjF,MAAA,UACnDg1D,EAAmBwC,EAAqBvC,GACxC5rB,EAAkB2rB,EAAiB3rB,gBACnCoK,EAAYpK,EAAgBoK,YAC9BwhB,IAAc1yD,GAAS+H,WAAWknB,GAAQ,GAJW,CAAA4xD,EAAApjF,KAAA,YAKjDd,EAAcwG,EAAgBsvD,EAAiBjzC,WACrDyP,EAASzyB,EAAKmD,iBAAiBsvB,EAAO,IACjCr2B,EAPkD,CAAAioF,EAAApjF,KAAA,gBAAAojF,EAAApjF,KAAA,EAQxBjB,EAAKkqB,kBAAkB/pB,GARC,OAQ/C23B,EAR+CusD,EAAAjjF,KASrDqxB,EAASA,EAAOrtB,IAAI0yB,GATiC,QAWvDrF,EAASzyB,EAAK6nC,qBAAqBpV,EAAOwjC,EAAiB7yD,UAC3Di8E,EAAQ3qC,GAAajiB,EAZkC4xD,EAAApjF,KAAA,iBAcvDo+E,EAAQ3qC,GAAa,EAdkC,yBAAA2vC,EAAA7iF,SAAA4iF,EAAAzkF,SAArD,gBAAA2kF,GAAA,OAAAH,EAAAjiF,MAAAvC,KAAAwC,YAAA,IALU,cAAA+hF,EAAA3iF,OAAA,SAuBThC,OAAO+X,OAAO+nE,IAvBL,wBAAA6E,EAAA1iF,SAAAwiF,EAAArkF,SApkHA,gBAAA4kF,EAAAC,GAAA,OAAAT,EAAA7hF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6lHlB8kF,oBA7lHkB,eAAAC,EAAAnlF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6lHI,SAAAgkF,EAAOtF,GAAP,IAAAjjF,EAAAosC,EAAAo8C,EAAAziF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+jF,GAAA,cAAAA,EAAA7jF,KAAA6jF,EAAA5jF,MAAA,cAAe7E,IAAfwoF,EAAAniF,OAAA,QAAAC,IAAAkiF,EAAA,KAAAA,EAAA,GAAAC,EAAA5jF,KAAA,EACYjB,EAAKmiF,uBADjB,YACd35C,EADcq8C,EAAAzjF,MAAA,CAAAyjF,EAAA5jF,KAAA,eAAA4jF,EAAA5jF,KAAA,EAGLjB,EAAK2C,oBAAoB6lC,EAAkB97B,KAAK,oBAAoB,CAAC2yE,EAAQjjF,IAHxE,cAAAyoF,EAAAtjF,OAAA,SAAAsjF,EAAAzjF,MAAA,cAAAyjF,EAAAtjF,OAAA,SAKb,MALa,wBAAAsjF,EAAArjF,SAAAmjF,EAAAhlF,SA7lHJ,gBAAAmlF,GAAA,OAAAJ,EAAAxiF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAomHlBolF,iBApmHkB,eAAAC,EAAAzlF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAomHC,SAAAskF,EAAOzhF,EAAMivB,GAAb,IAAAr2B,EAAA8oF,EAAAryB,EAAA1e,EAAAN,EAAAwrC,EAAA8F,EAAAC,EAAAC,EAAAt4D,EAAAu4D,EAAAC,EAAApjF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0kF,GAAA,cAAAA,EAAAxkF,KAAAwkF,EAAAvkF,MAAA,cAAoB7E,IAApBmpF,EAAA9iF,OAAA,QAAAC,IAAA6iF,EAAA,KAAAA,EAAA,GAAiCL,EAAjCK,EAAA9iF,OAAA,QAAAC,IAAA6iF,EAAA,GAAAA,EAAA,GAAgD,KAC7D1yB,EAAW,KADE2yB,EAAAvkF,KAAA,EAEajB,EAAKy/E,0BAFlB,YAEXtrC,EAFWqxC,EAAApkF,MAAA,CAAAokF,EAAAvkF,KAAA,YAKT4yC,EAAU7zC,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,aAEvDkyB,EAASzyB,EAAKqB,MAAMoxB,MACLA,EAAOnxB,UAAWmxB,EAAOztB,IAAI,GAR7B,CAAAwgF,EAAAvkF,KAAA,gBAAAukF,EAAAjkF,OAAA,SASN,MATM,YAYX89E,EAAU6F,IACE7F,EAAQ58E,SAAWoxC,EAbpB,CAAA2xC,EAAAvkF,KAAA,gBAAAukF,EAAAvkF,KAAA,GAcGjB,EAAK8jF,gBAAgBtgF,EAAMivB,GAd9B,QAcb4sD,EAdamG,EAAApkF,KAAA,eAAAokF,EAAAvkF,KAAA,GAoBLwD,QAAQC,IAAI,CACpB1E,EAAK2C,oBAAoBwxC,EAAgBznC,KAAK,qBAC9C1M,EAAK2C,oBAAoBwxC,EAAgBznC,KAAK,oBAAoB,CAAC2yE,EAAQjjF,MAtB9D,WAAA+oF,EAAAK,EAAApkF,KAAAgkF,EAAA7lF,OAAAsF,EAAA,EAAAtF,CAAA4lF,EAAA,GAkBbE,EAlBaD,EAAA,GAmBbr4D,EAnBaq4D,EAAA,IAyBXC,IAAgBt4D,EAzBL,CAAAy4D,EAAAvkF,KAAA,gBA0BbwxB,EAASzyB,EAAKmD,iBAAiBsvB,EAAO,IACtC4yD,EAAerlF,EAAKmD,iBAAiBkiF,EAAa,IAClDt4D,EAAc/sB,EAAKmD,iBAAiB4pB,EAAY,IAC1Cu4D,EAAKv4D,EAAY5nB,MAAMkgF,GAGzBH,IAAmB9oF,IACrBq2B,EAASA,EAAOttB,MAAMkgF,IAItBxyB,EADEz2D,EACSkpF,EAAGlgF,IAAIqtB,GAAQpX,MAAM,GAAGlW,OAAO,GAE/BstB,EAAOrtB,IAAIkgF,GAAIjqE,MAAM,GAAGlW,OAAO,GAvC/BqgF,EAAAjkF,OAAA,SA4CNsxD,GA5CM,eAAA2yB,EAAAjkF,OAAA,SA+CV,MA/CU,yBAAAikF,EAAAhkF,SAAAyjF,EAAAtlF,SApmHD,gBAAA8lF,EAAAC,GAAA,OAAAV,EAAA9iF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqpHlBgmF,WArpHkB,eAAAC,EAAArmF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqpHL,SAAAklF,EAAOriF,EAAMrD,GAAb,IAAA2lF,EAAAC,EAAAC,EAAAriF,EAAAiC,EAAAqgF,EAAAC,EAAAjiF,EAAAkiF,EAAAniF,EAAAoiF,EAAAjkF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAulF,GAAA,cAAAA,EAAArlF,KAAAqlF,EAAAplF,MAAA,UAAyB6kF,EAAzBM,EAAA3jF,OAAA,QAAAC,IAAA0jF,EAAA,GAAAA,EAAA,GAA0C,KAAKL,EAA/CK,EAAA3jF,OAAA,QAAAC,IAAA0jF,EAAA,GAAAA,EAAA,GAAkE,MACvEJ,EAAkBhmF,EAAKO,gBAAgB,CAAC,YAAY,UACrC+D,QAFV,CAAA+hF,EAAAplF,KAAA,eAAAolF,EAAA9kF,OAAA,UAGF,GAHE,UAMLoC,EANK,cAAAY,OAMyBpE,EAAYqE,KAAKhB,MAN1C,KAAAe,OAMmDuhF,EANnD,KAAAvhF,OAMuEwhF,KAC5EngF,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAR/B,CAAA+kF,EAAAplF,KAAA,eAAAolF,EAAA9kF,OAAA,SASFvB,EAAKqB,MAAMuE,IATT,cAYPqgF,EAAUjmF,EAAKqB,MAAM,GAZdglF,EAAAplF,KAAA,GAaoBjB,EAAKwzE,oBAAoBrzE,EAAY2lF,GAbzD,aAaLI,EAbKG,EAAAjlF,MAAA,CAAAilF,EAAAplF,KAAA,YAiBHgD,EAAiBjE,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAGzDwlF,EApBI,CAAAM,EAAAplF,KAAA,gBAAAolF,EAAArlF,KAAA,GAAAqlF,EAAAplF,KAAA,GAsBsBjB,EAAK8E,yBAAyBb,EAAe+hF,GAtBnE,QAsBLD,EAtBKM,EAAAjlF,KAAAilF,EAAAplF,KAAA,iBAAAolF,EAAArlF,KAAA,GAAAqlF,EAAAthF,GAAAshF,EAAA,kBA0BFN,IAAsBA,EAAmBzkF,UAC5CykF,EAAqB/lF,EAAKqB,MAAM,IA3B3B,eA+BH8kF,EAAYnmF,EAAKqB,MAAM0kF,GAAoB5gF,MAAM+gF,GA/B9CG,EAAAplF,KAAA,GAiCqBjB,EAAK4E,mBAAmBzE,GAAY,GAAM,GAjC/D,SAiCH6D,EAjCGqiF,EAAAjlF,QAoCP6kF,EAAUE,EAAU/gF,IAAIpB,EAAgB+4E,0BAA0B53E,MAAM,KACnEnF,EAAKqB,MAAM4kF,GAAS3kF,SACvBtB,EAAKgG,8BAA8BrC,EAAcsiF,IAtC5C,eAAAI,EAAA9kF,OAAA,SA2CJ0kF,GA3CI,yBAAAI,EAAA7kF,SAAAqkF,EAAAlmF,KAAA,cArpHK,gBAAA2mF,EAAAC,GAAA,OAAAX,EAAA1jF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAksHlB6mF,aAlsHkB,eAAAC,EAAAlnF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAksHH,SAAA+lF,EAAOC,GAAP,IAAAC,EAAA,OAAAlmF,EAAAtB,EAAA0B,KAAA,SAAA+lF,GAAA,cAAAA,EAAA7lF,KAAA6lF,EAAA5lF,MAAA,cAAA4lF,EAAA5lF,KAAA,EACSjB,EAAK2C,oBAAoB,cAAc,aAAa,CAACgkF,IAD9D,YACTC,EADSC,EAAAzlF,MAAA,CAAAylF,EAAA5lF,KAAA,eAAA4lF,EAAAtlF,OAAA,SAGJvB,EAAKqB,MAAMulF,IAHP,cAAAC,EAAAtlF,OAAA,SAKN,MALM,wBAAAslF,EAAArlF,SAAAklF,EAAA/mF,SAlsHG,gBAAAmnF,GAAA,OAAAL,EAAAvkF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAysHlB6zE,oBAzsHkB,eAAAuT,EAAAxnF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAysHI,SAAAqmF,EAAO7mF,GAAP,IAAA2lF,EAAAmB,EAAAtjF,EAAAiC,EAAAshF,EAAAljF,EAAAmjF,EAAAC,EAAAC,EAAAT,EAAAU,EAAAlhF,EAAAmhF,EAAArB,EAAAsB,EAAArlF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA2mF,GAAA,cAAAA,EAAAzmF,KAAAymF,EAAAxmF,MAAA,UAAmB6kF,EAAnB0B,EAAA/kF,OAAA,QAAAC,IAAA8kF,EAAA,GAAAA,EAAA,GAAoC,KAAKP,IAAzCO,EAAA/kF,OAAA,QAAAC,IAAA8kF,EAAA,KAAAA,EAAA,GAEd7jF,EAFc,uBAAAY,OAEyBpE,EAAYqE,KAAKhB,MAF1C,KAAAe,OAEmDuhF,EAFnD,KAAAvhF,OAEuE0iF,KACrFrhF,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAJtB,CAAAmmF,EAAAxmF,KAAA,eAAAwmF,EAAAlmF,OAAA,SAKXvB,EAAKqB,MAAMuE,IALA,YAQdshF,EAAa/mF,EAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,MAAgB,aAAXA,EAAE4C,QARnC,CAAA+6E,EAAAxmF,KAAA,gBAAAwmF,EAAAxmF,KAAA,GAYYjB,EAAK4E,mBAAmBzE,GAAY,GAAM,GAZtD,WAYZ6D,EAZYyjF,EAAArmF,OAaZ+lF,EAAyBnjF,EAAgBiJ,yBAAyBi6E,EAAW3gF,QAAQ8J,kBAG7D82E,EAAuB7tD,IAAI,MAhBvC,CAAAmuD,EAAAxmF,KAAA,gBAAAwmF,EAAAxmF,KAAA,GAsBNwD,QAAQC,IAAI,CACpB1E,EAAKwmF,aAAaU,EAAW3gF,SAC7BvG,EAAK2C,oBAAoBukF,EAAW1jF,MAAM,iBAxB5B,WAAA4jF,EAAAK,EAAArmF,KAAAimF,EAAA9nF,OAAAsF,EAAA,EAAAtF,CAAA6nF,EAAA,GAoBdR,EApBcS,EAAA,GAqBdC,EArBcD,EAAA,IA2BZT,IAAaU,EA3BD,CAAAG,EAAAxmF,KAAA,YA8BT6kF,EA9BS,CAAA2B,EAAAxmF,KAAA,gBAAAwmF,EAAAxmF,KAAA,GA+BajB,EAAK2C,oBAAoBukF,EAAW1jF,MAAM,YAAY,CAACrD,EAAYqE,KAAK+B,UA/BrF,QA+BZu/E,EA/BY2B,EAAArmF,KAAA,YAkCV0kF,EAlCU,CAAA2B,EAAAxmF,KAAA,YAqCNmF,EAAgBpG,EAAKO,gBAAgB,CAAC,UAAU,kBAGhDgnF,EAAoBvnF,EAAKqB,MAAMykF,GAAkB1gF,IAAIpF,EAAKqB,MAAMimF,IAClEpB,EAAmBlmF,EAAKqB,MAAMulF,GAAWzhF,MAAMoiF,GAE/CN,IACFf,EAAmBA,EAAiB9gF,IAAI,MAAMD,MAAMnF,EAAKqB,MAAM+E,KAG5DpG,EAAKqB,MAAM6kF,GAAkB5kF,QA/CtB,CAAAmmF,EAAAxmF,KAAA,gBAAAwmF,EAAAlmF,OAAA,SAgDHvB,EAAKgG,8BAA8BrC,EAAcuiF,IAhD9C,eAAAuB,EAAAlmF,OAAA,SAuDb,MAvDa,yBAAAkmF,EAAAjmF,SAAAwlF,EAAArnF,SAzsHJ,gBAAA+nF,GAAA,OAAAX,EAAA7kF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAkwHlB0zE,wBAlwHkB9zE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkwHQ,SAAAgnF,IAAA,IAAAxmF,EAAAwF,EAAAwB,EAAAy/E,EAAAzlF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA+mF,GAAA,cAAAA,EAAA7mF,KAAA6mF,EAAA5mF,MAAA,UAAOE,EAAPymF,EAAAnlF,OAAA,QAAAC,IAAAklF,EAAA,GAAAA,EAAA,GAAe,KAAKjhF,EAApBihF,EAAAnlF,OAAA,QAAAC,IAAAklF,EAAA,GAAAA,EAAA,GAAoC,KACvDzmF,IACHA,EAAUnB,EAAKJ,MAAMuB,UAElBwF,GAAmB3G,EAAKJ,MAAMoH,mBACjCL,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAGzD7F,GAAYwF,EARO,CAAAkhF,EAAA5mF,KAAA,eAAA4mF,EAAAtmF,OAAA,UASf,GATe,cAYpB4G,EAASnI,EAAKqB,MAAM,GAZAwmF,EAAA5mF,KAAA,EAalBjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAAmhF,EAAAvoF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAonF,EAAOvkF,GAAP,IAAArD,EAAA6nF,EAAAC,EAAAxgF,EAAAy+E,EAAA,OAAAxlF,EAAAtB,EAAA0B,KAAA,SAAAonF,GAAA,cAAAA,EAAAlnF,KAAAknF,EAAAjnF,MAAA,UAC7Cd,EAAcwG,EAAgBnD,IACjBrD,EAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,MAAgB,aAAXA,EAAE4C,OAFJ,CAAAw7E,EAAAjnF,KAAA,gBAAAinF,EAAAjnF,KAAA,EAOvCwD,QAAQC,IAAI,CACpB1E,EAAK4H,iBAAiBzG,EAAQhB,GAAY,GAC1CH,EAAKwzE,oBAAoBrzE,EAAY,MAAK,KATK,OAAA6nF,EAAAE,EAAA9mF,KAAA6mF,EAAA1oF,OAAAsF,EAAA,EAAAtF,CAAAyoF,EAAA,GAK/CvgF,EAL+CwgF,EAAA,IAM/C/B,EAN+C+B,EAAA,KAYzBxgF,IACtBU,EAASA,EAAON,KAAKq+E,EAAiB/gF,MAAMsC,KAbG,yBAAAygF,EAAA1mF,SAAAumF,EAAApoF,SAA/C,gBAAAwoF,GAAA,OAAAL,EAAA5lF,MAAAvC,KAAAwC,YAAA,IAbkB,cAAA0lF,EAAAtmF,OAAA,SA+BjB4G,GA/BiB,yBAAA0/E,EAAArmF,SAAAmmF,EAAAhoF,SAlwHRA,KAmyHlB+zE,cAnyHkBn0E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmyHF,SAAAynF,IAAA,IAAAzhF,EAAAwB,EAAAC,EAAAigF,EAAAlmF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwnF,GAAA,cAAAA,EAAAtnF,KAAAsnF,EAAArnF,MAAA,eAAO0F,EAAP0hF,EAAA5lF,OAAA,QAAAC,IAAA2lF,EAAA,GAAAA,EAAA,GAAuB,OACbroF,EAAKJ,MAAMoH,mBACjCL,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAE1DmB,EAASnI,EAAKqB,MAAM,GACpB+G,EAAkBpI,EAAKqB,MAAM,GALnBinF,EAAArnF,KAAA,EAMRjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAA4hF,EAAAhpF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA6nF,EAAOhlF,GAAP,IAAArD,EAAAsoF,EAAAC,EAAAC,EAAA3kF,EAAA,OAAAtD,EAAAtB,EAAA0B,KAAA,SAAA8nF,GAAA,cAAAA,EAAA5nF,KAAA4nF,EAAA3nF,MAAA,cAC7Cd,EAAcwG,EAAgBnD,GADeolF,EAAA3nF,KAAA,EAEXwD,QAAQC,IAAI,CAClD1E,EAAK2lF,WAAWniF,EAAMrD,GACtBH,EAAK4E,mBAAmBzE,GAAY,GAAM,KAJO,OAAAsoF,EAAAG,EAAAxnF,KAAAsnF,EAAAnpF,OAAAsF,EAAA,EAAAtF,CAAAkpF,EAAA,GAE5CE,EAF4CD,EAAA,GAEpC1kF,EAFoC0kF,EAAA,GAO/CC,GAAW3kF,IACbmE,EAASA,EAAON,KAAK8gF,EAAQxjF,MAAMnB,EAAgBoE,kBACnDA,EAAkBA,EAAgBP,KAAK7D,EAAgBoE,kBATN,wBAAAwgF,EAAApnF,SAAAgnF,EAAA7oF,SAA/C,gBAAAkpF,GAAA,OAAAN,EAAArmF,MAAAvC,KAAAwC,YAAA,IANQ,cAoBdgG,EAASA,EAAO/C,IAAIgD,GApBNkgF,EAAA/mF,OAAA,SAsBP4G,GAtBO,wBAAAmgF,EAAA9mF,SAAA4mF,EAAAzoF,SAnyHEA,KA2zHlBmpF,aA3zHkBvpF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2zHH,SAAAooF,IAAA,IAAAC,EAAA/hF,EAAA,OAAAvG,EAAAtB,EAAA0B,KAAA,SAAAmoF,GAAA,cAAAA,EAAAjoF,KAAAioF,EAAAhoF,MAAA,cAGbuuD,MAAM05B,UAAUC,IAAM,WACpB,OAAOxpF,KAAKuuC,OAAO,SAASk7C,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG3D75B,MAAM05B,UAAUrwE,IAAM,WACpB,OAAOH,KAAKG,IAAI3W,MAAM,KAAMvC,OAG9B6vD,MAAM05B,UAAUI,IAAM,WACpB,OAAO3pF,KAAKwpF,MAAMxpF,KAAK8C,QAGnBumF,EAAM,GACN/hF,EAAsBjH,EAAKJ,MAAMqH,oBAhB1BgiF,EAAAhoF,KAAA,EAiBPjB,EAAKkH,aAAa3H,OAAO4H,KAAKF,GAA9B,eAAAsiF,EAAAhqF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAoD,SAAA6oF,EAAOz7C,GAAP,IAAApnC,EAAAmL,EAAA,OAAApR,EAAAtB,EAAA0B,KAAA,SAAA2oF,GAAA,cAAAA,EAAAzoF,KAAAyoF,EAAAxoF,MAAA,cAClD0F,EAAkBM,EAAoB8mC,GACtCj8B,EAAsB,SAAbi8B,EAFyC07C,EAAAxoF,KAAA,EAGlDjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAA+iF,EAAAnqF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAgD,SAAAgpF,EAAOnmF,GAAP,IAAArD,EAAA4zC,EAAA61C,EAAA55E,EAAA65E,EAAAC,EAAAC,EAAAC,EAAA,OAAAtpF,EAAAtB,EAAA0B,KAAA,SAAAmpF,GAAA,cAAAA,EAAAjpF,KAAAipF,EAAAhpF,MAAA,cAC9Cd,EAAcwG,EAAgBnD,GADgBymF,EAAAhpF,KAAA,EAEhCjB,EAAKwZ,gBAAgBrZ,EAAYoG,QAAQuL,EAAO,KAAK,MAAK,EAAM,KAAK,OAFrC,OAE9CiiC,EAF8Ck2C,EAAA7oF,KAG9CwoF,EAAS,GACX55E,EAAY,KACV65E,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUj2C,EAAMA,EAAMtxC,OAAO,GAEnCsxC,EAAMlqC,QAAS,SAAAusD,GACRpmD,IACH45E,EAAOp5E,KAAK,SACZo5E,EAAOp5E,KAAK,QAGZR,EAAY,GACZg6E,EAAQE,cAAcrgF,QAAS,SAAAsgF,GAC7B,IAAM1yE,EAAgBtX,EAAY6P,UAAU0H,KAAM,SAAA0yE,GAAE,OAAMA,EAAG7jF,QAAQ8J,gBAAkB85E,EAAG/5E,aAAaC,gBACnGoH,GACFzH,EAAUQ,KAAKiH,KAKnBmyE,EAAOp5E,KAAK,YACZo5E,EAAOp5E,KAAK,cAEZs5E,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnB/5E,EAAUnG,QAAS,SAAAC,GACjB8/E,EAAOp5E,KAAK,OAAO1G,EAAE4C,MACrBk9E,EAAOp5E,KAAK,SAAS1G,EAAE4C,MAEvBo9E,EAAOhgF,EAAE4C,MAAQ,GACjBq9E,EAASjgF,EAAE4C,MAAQ,KAGrBm9E,EAAKr5E,KAAKo5E,EAAO/4E,KAAK,OAGxB,IAAMoe,EAAOygC,IAAmB,IAAZ0G,EAAE38C,WAAgBT,OAAO,cACvCqxE,EAAOrqF,EAAKqB,MAAM+0D,EAAE18C,UAAUtU,IAAI,MAAMmL,QAAQ,GAChDsG,EAAQtL,WAAW6qD,EAAEk0B,WAErBC,EAAM,GACZA,EAAI/5E,KAAJ,GAAAjM,OAAYf,EAAZ,KAAAe,OAAqBwpC,IACrBw8C,EAAI/5E,KAAKye,GACTs7D,EAAI/5E,KAAK65E,GACTE,EAAI/5E,KAAKqG,GAELoY,GAAM,eACR66D,EAAM,KAASt5E,KAAKjF,WAAW8+E,IAC/BN,EAAQ,KAASv5E,KAAKjF,WAAWsL,KAGnC7G,EAAUnG,QAAS,SAAA2gF,GACjB,IAAMC,EAAQr0B,EAAE8zB,cAAcxyE,KAAM,SAAA5N,GAAC,OAAKA,EAAEsG,aAAaC,gBAAkBm6E,EAAMjkF,QAAQ8J,gBACrFq6E,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAM,CAGR,GAFAE,EAAU3qF,EAAKqB,MAAMopF,EAAMG,WAAWtpF,QAAwC,UAA9BiK,WAAWk/E,EAAMG,WACjEF,EAAS1qF,EAAKqB,MAAMopF,EAAMJ,MAAM/oF,QAA6C,UAAnCtB,EAAKqB,MAAMopF,EAAMJ,MAAMjlF,IAAI,MAClB,qBAAxCqlF,EAAK,GAAAlmF,OAAIimF,EAAM99E,KAAV,kBAA+C,CAC7D,IAAMm+E,EAAiB7qF,EAAKqB,MAAMopF,EAAK,GAAAlmF,OAAIimF,EAAM99E,KAAV,mBAAgCtH,IAAI,MACtEylF,EAAevpF,UAClBopF,EAAQA,EAAM7iF,KAAKgjF,IAInB57D,GAAM,eACH3tB,MAAMiK,WAAWm/E,KACpBZ,EAAOU,EAAM99E,MAAM8D,KAAKjF,WAAWm/E,IAEhCppF,MAAMiK,WAAWo/E,KACpBZ,EAASS,EAAM99E,MAAM8D,KAAKjF,WAAWo/E,KAK3CJ,EAAI/5E,KAAKk6E,GACTH,EAAI/5E,KAAKm6E,KAGXd,EAAKr5E,KAAK+5E,EAAI15E,KAAK,QAGrBtR,OAAO4H,KAAK2iF,GAAQjgF,QAAS,SAAAC,GAC3B,IAAMghF,EAAUhB,EAAOhgF,GAAGq/E,MAAMW,EAAOhgF,GAAGrH,OAC1CzC,EAAK0iC,UAAL,GAAAn+B,OAAkBf,EAAlB,KAAAe,OAA2BwpC,EAA3B,KAAAxpC,OAAuCuF,EAAvC,iBAAAvF,OAAwDumF,MAG1DvrF,OAAO4H,KAAK4iF,GAAUlgF,QAAS,SAAAC,GAC7B,IAAMswB,EAAW2vD,EAASjgF,GAAGq/E,MAAMY,EAASjgF,GAAGrH,OAC/CzC,EAAK0iC,UAAL,GAAAn+B,OAAkBf,EAAlB,KAAAe,OAA2BwpC,EAA3B,KAAAxpC,OAAuCuF,EAAvC,kBAAAvF,OAAyD61B,MAO3D4uD,EAAIx4E,KAAKq5E,EAAKh5E,KAAK,OAvGiC,yBAAAo5E,EAAAzoF,SAAAmoF,EAAAhqF,SAAhD,gBAAAorF,GAAA,OAAArB,EAAAxnF,MAAAvC,KAAAwC,YAAA,IAHkD,wBAAAsnF,EAAAjoF,SAAAgoF,EAAA7pF,SAApD,gBAAAqrF,GAAA,OAAAzB,EAAArnF,MAAAvC,KAAAwC,YAAA,IAjBO,OA+HbnC,EAAK0iC,UAAUsmD,EAAIn4E,KAAK,OA/HX,wBAAAo4E,EAAAznF,SAAAunF,EAAAppF,SA3zHGA,KA47HlBwzE,gBA57HkB5zE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA47HA,SAAAsqF,IAAA,IAAA9sE,EAAAxX,EAAA0kB,EAAAljB,EAAA+iF,EAAA/oF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAqqF,GAAA,cAAAA,EAAAnqF,KAAAmqF,EAAAlqF,MAAA,cAAOkd,EAAP+sE,EAAAzoF,OAAA,QAAAC,IAAAwoF,EAAA,GAAAA,EAAA,GAAgB,KAAKvkF,EAArBukF,EAAAzoF,OAAA,QAAAC,IAAAwoF,EAAA,GAAAA,EAAA,GAAqC,KAAK7/D,EAA1C6/D,EAAAzoF,OAAA,QAAAC,IAAAwoF,EAAA,GAAAA,EAAA,GAAuD,KACnE/iF,EAASnI,EAAKqB,MAAM,GAEnBsF,IACHA,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAJ9CmkF,EAAAlqF,KAAA,EAOVjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAAykF,EAAA7rF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA0qF,EAAO7nF,GAAP,IAAArD,EAAAqpB,EAAA8hE,EAAA,OAAA5qF,EAAAtB,EAAA0B,KAAA,SAAAyqF,GAAA,cAAAA,EAAAvqF,KAAAuqF,EAAAtqF,MAAA,cAC7Cd,EAAcwG,EAAgBnD,GAC9BgmB,EAAgBrL,EAAW,CAACA,GAAY,KAFKotE,EAAAtqF,KAAA,EAGpBjB,EAAKy9E,qBAAqBt9E,EAAYqE,KAAK+B,QAAQ8kB,EAAa7B,GAH5C,QAG7C8hE,EAH6CC,EAAAnqF,OAI3BkqF,EAAiB5N,QACvCv1E,EAASA,EAAON,KAAKyjF,EAAiB5N,QALW,wBAAA6N,EAAA/pF,SAAA6pF,EAAA1rF,SAA/C,gBAAA6rF,GAAA,OAAAJ,EAAAlpF,MAAAvC,KAAAwC,YAAA,IAPU,cAAAgpF,EAAA5pF,OAAA,SAeT4G,GAfS,wBAAAgjF,EAAA3pF,SAAAypF,EAAAtrF,SA57HAA,KA68HlB2zE,gBAAkB,WAIhB,OAHKtzE,EAAK2uD,eACR3uD,EAAK2uD,aAAe,IAAI5uD,EAAaC,EAAKJ,QAErCI,EAAK2uD,cAj9HIhvD,KAm9HlBqW,kBAAoB,SAAC7V,GACnB,IAAMgI,EAAS,GACT+J,EAAYlS,EAAKO,gBAAgB,CAAC,cAexC,OAdAhB,OAAO4H,KAAK+K,GAAWrI,QAAS,SAAAsU,GAC9B,IAAMZ,EAAiBrL,EAAUiM,GAC5BZ,EAAejZ,UAGY,SAA5BiZ,EAAeu3B,SACjB3sC,EAAOgW,GAAYZ,EAEGpd,EAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,OAAKA,EAAExF,SAAWwF,EAAE4C,KAAK2D,gBAAkBkN,EAAeu3B,SAASzkC,kBAEpHlI,EAAOgW,GAAYZ,MAIlBpV,GAp+HSxI,KAs+HlBoI,qBAAuB,SAAC0jF,EAAM34C,GAC5B,IAAM1sC,EAAgBpG,EAAKqB,MAAMrB,EAAKO,gBAAgB,CAAC,UAAU,mBAEjE,IADAkrF,EAAQzrF,EAAKqB,MAAMoqF,MACLA,EAAMnqF,QAAQ,CAC1B,OAAQwxC,GACN,IAAK,MACH,IAAMm+B,EAAe7qE,EAAchB,IAAI,YACvCqmF,EAAQA,EAAMtmF,MAAM8rE,GACtB,MACA,IAAK,OACH,IAAMC,EAAgB9qE,EAAchB,IAAI,SACxCqmF,EAAQA,EAAMtmF,MAAM+rE,GACtB,MACA,IAAK,QACH,IAAMC,EAAiB/qE,EAAchB,IAAI,IACzCqmF,EAAQA,EAAMtmF,MAAMgsE,GACtB,MACA,IAAK,OACHsa,EAAQA,EAAMtmF,MAAMiB,GAKxB,OAAOqlF,EAET,OAAO,MA//HS9rF,KAigIlB+rF,kCAjgIkB,eAAAC,EAAApsF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAigIkB,SAAAirF,EAAOzqF,GAAP,IAAAhB,EAAAqpB,EAAAqiE,EAAA35E,EAAA45E,EAAA3pF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAirF,GAAA,cAAAA,EAAA/qF,KAAA+qF,EAAA9qF,MAAA,cAAed,EAAf2rF,EAAArpF,OAAA,QAAAC,IAAAopF,EAAA,GAAAA,EAAA,GAA2B,KAAKtiE,EAAhCsiE,EAAArpF,OAAA,QAAAC,IAAAopF,EAAA,GAAAA,EAAA,GAA8C,KAC1ED,EAA4B,GAC5B35E,EAAYlS,EAAKO,gBAAgB,CAAC,cAFNwrF,EAAA9qF,KAAA,EAI5BjB,EAAKkH,aAAa3H,OAAO4H,KAAK+K,GAA9B,eAAA85E,EAAAzsF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAsrF,EAAO9tE,GAAP,IAAAZ,EAAA5W,EAAAwB,EAAAwmD,EAAA,OAAAjuD,EAAAtB,EAAA0B,KAAA,SAAAorF,GAAA,cAAAA,EAAAlrF,KAAAkrF,EAAAjrF,MAAA,WACzCuoB,GAAkBA,EAAcwL,SAAS7W,GADA,CAAA+tE,EAAAjrF,KAAA,eAAAirF,EAAA3qF,OAAA,qBAKvCgc,EAAiBrL,EAAUiM,IAEb7Z,QAPyB,CAAA4nF,EAAAjrF,KAAA,eAAAirF,EAAA3qF,OAAA,kBAWvCoF,EAAkB,IACRxG,EAAYqD,OAASrD,EAEjCgI,EAAS,KAdgC+jF,EAAAnnF,GAerCoZ,EAfqC+tE,EAAAjrF,KAgBtC,SAhBsCirF,EAAAnnF,GAAA,GAmBtC,SAnBsCmnF,EAAAnnF,GAAA,2BAAAmnF,EAAAjrF,KAAA,GAiB1BjB,EAAKqzE,wBAAwBlyE,EAAQwF,GAjBX,eAiBzCwB,EAjByC+jF,EAAA9qF,KAAA8qF,EAAA3qF,OAAA,2BAoBnCotD,EAAe3uD,EAAKszE,kBApBe4Y,EAAAjrF,KAAA,GAqB1B0tD,EAAaloD,oBAAoBtF,EAAQwF,GArBf,eAqBzCwB,EArByC+jF,EAAA9qF,KAAA8qF,EAAA3qF,OAAA,2BAAA2qF,EAAA3qF,OAAA,oBA2BzC4G,IACFA,EAASA,EAAO/C,IAAI,MAChBmY,EAAevV,wBACjBG,EAASnI,EAAK+H,qBAAqBI,EAAOoV,EAAevV,wBAE3D6jF,EAA0B1tE,GAAYhW,GAhCK,yBAAA+jF,EAAA1qF,SAAAyqF,EAAAtsF,SAAzC,gBAAAwsF,GAAA,OAAAH,EAAA9pF,MAAAvC,KAAAwC,YAAA,IAJ4B,cAAA4pF,EAAAxqF,OAAA,SAwC3BsqF,GAxC2B,wBAAAE,EAAAvqF,SAAAoqF,EAAAjsF,SAjgIlB,gBAAAysF,GAAA,OAAAT,EAAAzpF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA2iIlBwS,8BA3iIkB,eAAAk6E,EAAA9sF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2iIc,SAAA2rF,EAAOnsF,GAAP,IAAAqpB,EAAA+iE,EAAAr6E,EAAAs6E,EAAArqF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA2rF,GAAA,cAAAA,EAAAzrF,KAAAyrF,EAAAxrF,MAAA,cAAmBuoB,EAAnBgjE,EAAA/pF,OAAA,QAAAC,IAAA8pF,EAAA,GAAAA,EAAA,GAAiC,KACzDD,EAAwB,GACxBr6E,EAAYlS,EAAKO,gBAAgB,CAAC,cAFVksF,EAAAxrF,KAAA,EAIxBjB,EAAKkH,aAAa3H,OAAO4H,KAAK+K,GAA9B,eAAAw6E,EAAAntF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAgsF,EAAOxuE,GAAP,IAAAZ,EAAAqvE,EAAAj+B,EAAA,OAAAjuD,EAAAtB,EAAA0B,KAAA,SAAA+rF,GAAA,cAAAA,EAAA7rF,KAAA6rF,EAAA5rF,MAAA,WACzCuoB,GAAkBA,EAAcwL,SAAS7W,GADA,CAAA0uE,EAAA5rF,KAAA,eAAA4rF,EAAAtrF,OAAA,qBAKvCgc,EAAiBrL,EAAUiM,IAEb7Z,QAPyB,CAAAuoF,EAAA5rF,KAAA,eAAA4rF,EAAAtrF,OAAA,iBAWzCqrF,EAAW,KAX8BC,EAAA9nF,GAYrCoZ,EAZqC0uE,EAAA5rF,KAatC,SAbsC4rF,EAAA9nF,GAAA,EAmBtC,SAnBsC8nF,EAAA9nF,GAAA,uBActB5E,EAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,MAAgB,aAAXA,EAAE4C,OAdd,CAAAmgF,EAAA5rF,KAAA,gBAAA4rF,EAAA5rF,KAAA,GAgBtBjB,EAAKwzE,oBAAoBrzE,EAAY,MAAK,GAhBpB,QAgBvCysF,EAhBuCC,EAAAzrF,KAAA,eAAAyrF,EAAAtrF,OAAA,2BAoBnCotD,EAAe3uD,EAAKszE,kBApBeuZ,EAAA5rF,KAAA,GAqBxB0tD,EAAanpD,SAASrF,EAAYqE,KAAK+B,SArBf,eAqBzCqmF,EArByCC,EAAAzrF,KAAAyrF,EAAAtrF,OAAA,2BAAAsrF,EAAAtrF,OAAA,oBA2BzCqrF,IACFA,EAAWA,EAASxnF,IAAI,MACpBmY,EAAevV,wBACjB4kF,EAAW5sF,EAAK+H,qBAAqB6kF,EAASrvE,EAAevV,wBAE/DukF,EAAsBpuE,GAAYyuE,GAhCS,yBAAAC,EAAArrF,SAAAmrF,EAAAhtF,SAAzC,gBAAAmtF,GAAA,OAAAJ,EAAAxqF,MAAAvC,KAAAwC,YAAA,IAJwB,cAAAsqF,EAAAlrF,OAAA,SAwCvBgrF,GAxCuB,wBAAAE,EAAAjrF,SAAA8qF,EAAA3sF,SA3iId,gBAAAotF,GAAA,OAAAV,EAAAnqF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAqlIlBsY,iBArlIkB,eAAA+0E,EAAAztF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqlIC,SAAAssF,EAAOzpF,EAAMrD,GAAb,IAAAqpB,EAAAtX,EAAA2B,EAAAq5E,EAAA/qF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAqsF,GAAA,cAAAA,EAAAnsF,KAAAmsF,EAAAlsF,MAAA,cAAyBuoB,EAAzB0jE,EAAAzqF,OAAA,QAAAC,IAAAwqF,EAAA,GAAAA,EAAA,GAAuC,KAClDh7E,EAAYlS,EAAKO,gBAAgB,CAAC,cAClCsT,EAAgB,GAFLs5E,EAAAlsF,KAAA,EAIXjB,EAAKkH,aAAa3H,OAAO4H,KAAK+K,GAA9B,eAAAk7E,EAAA7tF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAA0sF,EAAOlvE,GAAP,IAAAZ,EAAApV,EAAAnE,EAAAspF,EAAAC,EAAAC,EAAArG,EAAAx4B,EAAA,OAAAjuD,EAAAtB,EAAA0B,KAAA,SAAA2sF,GAAA,cAAAA,EAAAzsF,KAAAysF,EAAAxsF,MAAA,WAEzCuoB,GAAkBA,EAAcwL,SAAS7W,GAFA,CAAAsvE,EAAAxsF,KAAA,eAAAwsF,EAAAlsF,OAAA,qBAMvCgc,EAAiBrL,EAAUiM,IAEb7Z,UAA6C,IAAlCiZ,EAAew3B,eARD,CAAA04C,EAAAxsF,KAAA,eAAAwsF,EAAAlsF,OAAA,iBAYzC4G,EAAS,KACTnE,EAAkB,KAbuBypF,EAAA1oF,GAerCoZ,EAfqCsvE,EAAAxsF,KAgBtC,SAhBsCwsF,EAAA1oF,GAAA,GAsCtC,SAtCsC0oF,EAAA1oF,GAAA,oBAAA0oF,EAAAv1E,GAiBjCqF,EAAew3B,eAjBkB04C,EAAAxsF,MAAAwsF,EAAAv1E,GAAA,yBAAAu1E,EAAAxsF,KAAA,GAoBJwD,QAAQC,IAAI,CAC3C1E,EAAK2lF,WAAWniF,EAAMrD,GACtBH,EAAK4E,mBAAmBzE,GAAY,GAAM,KAtBP,eAAAmtF,EAAAG,EAAArsF,KAAAmsF,EAAAhuF,OAAAsF,EAAA,EAAAtF,CAAA+tF,EAAA,GAoBpCnlF,EApBoColF,EAAA,IAoB7BvpF,EApB6BupF,EAAA,MA2B7BC,EAAertF,EAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,MAAgB,aAAXA,EAAE4C,SAEnD1I,EAAgBiJ,yBAAyBugF,EAAajnF,QAAQ8J,iBAC1D82E,EAAyBnjF,EAAgBiJ,yBAAyBugF,EAAajnF,QAAQ8J,eAC7FlI,EAASA,EAAOhD,MAAMgiF,IA/BSsG,EAAAlsF,OAAA,2BAAAksF,EAAAlsF,OAAA,oBAuCnCotD,EAAe3uD,EAAKszE,kBAvCema,EAAAlzB,GAwCjCh9C,EAAew3B,eAxCkB04C,EAAAxsF,KAyClC,QAzCkCwsF,EAAAlzB,GAAA,GA4ClC,iBA5CkCkzB,EAAAlzB,GAAA,GAmDlC,qBAnDkCkzB,EAAAlzB,GAAA,2BAAAkzB,EAAAxsF,KAAA,GA0CtB0tD,EAAatrD,OAAOG,EAAMrD,GA1CJ,eA0CrCgI,EA1CqCslF,EAAArsF,KAAAqsF,EAAAlsF,OAAA,2BAAAksF,EAAAxsF,KAAA,GA6CtB0tD,EAAanpD,SAASrF,EAAYqE,KAAK+B,SA7CjB,eA6CrC4B,EA7CqCslF,EAAArsF,QA+CnC+G,EAASnI,EAAKmD,iBAAiBgF,EAAO,IACtCA,EAASnI,EAAK+H,qBAAqBI,EAAOoV,EAAevV,wBAhDtBylF,EAAAlsF,OAAA,2BAAAksF,EAAAxsF,KAAA,GAoDtB0tD,EAAaloD,oBAAoBtG,GApDX,eAoDrCgI,EApDqCslF,EAAArsF,KAAAqsF,EAAAlsF,OAAA,2BAAAksF,EAAAlsF,OAAA,mCAAAksF,EAAAlsF,OAAA,oBA8D9B,OAAX4G,GAAmBnI,EAAKqB,MAAM8G,GAAQuO,GAAG,KAC3C7C,EAAcsK,GAAYhW,GA/DiB,yBAAAslF,EAAAjsF,SAAA6rF,EAAA1tF,SAAzC,gBAAA+tF,GAAA,OAAAN,EAAAlrF,MAAAvC,KAAAwC,YAAA,IAJW,cAAAgrF,EAAA5rF,OAAA,SAuEVsS,GAvEU,wBAAAs5E,EAAA3rF,SAAAyrF,EAAAttF,SArlID,gBAAAguF,EAAAC,GAAA,OAAAZ,EAAA9qF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8pIlB89E,qBA9pIkBl+E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8pIK,SAAAktF,IAAA,IAAAtnF,EAAA8kB,EAAA7B,EAAAtX,EAAA0qE,EAAAkR,EAAA3rF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAitF,GAAA,cAAAA,EAAA/sF,KAAA+sF,EAAA9sF,MAAA,cAAOsF,EAAPunF,EAAArrF,OAAA,QAAAC,IAAAorF,EAAA,GAAAA,EAAA,GAAe,KAAKziE,EAApByiE,EAAArrF,OAAA,QAAAC,IAAAorF,EAAA,GAAAA,EAAA,GAAiC,MAAMtkE,EAAvCskE,EAAArrF,OAAA,QAAAC,IAAAorF,EAAA,GAAAA,EAAA,GAAqD,KACrEvnF,IACHA,EAAUvG,EAAKJ,MAAMO,YAAYqE,KAAK+B,SAElC2L,EAAYlS,EAAKO,gBAAgB,CAAC,cAClCq8E,EAAoB,GALLmR,EAAA9sF,KAAA,EAOfjB,EAAKkH,aAAa3H,OAAO4H,KAAK+K,GAA9B,eAAA87E,EAAAzuF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAyC,SAAAstF,EAAOzqF,GAAP,IAAA+Z,EAAA8M,EAAA6jE,EAAAC,EAAA,OAAAztF,EAAAtB,EAAA0B,KAAA,SAAAstF,GAAA,cAAAA,EAAAptF,KAAAotF,EAAAntF,MAAA,WAEzCuoB,GAAkBA,EAAcwL,SAASxxB,GAFA,CAAA4qF,EAAAntF,KAAA,eAAAmtF,EAAA7sF,OAAA,qBAMvCgc,EAAiBrL,EAAU1O,IAEbc,QARyB,CAAA8pF,EAAAntF,KAAA,eAAAmtF,EAAA7sF,OAAA,wBAAA6sF,EAAAntF,KAAA,EAajBjB,EAAKu3E,mBAAmB/zE,EAAM+C,GAbb,YAazC8jB,EAbyC+jE,EAAAhtF,MAAA,CAAAgtF,EAAAntF,KAAA,YAiBvCitF,EAAsB,MACtB7iE,EAlBuC,CAAA+iE,EAAAntF,KAAA,gBAmBnCktF,EAAkBnuF,EAAKO,gBAAgB,CAAC,QAAQ,SAAS8qB,IAnBtB+iE,EAAAptF,KAAA,GAAAotF,EAAAntF,KAAA,GAqBXjB,EAAK8E,yBAAyBqpF,EAAgB5wE,GArBnC,QAqBvC2wE,EArBuCE,EAAAhtF,KAAAgtF,EAAAntF,KAAA,iBAAAmtF,EAAAptF,KAAA,GAAAotF,EAAArpF,GAAAqpF,EAAA,kBA4B3CxR,EAAkBp5E,GAASxD,EAAKmD,iBAAiBknB,EAAgBnY,EAAU1O,GAAOJ,SAAS8qF,GAGtFtR,EAAkBc,QACrBd,EAAkBc,MAAQ19E,EAAKqB,MAAM,IAIvCu7E,EAAkBc,MAAQd,EAAkBc,MAAM71E,KAAK+0E,EAAkBp5E,IApC9B,yBAAA4qF,EAAA5sF,SAAAysF,EAAAtuF,KAAA,cAAzC,gBAAA0uF,GAAA,OAAAL,EAAA9rF,MAAAvC,KAAAwC,YAAA,IAPe,cAAA4rF,EAAAxsF,OAAA,SA+Cdq7E,GA/Cc,wBAAAmR,EAAAvsF,SAAAqsF,EAAAluF,SA9pILA,KA+sIlB2uF,2BAA6B,SAAC/nF,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM2L,EAAYlS,EAAKO,gBAAgB,CAAC,cACxC,OAAOhB,OAAO+X,OAAOpF,GAAWwF,KAAM,SAAAvX,GAAW,OAAKA,EAAYmE,SAAWnE,EAAYoG,QAAQ8J,gBAAkB9J,EAAQ8J,iBAptI3G1Q,KAstIlB+6B,6BAttIkBn7B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAstIa,SAAA4tF,IAAA,IAAAptF,EAAAwF,EAAA0kB,EAAAmjE,EAAA7qF,EAAAiC,EAAAwkB,EAAAqkE,EAAAC,EAAAvsF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6tF,GAAA,cAAAA,EAAA3tF,KAAA2tF,EAAA1tF,MAAA,UAAOE,EAAPutF,EAAAjsF,OAAA,QAAAC,IAAAgsF,EAAA,GAAAA,EAAA,GAAe,KAAK/nF,EAApB+nF,EAAAjsF,OAAA,QAAAC,IAAAgsF,EAAA,GAAAA,EAAA,GAAoC,KAAKrjE,EAAzCqjE,EAAAjsF,OAAA,QAAAC,IAAAgsF,EAAA,GAAAA,EAAA,GAAsD,KAAKF,IAA3DE,EAAAjsF,OAAA,QAAAC,IAAAgsF,EAAA,KAAAA,EAAA,GAGvB/qF,EAHuB,6BAAAY,OAGsBpD,EAHtB,KAAAoD,OAGiCub,KAAKC,UAAUpZ,GAHhD,KAAApC,OAGoE8mB,EAHpE,KAAA9mB,OAGoFiqF,KAC3G5oF,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QALb,CAAAqtF,EAAA1tF,KAAA,eAAA0tF,EAAAptF,OAAA,SAMpBvB,EAAKqB,MAAMuE,IANS,cAAA+oF,EAAA1tF,KAAA,GASOjB,EAAKmqB,yBAAyBhpB,EAAQwF,EAAgB0kB,EAAa,KAAKmjE,GAT/E,aASvBpkE,EATuBukE,EAAAvtF,MAAA,CAAAutF,EAAA1tF,KAAA,gBAWrBwtF,EAAoBlvF,OAAO+X,OAAO8S,GAAuB8jB,OAAQ,SAAC0gD,EAAKC,GAE3E,OADAD,EAAMA,EAAI/mF,KAAK7H,EAAKqB,MAAMwtF,KAEzB7uF,EAAKqB,MAAM,IAdastF,EAAAptF,OAAA,SAgBpBvB,EAAKgG,8BAA8BrC,EAAc8qF,IAhB7B,eAAAE,EAAAptF,OAAA,SAkBtBvB,EAAKqB,MAAM,IAlBW,yBAAAstF,EAAAntF,SAAA+sF,EAAA5uF,SAttIbA,KA0uIlBwqB,yBA1uIkB5qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0uIS,SAAAmuF,IAAA,IAAA3tF,EAAAwF,EAAA0kB,EAAA0jE,EAAAP,EAAArmF,EAAA6mF,EAAA7sF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAmuF,GAAA,cAAAA,EAAAjuF,KAAAiuF,EAAAhuF,MAAA,cAAOE,EAAP6tF,EAAAvsF,OAAA,QAAAC,IAAAssF,EAAA,GAAAA,EAAA,GAAe,KAAKroF,EAApBqoF,EAAAvsF,OAAA,QAAAC,IAAAssF,EAAA,GAAAA,EAAA,GAAoC,KAAK3jE,EAAzC2jE,EAAAvsF,OAAA,QAAAC,IAAAssF,EAAA,GAAAA,EAAA,GAAsD,KAAKD,EAA3DC,EAAAvsF,OAAA,QAAAC,IAAAssF,EAAA,GAAAA,EAAA,GAAgF,KAAKR,EAArFQ,EAAAvsF,OAAA,QAAAC,IAAAssF,EAAA,IAAAA,EAAA,GACpB7tF,IACHA,EAAUnB,EAAKJ,MAAMuB,UAElBwF,GAAmB3G,EAAKJ,MAAMqH,qBAAuBjH,EAAKJ,MAAMoH,mBACnEL,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMoH,mBAGxDmB,EAAS,GARU8mF,EAAAhuF,KAAA,GAUnBjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAAuoF,EAAA3vF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAwuF,EAAO3rF,GAAP,IAAAua,EAAAqxE,EAAA,OAAA1uF,EAAAtB,EAAA0B,KAAA,SAAAuuF,GAAA,cAAAA,EAAAruF,KAAAquF,EAAApuF,MAAA,cAC7C8c,EAAkBpX,EAAgBnD,GAAOgB,KADI6qF,EAAApuF,KAAA,EAIpBjB,EAAK2C,oBAAoBob,EAAgBva,MAAM,sBAAsB,CAACrC,IAJlD,YAI7CiuF,EAJ6CC,EAAAjuF,MAAA,CAAAiuF,EAAApuF,KAAA,eAAAouF,EAAApuF,KAAA,EAO3CjB,EAAKkH,aAAakoF,EAAlB,eAAAE,EAAA/vF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAoC,SAAA4uF,EAAOV,EAAerxE,GAAtB,IAAAgyE,EAAAjyE,EAAA2wE,EAAAC,EAAA,OAAAztF,EAAAtB,EAAA0B,KAAA,SAAA2uF,GAAA,cAAAA,EAAAzuF,KAAAyuF,EAAAxuF,MAAA,cACxC4tF,EAAiB7uF,EAAKqB,MAAMwtF,GADYY,EAAAxuF,KAAA,EAGVjB,EAAK2C,oBAAoBob,EAAgBva,MAAM,YAAY,CAACga,IAHlD,YAGlCgyE,EAHkCC,EAAAruF,MAAA,CAAAquF,EAAAxuF,KAAA,cAMhCsc,EAAiBwxE,GAA8C/uF,EAAKsuF,2BAA2BkB,KAE7EhB,IAAoBjxE,EAAegF,cAAgBhF,EAAehX,SAAWgX,EAAehX,QAAQ8J,gBAAkBm/E,EAAgBn/E,cARxH,CAAAo/E,EAAAxuF,KAAA,YAWhCitF,EAAsB,MACtB7iE,EAZgC,CAAAokE,EAAAxuF,KAAA,cAa5BktF,EAAkBnuF,EAAKO,gBAAgB,CAAC,QAAQ,SAAS8qB,KAb7B,CAAAokE,EAAAxuF,KAAA,gBAAAwuF,EAAAzuF,KAAA,GAAAyuF,EAAAxuF,KAAA,GAgBFjB,EAAK8E,yBAAyBqpF,EAAgB5wE,GAhB5C,QAgB9B2wE,EAhB8BuB,EAAAruF,KAAAquF,EAAAxuF,KAAA,iBAAAwuF,EAAAzuF,KAAA,GAAAyuF,EAAA1qF,GAAA0qF,EAAA,kBAuBpCZ,EAAiB7uF,EAAKmD,iBAAiB0rF,EAAetxE,EAAena,SAAS8qF,GAGzE/lF,EAAOoV,EAAe/Z,SACzB2E,EAAOoV,EAAe/Z,OAASxD,EAAKqB,MAAM,IAI5C8G,EAAOoV,EAAe/Z,OAAS2E,EAAOoV,EAAe/Z,OAAOqE,KAAKgnF,GA/B7B,yBAAAY,EAAAjuF,SAAA+tF,EAAA5vF,KAAA,cAApC,gBAAA+vF,EAAAC,GAAA,OAAAL,EAAAptF,MAAAvC,KAAAwC,YAAA,IAP2C,wBAAAktF,EAAA7tF,SAAA2tF,EAAAxvF,SAA/C,gBAAAiwF,GAAA,OAAAV,EAAAhtF,MAAAvC,KAAAwC,YAAA,IAVmB,eAAA8sF,EAAA1tF,OAAA,SAuDlB4G,GAvDkB,yBAAA8mF,EAAAztF,SAAAstF,EAAAnvF,SA1uITA,KAmyIlB6W,aAnyIkBjX,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmyIH,SAAAkvF,IAAA,IAAA1vF,EAAA+V,EAAA45E,EAAA3tF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAivF,GAAA,cAAAA,EAAA/uF,KAAA+uF,EAAA9uF,MAAA,eAAOd,EAAP2vF,EAAArtF,OAAA,QAAAC,IAAAotF,EAAA,GAAAA,EAAA,GAAmB,OACZ9vF,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,aAFd4vF,EAAA9uF,KAAA,EAIKjB,EAAK2C,oBAAoBxC,EAAYqE,KAAKhB,MAAO,OAJtD,YAIP0S,EAJO65E,EAAA3uF,MAAA,CAAA2uF,EAAA9uF,KAAA,eAAA8uF,EAAAxuF,OAAA,SAMJvB,EAAKqB,MAAM6U,GAAK9Q,IAAIpF,EAAKqB,MAAM,OAN3B,cAAA0uF,EAAAxuF,OAAA,SAQN,MARM,wBAAAwuF,EAAAvuF,SAAAquF,EAAAlwF,SAnyIGA,KA6yIlBm0E,iBA7yIkBv0E,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6yIC,SAAAqvF,IAAA,IAAA7vF,EAAAgB,EAAA8uF,EAAAC,EAAAp9E,EAAAuD,EAAAM,EAAAw5E,EAAAC,EAAAC,EAAAluF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwvF,GAAA,cAAAA,EAAAtvF,KAAAsvF,EAAArvF,MAAA,UAAOd,EAAPkwF,EAAA5tF,OAAA,QAAAC,IAAA2tF,EAAA,GAAAA,EAAA,GAAmB,KAAKlvF,EAAxBkvF,EAAA5tF,OAAA,QAAAC,IAAA2tF,EAAA,GAAAA,EAAA,GAAgC,MAC5ClwF,GAAeH,EAAKJ,MAAMO,cAC7BA,EAAcH,EAAKJ,MAAMO,cAEtBgB,GAAWnB,EAAKJ,MAAMuB,UACzBA,EAAUnB,EAAKJ,MAAMuB,SAGlBA,GAAYhB,EARA,CAAAmwF,EAAArvF,KAAA,eAAAqvF,EAAA/uF,OAAA,SASR,MATQ,cAAA+uF,EAAArvF,KAAA,EAgBPwD,QAAQC,IAAI,CACpB1E,EAAKwW,aAAarW,GAClBH,EAAK6V,eAAe,aAAa1V,EAAYqD,MAAMrD,EAAYgB,GAC/DnB,EAAK6V,eAAe,oBAAoB1V,EAAYqD,MAAMrD,EAAYgB,KAnBvD,UAAA8uF,EAAAK,EAAAlvF,KAAA8uF,EAAA3wF,OAAAsF,EAAA,EAAAtF,CAAA0wF,EAAA,GAafn9E,EAbeo9E,EAAA,GAcf75E,EAde65E,EAAA,GAefv5E,EAfeu5E,EAAA,KAsBbp9E,GAAiBuD,GAAcM,GAtBlB,CAAA25E,EAAArvF,KAAA,gBAuBTkvF,EAAOx5E,EAAkB0E,MAAMhF,GAC/B+5E,EAAOD,EAAKhrF,MAAM2N,GAxBTw9E,EAAA/uF,OAAA,SA4BR6uF,GA5BQ,eAAAE,EAAA/uF,OAAA,SA+BV,MA/BU,yBAAA+uF,EAAA9uF,SAAAwuF,EAAArwF,SA7yIDA,KA80IlBs0E,uBA90IkB,eAAAsc,EAAAhxF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA80IO,SAAA6vF,EAAOjzE,GAAP,IAAApc,EAAAwF,EAAA0kB,EAAAjB,EAAAqmE,EAAAtuF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4vF,GAAA,cAAAA,EAAA1vF,KAAA0vF,EAAAzvF,MAAA,cAAsBE,EAAtBsvF,EAAAhuF,OAAA,QAAAC,IAAA+tF,EAAA,GAAAA,EAAA,GAA8B,KAAK9pF,EAAnC8pF,EAAAhuF,OAAA,QAAAC,IAAA+tF,EAAA,GAAAA,EAAA,GAAmD,KAAKplE,EAAxDolE,EAAAhuF,OAAA,QAAAC,IAAA+tF,EAAA,GAAAA,EAAA,GAAqE,KAArEC,EAAAzvF,KAAA,EACajB,EAAKmqB,yBAAyBhpB,EAAQwF,EAAgB0kB,EAAa9N,GADhF,cACjB6M,EADiBsmE,EAAAtvF,KAAAsvF,EAAAnvF,OAAA,SAEhB6oB,GAAyBA,EAAsB7M,EAAe/Z,OAAS4mB,EAAsB7M,EAAe/Z,OAASxD,EAAKqB,MAAM,IAFhH,wBAAAqvF,EAAAlvF,SAAAgvF,EAAA7wF,SA90IP,gBAAAgxF,GAAA,OAAAJ,EAAAruF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAk1IlBixF,mBAl1IkBrxF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAk1IG,SAAAkwF,IAAA,IAAA5+E,EAAAtO,EAAAiC,EAAAkrF,EAAA32D,EAAA42D,EAAA9sF,EAAAkE,EAAA6oF,EAAA7uF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAmwF,GAAA,cAAAA,EAAAjwF,KAAAiwF,EAAAhwF,MAAA,UAAOgR,IAAP++E,EAAAvuF,OAAA,QAAAC,IAAAsuF,EAAA,KAAAA,EAAA,GAGbrtF,EAHa,sBAAAY,OAGyB0N,KACtCrM,EAAa5F,EAAK+F,8BAA8BpC,MACnCiC,EAAWkrF,QAAW9wF,EAAKqB,MAAMuE,EAAWkrF,QAAQxvF,UAAasE,EAAWu0B,QAAWn6B,EAAKqB,MAAMuE,EAAWu0B,QAAQ74B,UAAasE,EAAWmrF,UAAa/wF,EAAKqB,MAAMuE,EAAWmrF,UAAUzvF,QAL1L,CAAA2vF,EAAAhwF,KAAA,eAAAgwF,EAAA1vF,OAAA,SAMV,CACLuvF,OAAO9wF,EAAKqB,MAAMuE,EAAWkrF,QAC7B32D,OAAOn6B,EAAKqB,MAAMuE,EAAWu0B,QAC7B42D,SAAS/wF,EAAKqB,MAAMuE,EAAWmrF,YAThB,cAafD,EAAS9wF,EAAKqB,MAAM,GACpB84B,EAASn6B,EAAKqB,MAAM,GACpB0vF,EAAW/wF,EAAKqB,MAAM,GACpB4C,EAAiBjE,EAAKO,gBAAgB,CAAC,QAAQ,SAAS,QAhB3C0wF,EAAAhwF,KAAA,GAiBbjB,EAAKkH,aAAa3H,OAAO4H,KAAKnH,EAAKJ,MAAMqH,qBAAzC,eAAAiqF,EAAA3xF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8D,SAAAwwF,EAAOpjD,GAAP,IAAAj8B,EAAAnL,EAAA,OAAAjG,EAAAtB,EAAA0B,KAAA,SAAAswF,GAAA,cAAAA,EAAApwF,KAAAowF,EAAAnwF,MAAA,cAC5D6Q,EAAsB,SAAbi8B,EACTpnC,EAAkB3G,EAAKJ,MAAMqH,oBAAoB8mC,GAFWqjD,EAAAnwF,KAAA,EAG5DjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAA0qF,EAAA9xF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAA2wF,EAAO9tF,GAAP,IAAArD,EAAA6D,EAAA+zB,EAAA3vB,EAAA8J,EAAAyB,EAAA49E,EAAAC,EAAA,OAAA9wF,EAAAtB,EAAA0B,KAAA,SAAA2wF,GAAA,cAAAA,EAAAzwF,KAAAywF,EAAAxwF,MAAA,cAC7Cd,EAAcwG,EAAgBnD,GADeiuF,EAAAxwF,KAAA,EAErBjB,EAAK4E,mBAAmBzE,GAAY,EAAM8R,GAFrB,cAE7CjO,EAF6CytF,EAAArwF,KAAAqwF,EAAAxwF,KAAA,EAG3BjB,EAAKo4B,aAAaj4B,EAAY6D,EAAgBiO,GAHnB,UAG7C8lB,EAH6C05D,EAAArwF,MAI/C4C,IAAmBA,EAAgBkB,2BAA8BlB,EAAgBkB,0BAA0B5D,QAJ5D,CAAAmwF,EAAAxwF,KAAA,gBAAAwwF,EAAAxwF,KAAA,GAKnBjB,EAAKiF,oBAAoBjB,EAAgBkB,0BAA0B1B,EAAMrD,EAAY2R,GALlE,QAK3C1J,EAL2CqpF,EAAArwF,KAMjD2vF,EAAWA,EAASlpF,KAAKO,GAErB2vB,GAAaA,EAAUM,SAAWN,EAAUM,OAAO/2B,UACrDwvF,EAASA,EAAOjpF,KAAKO,EAAgBjD,MAAM4yB,EAAUM,SACrD8B,EAASA,EAAOtyB,KAAKO,EAAgBjD,MAAM4yB,EAAUO,UAVN,aAe7CpmB,EAAYlS,EAAKgW,kBAAkB7V,IAfU,CAAAsxF,EAAAxwF,KAAA,gBAAAwwF,EAAAxwF,KAAA,GAiB3CjB,EAAKkH,aAAa3H,OAAO4H,KAAK+K,GAAW6J,OAAQ,SAAAoC,GAAQ,OAAKjM,EAAUiM,GAAU02B,UAAlF,eAAA68C,EAAAnyF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8F,SAAAgxF,EAAOxzE,GAAP,IAAAZ,EAAAq0E,EAAAC,EAAA/7E,EAAAo4E,EAAA4D,EAAA,OAAApxF,EAAAtB,EAAA0B,KAAA,SAAAixF,GAAA,cAAAA,EAAA/wF,KAAA+wF,EAAA9wF,MAAA,cAC5Fsc,EAAiBrL,EAAUiM,GADiE4zE,EAAA9wF,KAAA,EAKxFwD,QAAQC,IAAI,CACpB1E,EAAKu3E,mBAAmBp5D,EAAShe,EAAYqE,KAAK+B,SAClDvG,EAAK8E,yBAAyBb,EAAesZ,KAPmD,OAAAq0E,EAAAG,EAAA3wF,KAAAywF,EAAAtyF,OAAAsF,EAAA,EAAAtF,CAAAqyF,EAAA,GAGhG97E,EAHgG+7E,EAAA,GAIhG3D,EAJgG2D,EAAA,GAU9F/7E,GAAgBo4E,IACZ4D,EAAwB9xF,EAAKmD,iBAAiB2S,EAAayH,EAAena,UAAU+B,MAAMnF,EAAKqB,MAAM6sF,OAC7E4D,EAAsBxwF,UAElDyvF,EAAWA,EAASlpF,KAAKiqF,IAdqE,wBAAAC,EAAAvwF,SAAAmwF,EAAAhyF,SAA9F,gBAAAqyF,GAAA,OAAAN,EAAAxvF,MAAAvC,KAAAwC,YAAA,IAjB2C,YAsC/ChC,EAAYiX,YAAajX,EAAYiX,UAAUC,YAtCA,CAAAo6E,EAAAxwF,KAAA,gBAuC3C0S,EAAiBpU,OAAOC,OAAO,GAAGW,IACzB6P,UAAYzQ,OAAO+X,OAAOnX,EAAY6P,WACrD2D,EAAenP,KAAOjF,OAAOC,OAAO,GAAGW,EAAYiX,UAAUC,aAGzD1D,EAAeyD,UAAUG,cAC3B5D,EAAeyD,UAAUG,aAAa1N,QAAS,SAAA2N,GAC7C,IAAMC,EAAgB9D,EAAe3D,UAAU0H,KAAM,SAAA5N,GAAC,OAAKA,EAAE4C,OAAS8K,EAAY9K,OAClF,GAAI+K,EAAc,CAChB,IAAME,EAAchE,EAAe3D,UAAU4H,QAAQH,GACrD9D,EAAe3D,UAAU2H,GAAeH,KAjDGi6E,EAAAxwF,KAAA,GAsDhBjB,EAAK4E,mBAAmB+O,GAAe,GAAM,GAtD7B,aAsD3C49E,EAtD2CE,EAAArwF,QAuDvBmwF,EAAmBnpF,iBAAoBmpF,EAAmBnpF,gBAAgB9G,QAvDnD,CAAAmwF,EAAAxwF,KAAA,gBAAAwwF,EAAAxwF,KAAA,GAwDTjB,EAAKiF,oBAAoBssF,EAAmBnpF,gBAAgB5E,EAAMmQ,EAAe7B,GAxDxE,QAwDzC0/E,EAxDyCC,EAAArwF,KAyD/C2vF,EAAWA,EAASlpF,KAAK2pF,GAzDsB,yBAAAC,EAAAjwF,SAAA8vF,EAAA3xF,SAA/C,gBAAAsyF,GAAA,OAAAZ,EAAAnvF,MAAAvC,KAAAwC,YAAA,IAH4D,wBAAAivF,EAAA5vF,SAAA2vF,EAAAxxF,SAA9D,gBAAAuyF,GAAA,OAAAhB,EAAAhvF,MAAAvC,KAAAwC,YAAA,IAjBa,eAoFnB2uF,EAASA,EAAO1rF,IAAI2rF,GACpB52D,EAASA,EAAO/0B,IAAI2rF,GAEd5oF,EAAS,CACb2oF,SACA32D,SACA42D,YA1FiBE,EAAA1vF,OAAA,SA6FZvB,EAAKgG,8BAA8BrC,EAAcwE,IA7FrC,yBAAA8oF,EAAAzvF,SAAAqvF,EAAAlxF,SAl1IHA,KAi7IlBwyF,YAj7IkB,eAAAC,EAAA7yF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAi7IJ,SAAA0xF,EAAOlyF,GAAP,IAAA43B,EAAA,OAAAr3B,EAAAtB,EAAA0B,KAAA,SAAAwxF,GAAA,cAAAA,EAAAtxF,KAAAsxF,EAAArxF,MAAA,cAAAqxF,EAAArxF,KAAA,EACYjB,EAAKo4B,aAAaj4B,GAD9B,YACN43B,EADMu6D,EAAAlxF,OAE0B,OAArB22B,EAAUO,OAFf,CAAAg6D,EAAArxF,KAAA,eAAAqxF,EAAA/wF,OAAA,SAGHw2B,EAAUO,QAHP,cAAAg6D,EAAA/wF,OAAA,SAKL,MALK,wBAAA+wF,EAAA9wF,SAAA6wF,EAAA1yF,SAj7II,gBAAA4yF,GAAA,OAAAH,EAAAlwF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAw7IlBm7B,mBAx7IkBv7B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAw7IG,SAAA6xF,IAAA,IAAAxrF,EAAA0yB,EAAA+4D,EAAAtwF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4xF,GAAA,cAAAA,EAAA1xF,KAAA0xF,EAAAzxF,MAAA,UAAO+F,EAAPyrF,EAAAhwF,OAAA,QAAAC,IAAA+vF,EAAA,GAAAA,EAAA,GAAwB,KAEtCzyF,EAAKJ,MAAMqH,qBAAwBjH,EAAKJ,MAAMuB,QAFhC,CAAAuxF,EAAAzxF,KAAA,eAAAyxF,EAAAnxF,OAAA,UAGV,GAHU,cAMbm4B,EAAkB,GANLg5D,EAAAzxF,KAAA,EAQbjB,EAAKkH,aAAa3H,OAAO4H,KAAKnH,EAAKJ,MAAMqH,qBAAzC,eAAA0rF,EAAApzF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8D,SAAAiyF,EAAO7kD,GAAP,IAAApnC,EAAA,OAAAjG,EAAAtB,EAAA0B,KAAA,SAAA+xF,GAAA,cAAAA,EAAA7xF,KAAA6xF,EAAA5xF,MAAA,WAC9D+F,GAAoBA,IAAqB+mC,EADqB,CAAA8kD,EAAA5xF,KAAA,eAAA4xF,EAAAtxF,OAAA,wBAI5DoF,EAAkB3G,EAAKJ,MAAMqH,oBAAoB8mC,GAJW8kD,EAAA5xF,KAAA,EAK5DjB,EAAKkH,aAAa3H,OAAO4H,KAAKR,GAA9B,eAAAmsF,EAAAvzF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAoyF,EAAOvvF,GAAP,IAAArD,EAAA6yF,EAAAxsD,EAAAn0B,EAAA2lD,EAAA,OAAAt3D,EAAAtB,EAAA0B,KAAA,SAAAmyF,GAAA,cAAAA,EAAAjyF,KAAAiyF,EAAAhyF,MAAA,cAC7Cd,EAAcwG,EAAgBnD,GADeyvF,EAAAhyF,KAAA,EAKzCjB,EAAKmW,eAAehW,EAAYH,EAAKJ,MAAMuB,SALF,OAAA6xF,EAAAC,EAAA7xF,KAGjDolC,EAHiDwsD,EAGjDxsD,iBACAn0B,EAJiD2gF,EAIjD3gF,4BAGEm0B,IACIwxB,EAAWhxD,EAAmBxD,EAAQrD,EAAYqE,KAAKhB,MAC7Dk2B,EAAgBs+B,GAAY,CAC1Bx0D,QACAuqC,WACA5tC,cACAkS,gCAb+C,wBAAA4gF,EAAAzxF,SAAAuxF,EAAApzF,SAA/C,gBAAAuzF,GAAA,OAAAJ,EAAA5wF,MAAAvC,KAAAwC,YAAA,IAL4D,wBAAA0wF,EAAArxF,SAAAoxF,EAAAjzF,SAA9D,gBAAAwzF,GAAA,OAAAR,EAAAzwF,MAAAvC,KAAAwC,YAAA,IARa,cAAAuwF,EAAAnxF,OAAA,SAgCZm4B,GAhCY,wBAAAg5D,EAAAlxF,SAAAgxF,EAAA7yF,SAx7IHA,KA69IlByzF,2BA79IkB7zF,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA69IW,SAAA0yF,IAAA,IAAAv+C,EAAAw+C,EAAAC,EAAAC,EAAAC,EAAAtxF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4yF,GAAA,cAAAA,EAAA1yF,KAAA0yF,EAAAzyF,MAAA,UAAO6zC,EAAP2+C,EAAAhxF,OAAA,QAAAC,IAAA+wF,EAAA,GAAAA,EAAA,GAAgB,KACtCzzF,EAAKJ,MAAMuB,QADW,CAAAuyF,EAAAzyF,KAAA,eAAAyyF,EAAAnyF,OAAA,UAElB,GAFkB,UAIrB+xF,EAAgB,GAChBC,EAAkBvzF,EAAKqB,MAAM,GAAG+D,IAAI,OACpCouF,EAAkBxzF,EAAKO,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,qBANpD,CAAAmzF,EAAAzyF,KAAA,eAAAyyF,EAAAzyF,KAAA,EAQnBjB,EAAKkH,aAAa3H,OAAO4H,KAAKqsF,GAA9B,eAAAG,EAAAp0F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA+C,SAAAizF,EAAOpwF,GAAP,IAAArD,EAAA0zF,EAAA/9E,EAAA,OAAApV,EAAAtB,EAAA0B,KAAA,SAAAgzF,GAAA,cAAAA,EAAA9yF,KAAA8yF,EAAA7yF,MAAA,UAC7Cd,EAAcqzF,EAAgBhwF,GACnB,OAAbsxC,GAAqB30C,EAAY20C,SAASzkC,gBAAkBykC,EAASzkC,cAFtB,CAAAyjF,EAAA7yF,KAAA,eAAA6yF,EAAAvyF,OAAA,qBAK/CsyF,EAAgB7zF,EAAKklB,kBAAkB/kB,EAAYqD,UACjCrD,EAAYglB,IANiB,CAAA2uE,EAAA7yF,KAAA,eAAA6yF,EAAA7yF,KAAA,EAO3BjB,EAAKJ,MAAMwlB,aAAajlB,EAAYqD,MAAMrD,EAAYoG,QAAQpG,EAAYglB,KAP/C,OAOjD0uE,EAPiDC,EAAA1yF,KAAA,WAS/CyyF,EAT+C,CAAAC,EAAA7yF,KAAA,gBAAA6yF,EAAA7yF,KAAA,GAUtBjB,EAAKkB,gBAAgBf,EAAYqD,MAAMxD,EAAKJ,MAAMuB,SAV5B,SAU3C2U,EAV2Cg+E,EAAA1yF,OAW7B0U,EAAawjB,IAAIi6D,KACnCD,EAAc9vF,GAAS,CACrBrD,cACAU,QAAQiV,IAdqC,yBAAAg+E,EAAAtyF,SAAAoyF,EAAAj0F,SAA/C,gBAAAo0F,GAAA,OAAAJ,EAAAzxF,MAAAvC,KAAAwC,YAAA,IARmB,cAAAuxF,EAAAnyF,OAAA,SA6BpB+xF,GA7BoB,yBAAAI,EAAAlyF,SAAA6xF,EAAA1zF,SA79IXA,KA+/IlBsF,oBA//IkB,eAAA+uF,EAAAz0F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+/II,SAAAszF,EAAOn+E,EAAatS,EAAMrD,GAA1B,IAAA2R,EAAA0c,EAAA0lE,EAAA/xF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAqzF,GAAA,cAAAA,EAAAnzF,KAAAmzF,EAAAlzF,MAAA,UAAsC6Q,EAAtCoiF,EAAAzxF,OAAA,QAAAC,IAAAwxF,EAAA,IAAAA,EAAA,KAEpBp+E,EAAe9V,EAAKqB,MAAMyU,IACTY,GAAG,GAHA,CAAAy9E,EAAAlzF,KAAA,eAAAkzF,EAAAlzF,KAAA,EAImBjB,EAAK29E,uBAAuBx9E,EAAY2R,GAJ3D,QAIZ0c,EAJY2lE,EAAA/yF,QAMhB0U,EAAeA,EAAa3Q,MAAMqpB,IANlB,cAAA2lE,EAAA5yF,OAAA,SASbuU,GATa,wBAAAq+E,EAAA3yF,SAAAyyF,EAAAt0F,SA//IJ,gBAAAy0F,EAAAC,EAAAC,GAAA,OAAAN,EAAA9xF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA6gJlBg+E,uBA7gJkB,eAAA4W,EAAAh1F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6gJO,SAAA6zF,EAAOr0F,EAAY2R,GAAnB,IAAA2c,EAAA9qB,EAAAiC,EAAA4uE,EAAA/wE,EAAAgxF,EAAAtyF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA4zF,GAAA,cAAAA,EAAA1zF,KAAA0zF,EAAAzzF,MAAA,UAA0BwtB,EAA1BgmE,EAAAhyF,OAAA,QAAAC,IAAA+xF,EAAA,GAAAA,EAAA,GAA8C,KAA9C,CAAAC,EAAAzzF,KAAA,WAGrBwtB,EAAsBzuB,EAAKO,gBAAgB,CAAC,QAAQ,SAASJ,EAAYqD,MAAM,wBAH1D,CAAAkxF,EAAAzzF,KAAA,eAAAyzF,EAAAnzF,OAAA,SAKZ,MALY,UAUjBoC,EAViB,uBAAAY,OAUsBpE,EAAYoG,QAVlC,KAAAhC,OAU6CuN,EAV7C,KAAAvN,OAUuDkqB,KACxE7oB,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAZnB,CAAAozF,EAAAzzF,KAAA,eAAAyzF,EAAAnzF,OAAA,SAadvB,EAAKqB,MAAMuE,IAbG,cAAA8uF,EAAAzzF,KAAA,GAgBDjB,EAAKwZ,gBAAgBrZ,EAAYoG,QAAQuL,EAAO,KAAK,MAAK,EAAM,KAAK,OAAO,GAhB3E,aAgBnB0iE,EAhBmBkgB,EAAAtzF,QAkBNozE,EAAU/xE,OAlBJ,CAAAiyF,EAAAzzF,KAAA,cAmBrBuzE,EAAYA,EAAUtwD,SACLswD,EAAU/lD,GApBN,CAAAimE,EAAAzzF,KAAA,YAqBbwC,EAAiBzD,EAAKmD,iBAAiBqxE,EAAU/lD,GAAqB,IACvEzuB,EAAKqB,MAAMoC,GAAgBnC,QAtBb,CAAAozF,EAAAzzF,KAAA,gBAAAyzF,EAAAnzF,OAAA,SAuBVvB,EAAKgG,8BAA8BrC,EAAcF,IAvBvC,eAAAixF,EAAAnzF,OAAA,SA4BhB,MA5BgB,yBAAAmzF,EAAAlzF,SAAAgzF,EAAA70F,SA7gJP,gBAAAg1F,EAAAC,GAAA,OAAAL,EAAAryF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA4iJlBiX,cA5iJkB,eAAAi+E,EAAAt1F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4iJF,SAAAm0F,EAAO30F,EAAY2R,GAAnB,IAAAnO,EAAAiC,EAAAy9D,EAAAxxB,EAAAkjD,EAAAC,EAAAxgB,EAAAxwE,EAAAyP,EAAA,OAAA/S,EAAAtB,EAAA0B,KAAA,SAAAm0F,GAAA,cAAAA,EAAAj0F,KAAAi0F,EAAAh0F,MAAA,UAER0C,EAFQ,cAAAY,OAEsBpE,EAAYoG,QAFlC,KAAAhC,OAE6CuN,KACrDlM,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAJ5B,CAAA2zF,EAAAh0F,KAAA,eAAAg0F,EAAA1zF,OAAA,SAKLvB,EAAKqB,MAAMuE,IALN,cAQRy9D,EAAU3yD,GAAcC,MAAMojC,MAC9BlC,EATQ,GAAAttC,OASM8+D,EAAQxxB,UATdttC,OASyBpE,EAAYoG,QATrC,YAAAhC,OASuDuN,EATvD,uBAAAmjF,EAAAh0F,KAAA,EAaJwD,QAAQC,IAAI,CACpB1E,EAAK60D,kBAAkBhjB,EAASwxB,EAAQ3sB,KAAI,GAC5C12C,EAAK4E,mBAAmBzE,GAAY,GAAM,KAf9B,cAAA40F,EAAAE,EAAA7zF,KAAA4zF,EAAAz1F,OAAAsF,EAAA,EAAAtF,CAAAw1F,EAAA,GAWZvgB,EAXYwgB,EAAA,GAYZhxF,EAZYgxF,EAAA,GAkBVvhF,EAAazT,EAAKqB,MAAM,GAExBmzE,GAAaxwE,GACfzE,OAAO4H,KAAKnD,EAAgBiJ,0BAA0BpD,QAAS,SAAAuG,GAC7D,IAAMq3D,EAAyBznE,EAAKqB,MAAM2C,EAAgBiJ,yBAAyBmD,IACnF,GAAIq3D,EAAuB/wD,GAAG,OAAU89D,EAAU/xE,OAAO,EAAE,CACzD,IAAMwN,EAAeukE,EAAU,GAAG0V,cAAcxyE,KAAM,SAAA5N,GAAC,OAAKA,EAAEsG,aAAaC,gBAAkBD,EAAaC,gBAC1G,GAAIJ,EAAa,CACf,IAAMilF,EAAgBl1F,EAAKqB,MAAM4O,EAAa26E,WACzCsK,EAAc5zF,UACjBmS,EAAaA,EAAW5L,KAAKqtF,EAAc/vF,MAAMsiE,WAStDh0D,GAAcA,EAAWnS,SAAWmS,EAAWzO,IAAI,MACtDyO,EAAazT,EAAKm1F,iBAAiBh1F,EAAY2R,IAtCnCmjF,EAAA1zF,OAAA,SAyCPvB,EAAKgG,8BAA8BrC,EAAc8P,IAzC1C,yBAAAwhF,EAAAzzF,SAAAszF,EAAAn1F,SA5iJE,gBAAAy1F,EAAAC,GAAA,OAAAR,EAAA3yF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA2lJlBw1F,iBA3lJkB,eAAAG,EAAA/1F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2lJC,SAAA40F,EAAOp1F,EAAY2R,GAAnB,IAAAnO,EAAAiC,EAAAy9D,EAAAxxB,EAAA2iC,EAAA/gE,EAAAgG,EAAArF,EAAA6Z,EAAA,OAAAvtB,EAAAtB,EAAA0B,KAAA,SAAA00F,GAAA,cAAAA,EAAAx0F,KAAAw0F,EAAAv0F,MAAA,UAEX0C,EAFW,iBAAAY,OAEsBpE,EAAYoG,QAFlC,KAAAhC,OAE6CuN,KACxDlM,EAAa5F,EAAK+F,8BAA8BpC,KACnC3D,EAAKqB,MAAMuE,GAAYtE,QAJzB,CAAAk0F,EAAAv0F,KAAA,eAAAu0F,EAAAj0F,OAAA,SAKRvB,EAAKqB,MAAMuE,IALH,cAQXy9D,EAAU3yD,GAAcC,MAAMgmC,OAC9B9E,EATW,GAAAttC,OASG8+D,EAAQxxB,UATXttC,OASsBpE,EAAYoG,QATlC,YAAAhC,OASoDuN,GATpD0jF,EAAAv0F,KAAA,EAUKjB,EAAK60D,kBAAkBhjB,EAASwxB,EAAQ3sB,KAAI,GAVjD,YAUb89B,EAVaghB,EAAAp0F,MAAA,CAAAo0F,EAAAv0F,KAAA,cAaXwS,EAAazT,EAAKqB,MAAMmzE,EAAU,GAAG8V,cACvB72E,EAAWiD,GAAG,GAdjB,CAAA8+E,EAAAv0F,KAAA,gBAAAu0F,EAAAj0F,OAAA,SAgBNvB,EAAKqF,cAAc1B,EAAc8P,IAhB3B,eAmBPgG,EAAY3N,UAAS,IAAIiN,MAAOI,UAAU,KAC1C/E,EAAiBtI,SAAS2N,GAAY,MApB/B+7E,EAAAv0F,KAAA,GAqBKjB,EAAKwZ,gBAAgBrZ,EAAYoG,QAAQuL,EAAOsC,EAAe,MAAK,EAAK,KAAK,QArBnF,WAqBbogE,EArBaghB,EAAAp0F,OAuBP6sB,EAAoBumD,EAAUz4D,OAAQ,SAAAlO,GAAC,OAAK7N,EAAKqB,MAAMwM,EAAEy8E,WAAW5zE,GAAG,MACvDjU,OAxBT,CAAA+yF,EAAAv0F,KAAA,YAyBXwS,EAAazT,EAAKqB,MAAM4sB,EAAkB,GAAGq8D,WACxCtqF,EAAKqB,MAAMoS,GAAYnS,QA1BjB,CAAAk0F,EAAAv0F,KAAA,gBAAAu0F,EAAAj0F,OAAA,SA2BFvB,EAAKgG,8BAA8BrC,EAAc8P,IA3B/C,eAAA+hF,EAAAj0F,OAAA,SAiCV,MAjCU,yBAAAi0F,EAAAh0F,SAAA+zF,EAAA51F,SA3lJD,gBAAA81F,EAAAC,GAAA,OAAAJ,EAAApzF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAioJlBy4B,aAjoJkB,eAAAu9D,EAAAp2F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAioJH,SAAAi1F,EAAOz1F,GAAP,IAAA6D,EAAAiO,EAAAtO,EAAAiC,EAAAiwF,EAAAC,EAAAjyB,EAAA4Y,EAAAsZ,EAAA9P,EAAAluD,EAAAi+D,EAAArnC,EAAAsnC,EAAAC,EAAA/zF,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAq1F,GAAA,cAAAA,EAAAn1F,KAAAm1F,EAAAl1F,MAAA,UAAmB+C,EAAnBkyF,EAAAzzF,OAAA,QAAAC,IAAAwzF,EAAA,IAAAA,EAAA,GAAyCjkF,IAAzCikF,EAAAzzF,OAAA,QAAAC,IAAAwzF,EAAA,KAAAA,EAAA,GAER/1F,EAAYqE,KAFJ,CAAA2xF,EAAAl1F,KAAA,eAAAk1F,EAAA50F,OAAA,UAGJ,GAHI,UAOPoC,EAPO,aAAAY,OAOsBpE,EAAYqE,KAAK+B,QAPvC,KAAAhC,OAOkD0N,KACzDrM,EAAa5F,EAAK+F,8BAA8BpC,MACnCiC,EAAWyyB,QAAWr4B,EAAKqB,MAAMuE,EAAWyyB,QAAQ/2B,UAAasE,EAAW0yB,QAAWt4B,EAAKqB,MAAMuE,EAAW0yB,QAAQh3B,QAT3H,CAAA60F,EAAAl1F,KAAA,eAAAk1F,EAAA50F,OAAA,SAUJ,CACL82B,OAAOr4B,EAAKqB,MAAMuE,EAAWyyB,QAC7BC,OAAOt4B,EAAKqB,MAAMuE,EAAW0yB,UAZpB,cAAA69D,EAAAl1F,KAAA,GAgBMjB,EAAK+3E,QAAQ53E,EAAYqE,KAAKhB,OAhBpC,WAgBPqyF,EAhBOM,EAAA/0F,KAAA,CAAA+0F,EAAAl1F,KAAA,gBAAAk1F,EAAA50F,OAAA,UAmBJ,GAnBI,WAsBRyC,EAtBQ,CAAAmyF,EAAAl1F,KAAA,gBAAAk1F,EAAAl1F,KAAA,GAuBajB,EAAK4E,mBAAmBzE,GAvBrC,QAuBX6D,EAvBWmyF,EAAA/0F,KAAA,WA0BR4C,EA1BQ,CAAAmyF,EAAAl1F,KAAA,gBAAAk1F,EAAA50F,OAAA,UA2BJ,GA3BI,eA8BPu0F,EAAYD,EAAKC,UAAU36E,IAAI,SAACopD,EAAKr0D,GAAQ,OAAOq0D,EAAKxuD,WAAW1F,gBACpEwzD,EAAOgyB,EAAKhyB,KAEZ4Y,EAAgB,GAChBsZ,EAAgB,GAClB9P,EAAU,KAnCDkQ,EAAAl1F,KAAA,GAqCPjB,EAAKkH,aAAa/G,EAAY6P,UAA9B,eAAAomF,EAAA72F,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAA01F,EAAOpmF,EAAaC,GAApB,IAAAE,EAAAkmF,EAAAC,EAAAC,EAAA,OAAA91F,EAAAtB,EAAA0B,KAAA,SAAA21F,GAAA,cAAAA,EAAAz1F,KAAAy1F,EAAAx1F,MAAA,UACtCmP,EAAeH,EAAa1J,QAAQwP,WAAW1F,eAEjC,KADdimF,EAAYR,EAAUl+E,QAAQxH,IAFQ,CAAAqmF,EAAAx1F,KAAA,YAItCs1F,EAAcv2F,EAAKqB,OAAOrB,EAAKgvD,MAAM6U,EAAKyyB,KAC1CE,EAAcx2F,EAAK27E,QAAQ4a,EAAYnxF,IAAI,MAAMD,MAAM,MAEvD8M,GAAsC,aAAtBhC,EAAavD,KAPS,CAAA+pF,EAAAx1F,KAAA,eAAAw1F,EAAAx1F,KAAA,EAQxBjB,EAAK2lF,WAAWxlF,EAAYqD,MAAMrD,GARV,OAQxC8lF,EARwCwQ,EAAAr1F,KAAA,OAW1C20F,EAAc3lF,GAAgBomF,EAC9B/Z,EAAcrsE,GAAgBmmF,EAZY,yBAAAE,EAAAj1F,SAAA60F,EAAA12F,SAAxC,gBAAA+2F,EAAAC,GAAA,OAAAP,EAAAl0F,MAAAvC,KAAAwC,YAAA,IArCO,WAqDP41B,EAAY,CAChBM,OAAQ,KACRC,OAAQ,OAGNt0B,EA1DS,CAAAmyF,EAAAl1F,KAAA,YA2DX82B,EAAUM,OAASr4B,EAAKiI,UAAUw0E,EAAcz4E,EAAgBgJ,qBAAqBhJ,EAAgBoE,iBACrG2vB,EAAUO,OAASt4B,EAAKiI,UAAU8tF,EAAc/xF,EAAgBgJ,qBAAqBhJ,EAAgBoE,iBAEjG69E,IACFluD,EAAUM,OAASN,EAAUM,OAAOxwB,KAAKo+E,GACzCluD,EAAUO,OAASP,EAAUO,OAAOzwB,KAAKo+E,IAIrC+P,EAAsBh2F,EAAKO,gBAAgB,CAAC,YAAY,OAAO,aACzCP,EAAKO,gBAAgB,CAAC,YAAY,OAAO,cAC1Cy1F,EAtEhB,CAAAG,EAAAl1F,KAAA,gBAuEH0tD,EAAe3uD,EAAKszE,kBAvEjB6iB,EAAAl1F,KAAA,GAwEa0tD,EAAatrD,OAAOlD,EAAYqD,MAAMrD,GAxEnD,SAwEH81F,EAxEGE,EAAA/0F,QA0EP22B,EAAUM,OAASN,EAAUM,OAAOxwB,KAAKouF,GACzCl+D,EAAUO,OAASP,EAAUO,OAAOzwB,KAAKouF,IA3ElC,eAAAE,EAAA50F,OAAA,SA8EJvB,EAAKgG,8BAA8BrC,EAAco0B,IA9E7C,eAAAo+D,EAAA50F,OAAA,SAiFN,MAjFM,yBAAA40F,EAAA30F,SAAAo0F,EAAAj2F,SAjoJG,gBAAAi3F,GAAA,OAAAjB,EAAAzzF,MAAAvC,KAAAwC,YAAA,GAChBxC,KAAKU,SAAST,gEAmtJCuO,GAMf,IAN8D,IAAzC/K,EAAyCjB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAhC,EAAEoH,EAA8BpH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAjB,EAAEqH,EAAerH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAF,EAEtD00F,EAAatrF,WAAW4C,GAAO,EACjCupD,EAAW/3D,KAAK0B,MAAM8M,GAAOw0D,MAE7Bm0B,EAAY,EACTp/B,EAASp+B,IAAI,MAClBo+B,EAAWA,EAAStyD,IAAI,KACxB0xF,IAMF,GAHAvtF,EAAemP,KAAKG,IAAI,EAAEtP,GAGtB4E,GAAO,IAAK,CACd,IAAM4oF,EAAc3zF,EAAWs0D,EAASs/B,IAAI,GAAGzmF,QAAQhH,GAAcihB,OAAO,EAAEpnB,GAAY,KAC1Fs0D,EAAW5rD,SAAS4rD,GAAU3hD,YAAaghF,EAAc,IAAIA,EAAc,SAE3Er/B,EAAWA,EAASnnD,QAAQnN,GAI9B,GAAIs0D,GAAU,GAAMA,EAASj1D,OAAO,EAAG8G,EACrCmuD,EAAWnsD,WAAWmsD,GAAUu/B,YAAY1tF,QACvC,GAAKmuD,EAASj1D,OAAO,EAAG+G,EAAc,CAC3C,IAAM0tF,EAAa1tF,GAAckuD,EAASj1D,OAAO,GAEjDi1D,GADe/3D,KAAK0B,MAAM8M,GAAOw0D,MAAM5sD,WAAWo6C,QAAQ,IAAI,IAAI3lC,OAAQktC,EAASj1D,OAAO,EAAGy0F,GAW/F,OANIL,IACFn/B,EAAW,IAAIA,GAGjBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAI,KA+Bfo/B,+CAIHj2F,EAAQiQ,EAAM1N,EAAS+zF,EAAOC,GAEhDh0F,EAAY9B,MAAM8B,GAAuB,EAAXA,EAC9B+zF,EAAU71F,MAAM61F,GAAmB,GAATA,EAC1BC,EAAuB91F,MAAM81F,GAA6C,EAAtBA,EAGpD,IAAMC,GAFNx2F,EAAU0K,WAAW5L,KAAK0B,MAAMR,IAAU0P,QAAQnN,IAE3B2S,WAAWo6C,QAAQ,IAAI,IAAI1tD,OAC9C40F,EAAOF,IACT/zF,EAAWsV,KAAKG,IAAI,EAAEzV,GAAUi0F,EAAOF,IACvCt2F,EAAU0K,WAAW5L,KAAK0B,MAAMR,IAAU0P,QAAQnN,IAGpD,IAAMk0F,EAAU5+E,KAAK2W,MAAMxuB,GACvB02F,GAAW12F,EAAQ,GAAGo2F,YAAY7zF,GAAUonB,OAAO,EAAEpnB,GAGzD,GAFAm0F,GAAWA,EAAS,IAAIC,OAAOp0F,IAAYonB,OAAO,EAAEpnB,GAEhDg0F,EAAoB,CACtB,IAAMK,EAAiBF,EAAQ/sE,OAAO,EAAE4sE,GACxCG,EAAUA,EAAQ/sE,OAAO4sE,GACzB,IAAMM,EAAsBv4F,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAW3mC,SAAU,OAAQb,MAAO,OAAQ6Q,WAAY,WAAY2oF,EAApE,IAA8EG,GAC1G,OAAQn2F,MAAM3B,KAAKivD,QAAQ/tD,IApBR,IAoBsB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KAAGosE,EAAmBv4F,EAAAC,EAAAC,cAAA,SAAO+d,MAAO,CAACze,SAAS,QAAS44F,GAAvD,IAAwEp4F,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAW3mC,SAAU,CAAC,EAAE,IAAKmS,IAE9I,OAAQxP,MAAM3B,KAAKivD,QAAQ/tD,IAtBR,IAsBsB1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KAAGgsE,EAAQn4F,EAAAC,EAAAC,cAAA,iBAASk4F,GAA4B,MAAVzmF,EAAgB,IAAM,KAAQA,EAAQ3R,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAW3mC,SAAU,CAAC,EAAE,IAAKmS,GAAqB,eCtmJ9J0rB,8MAnLbp8B,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,+IAIL,IAAM4uF,GAAW,IAAI5+E,MAAO6+E,cACtBC,EAAoBl4F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YACrEu3F,EAAcD,EAAoB,IAAM,EAAE,EAChD,OACE14F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,EACJ9oB,GAAI,SACJ/G,WAAY,SACZC,cAAe,SACfuV,UAAWC,IAAO44E,OAClBh6F,gBAAiB,QACjB6L,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwnB,GAAI,CAAC,EAAE,GACPzX,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,CAAC,OAAO,QAChB8K,WAAY,aACZ2oB,SAAU,CAAC,OAAO,QAClBzoB,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,EAAEi+F,GAAcnuF,cAAe,SAAU/K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI+mB,GAAI,EAAG5nB,MAAO,aAAlG,aAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,UAC7BxK,EAAAC,EAAAC,cAAC24F,EAAD,CAAS3uE,GAAI,CAAC,EAAE,GAAItE,KAAM,kCAAmC3T,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQqpB,WAAY,QAAhK,cACAhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,CAAC,EAAE,GAAIxvB,MAAO,EAAG+P,eAAgB,CAAC,SAAS,eACnDzK,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEn6F,MAAO,OACP+yD,GAAG,oBACH3xC,UAAWC,IAAO+4E,MAElB/4F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIgQ,WAAY,EAAG7Q,MAAO,OAAQqpB,WAAY,QAAxH,sBAGJhoB,EAAAC,EAAAC,cAAC24F,EAAD,CAAS3uE,GAAI,CAAC,EAAE,GAAItE,KAAM,kDAAmD3T,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQqpB,WAAY,QAAhL,kBACAhoB,EAAAC,EAAAC,cAAC24F,EAAD,CAAS3uE,GAAI,CAAC,EAAE,GAAItE,KAAM,gEAAiE3T,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQqpB,WAAY,QAA9L,iBACAhoB,EAAAC,EAAAC,cAAC24F,EAAD,CAAS3uE,GAAI,CAAC,EAAE,GAAItE,KAAM,4FAA6F3T,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQqpB,WAAY,QAA1N,kBAIF0wE,GACE14F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,EAAEi+F,GAAcnuF,cAAe,SAAU/K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI+mB,GAAI,EAAG5nB,MAAO,aAAlG,cAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,UAC7BxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,CAAC,EAAE,GAAIxvB,MAAO,EAAG+P,eAAgB,CAAC,SAAS,eACnDzK,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEn6F,MAAO,OACP+yD,GAAI,cACJ3xC,UAAWC,IAAO+4E,MAElB/4F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIgQ,WAAY,EAAG7Q,MAAO,OAAQqpB,WAAY,QAAxH,cAGJhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,CAAC,EAAE,GAAIxvB,MAAO,EAAG+P,eAAgB,CAAC,SAAS,eACnDzK,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEn6F,MAAO,OACPohB,UAAWC,IAAO+4E,KAClBrnC,GAAI,yBAEJ1xD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIgQ,WAAY,EAAG7Q,MAAO,OAAQqpB,WAAY,QAAxH,eAGJhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,CAAC,EAAE,GAAIxvB,MAAO,EAAG+P,eAAgB,CAAC,SAAS,eACnDzK,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEn6F,MAAO,OACPohB,UAAWC,IAAO+4E,KAClBrnC,GAAI,2BAEJ1xD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIgQ,WAAY,EAAG7Q,MAAO,OAAQqpB,WAAY,QAAxH,iBAGJhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,CAAC,EAAE,GAAIxvB,MAAO,EAAG+P,eAAgB,CAAC,SAAS,eACnDzK,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,6BACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIgQ,WAAY,EAAG7Q,MAAO,OAAQqpB,WAAY,QAAxH,aAMZhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,EAAEi+F,GAAcnuF,cAAe,SAAU/K,OAAQ,CAAC,OAAO,SACrEO,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI+mB,GAAI,EAAG5nB,MAAO,aAAlG,wBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAIb,MAAO,OAAQqpB,WAAY,QAAzG,sBAEFhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,EAAEi+F,GAAcnuF,cAAe,UAC3CxK,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,CAAC,SAAS,QAASxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI+mB,GAAI,EAAG5nB,MAAO,aAAlG,WAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1DzK,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,mCACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,4BAA4B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAEjHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,4BACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,6BAA6B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAElHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,8BACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,4BAA4B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAEjHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,mCACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,2BAA2B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAEhHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,iCACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,2BAA2B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAEhHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,gDACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,6BAA6B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,SAElHE,EAAAC,EAAAC,cAAC24F,EAAD,CAASjzE,KAAK,mCACZ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOgS,IAAI,+BAA+B1S,OAAQ,QAASyjB,GAAI,CAAC,OAAO,GAAIqD,GAAI,CAAC,EAAE,GAAIhI,UAAW,EAAGze,aAAc,aAM5HE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,CAAC,OAAO,QAChB+K,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHjQ,MAAO,EACP6P,WAAY,SACZE,eAAgB,SAChB7L,gBAAiB,YACjB4L,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPsT,UAAW,CAAC,SAAS,aAFvB,QAIUumF,EAJV,qBAMAx4F,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEn6F,MAAO,OACP+yD,GAAI,oBACJzzC,MAAO,CAAC8J,eAAe,SAEvB/nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,EACJz7B,MAAO,OACPsT,UAAW,CAAC,SAAS,aAHvB,+BAvKOtR,kCCwVNq4F,8MA3Vb5tF,MAAQ,2EAGN,OACEpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAO/oB,gBAAiBizB,GAAI,CAAC,EAAE,GAAIhI,GAAI,CAAC,EAAE,GAAIyU,GAAI,CAAC,MAAO,QACxE32B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAO9oB,iBACvB8I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,WAAYC,OAAQ,IACjChS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,SAAU2oB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQ0D,GAAI,EAAGjY,UAAW,SAAU0kB,GAAI,CAAC,MAAO,QACnI32B,EAAAC,EAAAC,cAACC,EAAA,EAAQyoB,GAAT,CAAYnZ,WAAY,YAAa2Q,WAAY,QAASlO,GAAI,QAAS1S,SAAU,CAAC,QAAQ,GAAIyS,UAAW,SAAUtT,MAAO,SAA1H,oBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CAAYzpF,WAAY,MAAO4Q,WAAY,CAAC,QAAS,OAAQ5gB,SAAU,CAAC,EAAE,GAAIyS,UAAW,SAAUtT,MAAO,SAA1G,+BAIFqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,SAAU2oB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQvU,UAAW,UACtGjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAO3oB,cAAekT,WAAY,SAAU7P,MAAO,OAAQsS,UAAW,CAAC,OAAO,QAASpO,gBAAiB,QAASD,MAAO,YAAagM,EAAG,CAAC,EAAE,GAAI4T,UAAW,wCAAyCze,aAAc,OAAQme,MAAO,CAAClM,SAAS,aACxP/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,kBAAmB4Y,GAAI,GAC9BlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,GAAV,wZAGAlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,GAAV,sgBAGAlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,GAAV,ikBAGAlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+pB,GAAI,GAAV,iuBAGAlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+mCAKFH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,kBAAmB6Q,GAAI,CAAC,EAAE,IACjCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,sBAIAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,sGAIAniB,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,MACpB4I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CADF,yKAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iDADF,mjBAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wCADF,sLAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mDADF,4IAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sDADF,mHAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yDADF,6JAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yCADF,mOAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2CADF,wJAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wCADF,iFAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CADF,4CAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0DADF,sJAMJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,sBAAuB6Q,GAAI,CAAC,EAAE,IACrCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,mCAIAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,mjBAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,WAAY6Q,GAAI,CAAC,EAAE,IAC1BniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,gBAKFQ,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,MACpB4I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,WADhC,qTAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BAA0BF,EAAAC,EAAAC,cAAA,WAD5B,kGAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2CAA0CF,EAAAC,EAAAC,cAAA,WAD5C,qzBAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kDAAiDF,EAAAC,EAAAC,cAAA,WADnD,uMAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iEAAgEF,EAAAC,EAAAC,cAAA,WADlE,oWAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4CAA2CF,EAAAC,EAAAC,cAAA,WAD7C,8EAGEF,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,KAAM6mB,MAAO,CAACi7E,UAAU,gBAC5Cl5F,EAAAC,EAAAC,cAAA,0GACAF,EAAAC,EAAAC,cAAA,kMACAF,EAAAC,EAAAC,cAAA,4KAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kDAAiDF,EAAAC,EAAAC,cAAA,WADnD,iFAGEF,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,KAAM6mB,MAAO,CAACi7E,UAAU,gBAC5Cl5F,EAAAC,EAAAC,cAAA,mNACAF,EAAAC,EAAAC,cAAA,oKACAF,EAAAC,EAAAC,cAAA,gQACAF,EAAAC,EAAAC,cAAA,wOACAF,EAAAC,EAAAC,cAAA,0LACAF,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAAA,qLACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,uVACAF,EAAAC,EAAAC,cAAA,qNACAF,EAAAC,EAAAC,cAAA,0OACAF,EAAAC,EAAAC,cAAA,yHAIJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+CAA8CF,EAAAC,EAAAC,cAAA,WADhD,sCAGEF,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,KAAM6mB,MAAO,CAACi7E,UAAU,gBAC5Cl5F,EAAAC,EAAAC,cAAA,0LACAF,EAAAC,EAAAC,cAAA,+PACAF,EAAAC,EAAAC,cAAA,mUACAF,EAAAC,EAAAC,cAAA,yIACAF,EAAAC,EAAAC,cAAA,6QARJ,uXAYAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iDAAgDF,EAAAC,EAAAC,cAAA,WADlD,sCAGEF,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,KAAM6mB,MAAO,CAACi7E,UAAU,gBAC5Cl5F,EAAAC,EAAAC,cAAA,0HACAF,EAAAC,EAAAC,cAAA,4GAGJF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCAAmCF,EAAAC,EAAAC,cAAA,WADrC,80BAMFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,iBAAkB6Q,GAAI,CAAC,EAAE,IAChCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,sLAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,qBAAsB6Q,GAAI,CAAC,EAAE,IACpCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,yBAGAQ,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,MACpB4I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iEAAgEF,EAAAC,EAAAC,cAAA,WADlE,sjBAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8EAA6EF,EAAAC,EAAAC,cAAA,WAD/E,snCAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iCAAgCF,EAAAC,EAAAC,cAAA,WADlC,wVAOJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,iCAAkC6Q,GAAI,CAAC,EAAE,IAChDniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,uCAGAQ,EAAAC,EAAAC,cAAA,MAAI6f,UAAWC,KAAO5oB,MACpB4I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0CAAyCF,EAAAC,EAAAC,cAAA,WAD3C,uRAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mCAAkCF,EAAAC,EAAAC,cAAA,WADpC,mOAIAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BAA8BF,EAAAC,EAAAC,cAAA,WADhC,sRAOJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,qBAAsB6Q,GAAI,CAAC,EAAE,IACpCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,yBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,sqBAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,kBAAmB6Q,GAAI,CAAC,EAAE,IACjCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,sBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,klCAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,0BAA2B6Q,GAAI,CAAC,EAAE,IACzCniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,+BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,4rBAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,+lBAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,2ZAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,weAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,sWAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,gjCAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,8mBAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,6MAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,0CAA2C6Q,GAAI,CAAC,EAAE,IACzDniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,sDAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,wwCAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,0CAA2C6Q,GAAI,CAAC,EAAE,IACzDniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,+BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,yyBAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,iCAAkC6Q,GAAI,CAAC,EAAE,IAChDniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,0CAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,woBAIAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,62DAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,40BAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,2xBAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,4bAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,mPAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,2aAGAniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,giCAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,gBAAiB6Q,GAAI,CAAC,EAAE,IAC/BniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,mzBAKFniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAI,gBAAiB6Q,GAAI,CAAC,EAAE,IAC/BniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,OAAQzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAtG,qBAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgiB,GAAI,GAAV,62DASVniB,EAAAC,EAAAC,cAACi5F,GAAD,cAtVUx4F,0LCHGy4F,eAEnB,SAAAA,EAAYC,GAAQ,IAAAx4F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA44F,GAAA,IACLE,EAA+BD,EAApCE,IAAYn1E,EAAwBi1E,EAAxBj1E,WAAeo1E,EADjBp5F,OAAAu8B,GAAA,EAAAv8B,CAC0Bi5F,EAD1B,6BAElBx4F,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAg5F,GAAAttD,KAAAtrC,KAAMg5F,KAEDlnD,MAAQ,KACbzxC,EAAKy4F,MAAQA,EACbz4F,EAAKujB,WAAaA,EANAvjB,6LAUbL,KAAK8xC,QACR9xC,KAAK8xC,MAAQ,IAAI9xC,KAAK84F,MAAM,CAC1BK,eAAgB,2BAGdn5F,KAAK8xC,MAAMsnD,8BACXp5F,KAAK8xC,MAAMunD,4RAIV,IAAIv0F,QAAJ,eAAAwlB,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAgB,EAAO6gC,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAClBuhC,EAAQx5B,EAAKyoC,MAAM3T,UADD,wBAAAh8B,EAAAN,SAAAG,EAAAhC,SAAb,gBAAAqC,EAAAC,GAAA,OAAAgoB,EAAA/nB,MAAAvC,KAAAwC,YAAA,kLAKQ27B,yFACQn+B,KAAK8xC,MAAMwnD,0BAA5B/2B,0CAESviE,KAAK8xC,MAAMynD,iBAAiB,CACvCC,SAASj3B,EAASi3B,SAClBC,WAAWl3B,EAASk3B,qFAGjB,0QAIDz5F,KAAK8xC,MAAM4nD,iJAGL76C,GACZj/C,OAAA0jC,GAAA,EAAA1jC,QAAAs5F,EAAA,EAAAt5F,CAAAg5F,EAAArP,WAAA,0BAAAvpF,MAAAsrC,KAAAtrC,KAA8B,CAAE25F,iBAAiB,WA3CTC,MCAvBC,eAEnB,SAAAA,EAAYhB,GAAQ,IAAAx4F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA65F,GAAA,IACLC,EAAgCjB,EAArCE,IAAgBl6C,EAAqBg6C,EAArBh6C,QAAYm6C,EADlBp5F,OAAAu8B,GAAA,EAAAv8B,CAC2Bi5F,EAD3B,0BAElBx4F,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAi6F,GAAAvuD,KAAAtrC,KAAMg5F,KAEDnnD,UAAY,KACjBxxC,EAAKy5F,UAAYA,EACjBz5F,EAAKw+C,QAAUA,EANGx+C,mMAUbL,KAAK6xC,YACR7xC,KAAK6xC,UAAY,IAAI7xC,KAAK85F,UAAU95F,KAAK6+C,mBAEpB7+C,KAAK+5F,0BAAtB57D,0CAEEA,EAAS67D,yCACR77D,uRAKF,IAAIr5B,QAAJ,eAAAwlB,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAgB,EAAO6gC,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAClBuhC,EAAQx5B,EAAKwoC,UAAUkoD,eADL,wBAAA53F,EAAAN,SAAAG,EAAAhC,SAAb,gBAAAqC,EAAAC,GAAA,OAAAgoB,EAAA/nB,MAAAvC,KAAAwC,YAAA,kLAKQ27B,6EACXA,kCACqBA,EAAS87D,0BAA1BC,YACUA,EAASp3F,gDAChBo3F,EAAS,oCAGb,yQAIgBl6F,KAAK+5F,0BAAtB57D,0CAEEA,EAASg8D,0CACRh8D,2IAIG0gB,GACZ7+C,KAAKo6F,YAAY,CACfrB,IAAK/4F,KAAK85F,UACVj7C,YAEFj/C,OAAA0jC,GAAA,EAAA1jC,QAAAs5F,EAAA,EAAAt5F,CAAAi6F,EAAAtQ,WAAA,0BAAAvpF,MAAAsrC,KAAAtrC,KAA8B,CAAE25F,iBAAiB,WAnDLC,4BCA3BS,eAEnB,SAAAA,EAAYxB,GAAQ,IAAAx4F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAq6F,GAAA,IACLC,EAAiEzB,EAAtEE,IAAiBhpD,EAAqD8oD,EAArD9oD,QAASwqD,EAA4C1B,EAA5C0B,UAAWhuC,EAAiCssC,EAAjCtsC,QAASiuC,EAAwB3B,EAAxB2B,WAAexB,EADnDp5F,OAAAu8B,GAAA,EAAAv8B,CAC4Di5F,EAD5D,6DAElBx4F,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAy6F,GAAA/uD,KAAAtrC,KAAMg5F,KAED76D,SAAW,KAChB99B,EAAKo6F,WAAa,KAClBp6F,EAAK0vC,QAAUA,EACf1vC,EAAKksD,QAAUA,EACflsD,EAAKk6F,UAAYA,EACjBl6F,EAAKm6F,WAAaA,EAClBn6F,EAAKi6F,WAAaA,EAVAj6F,+LAcbL,KAAKy6F,aACRz6F,KAAKy6F,WAAa,IAAIz6F,KAAKs6F,WAAW,CACpCI,UAAU,EACV3qD,QAAS/vC,KAAK+vC,QACdwqD,UAAWv6F,KAAKu6F,UAChBC,WAAYx6F,KAAKw6F,gBAIfr8D,EAAWn+B,KAAK+5F,+CAEd57D,EAAS67D,yCACR77D,2IAQT,OAHKn+B,KAAKm+B,WACRn+B,KAAKm+B,SAAWn+B,KAAKy6F,WAAWE,iBAAiB36F,KAAKu6F,UAAWv6F,KAAKusD,UAEjEvsD,KAAKm+B,oFAGGA,6EACXA,kCAEqBA,EAASphC,KAAK,mCAA/Bm9F,YACUA,EAASp3F,gDAChBo3F,EAAS,oCAGb,8PAID/7D,EAAWn+B,KAAK+5F,+CAEd57D,EAASy8D,wCACRz8D,2IAIG0gB,GACZ7+C,KAAKo6F,YAAY,CACfv7C,UACAk6C,IAAK/4F,KAAKs6F,WACVvqD,QAAS/vC,KAAK+vC,QACdwc,QAASvsD,KAAKusD,QACdguC,UAAWv6F,KAAKu6F,UAChBC,WAAYx6F,KAAKw6F,aAEnB56F,OAAA0jC,GAAA,EAAA1jC,QAAAs5F,EAAA,EAAAt5F,CAAAy6F,EAAA9Q,WAAA,0BAAAvpF,MAAAsrC,KAAAtrC,KAA8B,CAAE25F,iBAAiB,WAnEJC,MCA5BiB,eAEnB,SAAAA,EAAYhC,GAAQ,IAAAx4F,EAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA66F,GAAA,IACLC,EAA6DjC,EAAlEE,IAA4CgC,GAAsBlC,EAAtCmC,eAAsCnC,EAAtBkC,UAAa/B,EAD/Cp5F,OAAAu8B,GAAA,EAAAv8B,CACwDi5F,EADxD,4CAElBx4F,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAi7F,GAAAvvD,KAAAtrC,KAAMg5F,KAED76D,SAAW,KAChB99B,EAAKy6F,sBAAwBA,EAC7Bz6F,EAAK06F,SAAWA,EANE16F,yLAUbL,KAAKm+B,WACRn+B,KAAKm+B,SAAW,IAAIn+B,KAAK86F,sBAAsB,CAC7CC,SAAS/6F,KAAK+6F,aAMd/6F,KAAKm+B,yCAEDn+B,KAAKm+B,SAAS67D,yCA6Bbh6F,KAAKm+B,mRAKPn+B,KAAKm+B,0PAIRn+B,KAAKm+B,gCACPn+B,KAAKm+B,SAASy8D,0BACP56F,KAAKm+B,mHA9DkCy7D,MCalDqB,GAMEC,cANFD,kBACAE,GAKED,cALFC,qBACAC,GAIEF,cAJFE,gBACAC,GAGEH,cAHFG,gBACAC,GAEEJ,cAFFI,mBACAC,GACEL,cADFK,gBAGI1rD,GAAMC,qkCAEN0rD,GAAgB3rD,GAAI4rD,gCACpBC,GAAiB7rD,GAAI8rD,8BACrBX,GAAiBjqF,GAAc8tC,QAAQK,gBACvC08C,GAAkB/rD,GAAIgsD,gCACtBC,GAAejsD,GAAIksD,yBACnBC,GAAgBnsD,GAAIosD,yBAEpBC,GAAuB,GAE7Bt8F,OAAO4H,KAAKuJ,GAAc8tC,QAAQ5f,UAAUogB,QAAQn1C,QAAQ,SAAC02C,EAAU3zB,GACrEivE,GAAqBt7C,GAAa7vC,GAAc8tC,QAAQ5f,UAAUogB,OAAOuB,GAAW/Q,GAAIssD,uBAG1F,IAAMC,GAAW,IAAInB,GAAkB,CACrCx7C,kBAAmB,CAACu7C,MAGhBqB,GAAS,IAAIlB,GAAqB,CACtCmB,YAAavrF,GAAc8tC,QAAQ5f,UAAUogB,OAAO27C,IAAgBnrD,GAAIssD,uBAIpEI,GAAS,IAAInB,GAAgB,CACjCrC,IAAKyD,KACLN,wBACAlB,kBACAQ,iBACAE,oBAGIe,GAAS,IAAIpB,GAAgB,CACjCa,wBACAlB,oBAGI0B,GAAgB,IAAI7B,GAAuB,CAC/CG,kBACAkB,wBACAnD,IAAK+B,KACLC,SAASlrD,GAAIssD,qBACbQ,OAAQ,qCAGJC,GAAY,IAAItB,GAAmB,CACvCvC,IAAK8D,KACLh9C,OAAQ+7C,GACRkB,sBAAsB,IAGlBC,GAAS,IAAIxB,GAAgB,CACjCxC,IAAKiE,KACLC,OAAQnB,GACRj9C,QAASm9C,KAGLlC,GAAY,IAAID,GAAmB,CACvCd,IAAKmE,KACLr+C,QAAS9tC,GAAc8tC,QAAQC,kBAAkBk8C,IAAgBtqF,gBA0BpDwgC,GAAA,CACbkrD,YACAC,UACAK,iBACAjC,WA3BiB,IAAIJ,GAAoB,CACzCtB,IAAKuB,KACLI,UAAU,EACVnuC,QAASyuC,GACTjrD,QAASh/B,GAAcg/B,QACvBwqD,UAAW2B,GAAqBlB,IAChCR,WAAY,8CAsBZoC,aACAG,UACAjD,aACAhB,MAtBY,IAAIF,GAAe,CAC/BG,IAAKoE,KACLv5E,WAAW,CACTw5E,SAAU,aACVC,eAAe,EACfx+C,QAAS,CACPy+C,KAAMvsF,GAAc8tC,QAAQC,kBAAkBk8C,IAAgBtqF,cAC9D67C,QAASyuC,GACTn6C,YAAa9vC,GAAc8tC,QAAQC,kBAAkBk8C,IAAgBtqF,eAEvE6sF,iBAAiB,KAanBhB,UACAE,WChEae,8MAjDb5yF,MAAQ,CACN6yF,iBAAiB,+EAENrvF,GACXA,EAAEsnB,iBACF11B,KAAKiM,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GAASgL,EAAT,CAAgB6yF,iBAAkB7yF,EAAM6yF,qDAG3D,OACEj+F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,CAAC,EAAE,GACPpE,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACP1X,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChB7L,gBAAiB,QACjBkB,aAAeU,KAAKC,MAAMizB,SAAW,OAAS,OAC9CnV,UAAW,GAEXve,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,MAAOD,WAAY,SAAU7P,MAAO,EAAGykB,QAAS3e,KAAKC,MAAM2e,YAAanB,MAAO,CAACoD,OAAQ,YAC3GrhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,IACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbiQ,WAAY,YACZD,WAAY,EACZ7Q,MAAO6B,KAAKC,MAAMizB,SAAW,OAAS,YACtCnN,GAAI,GACD/lB,KAAKC,MAAMy9F,WAGlBl+F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,GAAK+P,eAAgB,YAChCzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM/M,KAAKC,MAAMizB,SAAW,kBAAoB,oBAChD/0B,MAAO6B,KAAKC,MAAMizB,SAAW,OAAS,YACtCzmB,KAAM,YAIZjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,GACV8F,KAAKC,MAAMizB,UACV1zB,EAAAC,EAAAC,cAACC,EAAA,EAAKwK,EAAN,CAAQsH,UAAW,UAAWzS,SAAU,CAAC,EAAE,GAAImtB,wBAAyB,CAAEC,OAAQpsB,KAAKC,MAAM09F,mBA1ChFx9F,aC8IVy9F,8MA5IbhzF,MAAQ,CACNizF,aAAa,KACbC,gBAAiB,UACjBC,iBAAkB,CAChB,CACEC,EAAG,gBACHv+F,EAAC,0VAEH,CACEu+F,EAAG,2DACHv+F,EAAC,ihBAEH,CACEu+F,EAAG,sCACHv+F,EAAC,gRAGLw+F,oBAAqB,CACnB,CACED,EAAG,6BACHv+F,EAAC,4LAEH,CACEu+F,EAAG,yCACHv+F,EAAC,+SAEH,CACEu+F,EAAG,uBACHv+F,EAAC,uQAGLy+F,eAAgB,CACd,CACEF,EAAG,iCACHv+F,EAAC,0ZAEH,CACEu+F,EAAG,oCACHv+F,EAAC,6eAEH,CACEu+F,EAAG,uDACHv+F,EAAC,2aAII0+F,GACTn+F,KAAKiM,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GAASgL,EAAT,CAAgBkzF,gBAAiBK,EAASN,aAAc,8CAGhEzvF,EAAEmC,GACbnC,EAAEsnB,iBACF11B,KAAKiM,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GAASgL,EAAT,CAAgBizF,aAAcjzF,EAAMizF,eAAettF,EAAI,KAAOA,uCAG1E,IAAAlH,EAAArJ,KAAAo+F,EAC0Ep+F,KAAK4K,MAA/EmzF,EADAK,EACAL,iBAAkBD,EADlBM,EACkBN,gBAAiBG,EADnCG,EACmCH,oBAAqBC,EADxDE,EACwDF,eACzDG,EAAcN,EAAiBviF,IAAI,SAACkiF,EAAUntF,GAAX,OACvC/Q,EAAAC,EAAAC,cAAC4+F,GAAD,CAAY1/E,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKk1F,aAAanwF,EAAEmC,IAAK2iB,SAAU7pB,EAAKuB,MAAMizF,eAAiBttF,EAAGuN,IAAG,WAAAlZ,OAAa2L,GAAKmtF,SAAUA,EAASM,EAAGL,OAAQD,EAASj+F,EAAG02B,GAAU,IAAN5lB,EAAU,EAAI,OAE9KiuF,EAAiBP,EAAoBziF,IAAI,SAACkiF,EAAUntF,GAAX,OAC7C/Q,EAAAC,EAAAC,cAAC4+F,GAAD,CAAY1/E,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKk1F,aAAanwF,EAAEmC,IAAK2iB,SAAU7pB,EAAKuB,MAAMizF,eAAiBttF,EAAGuN,IAAG,cAAAlZ,OAAgB2L,GAAKmtF,SAAUA,EAASM,EAAGL,OAAQD,EAASj+F,EAAG02B,GAAU,IAAN5lB,EAAU,EAAI,OAEjLkuF,EAAYP,EAAe1iF,IAAI,SAACkiF,EAAUntF,GAAX,OACnC/Q,EAAAC,EAAAC,cAAC4+F,GAAD,CAAY1/E,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKk1F,aAAanwF,EAAEmC,IAAK2iB,SAAU7pB,EAAKuB,MAAMizF,eAAiBttF,EAAGuN,IAAG,SAAAlZ,OAAW2L,GAAKmtF,SAAUA,EAASM,EAAGL,OAAQD,EAASj+F,EAAG02B,GAAU,IAAN5lB,EAAU,EAAI,OAE5KmuF,EAAwC,YAApBZ,EACpBa,EAA2C,eAApBb,EACvBc,EAAsC,UAApBd,EACxB,OACEt+F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ+N,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IALrB,8BAUAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfC,eAAgB,SAChBF,WAAY,UAEZvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,CAAC,EAAE,IAAMwnB,GAAI,CAAC,EAAE,GAAI1X,cAAe,MAAOC,eAAgB,iBACrEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAE,EAAGuX,UAAW,SAAUxH,eAAgB,SAAU2xB,aAAe8iE,EAAoB,oBAAsB,QACxHl/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAG,GACdyS,UAAW,SACXkN,QAAS,kBAAMtV,EAAKw1F,WAAW,YAC/B1gG,MAAOugG,EAAoB,OAAS,YACpCn/E,UAAW,CAAC,UAAWm/E,EAAoB,WAAa,KAP1D,YAYFl/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAE,EAAGuX,UAAW,SAAUxH,eAAgB,SAAU2xB,aAAe+iE,EAAuB,oBAAsB,QAC3Hn/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAG,GACdyS,UAAW,SACXkN,QAAS,kBAAMtV,EAAKw1F,WAAW,eAC/B1gG,MAAOwgG,EAAuB,OAAS,YACvCp/E,UAAW,CAAC,UAAWo/E,EAAuB,WAAa,KAP7D,wBAYFn/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAE,EAAGuX,UAAW,SAAUxH,eAAgB,SAAU2xB,aAAegjE,EAAkB,oBAAsB,QACtHp/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAG,GACdyS,UAAW,SACXkN,QAAS,kBAAMtV,EAAKw1F,WAAW,UAC/B1gG,MAAOygG,EAAkB,OAAS,YAClCr/E,UAAW,CAAC,UAAWq/E,EAAkB,WAAa,KAPxD,cAaJp/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,IAChCgtF,GAAqBL,EACrBM,GAAwBH,EACxBI,GAAmBH,YArIdt+F,kCCiGH2+F,8MA9Fbr+F,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAGE,IAAAC,EAAArJ,KAED++F,EAAW/+F,KAAKC,MAAM++F,YAAcjmF,KAAK2W,MAAM,IAAI1vB,KAAKC,MAAM++F,aAAa,EAAIjmF,KAAK2W,MAAM,IAAI1vB,KAAKC,MAAMg/F,MAAMn8F,QAAQ,EACvHmH,EAAiBjK,KAAKC,MAAMgK,eAAiBjK,KAAKC,MAAMgK,eAAiB,gBAE/E,OACEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwnB,GAAI,CAAC,EAAE,GACPjE,MAAO,CACLgkB,SAAS,QAEX13B,WAAY,aACZE,eAAgBA,EAChBD,cAAe,CAAC,SAAS,QAGvBhK,KAAKC,MAAMg/F,MAAMzjF,IAAK,SAACrR,EAAE8iB,GAAH,OACpBztB,EAAAC,EAAAC,cAACqhB,GAAD,CACEhG,eAAe,EACf+C,IAAG,QAAAlZ,OAAUqoB,GACb5N,UAAW,CACTlV,EAAE,EACFuH,GAAG,CAAC,EAAE,GACN5C,QAAQ,OACR/E,WAAW,SACX9K,OAAO,CAAC,OAAO,QACfgL,eAAe,SACf+b,GAAuB,kBAAnB/b,EAAqC,CAAC,EAAE,GAAK,EACjDwT,MAAM,CACJhM,UAAU,SACVoR,KAAKxZ,EAAKpJ,MAAMmL,SAAW,KAAtB,KAAAxG,OAAkCm6F,EAAlC,QAKP50F,EAAEouF,KACA/4F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,CAAC,EAAE,GACPjE,MAAO,CACLvjB,MAAM,OACN+E,OAAO,OACP6P,QAAQ,OACR/E,WAAW,SACXE,eAAe,UAEjBmb,KAAMjb,EAAEouF,KACRz4F,OAAQ,SACR2R,UAAW,SACX1R,IAAK,gCAELP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgS,IAAKxH,EAAE8yB,MACP/iC,MAAO,OACP+E,OAAQ,OACRg0B,UAAW,UAIfzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgS,IAAKxH,EAAE8yB,MACP/iC,MAAO,OACP+E,OAAQ,OACRg0B,UAAW,CAAC,OAAO,qBApFf9yB,aC4ET++F,8MAzEbz+F,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAGE,IAAAC,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF4b,GAAG,CAAC,EAAE,GACNC,GAAG,CAAC,EAAE,GACN9rB,MAAM,CAAC,EAAE,SAEX6gB,gBAAe/a,KAAKC,MAAMs4F,KAC1B35E,YAAa5e,KAAKC,MAAMs4F,KAAO,SAAAnqF,GAAC,OAAItD,OAAOyrB,KAAKltB,EAAKpJ,MAAMs4F,OAAQ,MAEnE/4F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJvT,MAAO,OACPa,SAAU,CAAC,EAAE,IAEZgB,KAAKC,MAAMqvB,MAEd9vB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVgQ,WAAY,KAEXhP,KAAKC,MAAMvG,OAEd8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6nB,WAAY,OACZ/J,MAAO,CACL3O,QAAQ,OACRxP,aAAa,MACb0K,cAAc,MACdD,WAAW,WANf,cAUEvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,QACNtO,MAAO,OACPsf,MAAO,CACL0hF,UAAU,kBAEZpyF,KAAM,gCAnEI5M,kCCiJTi/F,sdA3IYj0F,EAAUqC,kMAKjC,OACEhO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN2G,GAAI,gBAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,CAAC,SAAS,UAAWD,WAAY,SAAUE,eAAgB,UAC9EzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE9b,GAAI,CAAC,EAAE,GACP/N,GAAI,CAAC,EAAE,GACP1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IALrB,gBASAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZ2oB,SAAU,CAAC,OAAO,QAClB1oB,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN6b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACP7rB,MAAO,CAAC,EAAE,KACVqX,SAAU,WACVvH,cAAe,SACfuV,UAAWC,KAAO6/E,YAElB7/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOzF,MAAO,CAAC,QAAQ,SAAUyX,IAAK,6CAExCnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,SAAUxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI0S,GAAI,CAAC,EAAE,GAAIvT,MAAO,QAA7F,wBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAY3gB,SAAU,EAAG0iB,GAAI,CAAC,EAAE,GAAIjQ,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAApF,2IAMJpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN6b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACP7rB,MAAO,CAAC,EAAE,KACVqX,SAAU,WACVvH,cAAe,SACfuV,UAAWC,KAAO6/E,YAElB7/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOzF,MAAO,CAAC,QAAQ,SAAUyX,IAAK,iDAExCnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,SAAUxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI0S,GAAI,CAAC,EAAE,GAAIvT,MAAO,QAA7F,8BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAY3gB,SAAU,EAAG0iB,GAAI,CAAC,EAAE,GAAIjQ,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAApF,8IAMJpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN6b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACP7rB,MAAO,CAAC,EAAE,KACVqX,SAAU,WACVvH,cAAe,SACfuV,UAAWC,KAAO6/E,YAElB7/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOzF,MAAO,CAAC,QAAQ,SAAUyX,IAAK,uCAExCnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,SAAUxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI0S,GAAI,CAAC,EAAE,GAAIvT,MAAO,QAA7F,yBAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAY3gB,SAAU,EAAG0iB,GAAI,CAAC,EAAE,GAAIjQ,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAApF,4IAKJpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN6b,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACP7rB,MAAO,CAAC,EAAE,KACVqX,SAAU,WACVvH,cAAe,SACfuV,UAAWC,KAAO6/E,YAElB7/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOzF,MAAO,CAAC,QAAQ,SAAUyX,IAAK,6CAExCnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,SAAUxC,WAAY,YAAajQ,SAAU,CAAC,EAAE,GAAI0S,GAAI,CAAC,EAAE,GAAIvT,MAAO,QAA7F,4BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAY3gB,SAAU,EAAG0iB,GAAI,CAAC,EAAE,GAAIjQ,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAApF,qJArISzf,aC2XVm/F,8MAvXb10F,MAAQ,CACN6C,cAAc,QAIhBhN,cAAgB,OA2BhB8+F,wCAAqB,SAAAv9F,IAAA,IAAAmuE,EAAA1iE,EAAA+xF,EAAAC,EAAAz4F,EAAA,OAAAjG,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEb6uE,EAAe9vE,EAAKI,cAAcG,gBAAgB,CAAC,aAAaP,EAAKJ,MAAMmuC,WAE5E/tC,EAAKJ,MAAMic,uBAAwBi0D,EAAa75B,WAJlC,CAAAn0C,EAAAb,KAAA,eAAAa,EAAAP,OAAA,UAKV,GALU,cAQf6L,EAAgB,KAChB+xF,EAAe,KACbC,EAAa,GACbz4F,EAAkB3G,EAAKJ,MAAMqH,oBAAoBjH,EAAKJ,MAAMmuC,UAX/CjsC,EAAAb,KAAA,EAYbjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKR,GAA5C,eAAAjF,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAAC,EAAO4C,GAAP,IAAArD,EAAAuT,EAAAD,EAAA,OAAA/S,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3Dd,EAAcwG,EAAgBnD,GAD6BzC,EAAAgE,GAEzD/E,EAAKJ,MAAMmuC,SAF8ChtC,EAAAE,KAG1D,SAH0DF,EAAAgE,GAAA,EAc1D,SAd0DhE,EAAAgE,GAAA,wBAAAhE,EAAAE,KAAA,EAKtCjB,EAAKI,cAAcg4B,aAAaj4B,GALM,cAKvDuT,EALuD3S,EAAAK,OAMzB,OAApBsS,EAAS2kB,SACvB+mE,EAAW57F,GAASkQ,EAAS2kB,OACxB8mE,IAAgBA,EAAanyE,GAAGtZ,EAAS2kB,UAC5C8mE,EAAezrF,EAAS2kB,OACxBjrB,EAAgB5J,IAVyCzC,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,GAetCjB,EAAKI,cAAcwW,cAAczW,GAAY,GAfP,eAezDsT,EAfyD1S,EAAAK,KAgBxD+9F,IAAgBA,EAAanyE,GAAGvZ,KACnC0rF,EAAe1rF,EACfrG,EAAgB5J,GAlB2CzC,EAAAQ,OAAA,qCAAAR,EAAAS,SAAAZ,EAAAjB,SAA7D,gBAAAqC,GAAA,OAAAN,EAAAQ,MAAAvC,KAAAwC,YAAA,IAZa,OAoCnBnC,EAAK4L,SAAS,CACZwB,kBArCiB,yBAAAtL,EAAAN,SAAAG,EAAAhC,oFAxBfA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,0JAILpJ,KAAKu/F,wGAGkBp0F,EAAUqC,mEACjCxN,KAAKoJ,YAEwB+B,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,sBAAwBlc,KAAKC,MAAMic,sBAE5Glc,KAAKu/F,2JA8CP,IAAMpvB,EAAenwE,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMmuC,WAC3EsxD,EAAc,KAAK1/F,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIZ,KAAKC,MAAMmuC,SAEhG5tC,EAAcR,KAAK4K,MAAM6C,cAAgBzN,KAAKC,MAAMqH,oBAAoBtH,KAAKC,MAAMmuC,UAAUpuC,KAAK4K,MAAM6C,eAAiB,KAE/H,OACEjO,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACT8W,GAAG,CAAC,EAAE,GACN1W,GAAG,CAAC,EAAE,GACN/S,GAAG,CAAC,SAAS,GACbxS,MAAM,CAAC,EAAE,QACTwoB,GAAG,CAAC,SAAS,OACb3Y,WAAW,SACXC,cAAc,SACdC,eAAe,aACfhL,OAAO,CAAC,cAAc,UAExBkgB,UAA4C,qBAAzBnf,KAAKC,MAAMkf,WAA4Bnf,KAAKC,MAAMkf,WAErE3f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJzH,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgS,IAAKw+D,EAAa7+D,KAClBrS,OAAQ,CAAC,QAAQ,YAGrBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACEvsB,WAAY,EACZhQ,SAAU,CAAC,EAAE,UAEZmxE,EAAaz2E,QAGlB8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,CAAC,EAAE,GACPlF,UAAW,OACXzC,WAAY,aACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,CAAC,EAAE,GACP1S,WAAY,IACZyC,UAAW,UAEV0+D,EAAa5mD,OAIhB4mD,EAAa75B,WACX92C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,CAAC,EAAE,GACPzS,OAAQ,QACR+K,cAAe,MACfC,eAAgB,SAChBF,WAAY,CAAC,WAAW,QAExBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPyX,IAAK,sCAITnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPzV,cAAe,MACfD,WAAY,aACZE,eAAgB,SAChBuC,UAAW,CAAC,OAAO,SAEnBhN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBwvB,YAAW,aAAA70B,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,UAElDiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,UAJb,OAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,SACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,aAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,gBAIbqB,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEuS,UAAW,CACTrF,KAAK,MACLsL,aAAY,EACZpY,MAAM,CACJwD,SAAS,EACTuL,WAAW,EACX7Q,MAAM,YACNsT,UAAU,SACVzS,SAAS,CAAC,EAAE,SACZ8K,UAAU,CACRG,eAAe,aAIjBjK,KAAKC,MAfX,CAgBEO,YAAcA,EACdqD,MAAO7D,KAAK4K,MAAM6C,cAClBpG,iBAAkBrH,KAAKC,MAAMmuC,YAE/B5uC,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEuS,UAAW,CACT/F,YAAW,EACXU,KAAK,mBACL9M,MAAM,CACJwD,SAAS,EACTuL,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACNsT,UAAU,SACV3H,UAAU,CACRG,eAAe,aAIjBjK,KAAKC,MAfX,CAgBEO,YAAcA,EACdqD,MAAO7D,KAAK4K,MAAM6C,cAClBpG,iBAAkBrH,KAAKC,MAAMmuC,aAGjC5uC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,UAJb,SAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,SACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,gBAIbqB,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,CACEuS,UAAW,CACTrF,KAAK,QACL9M,MAAM,CACJ+O,WAAW,EACX7Q,MAAM,YACNsT,UAAU,SACVzS,SAAS,CAAC,EAAE,SACZ8K,UAAU,CACRG,eAAe,aAIjBjK,KAAKC,MAbX,CAcEO,YAAcA,EACdqD,MAAO7D,KAAK4K,MAAM6C,cAClBpG,iBAAkBrH,KAAKC,MAAMmuC,eAOpC+hC,EAAa75B,YACZ92C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP+E,OAAQ,OACR+K,cAAe,MACfD,WAAY,SACZE,eAAgB,SAChB6G,GAAE,GAAAlM,OAAK5E,KAAKC,MAAMmuC,SAAhB,uBAEF5uC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACR0S,IAAG,sBAAA/M,OAAwB5E,KAAKC,MAAMmuC,SAAnC,iBAoBX5uC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACRsS,SAAU,WACVwM,UAAW,qCAGToyD,EAAa75B,WACX92C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ1jB,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,YACPsf,MAAO,CACLkiF,UAAU,UAEZn4E,WAAY,aARd,gBAcFhoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAMs6E,EACNjiF,MAAO,CAAC3O,QAAQ,OAAO5U,MAAM,SAE3BsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ1jB,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPqpB,WAAY,aALd,cAOc2oD,EAAaz2E,OAE3B8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,YACP4O,KAAM,4BA7WF5M,mCC8FXy/F,eAvFb,SAAAA,EAAY3/F,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAA4/F,IACjBv/F,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAggG,GAAAt0D,KAAAtrC,KAAMC,KARR2K,MAAQ,CACNi1F,WAAW,EACXC,SAAS,EACTt9B,MAAO,KACP9lD,QAAS,IAKTrc,EAAKuK,MAAQ,CAAEi1F,WAAW,GAC1Bx/F,EAAK0/F,aAAe1/F,EAAK0/F,aAAa90F,KAAlBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,KACpBA,EAAK2/F,iBAAmB3/F,EAAK2/F,iBAAiB/0F,KAAtBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,KAJPA,4EAON+N,GAAG,IAAA/E,EAAArJ,KAGd,GAFAoO,EAAEsnB,kBAEG11B,KAAK4K,MAAMk1F,QAEd,OADA9/F,KAAKiM,SAAS,CAACyQ,QAAQ,kDAAmDujF,aAAa,SAChF,EAGTjgG,KAAKiM,SAAS,CAAC4zF,WAAU,IAEzBx8D,IAAM68D,KAAKnvF,GAAckhC,uBAAuBC,SAAU,CACxDswB,MAASxiE,KAAK4K,MAAM43D,QACnB29B,KAAK,SAAA1pC,GACgB,YAAlBA,EAAEnqD,KAAK3O,OACT0L,EAAK4C,SAAS,CAACyQ,QAAQ,0DAA2DujF,aAAa,UAE/F52F,EAAK4C,SAAS,CAACyQ,QAAQ,4DAA6DujF,aAAa,UAGpGpgC,MAAM,SAAA38B,GACL75B,EAAK4C,SAAS,CAACyQ,QAAQ,4DAA6DujF,aAAa,iDAItF7xF,GACbpO,KAAKiM,SAAS,CAAE6zF,QAAS1xF,EAAEtO,OAAOs0B,mDAGnBhmB,GACXA,GAAKA,EAAEtO,SACTE,KAAKiM,SAAS,CAAEu2D,MAAOp0D,EAAEtO,OAAO0O,QAChCJ,EAAEtO,OAAOsgG,WAAWC,UAAU3mF,IAAI,mDAI7B,IAAArL,EAAArO,KAEP,OACIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8f,GAAI,CAAC,EAAE,GAAIiT,SAAU,OAAQx4B,MAAO,GACvCsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2gG,SAAUtgG,KAAK+/F,cACnBvgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,CAAC,SAAS,OAAQD,WAAY,CAAC,SAAS,cAAeE,eAAgB,UAC1FzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,CAAC,EAAE,KACbsF,EAAAC,EAAAC,cAACC,EAAA,EAAK4gG,MAAN,CAAYrmG,MAAO,EAAGiX,MAAO,IAC3B3R,EAAAC,EAAAC,cAACC,EAAA,EAAKyiB,MAAN,CACE5Y,KAAK,QACLuD,KAAK,QACL4a,UAAQ,EACRztB,MAAO,EACPsmG,QAAS,OACT54E,OAAQ,EACR5oB,SAAU,CAAC,EAAE,GACbM,aAAc,EACds6B,GAAI,EACJlQ,GAAI,EACJjY,UAAW,CAAC,SAAS,QACrBoW,YAAa,oBACb9J,UAAW,kBACX6d,aAAc,oBACd7Z,SAAU/hB,KAAKggG,oBAGnBxgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,CAAC,EAAE,GAAI1H,cAAe,MAAOD,WAAY,UACjDvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUgf,QAAU,SAAAvQ,GAAC,OAAIC,EAAKoyF,eAAeryF,IAAK+C,MAAO,6BAA+BwW,UAAQ,IAChGnoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,OAAQqpB,WAAY,OAAQ1nB,OAAQ,SAAUC,IAAI,+BAA+BqlB,KAAM,mDAApG,mBAEDplB,KAAK4K,MAAM8R,SAAW1c,KAAK4K,MAAM8R,QAAQ5Z,QACxCtD,EAAAC,EAAAC,cAACC,EAAA,EAAKwK,EAAN,CAAQwX,GAAI,EAAGlC,GAAI,CAAC,EAAE,GAAI/N,GAAI,EAAGD,UAAW,CAAC,SAAS,QAAStT,MAAO6B,KAAK4K,MAAMq1F,cAAejgG,KAAK4K,MAAM8R,UAG/Gld,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,CAAC,EAAE,IAAO6rB,GAAI,CAAC,EAAE,SAC3BvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ4f,UAAWC,KAAO1oB,eAAgB0S,KAAK,SAAStP,MAAO,GAA/D,0BArFaiG,aC2BdugG,oLA3BX,IAAMt6E,EAAcxmB,OAAOC,OAAO,CAChCsK,EAAE,EACF4T,UAAU,EACV7jB,MAAM,OACN+E,OAAO,OACPgnB,UAAU,QACV3mB,aAAa,MACbtH,SAASgI,KAAKC,MAAMjI,UACpBgI,KAAKC,MAAMmmB,aAIb,OAFAA,EAAYlnB,SAAWknB,EAAYlsB,MAGhCsF,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAaA,EACbxH,YAAa5e,KAAKC,MAAM2e,aAExBpf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,YACP4O,KAAM/M,KAAKC,MAAMm9B,SACjB3wB,KAAOzM,KAAKC,MAAM+M,SAAWhN,KAAKC,MAAM+M,SAAW,kBAtBhC7M,aC2CfwgG,8MA3Cb/1F,MAAQ,2EAGN,IAAIg2F,EAAiB,KAErB,OAAQ5gG,KAAKC,MAAM6+B,SACjB,IAAK,UACH8hE,EAAiBC,IAAaC,QAChC,MACA,IAAK,aACHF,EAAiBC,IAAaE,WAChC,MACA,IAAK,UACHH,EAAiBC,IAAaG,QAMlC,OAAIJ,EAEAphG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAS8F,KAAKC,MAAMmL,SAAoB,QAAT,QAAmBmG,SAAU,QAASC,OAAQ,OAAQrH,EAAKnK,KAAKC,MAAMmL,SAAmB,EAAR,MAAY8E,MAAO,IAAKC,OAAQ,KACpJ3Q,EAAAC,EAAAC,cAACkhG,EAAD,CACEnjF,MAAO,CAACvjB,MAAM,QACdwiB,QAAS1c,KAAKC,MAAMyc,QACpBgiB,iBAAkB1+B,KAAKC,MAAMy+B,iBAC7BuiE,WAAW,IAEbzhG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgf,QAAS3e,KAAKC,MAAMihG,YAAazjF,MAAQzd,KAAKC,MAAMmL,SAAW,CAACmG,SAAS,WAAWtB,IAAI,OAAOC,MAAM,OAAOhW,MAAM,OAAO+E,OAAO,QAAU,CAACsS,SAAS,WAAWtB,IAAI,OAAOC,MAAM,OAAOhW,MAAM,OAAO+E,OAAO,SAC/MO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,QACN5O,MAAO,YACPsO,KAAOzM,KAAKC,MAAMmL,SAAW,KAAO,SAOvC,YAxCwBjL,aC2GpBghG,8MAtGbv2F,MAAQ,CACNwmF,SAAS,KACTgQ,kBAAkB,QAIpB3gG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,YACLpJ,KAAKqhG,oMAGkBl2F,EAAUqC,yEACjCxN,KAAKoJ,YACC8S,EAAuB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,uBACvC/Q,EAAU7D,qBAAuB6Y,KAAKC,UAAUjV,EAAU7D,uBAAyB6Y,KAAKC,UAAUpgB,KAAKC,MAAMqH,sBAC/G4U,IAChClc,KAAKqhG,kRAMFrhG,KAAKC,MAAMqH,qBAAwBtH,KAAKC,MAAMic,+DAC1C,0BAMClc,KAAKS,cAAcwwF,qCAF3Bz2D,WACA42D,aAGIgQ,EAAoBhQ,EAASlpF,KAAKkpF,EAAS5rF,MAAMg1B,EAAO/0B,IAAI,OAElEzF,KAAKiM,SAAS,CACZmlF,WACAgQ,yJAIK,IAAA/3F,EAAArJ,KACP,OAAOA,KAAK4K,MAAMwmF,SAChB5xF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CACEqd,MAAO,EACPrZ,SAAU,EACVsZ,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVE,MAAOxR,WAAW5L,KAAK4K,MAAMwmF,UAC7Bj0E,IAAKvR,WAAW5L,KAAK4K,MAAMw2F,mBAC3B/jF,aAAe,SAAAC,GAAC,MAAI,KAAKjU,EAAK5I,cAAcgJ,YAAY6T,EAAE,KAEzD,SAAAvb,GAAA,IAAGyb,EAAHzb,EAAGyb,WAAHzb,EAAeqb,MAAf,OACC5d,EAAAC,EAAAC,cAAA,QACE+d,MAAQpU,EAAKpJ,MAAMqhG,aAAej4F,EAAKpJ,MAAMqhG,aAAe,CAC1DxyF,QAAQ,QACR3Q,MAAM,YACNmrB,WAAW,SACXra,WAAW5F,EAAKpJ,MAAM9G,MAAMS,MAAMG,QAClCiV,WAAW3F,EAAKpJ,MAAM9G,MAAMG,YAAY,GACxCmY,UAAWpI,EAAKpJ,MAAMmL,SAAW,SAAW,QAC5CpM,SAAUqK,EAAKpJ,MAAMmL,SAAW,QAAU/B,EAAKpJ,MAAM9G,MAAME,UAAU,IAEvEqkB,IAAKF,OAKuB,qBAAxBxd,KAAKC,MAAMw8B,UAA4Bz8B,KAAKC,MAAMw8B,WACxDj9B,EAAAC,EAAAC,cAAC67B,GAAD37B,OAAAC,OAAA,CACEmP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,CAAC,SAAS,UACjBzR,KAAKC,MAAMy8B,eAGb18B,KAAKC,MAAMw8B,SAAWz8B,KAAKC,MAAMw8B,SAC/Bj9B,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAW32B,WAAY,UAAW7Q,MAAO,UAAWa,SAAU,WAA9D,2BAAiGQ,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAO,YAAa6Q,WAAY,EAAGhQ,SAAU,OAAxD,gBAO3G,YApG4BmB,aCchCohG,IAAY,EA04BDC,8MAv4Bb52F,MAAQ,CACN8tB,OAAO,KACP+oE,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,aAAY,EACZC,aAAa,KACb/kB,cAAc,KACdglB,eAAc,EACdr5F,gBAAgB,KAChBs5F,mBAAmB,EACnBC,kBAAkB,KAClBC,mBAAmB,KACnB50F,qBAAqB,KACrB60F,yBAAwB,KAS1BzhG,cAAgB,OAchBuhG,kBAAoB,SAACL,GACnBA,EAAiBA,GAAgB,EAAIA,EAAiB,EACtDthG,EAAK4L,SAAS,CAAC01F,sBAcjBQ,eAAiB,SAAArlG,GACf,IAAI4kG,EAAgBrhG,EAAKuK,MAAM82F,cAClB,SAAT5kG,GAAmB4kG,EAAcrhG,EAAKuK,MAAM62F,YAC9CC,IACkB,SAAT5kG,GAAmB4kG,EAAc,GAC1CA,IAGF,IAAMU,EAAa/hG,EAAKJ,MAAMmL,SAAW,EAAI,IACvCi3F,EAAWv3F,OAAO6N,OAAP,6BAAA/T,OAA2C88F,EAA3C,MACXK,GAAsBn2F,WAAWy2F,EAAS9wF,WAAWnB,KAAKgyF,GAAY,KAE5E/hG,EAAK4L,SAAS,CACZy1F,gBACAK,0BAmBJO,iBAAmB,WACjB,GAAIf,GAAU,CAKZ,IAHA,IAAMgB,EAAc92F,SAAS+2F,uBAAuB,cAChDX,EAAe,EAEVtxF,EAAE,EAAEA,EAAEgyF,EAAYz/F,OAAOyN,IAAI,CACpC,IAAM8uF,EAAakD,EAAYhyF,GAC/B,GAAI8uF,GAAcA,EAAWoD,aAAa,CACxC,IAAMC,EAAUrD,EAAWsD,UAAYtD,EAAWsD,UAAYtD,EAAWoD,aAAaE,UAClF73F,OAAOqmD,SAAWuxC,EAAQ,MAC5Bb,EAAetxF,EAAE,IAIvBgxF,IAAY,EAERp1F,SAAS01F,KAAkB11F,SAAS9L,EAAKuK,MAAMi3F,eACjDxhG,EAAK4L,SAAS,CAAC41F,qBAKrBe,oCAAiB,SAAA5gG,IAAA,IAAAyG,EAAA4C,EAAA0xE,EAAAC,EAAA3vE,EAAAC,EAAAu1F,EAAAC,EAAA,OAAA/hG,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAEXmH,EAAkBpI,EAAKI,cAAciB,MAAM,GAEzC2J,EAAW,CACfqtB,OAAQ,KACRjwB,gBAAgB,KAChB4E,qBAAqB,KACrBC,yBAAyB,MAGrByvE,EAAgB,GAChBC,EAAoB,GACpB3vE,EAAuB,GACvBC,EAA2B,GAdlBnL,EAAAb,KAAA,EAgBTjB,EAAKI,cAAc8G,aAAalH,EAAKJ,MAAMO,YAAY6P,UAAvD,eAAAtO,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAiE,SAAAC,EAAOqP,EAAaC,GAApB,IAAA8/C,EAAA5/C,EAAAkC,EAAAG,EAAA4qE,EAAAnvD,EAAAy2C,EAAA6C,EAAA,OAAA9mE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC/D+uD,EAAe//C,EAAazM,MAC5B4M,EAAeH,EAAa1J,QAAQ8J,cAF2BtP,EAAAE,KAAA,EAIVwD,QAAQC,IAAI,CACrE1E,EAAKI,cAAcm3E,mBAAmBvnB,GACtChwD,EAAKI,cAAc+oC,iBAAiB6mB,GAClC//C,EAAao5B,UAAUs7B,aAAe3kE,EAAKI,cAAcuC,oBAAoBqtD,EAAa//C,EAAao5B,UAAUs7B,aAAaj4D,KAAKuD,EAAao5B,UAAUs7B,aAAa/wB,QAAU,OAPhH,UAAAthC,EAAAvR,EAAAK,KAAAqR,EAAAlT,OAAAsF,EAAA,EAAAtF,CAAA+S,EAAA,GAIhE+qE,EAJgE5qE,EAAA,GAI/Cyb,EAJ+Czb,EAAA,GAIhCkyD,EAJgClyD,EAAA,GAUhE4qE,EAVgE,CAAAt8E,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAejEojE,GAAgB10D,EAAa7M,WAC/Bs5E,EAActsE,GAAgBu0D,EAC9BA,EAAe3kE,EAAKI,cAAc+C,iBAAiBwhE,EAAa10D,EAAa7M,WAGzEokE,EAAqBxnE,EAAKI,cAAc+C,iBAAiBk6E,EAAgBnvD,EAAcy2C,GAE7Fv8D,EAAkBA,EAAgBP,KAAK2/D,GAEvCmV,EAAkBvsE,GAAgBitE,EAClCrwE,EAAqBoD,GAAgBo3D,EAzBgC,yBAAAzmE,EAAAS,SAAAZ,EAAAjB,SAAjE,gBAAAqC,EAAAC,GAAA,OAAAP,EAAAQ,MAAAvC,KAAAwC,YAAA,IAhBS,cA4CXnC,EAAKuK,MAAMs3F,0BACTW,EAAsBj3F,WAAWnD,EAAgB2N,YAC/C0sF,EAAeljG,OAAO4H,KAAK6F,GAAsBvK,OACvDlD,OAAO4H,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IAAIwyF,EAAQn3F,WAAWyB,EAAqBoD,GAAc2F,YACtD7F,IAAMuyF,EAAa,EACrBC,EAAQF,GAERE,EAAQn3F,WAAWmN,KAAKY,UAAUkpF,EAAqBA,EAAoB,GAAKA,EAAoB,GACpGA,GAAuBE,GAEzB11F,EAAqBoD,GAAgBpQ,EAAKI,cAAciB,MAAMqhG,MAIlEnjG,OAAO4H,KAAK6F,GAAsBnD,QAAQ,SAACuG,EAAaF,GACtD,IACMu3D,EADqBz6D,EAAqBoD,GACEhL,IAAIgD,GACtD6E,EAAyBmD,GAAgBq3D,IAG3Cz8D,EAAS5C,gBAAkBA,EAC3B4C,EAASgC,qBAAuBA,EAChChC,EAASiC,yBAA2BA,EAEhCjN,EAAKuK,MAAMkyE,gBACbzxE,EAASqtB,OAASr4B,EAAKI,cAAc6H,UAAUjI,EAAKuK,MAAMkyE,cAAczvE,EAAqB5E,IAG/FpI,EAAK4L,SAASZ,GAzEClJ,EAAAP,OAAA,SA2ERyJ,GA3EQ,yBAAAlJ,EAAAN,SAAAG,EAAAhC,WA8EjBo4E,6BAAU,SAAA11E,IAAA,IAAAwzF,EAAAC,EAAAjyB,EAAA4Y,EAAAzxE,EAAA,OAAAtK,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EACWjB,EAAKI,cAAcg4E,gBAAgB,WAD9C,UACFyd,EADErzF,EAAApB,KAAA,CAAAoB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,UAIC,GAJD,cAOFu0F,EAAYD,EAAKC,UAAU36E,IAAI,SAACopD,EAAKr0D,GAAQ,OAAOq0D,EAAKxuD,WAAW1F,gBACpEwzD,EAAOgyB,EAAKhyB,KACZ4Y,EAAgB,GAEtBz8E,EAAKJ,MAAMO,YAAY6P,UAAUnG,QAAQ,SAACzL,EAAK8R,GAE7C,IAAME,EAAehS,EAAKmI,QAAQwP,WAAW1F,cACvCimF,EAAYR,EAAUl+E,QAAQxH,GACpC,IAAoB,IAAfkmF,EAAmB,CACtB,IAAMC,EAAc1yB,EAAKyyB,GACzB7Z,EAAcrsE,GAAgBpQ,EAAKI,cAAciB,OAAOrB,EAAKI,cAAc4uD,MAAMunC,OAI/EvrF,EAAW,CACfqtB,OAAQ,KACRokD,iBAGEz8E,EAAKuK,MAAMyC,sBAAwBhN,EAAKuK,MAAMnC,kBAChD4C,EAASqtB,OAASr4B,EAAKI,cAAc6H,UAAUw0E,EAAcz8E,EAAKuK,MAAMyC,qBAAqBhN,EAAKuK,MAAMnC,kBAG1GpI,EAAK4L,SAASZ,GA9BNxI,EAAAjB,OAAA,SA+BDyJ,GA/BC,yBAAAxI,EAAAhB,SAAAa,EAAA1C,WAkCVgjG,mDAAe,SAAA9/F,EAAMkL,GAAN,OAAArN,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACbjB,EAAKJ,MAAMgjG,kBAAkB70F,EAAG,KAChCtD,OAAOi2C,SAAS37B,KAAO,UAFV,wBAAAjiB,EAAAtB,SAAAqB,EAAAlD,iEAKfkjG,YAAc,SAACtB,GACbvhG,EAAK4L,SAAS,CACZ21F,mBAIJuB,oBAAsB,SAAC72D,GAErB,IAAM82D,EAAe,WACnBt4F,OAAOi2C,SAAW,KAAKzU,GAGrBjsC,EAAKJ,MAAMuB,QACb4hG,IAEA/iG,EAAKJ,MAAMovC,0BAA0B+zD,iUAvNnCpjG,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,gKASLpJ,KAAKC,MAAMojG,mBAAmBrjG,KAAKC,OAE/BD,KAAKC,MAAMic,0MA0BQ/Q,EAAWqC,mEAElCxN,KAAKoJ,YACLpJ,KAAKC,MAAMojG,mBAAmBrjG,KAAKC,MAAMkL,GAEZnL,KAAKC,MAAMic,sBAAwB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,2JAyKvG,IAAA7S,EAAArJ,KACC6+C,EAAY7+C,KAAKC,MAAjB4+C,QACF73C,EAAkB,GAQxB,OAPApH,OAAO+X,OAAO3X,KAAKC,MAAMqH,qBAAqB4C,QAAS,SAAA0rC,GACrDh2C,OAAO4H,KAAKouC,GAAQ1rC,QAAS,SAAArG,IACa,IAApCmD,EAAgBiR,QAAQpU,IAC1BmD,EAAgB6J,KAAKhN,OAKzBrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACRsgB,UAAWC,KAAO8jF,aAClB7lF,MAAO,CACL8lF,cAAgB1kD,EAAQ2kD,iBAA2B,IAAR,QAG7ChkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACPkK,GAAI,CAAC,QAAS,OACd5W,UAAWC,KAAO/oB,gBAClB+V,UAAYuM,KAAKG,IAAKlZ,KAAKC,MAAM6Y,YAAmC,KAAvB9Y,KAAKC,MAAM6Y,YAAmB,MAE3EtZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,WAAYC,OAAQ,IACjChS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEupB,SAAU,SACVnf,WAAY,aACZC,cAAe,CAAC,SAAS,OACzByV,GAAI,CAAC,MAAM1G,KAAKG,IAAuB,KAAnBpO,OAAOgO,YAAkB,KAAK,OAElDtZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,EAAE,GACZ+P,eAAgB,CAAC,SAAS,aAE1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPuX,UAAW,SACXzH,cAAe,SACf0oB,SAAU,CAAC,OAAQ,QACnB3oB,WAAY,CAAC,SAAS,eAEtBvK,EAAAC,EAAAC,cAACC,EAAA,EAAQyoB,GAAT,CACEpZ,WAAY,EACZ7Q,MAAO,QACP8Q,WAAY,YACZjQ,SAAU,CAAC,QAAQ,UACnByS,UAAW,CAAC,SAAS,QACrBmO,WAAY,CAAC,UAAU,UACvBnC,MAAO,CACLvjB,MAAM,OACNupG,cAAezjG,KAAKC,MAAMmL,SAAW,SAAW,YATpD,kBAcA5L,EAAAC,EAAAC,cAACC,EAAA,EAAQyoB,GAAT,CACE1W,GAAI,CAAC,EAAE,GACPvT,MAAO,QACP6Q,WAAY,IACZ4Q,WAAY,UACZ3Q,WAAY,YACZjQ,SAAU,CAAC,QAAQ,UACnByS,UAAW,CAAC,SAAS,QACrBgM,MAAO,CACLvjB,MAAM,OACNupG,cAAezjG,KAAKC,MAAMmL,SAAW,SAAW,YAVpD,kBAeA5L,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CACEh7E,MAAO,CACLvjB,MAAM,QAERiE,MAAO,QACP6Q,WAAY,IACZhQ,SAAU,CAAC,EAAE,SACbyS,UAAW,CAAC,SAAS,YAPvB,sJAYGzR,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,GAEJjgB,EAAAC,EAAAC,cAACgtC,GAAD,CACE9tB,YAAc,SAACxQ,GACbtD,OAAOi2C,SAAS7zB,KAAO7jB,EAAK5I,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIhB,OAAO4H,KAAK6B,EAAK5I,cAAcG,gBAAgB,CAAC,gBAAgB,KAF7J,sBAWVpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,CAAC,OAAO,GACZxoB,MAAO,CAAC,EAAE,EAAE,GACZwS,GAAI,CAAC,EAAE,SACP+E,UAAW,SACXF,SAAU,WACVvH,cAAe,SACf/K,OAAQ,CAAC,QAAQ,SACjBgL,eAAgB,CAAC,aAAa,aAE9BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEyQ,KAAM,EACNF,MAAO,EACPhW,MAAO,OACP+E,OAAQ,QACRgR,IAAK,CAAC,UAAU,KAChBsB,SAAU,WACVpB,OAAQ,CAAC,IAAI,WACb+Y,SAAuC,IAA7BlpB,KAAK4K,MAAM82F,cAAsB,UAAY,UAEvDliG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsQ,IAAK,CAAC,UAAU,GAChBjG,cAAe,MACfuH,SAAU,WACVT,GAAI,kBACJ5W,MAAO,CAA8C,IAA7C0F,OAAO4H,KAAKuJ,GAAcqlC,YAAYtzC,OAAW,IAAI,QAC7D7D,OAAQ,CAAC,OAAO,SAChBkR,OAAQ,CAAC,MAAM,WACflG,eAAgB,aAChBmG,KAAMpQ,KAAK4K,MAAMm3F,mBACjBtkF,MAAO,CACLimF,UAAU,UACV9vE,WAAW,0BAIXh0B,OAAO4H,KAAKuJ,GAAcqlC,YAAY56B,IAAI,SAAC4yB,EAASu1D,GAAV,OACxCnkG,EAAAC,EAAAC,cAACkkG,GAADhkG,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEmuC,SAAUA,EACVtwB,IAAG,YAAAlZ,OAAcwpC,UAM3B5uC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,QACP3O,GAAI,qBACJ7G,eAAgB,CAAC,SAAS,eAE1BzK,EAAAC,EAAAC,cAACmkG,GAAD,CACEz9E,YAAa,CACX1D,GAAG,CAAC,EAAE,IAER0a,SAAU,YACVplC,SAAuC,IAA7BgI,KAAK4K,MAAM82F,cACrB9iF,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK84F,eAAe,WAEzC3iG,EAAAC,EAAAC,cAACmkG,GAAD,CACEzmE,SAAU,eACVxe,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK84F,eAAe,SACvCnqG,SAAUgI,KAAK4K,MAAM82F,gBAAkB1hG,KAAK4K,MAAM62F,mBAQ9DjiG,EAAAC,EAAAC,cAACokG,GAAD,MAEAtkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPykB,GAAI,CAAC,EAAE,GACPzM,GAAI,CAAC,EAAE,GACP5Y,GAAI,YAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqmB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElBlzB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ+N,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IALrB,6BASAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UAJb,wGAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwnB,GAAI,CAAC,EAAE,GACP3X,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACqkG,GAADnkG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEqhG,aAAc,CACZxyF,QAAQ,QACR3Q,MAAM,YACN+qB,SAAU,SACVzX,UAAW,SACX6X,WAAY,SACZqJ,aAAc,WACd1jB,WAAWjP,KAAKC,MAAM9G,MAAMS,MAAMG,QAClCiV,WAAWhP,KAAKC,MAAM9G,MAAMG,YAAY,GACxC0F,SAAUgB,KAAKC,MAAMmL,SAAWpL,KAAKC,MAAM9G,MAAME,UAAU,GAAK2G,KAAKC,MAAM9G,MAAME,UAAU,IAE7FojC,SAAU,KACVC,cAAe,CACbjrB,UAAU,aAGdjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ5R,OAAQ,SACR2R,UAAW,SACX1R,IAAK,+BACLqlB,KAAM,wDAEN5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,OACPyX,IAAK,iCAGTnS,EAAAC,EAAAC,cAAC67B,GAAD,CACExV,GAAI,CAAC,EAAE,GACPtG,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACP+pB,UAAWC,IAAQxI,IANrB,sBAUAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACskG,GAAD,CACEtqG,MAAO,gBACP41B,KAAM,gDACNipE,KAAM,yDAER/4F,EAAAC,EAAAC,cAACskG,GAAD,CACEtqG,MAAO,kBACP41B,KAAM,gDACNipE,KAAM,+DAMhB/4F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPiC,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACP7Q,GAAI,cACJyO,UAAWC,KAAOykF,oBAElBzkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqmB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElBlzB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IAJrB,mBAQAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UALb,wEASAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,CAAC,SAAS,kBAoC1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,SAAS,cACtBE,eAAgB,CAAC,SAAS,eAE1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV8P,cAAe,SACfD,WAAY,CAAC,SAAS,cACtBE,eAAgB,CAAC,SAAS,eAE1BzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1C,WAAY,EACZkZ,UAAWC,IAAQ+7E,GACnBllG,SAAU,CAAC,EAAE,WAJf,2BASAQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJua,GAAI,CAAC,EAAE,GACPxa,UAAW,CAAC,SAAS,YAHvB,iNAKgNjS,EAAAC,EAAAC,cAAA,WALhN,qCAOAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,KAFd,qBAMAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1H,cAAe,OAGbhD,EAAgBwU,IAAK,SAAA3X,GAAK,OACxBrE,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPuO,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHxoB,MAAM,QACN+E,OAAO,UAGX6e,IAAG,SAAAlZ,OAAWf,QAKtBrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAE1BzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,CAAC,EAAE,SAEX0kB,YAAc,SAACxQ,GACbtD,OAAOyrB,KAAK,qCAGd/2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,WACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,SAHT,iBAOAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,QACNtO,MAAO,QACP4O,KAAM,yBAIZvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACP/S,GAAI,CAAC,EAAE,IAFT,MAMAlN,EAAAC,EAAAC,cAAC24F,EAAD,CACE54E,GAAI,CAAC,EAAE,GACP/S,GAAI,CAAC,EAAE,GACP1N,SAAU,EACVwoB,WAAY,UACZpC,KAAM,8CALR,gBA6CJ5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KAEVsF,EAAAC,EAAAC,cAAA,UACET,OAAQ,MACRvF,MAAO,YACP+jB,MAAO,CACLmK,OAAO,IACP1tB,MAAO,OACP+E,OAAQ,QACRiqB,SAAS,SACTi2E,UAAW,YAEbgF,QAAS,kCACTxyF,IAAK,wqCASjBnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,CAAC,EAAE,GACPzM,GAAI,CAAC,EAAE,GACP5Y,GAAI,aAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqmB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElBlzB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ+N,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IALrB,aASAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UALb,4CASAjS,EAAAC,EAAAC,cAAC0kG,GAADxkG,OAAAC,OAAA,CACEoK,eAAgB,SAChB+0F,YAAa,EACbC,MAAO,CACL,CACE1G,KAAK,wBACLt7D,MAAM,kCAER,CACEs7D,KAAK,+BACLt7D,MAAM,6BAER,CACEs7D,KAAK,6BACLt7D,MAAM,mCAQR,CACEs7D,KAAK,uBACLt7D,MAAM,kCAER,CACEs7D,KAAK,wBACLt7D,MAAM,gCAER,CACEs7D,KAAK,qBACLt7D,MAAM,mCAER,CACEs7D,KAAK,mCACLt7D,MAAM,sCAGNj9B,KAAKC,UAKfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,CAAC,EAAE,GACPzM,GAAI,CAAC,EAAE,GACP5Y,GAAI,aAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqmB,GAAI,OACJ0M,SAAU,CAAC,OAAO,SAElBlzB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ+N,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQxI,IALrB,uBASAngB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UALb,gEASAjS,EAAAC,EAAAC,cAAC0kG,GAADxkG,OAAAC,OAAA,CACEo/F,MAAO,CACL,CACE1G,KAAK,+BACLt7D,MAAM,gCAQR,CACEs7D,KAAK,mBACLt7D,MAAM,4BAER,CACEs7D,KAAK,wBACLt7D,MAAM,4BAER,CACEs7D,KAAK,qBACLt7D,MAAM,+BAGNj9B,KAAKC,UAKfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmR,GAAG,MAAMqlB,GAAI,CAAC,EAAE,GAAIzM,GAAI,CAAC,EAAE,IAC9BlqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+yB,SAAU,CAAC,OAAO,QAAS1M,GAAI,OAAQtE,GAAI,CAAC,EAAE,IACjDliB,EAAAC,EAAAC,cAAC2kG,GAAD,CAAK52F,cAAezN,KAAKC,MAAMwN,cAAejN,YAAaR,KAAKC,MAAMO,gBAI1EhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,WAAW9G,cAAe,SAAUuH,SAAU,WAAYtH,eAAgB,SAAUF,WAAY,SAAU2f,GAAI,CAAC,EAAE,GAAIhI,GAAI,CAAC,EAAE,IACnIliB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUC,eAAgB,CAAC,SAAS,cAAeF,WAAY,CAAC,SAAS,cAAe7P,MAAO,EAAGw4B,SAAU,CAAC,OAAO,SACvIlzB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,OAAQsT,UAAW,CAAC,SAAS,QAASzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAA5G,6BAGAQ,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYv4B,MAAO,YAAasT,UAAW,CAAC,SAAS,QAASzC,WAAY,EAAG4Q,WAAY,UAAW5gB,SAAU,CAAC,EAAE,IAAjH,yCAGAQ,EAAAC,EAAAC,cAAC4kG,GAAD,QAIJ9kG,EAAAC,EAAAC,cAACi5F,GAAD,CAAQn4F,YAAaR,KAAKC,MAAMO,cAG9BR,KAAKC,MAAMskG,mBACT/kG,EAAAC,EAAAC,cAAC8kG,GAAD5kG,OAAAC,OAAA,CAAsBuL,SAAUpL,KAAKC,MAAMmL,UAAcpL,KAAKC,MAAMskG,kBAApE,CAAuFrD,YAAalhG,KAAKC,MAAMwkG,6BAj4BrGtkG,aCoMPukG,8MAnNb95F,MAAQ,CACN+5F,gBAAe,KAIjBlkG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,iDAI9B0kG,GAChB3kG,KAAKiM,SAAS,CACZ04F,wKAKF3kG,KAAKoJ,iMAGkB+B,EAAWqC,mEAClCxN,KAAKoJ,kJAGE,IAAAC,EAAArJ,KACP,IAAKA,KAAKC,MAAM2kG,KAAK9hG,OACnB,OAAO,KAGT,IAAM+hG,EAAe7kG,KAAKC,MAAM2kG,KAAKxoF,OAAO,SAAA0oF,GAC1C,IAAMC,OAAiChiG,IAApB+hG,EAASh8E,QAAwBg8E,EAASh8E,OAC7D,OAAQzf,EAAKpJ,MAAMmL,UAAY25F,IAGjC,OAAKF,EAAa/hG,OAKhBtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHH,cAAe,CAAC,MAAM,YAGnBhK,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHuH,GAAI,EACJ1H,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CAAYpnC,GAAG,KACb1xD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVtS,OAAQ,CAAC,OAAO,QAChB0S,IAAI,+BAMZkzF,EAAarpF,IAAI,SAACspF,EAASE,GACzB,IACMC,EADiBH,EAASI,eACO3lG,EAAU4lG,IACjD,OACE3lG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,CAAC,EAAE,GACPjI,IAAG,QAAAlZ,OAAUogG,GACb9qG,MAAO,CAAC,EAAE2qG,EAAa/hG,OAAO,SAE9BtD,EAAAC,EAAAC,cAACulG,EAAD,CACE/zC,GAAI4zC,EAASx4D,MACblnB,KAAM0/E,EAASx4D,MACf7uB,MAAO,CAAC8J,eAAe,SAEvB/nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACN7K,aAAc,CAAC,EAAE,GACjB0K,cAAe,MACfD,WAAY,SACZ3L,gBAAkB0mG,EAASM,SAAW,UAAY,cAClDrnF,UAAW+mF,EAASM,SAAW,qCAAuC,MAEtE5lG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAEzB66F,EAAS7nE,OACRz9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,CAAC,EAAE,GACPhW,GAAI,CAAC,EAAE,GACPgF,GAAI,CAAC,EAAE,GACPkhB,MAAO,SACPjhB,IAAMmzF,EAASM,SAAWN,EAAS7nE,MAAS6nE,EAAS3wD,cAAgB2wD,EAAS3wD,cAAgB2wD,EAAS7nE,MACvGh+B,OAAQ,CAAC,QAAQ,WAGpB6lG,EAASxzF,MACR9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,CAAC,EAAE,GACPhW,GAAI,CAAC,EAAE,GACPgF,GAAI,CAAC,EAAE,GACPkhB,MAAO,SACP7lB,KAAM+3F,EAASxzF,KACf7E,KAAOpD,EAAKpJ,MAAMmL,SAAW,QAAU,QACvCjN,MAAQ2mG,EAASM,SAAWN,EAAStyE,QAAU,cAGnDhzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,SACXzS,SAAU,CAAC,OAAO,GAClBye,MAAO,CACL6L,WAAW,WAGZw7E,EAAS3zF,cArFrB,YAzCehR,uBCw5DbklG,8MAl5Dbz6F,MAAQ,CACNwB,WAAW,GACXk5F,UAAU,KACVn4F,UAAU,KACVxB,WAAW,QAuBblL,cAAgB,OAShB8kG,SAAW,SAAA/2F,GACT,OAAQrC,SAASqC,IAAQ,IAAO5C,WAAW4C,EAAM,KAAMoC,QAAQ,GAAG,IAAMhF,WAAW4C,IAAS,IAAInO,EAAKJ,MAAMwN,iBAG7G+3F,iCAAc,SAAA9iG,IAAA,IAAA+iG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAz1F,EAAA01F,EAAAv+F,EAAAw+F,EAAAp2E,EAAAJ,EAAAriB,EAAAf,EAAAk5F,EAAAz1E,EAAAjC,EAAAq4E,EAAAC,EAAA7wF,EAAA8wF,EAAA1xF,EAAA2iC,EAAAt9B,EAAAwV,EAAA+6D,EAAA+b,EAAA71F,EAAA81F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAluE,EAAAmuE,EAAA1xF,EAAA2xF,EAAA,OAAAhmG,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,UAEPjB,EAAKJ,MAAMO,aAAgBH,EAAKJ,MAAMwN,eAAkBpN,EAAKJ,MAAM+mG,WAAc3mG,EAAKJ,MAAM2lG,WAFrF,CAAA/iG,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,UAGH,GAHG,OAMN6jG,EAAmB,SAAAxlG,GAAK,OAC5BT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,EACJxO,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP9Y,WAAY,SACZE,eAAgB,cAGdhK,EAAM9B,OACNqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJxoB,MAAO,OACP+E,OAAQ,OACRK,aAAc,MACdlB,gBAAiB6B,EAAM9B,QAI3BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACPsf,MAAO,CACLyO,cAAc,eAGfjsB,EAAMkR,QAGX3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACL6J,UAAU,IACVzE,KAAK,WAEP9Y,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,QACXgM,MAAO,CACL6L,WAAW,UAEb6C,wBAAyB,CACvBC,OAAQnsB,EAAMuO,YAQlBk3F,EAAgB,SAAAzlG,GACpB,OACET,EAAAC,EAAAC,cAACqhB,GAAD,CACEjD,IAAK7d,EAAM4rB,MAAM/a,GACjBuO,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHxnB,MAAM,EACNkW,KAAMnQ,EAAM4rB,MAAMvf,KAAKwf,QAAQ,GAAK,QAAU,MAGhDtsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGb/J,EAAM4rB,MAAMvf,KAAKyf,YACfvsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,QAEVxR,EAAM4rB,MAAMvf,KAAKyf,YAGvB9rB,EAAMC,YAMTylG,EAAe,EACfC,EAAavlG,EAAKJ,MAAM2lG,WACxBC,EAAwBxlG,EAAKJ,MAAM4lG,sBACnCC,EAAaF,EAAW9iG,OACxBuN,EAAYzQ,OAAOC,OAAO,GAAGQ,EAAKJ,MAAMO,YAAY6P,WAGpD01F,EAAch1F,GAAcC,MAAMimC,SAAS52C,EAAKJ,MAAMgnG,aAExDz/F,EAAO,GACPw+F,EAAW,GACXp2E,EAAY,EACZJ,EAAY,EACZriB,EAAY,GACZf,EAAa,GACbk5F,EAAYprF,IACZ2V,EAAc,GACdjC,EAAgB,EAChBq4E,EAAkB,EAClBC,EAAgB,KAChB7wF,EAAiB,KA3HTxS,EAAAuC,GA6HJ/E,EAAKJ,MAAM+mG,UA7HPnkG,EAAAvB,KA8HL,QA9HKuB,EAAAuC,GAAA,GA4aL,QA5aKvC,EAAAuC,GAAA,GAypBL,QAzpBKvC,EAAAuC,GAAA,GA8yBL,aA9yBKvC,EAAAuC,GAAA,GAq4BL,QAr4BKvC,EAAAuC,GAAA,GAojCL,UApjCKvC,EAAAuC,GAAA,GAquCL,aAruCKvC,EAAAuC,GAAA,GA8hDL,UA9hDKvC,EAAAuC,GAAA,sBAoIR,IALI+gG,EAAgB,GAEd1xF,EAAiBtI,SAAS05F,EAAsB,GAAG/rF,WACnDs9B,EAAejrC,SAAS4jD,MAASx2C,GAAGC,UAAU,KAE3CM,EAAUrF,EAAeqF,GAAWs9B,EAAat9B,GAAW,MAC7DwV,EAAOygC,IAAiB,IAAVj2C,GAAgBT,OAAO,cACtC8sF,EAAc72E,KACjB62E,EAAc72E,GAAQ,CACpBA,OACAxV,YACA45C,SAAU,EACVwzC,QAAS,IAwDf,IAnDI7c,EAAU,KACdwb,EAAsB37F,QAAQ,SAAA0gF,GAC5B,IAAMt7D,EAAOygC,IAAqB,IAAd66B,EAAI9wE,WAAgBT,OAAO,cACzCiU,EAAajtB,EAAKI,cAAc+C,iBAAiBonF,EAAIuc,WAAW,IAWtE,GATKhB,EAAc72E,KACjB62E,EAAc72E,GAAQ,CACpBA,OACAxV,UAAU8wE,EAAI9wE,UACd45C,SAAU,EACVwzC,QAAS,IAIT7c,EAAQ,CACV,IAAM+c,EAAiB/mG,EAAKI,cAAc+C,iBAAiB6mF,EAAQ8c,WAAW,IAE9E,IADwB75E,EAAW+5E,GAAGD,GACnB,CACjB,IAAME,EAAOh6E,EAAW5R,MAAM0rF,GAE1BE,EAAK3tE,IAAI,IACXwsE,EAAc72E,GAAMokC,UAAU9nD,WAAW07F,GACzC15E,EAAgB7U,KAAKG,IAAI0U,EAAcu4E,EAAc72E,GAAMokC,YAE3DyyC,EAAc72E,GAAM43E,SAASt7F,WAAW07F,GACxC15E,EAAgB7U,KAAKG,IAAI0U,EAAc7U,KAAKiqD,IAAImjC,EAAc72E,GAAMokC,kBAKxEyyC,EAAc72E,GAAMokC,UAAU9nD,WAAW0hB,GAG3C+8D,EAAUO,IAGZz9E,EAAYvN,OAAO+X,OAAOwuF,GAAe/pF,OAAO,SAAA1N,GAC9C,QAASrO,EAAKJ,MAAMwU,gBAAkB/F,EAAEoL,WAAWzZ,EAAKJ,MAAMwU,mBAAqBpU,EAAKJ,MAAMm3C,cAAgB1oC,EAAEoL,WAAWzZ,EAAKJ,MAAMm3C,gBAGpIgvD,EAAW,EACfj5F,EAAUjD,QAAQ,SAAAwE,GAChB03F,EAAWrtF,KAAKG,IAAIktF,EAASrtF,KAAKiqD,IAAIt0D,EAAEglD,UAAU36C,KAAKiqD,IAAIt0D,EAAEw4F,YAG/D5B,EAAYiC,KAEZtB,EAAkB,EAElBr2E,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GApMb,OAuMRxjB,EAAa,CACXo7F,QAAS,OACTC,aAAa,EACbC,UAAUtB,EACVuB,SAASvB,EACTj1F,MAAO,SAAAjD,GACL,OAAO6K,KAAKiqD,IAAI90D,EAAEM,QAEpBgM,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCmlB,SAAU,EACV5zB,OAAQ,GACR0c,OAAQ,SAAC7K,GACP,GAAIy3F,IAAoB,IAAM,EAC5B,OAAOl2C,IAAOvhD,EAAM,oBAAoB6K,OAAO,WAGnDmX,YAAa,GACbC,OAAQ,SACRC,aAAc,EACdC,eAAgB,SAChBC,WAAY,gBAEdtW,SAAU,KACVstF,UAAW,CACTjrG,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAW,EACXD,eAAgB,SAChBtX,OAAQ,SAAA3K,GAAC,OAAIrO,EAAKI,cAAckJ,iBAAiBoP,KAAKiqD,IAAIt0D,GAAG,KAE/Dm5F,QAAS,CACP,CACE52E,KAAM,IACNziB,MAAO,EACPs5F,UAAW,CAAEC,cAAe,GAC5BC,UAAW,CAAE7sF,KAAMhiB,EAAMR,OAAOkE,aAAaC,OAAOL,SACpDE,OAAQ,WACRg0B,eAAgB,WAChBs3E,kBAAmB,WAEnBC,eAAgB,IAElB,CACEj3E,KAAM,IACNziB,MAAO,EACPs5F,UAAW,CAAEz2E,OAAQl4B,EAAMR,OAAO,aAAc24B,gBAAiB,OACjE02E,UAAW,CAAE7sF,KAAMhiB,EAAMR,OAAOkE,aAAaC,OAAON,QACpDG,OAAQ,UACRg0B,eAAgB,cAChBs3E,kBAAmB,WAEnBC,eAAgB,KAGpB1gG,KAAK,CAAC,WAAW,WACjBrI,QAAQ,GACRxG,OAAO,CAACQ,EAAMR,OAAOkE,aAAaC,OAAOL,QAAStD,EAAMR,OAAOkE,aAAaC,OAAON,QACnF2rG,eAAgB,sBAChBC,eAAgB,GAChBC,gBAAiB,GACjBluF,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBe,mBAAmB,GACnB1M,QAAQ,CACN,CACEo5F,SAAS,OACTt9E,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,IACtC6f,WAAY,GACZs9E,WAAY,EACZr9E,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,YAG5B9C,QAAQ,CACN4X,UAAU,CACRmP,UAAU,KACVuB,WAAW,QAIjB0R,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHpZ,QAAQ,SAACsV,GACP,IAAMyf,EAAa1rB,EAAKI,cAAc0Y,YAAY7M,EAAKm8F,YAAYpvF,OAAO,UACpEwS,EAAQ,CACZ/a,GAAGxE,EAAKwE,GACRxE,KAAK,CACHyf,eAGE28E,EAAmBroG,EAAKI,cAAckJ,iBAAiB2C,EAAKA,KAAKonD,SAAS,GAAG,IAAIrzD,EAAKJ,MAAMwN,cAC5Fk7F,EAAkBtoG,EAAKI,cAAckJ,iBAAiB2C,EAAKA,KAAK46F,QAAQ,GAAG,IAAI7mG,EAAKJ,MAAMwN,cAChG,OACEjO,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAEPrsB,EAAAC,EAAAC,cAAC+lG,EAAD,CACEt0F,MAAO,WACPhT,MAAOhF,EAAMR,OAAO8D,QACpB+R,MAAOk6F,IAETlpG,EAAAC,EAAAC,cAAC+lG,EAAD,CACEt0F,MAAO,SACPhT,MAAOhF,EAAMR,OAAO6D,OACpBgS,MAAOm6F,OA/VT9lG,EAAAjB,OAAA,qBAmeR,IArDAgsB,EAAgB,EAEhBzgB,EAAU0D,KAAK,CACbC,GAAG,MACH3S,MAAO,OAAO4S,GAAcC,MAAM4kC,OAAOv1C,EAAKJ,MAAMwN,eAAetP,MAAM8S,IAAIC,KAAK,KAAK,IACvF5E,KAAMs5F,EAAWpqF,IAAI,SAACtN,EAAEqC,GACtB,IAAM+c,EAAajtB,EAAKI,cAAc+C,iBAAiB0K,EAAEi5F,WAAW,IAC9D1rF,EAAYpb,EAAKI,cAAc+C,iBAAiB0K,EAAEuN,UAAUpb,EAAKJ,MAAMO,YAAYiD,UACnFmlG,EAAMt7E,EAAW9nB,MAAMiW,GACvB7G,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpC3E,EAAI9I,WAAWg9F,EAAIxyF,YAIzB,OAFAwX,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEhC,CAAEE,IAAEF,SAKfrU,EAAKJ,MAAMO,YAAY6P,UAAUnG,QAAQ,SAACC,EAAEka,GAC1CuhF,EAAWpqF,IAAI,SAACtN,EAAEqC,GAChB,OAAOrC,EAAEq8E,cAAcnuE,OAAO,SAACyrD,EAAmBjzD,GAC9C,OAAOizD,EAAmBp3D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE8K,IAAI,SAACqsD,EAAmBghC,GAEvB,IADuBxoG,EAAKI,cAAciB,MAAMmmE,EAAmB6iB,MAAM2c,GAAG,GACxD,CAClB,IAAMzyF,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACtC3E,EAAI9I,WAAWvL,EAAKI,cAAc+C,iBAAiBqkE,EAAmBxD,WAAWhkE,EAAKJ,MAAMO,YAAYiD,WAE5GmqB,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEvC,IAAIo0F,EAAY37F,EAAU,GAAGb,KAAK8P,OAAO,SAAAqT,GAAU,OAAOA,EAAK7a,IAAMA,IACrE,GAAIk0F,EAAU,CACZA,EAAYA,EAAU,GACtB,IAAMC,EAAM57F,EAAU,GAAGb,KAAK2L,QAAQ6wF,GACjCA,EAAU3kC,cACb2kC,EAAU3kC,YAAc,IAE1B2kC,EAAU3kC,YAAYh6D,EAAE4C,MAAQ2H,EAChCvH,EAAU,GAAGb,KAAKy8F,GAAOD,MAI5B,KACF1sF,OAAO,SAAC1N,GAAQ,YAAa3L,IAAN2L,MAI5B42F,EAAYprF,IAEZ0V,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GApeb,OAueRxjB,EAAa,CACX8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAGVgX,QAAQ,mBACRC,QAAQ,SAAA5hB,GAAC,OAAIrO,EAAKI,cAAcgJ,YAAYiF,EAAEA,EAAE,EAAI,EAAG,IACvDyhB,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,GAEX9V,SAAS,CACP3d,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAQ,SAAA3K,GAAC,OAAIrO,EAAKI,cAAckJ,iBAAiB+E,EAAEA,EAAE,EAAI,EAAG,KAE9D8L,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCmlB,SAAU,EACVlX,OAAQ,QACRmX,YAAa,GACbI,WAAYvwB,EAAKJ,MAAMmL,SAAW,eAAmB/K,EAAKJ,MAAM+oG,aAAe,eAAiB,eAChGv4E,OAAQ,SACR9zB,OAAQ,GACR+zB,aAAc,EACdC,eAAgB,UAElBd,cACA1V,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB1M,QAAQ,CACN,CACE8b,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,GACtC6f,WAAY,GACZs9E,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAEpB3F,EADY2F,EAAVC,MACYC,OAAO,GAC3B,MAAqB,kBAAV7F,GAA4C,kBAAfA,EAAMvf,KAE1C9M,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAEPrsB,EAAAC,EAAAC,cAAC+lG,EAAD,CACEt0F,MAAO0a,EAAMgG,QACb1zB,MAAO0tB,EAAMo9E,WACbz6F,MAAOqd,EAAMvf,KAAKwlB,aAGlBjG,EAAMvf,KAAK63D,aAAiD,kBAA3Bt4C,EAAMvf,KAAK63D,aAC1CvkE,OAAO4H,KAAKqkB,EAAMvf,KAAK63D,aAAa3oD,IAAI,SAAAhL,GACtC,IAAM04F,EAAgB,OAAOn4F,GAAcC,MAAMX,UAAUG,GAAcrS,MAAM8S,IAAIC,KAAK,KAAK,IACvF22D,EAAqBh8C,EAAMvf,KAAK63D,YAAY3zD,GAC5C24F,EAA8B9oG,EAAKI,cAAcgJ,YAAYo+D,EAAmBA,EAAmB,EAAI,EAAI,GAC3GC,EAAyBznE,EAAKI,cAAciB,MAAMmqB,EAAMvf,KAAK63D,YAAY3zD,IAAe/K,IAAIpF,EAAKI,cAAciB,MAAMmqB,EAAMvf,KAAKoI,IAAIlP,MAAM,KAAKoL,QAAQ,GAAG,IAChK,OACEpR,EAAAC,EAAAC,cAAC+lG,EAAD,CACEt0F,MAAOX,EACPrS,MAAO+qG,EACPprF,IAAG,GAAAlZ,OAAKinB,EAAM/a,GAAX,KAAAlM,OAAiB4L,GACpBhC,MAAK,GAAA5J,OAAKukG,EAAL,MAAAvkG,OAAqCkjE,EAArC,UAuDd,OArpBHjlE,EAAAjB,OAAA,qBAmsBR,IAzCA4F,EAAO,GACPw+F,EAAW,GAEXJ,EAAW17F,QAAQ,SAACgE,EAAEqC,GACpB,IAAM+e,EAAOygC,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,cAEzCuxE,EAAM,CACRt7D,QAGFphB,EAAEq8E,cAAcrgF,QAAQ,SAACk/F,GACvB,IAAMC,EAAiBhpG,EAAKI,cAAciB,MAAM0nG,EAAa1e,MAAM2c,GAAG,GAChEvvF,EAAgBzX,EAAKJ,MAAMO,YAAY6P,UAAU0H,KAAK,SAAC5N,GAAQ,OAAOA,EAAEvD,QAAQ8J,gBAAkB04F,EAAa34F,aAAaC,gBAClI,GAAIoH,EAAc,CAChB,IAAMtH,EAAenQ,EAAKI,cAAc2Q,WAAW0G,EAAc/K,MACjE,GAAKs8F,EAQHze,EAAIp6E,GAAgB,MARF,CAClB,IAAI6zD,EAAaz4D,WAAWvL,EAAKI,cAAc+C,iBAAiB4lG,EAAa/kC,WAAWhkE,EAAKJ,MAAMO,YAAYiD,WAC/G+D,EAAKgJ,GAAgB,EACrBo6E,EAAIp6E,GAAgB6zD,EACpBumB,EAAG,GAAAhmF,OAAI4L,EAAJ,UAA2B,OAAOO,GAAcC,MAAMX,UAAUG,EAAaE,eAAevS,MAAM8S,IAAIC,KAAK,KAAK,IAEnH0c,EAAgB7U,KAAKG,IAAI0U,EAAcy2C,OAQ7C2hC,EAAS12E,GAAQs7D,IAGnBz9E,EAAYvN,OAAO+X,OAAOquF,GAG1BV,EAAYiC,KAEZtB,EAAkB,EAElBr2E,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GApsBb,OAusBRxjB,EAAa,CACXjN,QAAS,GACTyO,SAAS,EACT45F,QAAS,OACTC,aAAa,EACbW,eAAgB,GAChBC,gBAAiB,GACjB7gG,KAAM5H,OAAO4H,KAAKA,GAClB2gG,eAAgB,sBAChBxvG,OAAQ,SAAAoJ,GAAA,IAAG+O,EAAH/O,EAAG+O,GAAH,OAAA/O,EAAOuK,KAAe,GAAA1H,OAAIkM,EAAJ,WAC9BwJ,SAAS,CACPjB,OAAQ,SAAA3K,GAAC,OAAIrO,EAAKI,cAAckJ,iBAAiB+E,EAAEA,EAAE,EAAI,EAAG,IAC5D+hB,OAAQ,OACRF,SAAU,EACVC,YAAa,GACbK,aAAc,EACdl0B,OAAQ,GACR+zB,cAAe,GACfE,WAAWf,EACXc,eAAgB,UAElBd,cACArV,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR0c,OAAQ,SAAC7K,GACP,GAAIy3F,IAAoB,IAAM,EAC5B,OAAOl2C,IAAOvhD,EAAM,oBAAoB6K,OAAO,WAGnDkX,SAAU,EACVC,YAAa,GACbC,OAAQ,cACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,gBAEd1hB,QAAQ,CACN,CACEo5F,SAAS,OACTt9E,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,GACtC6f,WAAY,GACZs9E,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAASqB,EAAKJ,MAAMmL,SAAW,GAAK,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAASqB,EAAKJ,MAAMmL,SAAW,GAAK,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHpZ,QAAQ,SAAA2b,GAA0B,IAAvB7B,EAAuB6B,EAAvB7B,GAAItC,EAAmBmE,EAAnBnE,MAAOrQ,EAAYwU,EAAZxU,MACdkmE,EAAahkE,EAAKI,cAAcgJ,YAAY+E,EAAM,GACxD,OACEhP,EAAAC,EAAAC,cAAA,SAAO+d,MAAO,CAACvjB,MAAM,OAAOovG,eAAe,aACzC9pG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,YAClBK,EAAAC,EAAAC,cAAA,QAAM+d,MAAO,CAAC3O,QAAQ,QAAS5U,MAAO,OAAQ+E,OAAQ,OAAQqgB,WAAYnhB,MAE5EqB,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,UAAU+sB,cAAc,eAAgBpb,GAC5DtR,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,YAAYK,EAAAC,EAAAC,cAAA,cAAS2kE,EAAT,IAAsBhkE,EAAKJ,MAAMwN,qBAtyBrE5K,EAAAjB,OAAA,4BA+yBR4F,EAAO,GACPw+F,EAAW,GAEXJ,EAAW17F,QAAQ,SAACgE,EAAEqC,GACpB,IAAM+e,EAAOygC,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,cACzCuxE,EAAM,CACRt7D,KAAKygC,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,qBAEnC2sF,EAAS12E,KACXs7D,EAAMob,EAAS12E,IAGjB,IAAM7mB,EAAkByF,EAAEq8E,cAAch8C,OAAO,SAACm5B,EAAYG,GAC1D,IAAMxD,EAAahkE,EAAKI,cAAc+C,iBAAiBqkE,EAAmBxD,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UAC5G,OAAOpD,EAAKI,cAAciB,MAAMgmE,GAAax/D,KAAKm8D,IAClD,GAEFn2D,EAAEq8E,cAAcrgF,QAAQ,SAACk/F,GACvB,IAAMC,EAAiBhpG,EAAKI,cAAciB,MAAM0nG,EAAa1e,MAAM2c,GAAG,GAChE72F,EAAenQ,EAAKJ,MAAMO,YAAY6P,UAAU+L,OAAO,SAACjS,GAAQ,OAAOA,EAAEvD,QAAQ8J,gBAAkB04F,EAAa34F,aAAaC,gBAAiB,GAAG3D,KACvJ,GAAKs8F,OAMmCtmG,WAAtB6nF,EAAIp6E,KACpBo6E,EAAIp6E,GAAgB,OAPF,CAClB,IAAM6zD,EAAahkE,EAAKI,cAAc+C,iBAAiB4lG,EAAa/kC,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UAChG8lG,EAAiB39F,WAAWy4D,EAAW5+D,IAAIgD,GAAiBjD,MAAM,MACxEgC,EAAKgJ,GAAgB,EACrBo6E,EAAIp6E,GAAgB+4F,EACpB3e,EAAG,GAAAhmF,OAAI4L,EAAJ,UAA2B,OAAOO,GAAcC,MAAMX,UAAUG,GAAcrS,MAAM8S,IAAIC,KAAK,KAAK,OAMzG80F,EAAS12E,GAAQs7D,IAGnBz9E,EAAYvN,OAAO+X,OAAOquF,GAG1BV,EAAYiC,KAEZtB,EAAkB,EAElB75F,EAAa,CACXjN,QAAS,GACTyO,SAAS,EACT45F,QAAS,OACTl7F,KAAMa,EACNs6F,aAAa,EACbW,eAAgB,GAChBC,gBAAiB,GACjB7gG,KAAM5H,OAAO4H,KAAKA,GAClB2gG,eAAgB,sBAChBn4F,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHzX,OAAQ,SAAAma,GAAA,IAAGhC,EAAHgC,EAAGhC,GAAH,OAAAgC,EAAOxG,KAAe,GAAA1H,OAAIkM,EAAJ,WAC9BwJ,SAAS,CACPjB,OAAQ,SAAA3K,GAAC,OAAIvC,SAASuC,GAAG,MAE3B8L,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR0c,OAAQ,SAAC7K,GACP,GAAIy3F,IAAoB,IAAM,EAC5B,OAAOl2C,IAAOvhD,EAAM,oBAAoB6K,OAAO,WAGnDoX,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAY,gBAEd55B,QAAQ,SAAAic,GAA0B,IAAvBnC,EAAuBmC,EAAvBnC,GAAItC,EAAmByE,EAAnBzE,MAAOrQ,EAAY8U,EAAZ9U,MACdkmE,EAA+B,MAAlBl4D,SAASqC,GAAenO,EAAKI,cAAcgJ,YAAY+E,EAAM,GAAKnO,EAAKI,cAAcgJ,YAAY+E,EAAM,GAC1H,OACEhP,EAAAC,EAAAC,cAAA,SAAO+d,MAAO,CAACvjB,MAAM,OAAOovG,eAAe,aACzC9pG,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,YAClBK,EAAAC,EAAAC,cAAA,QAAM+d,MAAO,CAAC3O,QAAQ,QAAS5U,MAAO,OAAQ+E,OAAQ,OAAQqgB,WAAYnhB,MAE5EqB,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,UAAU+sB,cAAc,eAAgBpb,GAC5DtR,EAAAC,EAAAC,cAAA,MAAI+d,MAAO,CAACte,QAAQ,YAAYK,EAAAC,EAAAC,cAAA,cAAS2kE,EAAT,WA73BpCxhE,EAAAjB,OAAA,qBAs7BR,IA/CAgsB,EAAgB,EAEhBvtB,EAAKJ,MAAMO,YAAY6P,UAAUnG,QAAQ,SAACC,EAAEka,GACtClX,EAAUiP,OAAO,SAAAlO,GAAO,OAAOA,EAAEnB,OAAS5C,EAAE4C,OAASjK,QAGzDqK,EAAU0D,KAAK,CACbC,GAAG3G,EAAE4C,KACL5O,MAAM,OAAO4S,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAM5O,MAAM8S,IAAIC,KAAK,KAAK,IACvE5E,KAAKs5F,EAAWpqF,IAAI,SAACtN,EAAEqC,GACrB,OAAOrC,EAAEq8E,cAAcnuE,OAAO,SAACyrD,EAAmBjzD,GAC9C,OAAOizD,EAAmBp3D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE8K,IAAI,SAACqsD,EAAmBghC,GAEvB,IADuBxoG,EAAKI,cAAciB,MAAMmmE,EAAmB6iB,MAAM2c,GAAG,GACxD,CAClB,IAAMzyF,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpC3E,EAAI9I,WAAWvL,EAAKI,cAAc+C,iBAAiBqkE,EAAmB6iB,KAAK,KAIjF,OAFA98D,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEhC,CAAEE,IAAGF,QAGb,KACF0H,OAAO,SAAC1N,GAAQ,YAAa3L,IAAN2L,QAI9BvB,EAAU0D,KAAK,CACbC,GAAG,OACH3S,MAAO,OAAO4S,GAAcC,MAAMX,UAAUxL,KAAK1G,MAAM8S,IAAIC,KAAK,KAAK,IACrE5E,KAAMs5F,EAAWpqF,IAAI,SAACtN,EAAEqC,GACtB,IAAMqE,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpC3E,EAAI9I,WAAWvL,EAAKI,cAAc+C,iBAAiB0K,EAAE6L,SAAS,KAIpE,OAFA6T,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEhC,CAAEE,IAAGF,SAKhB4wF,EAAYprF,IAEZ0V,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GAv7Bb,OA07BRxjB,EAAa,CACX8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAGVgX,QAAQ,mBACRC,QAAQ,SAAA9hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cuf,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,GAEX9V,SAAS,CACP3d,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAO,SAAA7K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAE/C4J,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCmlB,SAAU,EACVlX,OAAQ,QACRmX,YAAa,GACbI,WAAYvwB,EAAKJ,MAAMmL,SAAW,eAAmB/K,EAAKJ,MAAM+oG,aAAe,eAAiB,eAChGv4E,OAAQ,SACR9zB,OAAQ,GACR+zB,aAAc,EACdC,eAAgB,UAElBd,cACA1V,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB1M,QAAQ,CACN,CACE8b,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,GACtC6f,WAAY,GACZs9E,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAO5uB,QAC/C2uB,EAAMC,OAAOlW,IAAI,SAAAqQ,GACf,IAAMrb,EAAeqb,EAAMgG,QACrB23E,EAAkB39E,EAAMvf,KAAKwlB,WAEnC,OACEtyB,EAAAC,EAAAC,cAAC+lG,EAAD,CACE3nF,IAAK+N,EAAM/a,GACX3S,MAAO0tB,EAAM1tB,MACbgT,MAAOX,EACPhC,MAAOg7F,SA1iCf3mG,EAAAjB,OAAA,qBAwmCR,IAlDI4kG,EAAY,EAChB54E,EAAgB,EAEhBvtB,EAAKJ,MAAMO,YAAY6P,UAAUnG,QAAQ,SAACC,EAAEka,GACtClX,EAAUiP,OAAO,SAAAlO,GAAO,OAAOA,EAAEnB,OAAS5C,EAAE4C,OAASjK,QAIzDqK,EAAU0D,KAAK,CACbC,GAAG3G,EAAE4C,KACL5O,MAAM,OAAO4S,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAM5O,MAAM8S,IAAIC,KAAK,KAAK,IACvE5E,KAAKs5F,EAAWpqF,IAAI,SAACtN,EAAEqC,GACrB,OAAOrC,EAAEq8E,cAAcnuE,OAAO,SAACyrD,EAAmBjzD,GAC9C,OAAOizD,EAAmBp3D,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAEtE8K,IAAI,SAACqsD,EAAmBghC,GACvB,IAAMj0F,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACtC3E,EAAI9I,WAAWi8D,EAAmBojB,WAMtC,OAJAv2E,EAAI/S,MAAM+S,KAAOA,EAAI8xF,EAAY9xF,EACjC8xF,EAAY9xF,EACZkZ,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEhC,CAAEE,IAAGF,OACX,KACF0H,OAAO,SAAC1N,GAAQ,YAAa3L,IAAN2L,QAI9BvB,EAAU0D,KAAK,CACbC,GAAG,OACH3S,MAAO,OAAO4S,GAAcC,MAAMX,UAAUxL,KAAK1G,MAAM8S,IAAIC,KAAK,KAAK,IACrE5E,KAAMs5F,EAAWpqF,IAAI,SAACtN,EAAEqC,GACtB,IAAMqE,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACtC3E,EAAI9I,WAAWsC,EAAEy8E,WAKrB,OAJAj2E,EAAI/S,MAAM+S,KAAOA,EAAI8xF,EAAY9xF,EACjC8xF,EAAY9xF,EACZkZ,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEhC,CAAEE,IAAGF,SAOhB4wF,EAAYprF,IAEZ0V,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GAzmCb,OA4mCRxjB,EAAa,CACX8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAGVgX,QAAQ,mBACRC,QAAQ,SAAA9hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,IAC3Cuf,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,GAEX9V,SAAS,CACP3d,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAO,SAAA7K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,KAE5C4J,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCmlB,SAAU,EACVlX,OAAQ,QACRmX,YAAa,GACbI,WAAYvwB,EAAKJ,MAAMmL,SAAW,eAAmB/K,EAAKJ,MAAM+oG,aAAe,eAAiB,eAChGv4E,OAAQ,SACR9zB,OAAQ,GACR+zB,aAAc,EACdC,eAAgB,UAElBd,cACA1V,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,SACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB1M,QAAQ,CACN,CACE8b,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,GACtC6f,WAAY,GACZs9E,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAO5uB,QAC/C2uB,EAAMC,OAAOlW,IAAI,SAAAqQ,GACf,IAAMrb,EAAeqb,EAAMgG,QACrB23E,EAAkB39E,EAAMvf,KAAKwlB,WACnC,OACEtyB,EAAAC,EAAAC,cAAC+lG,EAAD,CACE3nF,IAAK+N,EAAM/a,GACX3S,MAAO0tB,EAAM1tB,MACbgT,MAAOX,EACPhC,MAAOg7F,SA3tCf3mG,EAAAjB,OAAA,qBAs5CR,IA/KA4tB,EAAY,EACZ5B,EAAgB,EAEZ84E,EAAU,KACVC,EAAW,KACXC,EAAevmG,EAAKI,cAAciB,MAAM,GACxCmlG,EAAiBxmG,EAAKI,cAAciB,MAAM,GAC1Ci3B,EAASt4B,EAAKI,cAAciB,MAAM,GAItCwkG,EAAgBN,EAAWpqF,IAAI,SAACtN,EAAEqC,GAEhC,IAAImE,EAAI,EACJ+0F,EAAM,EACJ70F,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpCirD,EAAMjkE,EAAKI,cAAc+C,iBAAiB0K,EAAE6L,SAAS,IAAItU,IAAI,KAKnE,GAFAkzB,EAASA,EAAOzwB,KAAKo8D,EAAI9+D,MAAM,MAE3BkhG,EAAQ,CACV,IAAMl5E,GAAQtf,EAAE4L,UAAU6sF,EAAS7sF,WAAW,MAGxClD,EAAWiwF,EAAerhG,MAAMkhG,EAAQlhG,MAAMgoB,GAAM/nB,IAAI,MAGxDikG,GAFN7C,EAAiBA,EAAe3+F,KAAK0O,IAENnR,IAAImhG,GAAclrF,MAAM,GAAGlW,MAAM,KAChEkP,EAAI9I,WAAW89F,GAGfD,EAAM9wE,EAAOlzB,IAAI8K,EAAE,GAAGK,QAAQ,GAGhC+1F,EAAWz4F,EAEXw4F,EAAUpiC,EAEa,OAAnBjvD,IACFA,EAAiBlJ,SAAS+B,EAAEyN,cAG9BiS,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEvC,IAAMoX,EAAU/S,KAAK2W,MAAMF,EAAUs2E,EAAW,KAC1CnqF,EAAczN,EAAEyN,YAItB,OAFA6T,IAEO,CAAE5a,IAAGF,IAAG+0F,MAAK9tF,cAAamQ,aAI/Bi6E,EAAY5uD,qBAAuB4uD,EAAY5uD,oBAAoBr0C,OAAO,GAC5EijG,EAAY5uD,oBAAoBjtC,QAAS,SAAAy/F,GACvC,IAAMr5F,EAAejQ,EAAKJ,MAAMO,YAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,OAAKA,EAAE4C,OAAS48F,EAAmBx0D,WAC5F7kC,IACFq5F,EAAmBhlG,SAAU,EAC7BglG,EAAmB/iG,QAAU0J,EAAa1J,QAC1CyJ,EAAUu5F,QAAQD,MAKxBt5F,EAAUnG,QAAS,SAAAC,GAEjB,IAAMmG,EAAeS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAC/CurC,EAAYhoC,EAAagoC,UAAYhoC,EAAagoC,UAAY,OAE9DuxD,EAAW,CACf/4F,GAAGR,EAAaa,MAChBhT,MAAO,OAAOmS,EAAanS,MAAM8S,IAAIC,KAAK,KAAK,IAC/C5E,KAAM,IAGRkjB,EAAY,EAEZk3E,EAAU,KACVC,EAAW,KACX,IAAImD,EAAa,EACbC,EAAoB,KACpBC,EAAqB,KACzBrxE,EAASt4B,EAAKI,cAAciB,MAAM,GAClCklG,EAAevmG,EAAKI,cAAciB,MAAM,GACxCmlG,EAAiBxmG,EAAKI,cAAciB,MAAM,GAE1CkkG,EAAW17F,QAAS,SAACgE,EAAEqC,GAErB,IAAM64F,EAAel7F,EAAEq8E,cAAcxyE,KAAK,SAAC+yE,EAAMl2E,GAC/C,OAAOk2E,EAAMr6E,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,gBAGxD,GAAI04F,EAAa,CAEVW,IACHA,EAAoBX,GAGtB,IAAMa,EAAoC,kBAAd3xD,GAA0BA,EAAUx1C,OAASw1C,EAAU/J,OAAO,SAAC0gD,EAAIhf,GAC7F,OAAIm5B,EAAan5B,GACR5vE,EAAKI,cAAciB,MAAMutF,GAAK/mF,KAAK7H,EAAKI,cAAciB,MAAM0nG,EAAan5B,KAE3E5vE,EAAKI,cAAciB,MAAMutF,IAChC,GAAK5uF,EAAKI,cAAciB,MAAM0nG,EAAa9wD,IAG7C,IADuB2xD,EAAa5C,GAAG,GACnB,CAGlB,GAA2B,OAAvB2C,IACFA,EAAqB79F,SAAS+B,EAAEyN,cACTtG,EAAe,CACpC,IAAM60F,EAAkBhE,EAAcnuF,KAAK,SAAAoyF,GAAE,OAAKA,EAAGxuF,aAAaquF,IAC9DE,IACFJ,EAAaI,EAAgBx1F,GAKnC,IAAI01F,EAEA11F,EAAI,EACJ+0F,EAAM,EACJ70F,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpCirD,EAAMjkE,EAAKI,cAAc+C,iBAAiBymG,EAAa,IAAIxkG,IAAI,KAKrE,GAHAkzB,EAASA,EAAOzwB,KAAKo8D,EAAI9+D,MAAM,MAG3BmhG,EAAS,CACX,IAAMn5E,GAAQtf,EAAE4L,UAAU6sF,EAAS7sF,WAAW,MAGxClD,EAAWiwF,EAAerhG,MAAMkhG,EAAQlhG,MAAMgoB,GAAM/nB,IAAI,MAGxDikG,GAFN7C,EAAiBA,EAAe3+F,KAAK0O,IAENnR,IAAImhG,GAAclrF,MAAM,GAAGlW,MAAM,KAChEkP,EAAI9I,WAAW89F,GAASI,EAExBL,EAAM9wE,EAAOlzB,IAAI8K,EAAE,GAAGK,QAAQ,GAGhC+1F,EAAWz4F,EACXw4F,EAAUpiC,EAEa,OAAnBjvD,IACFA,EAAiBlJ,SAAS+B,EAAEyN,cAG9BiS,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEvC,IAAMoX,EAAU/S,KAAK2W,MAAMF,EAAUs2E,EAAW,KAGhDt2E,IAEA46E,EAAU,CACRx1F,IACAF,IACA+0F,MACA39E,WAGF0D,IACAq6E,EAASv9F,KAAKuE,KAAKu5F,OAKzBj9F,EAAU0D,KAAKg5F,KAGjBj6E,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GAv5Cb,OA05CRziB,EAAU0D,KAAK,CACbC,GAAG,OACH3S,MAAO,OAAO4S,GAAcC,MAAMX,UAAUxL,KAAK1G,MAAM8S,IAAIC,KAAK,KAAK,IACrE5E,KAAM45F,IAIRZ,EAAYprF,IAEZ9N,EAAa,CACX8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAGVgX,QAAQ,mBACRC,QAAQ,SAAA9hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cuf,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,GAGX9V,SAAS,CACP3d,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAQ,SAAA7K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAEhD4J,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR4zB,SAAU,EACVlX,OAAQ,QACRmX,YAAa,GACbE,aAAc,EACdD,OAAQ,SACRE,eAAgB,SAChBC,WAAYvwB,EAAKJ,MAAMmL,SAAW,eAAmB/K,EAAKJ,MAAM+oG,aAAe,eAAiB,gBAElGn5E,cACA1V,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,YACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB1M,QAAQ,CACN,CACE+b,WAAY,GACZD,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,IACtCm9F,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAO5uB,QAC/C2uB,EAAMC,OAAOlW,IAAI,SAAAqQ,GACf,IAAMrb,EAAeqb,EAAMgG,QACrB23E,EAAkB39E,EAAMvf,KAAKwlB,WAC7B+kE,EAAchrE,EAAMvf,KAAKm9F,IAC/B,OACEjqG,EAAAC,EAAAC,cAAC+lG,EAAD,CACE3nF,IAAK+N,EAAM/a,GACXK,MAAOX,EACPrS,MAAO0tB,EAAM1tB,MACbqQ,MAAK,GAAA5J,OAAK4kG,EAAL,aAAA5kG,OAAgCiyF,EAAhC,yBAphDbh0F,EAAAjB,OAAA,6BAgiDRgsB,EAAgB,EACZxY,EAAkB,KAEtB8wF,EAAgBN,EAAWpqF,IAAI,SAACtN,EAAEqC,GAEhC,IAAImE,EAAI,EACJ+0F,EAAM,EACNj8E,EAAO,EACL5Y,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBACpC5G,EAAapS,EAAKI,cAAc+C,iBAAiB0K,EAAEuN,UAAUpb,EAAKJ,MAAMO,YAAYiD,UAErF2R,GAGHV,EAAI9I,WAAW6G,EAAWhN,IAAI2P,GAAiBsG,MAAM,GAAGlW,MAAM,MAE9DgoB,GAAQtf,EAAE4L,UAAU8rF,EAAW,GAAG9rF,WAAW,MAE7C2vF,EADgBh3F,EAAWhN,IAAI2P,GAAiBsG,MAAM,GAAGlW,MAAM,KACjDA,MAAM,KAAKC,IAAI+nB,GAAM5c,QAAQ,IAN3CwE,EAAkB3C,EAWG,OAAnB4C,IACFA,EAAiBlJ,SAAS+B,EAAEyN,cAG9BiS,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEvC,IAAMoX,EAAU/S,KAAK2W,MAAMF,EAAUs2E,EAAW,KAC1CnqF,EAAczN,EAAEyN,YAItB,OAFA6T,IAEO,CAAE5a,IAAGF,IAAG+0F,MAAK9tF,cAAamQ,aAI/Bi6E,EAAY5uD,qBAAuB4uD,EAAY5uD,oBAAoBr0C,OAAO,GAC5EijG,EAAY5uD,oBAAoBjtC,QAAS,SAAAy/F,GACvC,IAAMr5F,EAAejQ,EAAKJ,MAAMO,YAAY6P,UAAU0H,KAAM,SAAA5N,GAAC,OAAKA,EAAE4C,OAAS48F,EAAmBx0D,WAC5F7kC,IACFq5F,EAAmBhlG,SAAU,EAC7BglG,EAAmB/iG,QAAU0J,EAAa1J,QAC1CyJ,EAAUu5F,QAAQD,MA5kDhB9mG,EAAAvB,KAAA,IAilDFjB,EAAKI,cAAc8G,aAAa8I,EAAhC,eAAA1M,EAAA/D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA0C,SAAAgB,EAAOmI,GAAP,IAAAmG,EAAAgoC,EAAAuxD,EAAAC,EAAAO,EAAAC,EAAAP,EAAAC,EAAA,OAAAjpG,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAExCgP,EAAeS,GAAcC,MAAMX,UAAUlG,EAAE4C,MAC/CurC,EAAYhoC,EAAagoC,UAAYhoC,EAAagoC,UAAY,OAE9DuxD,EAAW,CACf/4F,GAAGR,EAAaa,MAChBhT,MAAO,OAAOmS,EAAanS,MAAM8S,IAAIC,KAAK,KAAK,IAC/C5E,KAAM,IAGRkjB,EAAY,EACRs6E,EAAa,EACjB10F,EAAkB,KACdi1F,EAAc,KACdC,EAAiB,KACjBP,EAAoB,KACpBC,EAAqB,KAjBqB7nG,EAAAb,KAAA,GAmBxCjB,EAAKI,cAAc8G,aAAaq+F,EAAhC,eAAA1hG,EAAAtE,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAC,EAAOiN,GAAP,IAAAk7F,EAAAc,EAAAE,EAAAG,EAAAC,EAAA51F,EAAAF,EAAA+0F,EAAAgB,EAAAj9E,EAAAk8E,EAAA59E,EAAA,OAAA/qB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QAEzC8nG,EAAel7F,EAAEq8E,cAAcxyE,KAAK,SAAC+yE,EAAMl2E,GAC/C,OAAOk2E,EAAMr6E,aAAaC,gBAAkBvG,EAAEvD,QAAQ8J,kBAGpC04F,EAAa9wD,KAE1ByxD,IACHA,EAAoBX,GAGC/oG,EAAKI,cAAciB,MAAM0nG,EAAa9wD,IAAY+uD,GAAG,KAI/C,OAAvB2C,IACFA,EAAqB79F,SAAS+B,EAAEyN,cACTtG,IACf60F,EAAkBhE,EAAcnuF,KAAK,SAAAoyF,GACzC,OAAOA,EAAGxuF,aAAaquF,OAGvBF,EAAaI,EAAgBx1F,GAKrB,GACV61F,EAAoBnB,EAAap2C,MACjCw3C,EAAkBnqG,EAAKI,cAAc+C,iBAAiB+mG,EAAkBpgG,EAAE1G,UACxEmR,EAAIm7C,IAAmB,IAAZ7hD,EAAE4L,WAAgBT,OAAO,oBAGtC/I,GAAgBA,EAAahE,MAAQgE,EAAahE,KAAKnC,EAAEvD,QAAQ8J,gBAAkBJ,EAAahE,KAAKnC,EAAEvD,QAAQ8J,eAAexC,EAAEyN,eAClI4uF,EAAoBlqG,EAAKI,cAAciB,MAAMqP,GAAcC,MAAMX,UAAUlG,EAAE4C,MAAMT,KAAKnC,EAAEvD,QAAQ8J,eAAexC,EAAEyN,cACnH6uF,EAAkBnqG,EAAKI,cAAc+C,iBAAiB+mG,EAAkBpgG,EAAE1G,WAiBxEiR,EAAIo1F,EACJL,EAAM,EAELr0F,GAGCo1F,EAAgBn9E,GAAGi9E,IACrBl1F,EAAkBo1F,EACZC,EAAYZ,EAASv9F,KAAKu9F,EAASv9F,KAAKxJ,OAAO,GAAG4R,EAAEm1F,EAASv9F,KAAKu9F,EAASv9F,KAAKxJ,OAAO,GAAG4R,EAChGA,EAAI21F,EAAY31F,EAAE+1F,EAClBX,EAAap1F,GAEbA,GAAK9I,WAAW4+F,EAAgB/kG,IAAI2P,GAAiBsG,MAAM,GAAGlW,MAAM,MAGhEgoB,GAAQtf,EAAE4L,UAAU8rF,EAAW,GAAG9rF,WAAW,MAC7C4vF,EAAUc,EAAgB/kG,IAAI2P,GAAiBsG,MAAM,GAAGlW,MAAM,KACpEikG,EAAMC,EAAQlkG,MAAM,KAAKC,IAAI+nB,GAAM5c,QAAQ,IAb3CwE,EAAkBo1F,EAgBpB91F,EAAIqE,KAAKG,IAAI,EAAExE,GACfkZ,EAAgB7U,KAAKG,IAAI0U,EAAclZ,GAEjCoX,EAAU/S,KAAK2W,MAAMF,EAAUs2E,EAAW,KAShDt2E,IACA66E,EARAD,EAAU,CACRx1F,IACAF,IACA+0F,MACA39E,WAKF+9E,EAASv9F,KAAKuE,KAAKu5F,GACnBE,EAAiBE,IAxF0B,wBAAAppG,EAAAS,SAAAZ,EAAAjB,SAA3C,gBAAAsC,GAAA,OAAA4B,EAAA3B,MAAAvC,KAAAwC,YAAA,IAnBwC,QAgH9C2K,EAAU0D,KAAKg5F,GAhH+B,yBAAA1nG,EAAAN,SAAAG,EAAAhC,SAA1C,gBAAAqC,GAAA,OAAAsB,EAAApB,MAAAvC,KAAAwC,YAAA,IAjlDE,SAssDR,IAFAotB,EAAYhkB,WAAWgiB,EAAc+3E,GACrC91E,EAAc,CAAC,GACNtf,EAAE,EAAEA,GAAG,EAAEA,IAChBsf,EAAYhf,KAAKN,EAAEqf,GAvsDb,OA0sDRziB,EAAU0D,KAAK,CACbC,GAAG,OACH3S,MAAO,OAAO4S,GAAcC,MAAMX,UAAUxL,KAAK1G,MAAM8S,IAAIC,KAAK,KAAK,IACrE5E,KAAM45F,IAIRZ,EAAYprF,IAEZ9N,EAAa,CACX8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAGVgX,QAAQ,mBACRC,QAAQ,SAAA9hB,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,KAC9Cuf,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,GAGX9V,SAAS,CACP3d,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAQ,SAAA7K,GAAK,OAAI5C,WAAW4C,GAAOoC,QAAQ,GAAG,MAEhD4J,WAAYna,EAAKJ,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR4zB,SAAU,EACVlX,OAAQ,QACRmX,YAAa,GACbE,aAAc,EACdD,OAAQ,SACRE,eAAgB,SAChBC,WAAYvwB,EAAKJ,MAAMmL,SAAW,eAAmB/K,EAAKJ,MAAM+oG,aAAe,eAAiB,gBAElGn5E,cACA1V,UAAU,EACVE,SAAQ,EACRzM,SAAQ,EACRkjB,WAAW,IACXvW,MAAM,YACNE,YAAW,EACXK,aAAa,IACbH,aAAY,EACZC,aAAY,EACZC,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnB1M,QAAQ,CACN,CACE+b,WAAY,GACZD,UAAW3qB,EAAKJ,MAAMmL,SAAW,GAAK,IACtCm9F,WAAYloG,EAAKJ,MAAMmL,UAAY,GAAK,EACxC8f,WAAY7qB,EAAKJ,MAAMmL,SAAW,GAAK,GACvC+f,WAAY,GACZq9E,aAAc,EACd17F,UAAW,MACXse,OAAQ,cACRE,YAAa,SACbD,cAAelyB,EAAMR,OAAOgE,OAC5B4uB,QAAS,CACP,CACEC,GAAI,QACJ/N,MAAO,CACL4N,cAAe,YAMzBlyB,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQl4B,EAAMR,OAAOsD,gBAAiBq1B,gBAAiB,SAG3DpiB,QAAQ,CACNrW,KAAK,CACHmG,SAAUqB,EAAKJ,MAAMmL,SAAW,GAAI,GACpC4D,WAAW,IACXC,WAAY9V,EAAMS,MAAME,aAI9Bk3B,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvCC,OAAQ3P,EAAKJ,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACF5F,EAAQ4F,EAAMC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACgmG,EAAD,CACE75E,MAAOA,GAGiB,kBAAjB4F,EAAMC,QAAuBD,EAAMC,OAAO5uB,QAC/C2uB,EAAMC,OAAOlW,IAAI,SAAAqQ,GACf,IAAMrb,EAAeqb,EAAMgG,QACrB23E,EAAkB39E,EAAMvf,KAAKwlB,WAC7B+kE,EAAchrE,EAAMvf,KAAKm9F,IAC/B,OACEjqG,EAAAC,EAAAC,cAAC+lG,EAAD,CACE3nF,IAAK+N,EAAM/a,GACXK,MAAOX,EACPrS,MAAO0tB,EAAM1tB,MACbqQ,MAAK,GAAA5J,OAAK4kG,EAAL,aAAA5kG,OAAgCiyF,EAAhC,yBAp0Dbh0F,EAAAjB,OAAA,6BAAAiB,EAAAjB,OAAA,sBAk1DZvB,EAAK4L,SAAS,CACZq5F,YACAl5F,aACAe,cAr1DU,0BAAAtK,EAAAhB,SAAAa,EAAA1C,oMAhCZA,KAAKiM,SAAS,CACZkB,UAAU,KACVm4F,UAAU,KACVl5F,WAAW,OAEbpM,KAAKoJ,YACLpJ,KAAKwlG,mMAGkBr6F,6EACjBu/F,EAAsBv/F,EAAU69F,eAAiBhpG,KAAKC,MAAM+oG,aAC5D2B,EAAoBx/F,EAAUy6F,aAAe5lG,KAAKC,MAAM2lG,WACxD9pF,EAAe3Q,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,eAAiB0S,KAAKC,UAAUjV,EAAU3K,eAAiB2f,KAAKC,UAAUpgB,KAAKC,MAAMO,cAC7ImqG,GAAqBD,GAAuB5uF,IAC9C9b,KAAK2sB,2JAOH3sB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAk2D9C,OACET,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACEwM,YAAY,GACRrM,KAAK4K,MAAMwB,WAFjB,CAGEnN,OAAQe,KAAKC,MAAMhB,OACnBuK,KAAMxJ,KAAK4K,MAAM06F,UACjBh5F,KAAMtM,KAAK4K,MAAMuC,UACjBjT,MAAO8F,KAAK4K,MAAMe,WAClBP,SAAUpL,KAAKC,MAAMmL,SACrBG,SAAUvL,KAAKC,MAAMsL,SACrBO,eAAgB9L,KAAKC,MAAM6L,yBA74DV3L,aC6LVyqG,8MA/LbhgG,MAAQ,CACNkc,SAAQ,EACRwb,WAAW,CACTqc,UAAU,CACRtoB,OAAO,KACPvP,SAAQ,IAGZ6/C,gBAAgB,QAIlBlmE,cAAgB,OAyBhBulE,oCAAiB,SAAA/kE,IAAA,IAAA0lE,EAAA,OAAA5lE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfjB,EAAK4L,SAAS,CACZ6a,SAAQ,IAFK1lB,EAAAE,KAAA,EAKejB,EAAKI,cAAculE,eAAe3lE,EAAKJ,MAAMO,aAL5D,OAKTmmE,EALSvlE,EAAAK,KAOfpB,EAAK4L,SAAS,CACZ6a,SAAQ,EACR6/C,oBATa,wBAAAvlE,EAAAS,SAAAZ,EAAAjB,WAajB2+C,gDAAY,SAAA38C,EAAOoM,GAAP,IAAAnM,EAAAwmE,EAAA,OAAA1nE,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACV8M,EAAEsnB,iBAEIzzB,EAAW,SAACoa,EAAG8lB,GAGnB,IAAMiG,EAAY,CAChBpkB,cAAe,YACfC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,QAKbwkC,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG5B,YAAd/rB,EAAG1e,OAELmN,OAAO0zB,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,4BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXh0B,OAAO0zB,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIbz+B,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERqc,UAAU,CACRtoB,OAAO,KACPvP,SAAQ,QAKdzmB,EAAK2lE,kBAGDyC,EAAmB,SAACpsD,GACxB,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC1B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERqc,UAAU/+C,OAAA0L,EAAA,EAAA1L,CAAA,GACL4N,EAAU80B,WAAWqc,UADjB,CAEPtoB,iBAOVh2B,EAAKJ,MAAMmC,0BAA0B/B,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO,YAAa,GAAI,KAAO5B,EAAUwmE,GAE1GpoE,EAAK4L,SAAS,CACZq2B,WAAW,CACTqc,UAAU,CACRtoB,OAAO,KACPvP,SAAQ,MA5EJ,wBAAA3kB,EAAAN,SAAAG,EAAAhC,0IAnCNA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,YACLpJ,KAAKgmE,sMAGkB76D,EAAUqC,yEACjCxN,KAAKoJ,YAEC2S,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,SACnC2J,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,eACxCsO,IAClB/b,KAAKgmE,uJAmGA,IAAA38D,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,EACJxnB,MAAO,EACPsS,UAAW,QACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGhBjK,KAAK4K,MAAMkc,QACTtnB,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,0BAGRmH,KAAK4K,MAAM03B,WAAWqc,UAAU73B,QAC9BtnB,EAAAC,EAAAC,cAAC6sC,GAAD,CAAevJ,KAAMhjC,KAAKC,MAAM+iC,KAAM0C,SAAQ,yBAA4BD,WAAU,kCAAqCvY,KAAMltB,KAAK4K,MAAM03B,WAAWqc,UAAUtoB,SAE/J72B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,EACJD,UAAW,UAEVzR,KAAK4K,MAAM+7D,gBAAkB,uDAAyD,iCAEzFnnE,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,OACNlC,UAAUgI,KAAK4K,MAAM+7D,iBAEvB/nD,YAAa,SAAAxQ,GAAC,OAAI/E,EAAKs1C,UAAUvwC,KALnC,sBA/KUjO,aCuGT0qG,8MAtGbpqG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAIL,OACE5J,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFqC,UAAUxM,KAAKC,MAAMuM,UAAYxM,KAAKC,MAAMuM,UAAY,CAAC,QAAQ,WAGnEhN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,aACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,aACZyC,UAAYxM,KAAKC,MAAM6qG,eAAiB9qG,KAAKC,MAAM6qG,eAAiB,CAAC,OAAO,SAE5EtrG,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACEjO,GAAI,CAAC,EAAE,GACP1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WAEX5f,KAAKC,MAAMvG,QAIe,qBAArBsG,KAAKC,MAAMuO,OAA8C,OAArBxO,KAAKC,MAAMuO,OAAkBxO,KAAKC,MAAMuO,MAAM4H,WAAWtT,OAAO,GAC1GtD,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACE+f,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,aACH6B,KAAKC,MAAM8qG,YAEd/qG,KAAKC,MAAMuO,OAIhBxO,KAAKC,MAAMC,SACTF,KAAKC,MAAMC,SACX,KAG2B,qBAArBF,KAAKC,MAAMkR,OAA8C,OAArBnR,KAAKC,MAAMkR,OAAkBnR,KAAKC,MAAMkR,MAAMiF,WAAWtT,OAAO,GAC1GtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,UAEN6B,KAAKC,MAAMkR,OAGXnR,KAAKC,MAAM+qG,cAAgBhrG,KAAKC,MAAM+qG,aAAaloG,OAAO,GACzDtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKC,MAAM+qG,cAEpBxrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,yBA3FPgC,aCqET8qG,oLApEJ,IAAA5qG,EAAAL,KAEDkrG,IAAmBlrG,KAAKC,MAAMirG,eAEpC,OACE1rG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,aACJ/G,WAAY,UAGV/J,KAAKC,MAAM2e,aACVpf,EAAAC,EAAAC,cAACmkG,GAAD,CACEz9E,YAAa,CACXlsB,MAAM,OACN+E,OAAO,QAET+N,SAAU,QACVowB,SAAU,YACVxe,YAAa5e,KAAKC,MAAM2e,cAI3B5e,KAAKC,MAAMpH,MAAQmH,KAAKC,MAAMpH,KAAKiK,OAAO,GACzCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,CAAC,EAAE,GACP1N,SAAU,CAAC,EAAE,GACbgQ,WAAY,EACZ7Q,MAAO,WACPqpB,WAAY,YACZ7I,QAAS3e,KAAKC,MAAM2e,aAEpB5e,KAAKC,MAAMpH,QAIZmH,KAAKC,MAAMmL,UAAY8/F,IAAmBlrG,KAAKC,MAAMo0C,MAAQr0C,KAAKC,MAAMo0C,KAAKvxC,OAAO,GACpF9C,KAAKC,MAAMo0C,KAAK74B,IAAI,SAAC64B,EAAKpnB,GACxB,IAAMsrE,EAAOl4F,EAAKJ,MAAMkrG,UAAY9qG,EAAKJ,MAAMkrG,SAASl+E,IAAkB,KACpE9sB,EAAYo4F,EAAO6S,IAAO/2E,IAChC,OACE70B,EAAAC,EAAAC,cAACS,EAAD,CACEy5B,GAAI,CAAC,EAAE,GACPltB,GAAI,CAAC,EAAE,GACPsC,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbwoB,WAAY,YACZ/J,MAASpd,EAAKJ,MAAMmL,SAMhB,KAN2B,CAC7BsnB,SAAS,MACTxJ,SAAU,SACVI,WAAY,SACZqJ,aAAc,WACd04E,WAAU,aAAAzmG,OAAezL,EAAMR,OAAO4D,UAExCuhB,IAAG,mBAAAlZ,OAAqBqoB,GACxB9uB,MAAOo6F,EAAO,WAAa,YAC3B55E,QAAS45E,EAAO,SAAAnqF,GAAC,OAAI/N,EAAKJ,MAAMqvC,YAAYipD,IAAQ,MAEnDlkD,aA3DMl0C,kCCwJVmrG,uNA7Ib1gG,MAAQ,CACN2gG,eAAe,GACfC,OAAO,CACLl/E,UAAWjsB,EAAKJ,MAAMqsB,UAAYjsB,EAAKJ,MAAMqsB,UAAY,IAAIlT,KAC7DqyF,QAASprG,EAAKJ,MAAMwrG,QAAUprG,EAAKJ,MAAMwrG,QAAU,IAAIryF,KACvD0E,IAAK,gBAsDT4tF,mBAAqB,SAACvgG,GAChBA,EAAUmhB,YAAcjsB,EAAKJ,MAAMqsB,WAAanhB,EAAUsgG,UAAYprG,EAAKJ,MAAMwrG,SACnFprG,EAAK4L,SAAS,CACZu/F,OAAO,CACLl/E,UAAWjsB,EAAKJ,MAAMqsB,UAAYjsB,EAAKJ,MAAMqsB,UAAY,IAAIlT,KAC7DqyF,QAASprG,EAAKJ,MAAMwrG,QAAUprG,EAAKJ,MAAMwrG,QAAU,IAAIryF,KACvD0E,IAAK,4FAxDA0tF,GACXxrG,KAAKiM,SAAS,CACZs/F,eAAe,GACfC,OAAOA,EAAOG,sDAIAv9F,GAAE,IAAA/E,EAAArJ,KACdssB,EAAY,KACZm/E,EAAU17C,IAAO,IAAI32C,MACnBmyF,EAAiBn9F,EAAEtO,OAAO0O,MAEhC,OAAQ+8F,GACN,IAAK,MACHj/E,EAAYm/E,EAAQlwF,QAAQjC,SAAS,EAAE,OACzC,MACA,IAAK,OACHgT,EAAYm/E,EAAQlwF,QAAQjC,SAAS,EAAE,QACzC,MACA,IAAK,QACHgT,EAAYm/E,EAAQlwF,QAAQjC,SAAS,EAAE,QACzC,MACA,IAAK,QACHgT,EAAYm/E,EAAQlwF,QAAQjC,SAAS,EAAE,SACzC,MACA,QACEgT,EAAY,KACZm/E,EAAU,KAId,GAAIn/E,GAAam/E,EAAQ,CAIvB,IAAMD,EAAS,CACbl/E,UAJFA,EAAYA,EAAU/S,GAKpBkyF,QAJFA,EAAUA,EAAQlyF,GAKhBuE,IAAI,aAGN9d,KAAKiM,SAAS,CACZu/F,SACAD,kBACC,WACDliG,EAAKg2B,qDAkBT,IAAMh0B,EAAWrL,KAAKC,MAAM2rG,aAAa5rG,KAAK4K,MAAM4gG,OAAOxrG,KAAK4K,MAAM2gG,gBAChEC,EAAS,CACbl/E,UAAUjhB,EAASwgG,kBAAoBxgG,EAASwgG,kBAAkBtyF,GAAK,IAAIH,KAC3EqyF,QAAQpgG,EAASygG,gBAAkBzgG,EAASygG,gBAAgBvyF,GAAK,IAAIH,KACrE0E,IAAK,aAEP9d,KAAKiM,SAAS,CACZu/F,WAEFxrG,KAAKC,MAAMo/B,8CAGJ,IAAAhxB,EAAArO,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,sBAEzB8F,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,SAAUD,WAAY,UACnDvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOwR,MAAM,uBAAuBsM,MAAO,CAAC3O,QAAQ,OAAO5U,MAAM,OAAO6P,WAAW,UAAUE,eAAe,WAC1GzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLtf,MAAM,UACNa,SAAS,OACTC,OAAO,QACP8e,UAAU,QAEZ7jB,MAAO,OACPytB,UAAU,EACV5F,SAAU/hB,KAAK+rG,kBAAkB9gG,KAAKjL,MACtCwO,MAAOxO,KAAK4K,MAAM2gG,eAClBlrF,QAAS,CACP,CAAE7R,MAAO,GAAI2C,MAAO,oBACpB,CAAE3C,MAAO,MAAO2C,MAAO,YACvB,CAAE3C,MAAO,OAAQ2C,MAAO,aACxB,CAAE3C,MAAO,QAAS2C,MAAO,gBACzB,CAAE3C,MAAO,QAAS2C,MAAO,kBAI/B3R,EAAAC,EAAAC,cAACssG,GAAA,UAAD,CACER,OAAQ,CAACxrG,KAAK4K,MAAM4gG,QACpBS,QAASjsG,KAAKC,MAAMgsG,QACpBC,QAASlsG,KAAKC,MAAMisG,QACpBnqF,SAAU/hB,KAAK4rG,aAAa3gG,KAAKjL,UAIvCR,EAAAC,EAAAC,cAACsiC,GAAUnF,OAAX,KACEr9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+hB,GAAI,CAAC,EAAE,GAAI1X,cAAe,CAAC,SAAU,OAAQ9P,MAAO,EAAG+P,eAAgB,UAC3EzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdymB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCuT,QAAU,SAAAvQ,GAAC,OAAIC,EAAKgxB,WAAWjxB,KALjC,oBA7HeikB,IAAMlyB,YCqHpBgsG,8MA5HbvhG,MAAQ,CACNwhG,SAAS,KACT9pE,WAAW,CACTjM,OAAO,KACPvP,SAAQ,MAKZrmB,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,qQAILpJ,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,yIAKL,IAAAzd,EAAArJ,KA8CPA,KAAKS,cAAc2B,0BAA0BpC,KAAKC,MAAMowD,aAAarwD,KAAKC,MAAMuqE,WAAWxqE,KAAKC,MAAMg0C,OA5CrF,SAAC53B,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBpkB,cAAe,cACfE,WAAY7a,EAAKpJ,MAAMuqE,WACvBvmD,YAAa5a,EAAKpJ,MAAMowD,cAGtBluB,IACFiG,EAAUlkB,WAAa7a,EAAK5I,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0L,EAAK5I,cAAcsjB,yBAAyBqkB,GAGZ,YAAd/rB,EAAG1e,QAEc,oBAAxB0L,EAAKpJ,MAAMgC,UACpBoH,EAAKpJ,MAAMgC,WAIfoH,EAAK4C,SAAS,CACZmgG,SAAS/vF,EAAG1e,OACZ2kC,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAKU,SAACzK,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl/B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B4+F,SAAS,aACT9pE,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,gBAONr2B,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B4+F,SAAS,UACT9pE,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,wCAMZ,IAAMulF,EAAmBrsG,KAAKC,MAAME,UACpC,OACEX,EAAAC,EAAAC,cAACC,EAAA,EACKK,KAAKC,MAAM8oB,YAGW,YAAxB/oB,KAAK4K,MAAMwhG,UAA0BpsG,KAAKC,MAAMC,SAC9CF,KAAKC,MAAMC,SACXF,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC/CtnB,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB9V,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BqP,SAAQ,GAAA9gC,OAAK5E,KAAKC,MAAMnD,OAAhB,iBACRipC,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/CylC,WAAU,cAAA7gC,OAAgB5E,KAAKC,MAAMnD,OAA3B,iBAGZ0C,EAAAC,EAAAC,cAAC2sG,EAADzsG,OAAAC,OAAA,CACE8e,QAAS3e,KAAKssG,QAAQrhG,KAAKjL,OACvBA,KAAKC,MAAMssG,gBAEdvsG,KAAKC,MAAMssG,eAAe/9F,eArHRrO,aCs7ClBqsG,8MAp6Cb5hG,MAAQ,CACNg+F,IAAI,KACJtkC,IAAI,KACJ92C,KAAK,IACLi/E,MAAM,KACN/C,QAAQ,KACRuC,QAAQ,KACRC,QAAQ,KACRzK,YAAY,EACZiL,WAAW,IACXC,aAAa,GACb/G,WAAW,KACXlE,cAAc,EACduF,YAAY,KACZ2F,cAAc,GACdC,aAAa,KACbz1D,aAAa,KACb4xD,cAAa,EACb8D,cAAc,KACd1wB,cAAc,KACdmvB,eAAe,KACf92F,eAAe,KACfq3F,gBAAgB,KAChBnlC,gBAAgB,KAChBo7B,mBAAmB,EACnB8J,kBAAkB,KAClBkB,sBAAqB,EACrBlH,sBAAsB,KACtBmH,sBAAqB,KAGvBC,gBAAkB,CAChBxoC,IAAI,WACJC,KAAK,YACLwoC,MAAM,eACNC,MAAM,gBAIR1sG,cAAgB,OAChBoK,mBAAqB,OAqIrBuiG,aAAe,SAAC5B,GAA+B,IAAxBD,EAAwB/oG,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE9BqqG,EAAe98C,IAAOh/C,GAAcC,MAAM4kC,OAAOv1C,EAAKJ,MAAMwN,eAAegH,gBAE7Eo3F,EAAoB97C,IAAOy7C,EAAOl/E,WAAW2C,cAAc49E,GAAgB98C,IAAOy7C,EAAOl/E,WAAaugF,EACtGf,EAAkB/7C,IAAOy7C,EAAOC,SAEhCI,EAAkBwB,OAAOvB,IAC3BA,EAAgBpyF,IAAI,EAAE,OAGxBoyF,EAAkB/7C,IAAO+7C,EAAgBzyF,OAAO,oBAAoB,oBAEhEwyF,EAAkByB,SAASjtG,EAAKuK,MAAMiiG,gBACxChB,EAAoBxrG,EAAKuK,MAAMiiG,cAG7Bf,EAAgB58E,QAAQ7uB,EAAKuK,MAAM2iG,cACrCzB,EAAkBzrG,EAAKuK,MAAM2iG,YAG/B,IAAM94F,EAAiBtI,SAAS0/F,EAAkBtyF,GAAGC,UAAU,KAGzDnO,EAAW,CACfwhG,eACAz1D,aAJmBjrC,SAAS2/F,EAAgBvyF,GAAGC,UAAU,KAKzD+xF,iBACA92F,iBACAq3F,kBACAD,qBAKF,OAFAxrG,EAAKqN,aAAarC,GAEXA,KAGTmiG,qBAAuB,SAACp/F,GACtBA,EAAEsnB,iBACFr1B,EAAKqN,aAAa,CAChBs7F,cAAc3oG,EAAKuK,MAAMo+F,kBAI7ByE,kBAAoB,SAACT,GACfA,IAAyB3sG,EAAKuK,MAAMoiG,sBACtC3sG,EAAKqN,aAAa,CAChBs/F,4BAsDNU,gBAAkB,SAAC9H,GACjB,OAAOA,EAAWxpF,OAAO,SAACq6C,EAAElmD,GAC1B,QAASlQ,EAAKuK,MAAM6J,gBAAkBgiD,EAAE38C,WAAazZ,EAAKuK,MAAM6J,mBAAqBpU,EAAKuK,MAAMwsC,cAAgBqf,EAAE38C,WAAazZ,EAAKuK,MAAMwsC,mBAI9Iu2D,eAAiB,SAAA1G,GACf5mG,EAAKqN,aAAa,CAChBu5F,mBAIJzB,iCAAc,SAAAvkG,IAAA,IAAAwT,EAAA2iC,EAAAjlC,EAAA0zF,EAAAD,EAAAgI,EAAAC,EAAArgF,EAAA82C,EAAAmoC,EAAAn/E,EAAAwgF,EAAAC,EAAAnF,EAAA/a,EAAAmgB,EAAAC,EAAAC,EAAA51D,EAAA61D,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAA5B,EAAAI,EAAA1wB,EAAA,OAAAr7E,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEPjB,EAAKJ,MAAMwN,eAAkBpN,EAAKJ,MAAMO,YAFjC,CAAAY,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAGH,GAHG,cAUN6S,EAAiBpU,EAAKuK,MAAMqhG,QAAU9/F,SAAS9L,EAAKI,cAAc0Y,YAAY9Y,EAAKI,cAAc0Y,YAAY9Y,EAAKuK,MAAMqhG,SAAS5yF,OAAO,uBAAuB,uBAAuBE,GAAGC,UAAU,KAAQ,KAC3M49B,EAAe/2C,EAAKuK,MAAMshG,QAAU//F,SAAS9L,EAAKI,cAAc0Y,YAAY9Y,EAAKI,cAAc0Y,YAAY9Y,EAAKuK,MAAMshG,SAAS7yF,OAAO,uBAAuB,uBAAuBE,GAAGC,UAAU,KAAQ,KAEzMrH,EAAS,CAAC,KAAK,MAAMkjB,SAASh1B,EAAKuK,MAAMq8F,cAAgD,SAAhC5mG,EAAKJ,MAAMoH,iBAb9DjG,EAAAE,KAAA,EAcsBjB,EAAKI,cAAcoZ,gBAAgBxZ,EAAKJ,MAAMO,YAAYoG,QAAQuL,EAAOsC,EAAe2iC,GAAa,EAAK,MAdhI,UAcRyuD,EAdQzkG,EAAAK,MAgBNmkG,EAAavlG,EAAKqtG,gBAAgB7H,KAIpBA,GAA0BD,EAAW9iG,QAAW+iG,EAAsB/iG,OApB9E,CAAA1B,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,UAqBH,GArBG,eAwBNgsG,EAAchI,EAAW,GACzBiI,EAAajuG,OAAO+X,OAAOiuF,GAAYrhF,MAE7CzZ,OAAOilD,OAASA,IAGH,KADTviC,GAAQqgF,EAAW/zF,UAAU8zF,EAAY9zF,WAAW,SAEtD0T,EAAO,GAGL82C,EAAM,KACNmoC,EAAQ,MAENn/E,EAAajtB,EAAKI,cAAc+C,iBAAiBqqG,EAAW1G,WAAW,IACvE2G,EAAiBztG,EAAKI,cAAc+C,iBAAiBoqG,EAAYnyF,UAAUpb,EAAKJ,MAAMO,YAAYiD,UAClGsqG,EAAgB1tG,EAAKI,cAAc+C,iBAAiBqqG,EAAWpyF,UAAUpb,EAAKJ,MAAMO,YAAYiD,UAGlGmlG,EAAMt7E,EAAW9nB,MAAMuoG,GA1Cf3sG,EAAAE,KAAA,GA4CAjB,EAAKI,cAAc6E,oBAAoBsjG,EAAIvoG,EAAKJ,MAAMwN,cAAcpN,EAAKJ,MAAMO,YAAY2R,GA5C3F,eA4CZy2F,EA5CYxnG,EAAAK,KA8CNosF,EAAextF,EAAKJ,MAAMO,YAAY6P,UAAU+L,OAAO,SAACjS,GAAQ,MAAkB,aAAXA,EAAE4C,OAAuB,GAChGihG,EAAoBngB,EAAe+f,EAAYrjB,cAAcnuE,OAAO,SAACjS,GAAQ,OAAOA,EAAEsG,aAAaC,gBAAkBm9E,EAAajnF,QAAQ8J,gBAAiB,GAAK,KAChKu9F,EAAmBpgB,EAAeggB,EAAWtjB,cAAcnuE,OAAO,SAACjS,GAAQ,OAAOA,EAAEsG,aAAaC,gBAAkBm9E,EAAajnF,QAAQ8J,gBAAiB,GAAK,KAErI,OAA3BrQ,EAAKuK,MAAMq8F,aAQb3iC,GANAA,EAAMshC,EAAWr3D,OAAQ,SAACi7C,EAAI/yB,GAC5B,IAAM18C,EAAW1Z,EAAKI,cAAc+C,iBAAiBizD,EAAE18C,SAAS,IAChE,OAAO1Z,EAAKI,cAAciB,MAAM8nF,GAAKthF,KAAK6R,IAC1C,IAGQtU,IAAImgG,EAAW9iG,QAErB+qF,IACIqgB,EAAuBn9F,GAAcC,MAAMX,UAAUgoC,iBACrDC,EAAY41D,EAAqB51D,UAAY41D,EAAqB51D,UAAY,OAqBpF61D,GAnBIA,EAAiBvI,EAAWr3D,OAAQ,SAACi7C,EAAI/yB,GAE3C,IAAM83C,EAAe93C,EAAE8zB,cAAcxyE,KAAK,SAAC+yE,EAAMl2E,GAC/C,OAAOk2E,EAAMr6E,aAAaC,gBAAkBm9E,EAAajnF,QAAQ8J,gBAG/D89F,EAAoC,kBAAdl2D,GAA0BA,EAAUx1C,OAASw1C,EAAU/J,OAAO,SAAC0gD,EAAIhf,GAC3F,OAAIs+B,EAAat+B,GACR5vE,EAAKI,cAAciB,MAAMutF,GAAK/mF,KAAK7H,EAAKI,cAAciB,MAAM6sG,EAAat+B,KAE3E5vE,EAAKI,cAAciB,MAAMutF,IAChC,GAAK5uF,EAAKI,cAAciB,MAAM6sG,EAAaj2D,IAI7C,OAFAk2D,EAAenuG,EAAKI,cAAc+C,iBAAiBgrG,EAAa,IAEzDnuG,EAAKI,cAAciB,MAAM8nF,GAAKthF,KAAKsmG,IAC1C,IAG8B/oG,IAAImgG,EAAW9iG,QAK/C2pG,EAAQnoC,EAAI5oD,MAAMyyF,GACdviG,WAAW6gG,GAAO,IACpBA,EAAQ,GAEVA,EAAQA,EAAM77F,QAAQ,IAGxB0zD,EAAMA,EAAI1zD,QAAQ,KAGZ84F,EAAUqE,EAActoG,IAAIqoG,GAAgBpyF,MAAM,GAAGlW,MAAM,KACjE8+D,EAAMolC,EAAQlkG,MAAM,KAAKC,IAAI+nB,GAAM5c,QAAQ,GACvCo9F,GAAqBC,IACjBG,EAAqB/tG,EAAKI,cAAc+C,iBAAiBwqG,EAAkBh7C,MAAM3yD,EAAKJ,MAAMO,YAAYiD,UACxG4qG,EAAoBhuG,EAAKI,cAAc+C,iBAAiByqG,EAAiBj7C,MAAM3yD,EAAKJ,MAAMO,YAAYiD,UACtG6qG,EAAcD,EAAkB5oG,IAAI2oG,GAAoB1yF,MAAM,GAAGlW,MAAM,KAC7EinG,EAAQ/C,EAAQhuF,MAAM4yF,GAAa9oG,MAAM,KAAKC,IAAI+nB,GAC9C5hB,WAAW6gG,GAAO,IACpBA,EAAQ,GAEVA,EAAQA,EAAM77F,QAAQ,KAKtB87F,EAAa,EACjB9G,EAAW17F,QAAQ,SAAC0gF,EAAI39D,GACtB,GAAIA,EAAM,CACR,IAAMwhF,EAAU7I,EAAW34E,EAAM,GAE3BxkB,EAAkBmiF,EAAIL,cAAch8C,OAAO,SAACm5B,EAAYG,GAC5D,IAAMxD,EAAahkE,EAAKI,cAAc+C,iBAAiBqkE,EAAmBxD,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UAC5G,OAAOpD,EAAKI,cAAciB,MAAMgmE,GAAax/D,KAAKm8D,IAClD,GAEIqqC,EAAsBD,EAAQlkB,cAAch8C,OAAO,SAACm5B,EAAYG,GACpE,IAAMxD,EAAahkE,EAAKI,cAAc+C,iBAAiBqkE,EAAmBxD,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UAC5G,OAAOpD,EAAKI,cAAciB,MAAMgmE,GAAax/D,KAAKm8D,IAClD,GAEEsqC,GAAgB,EACpB/jB,EAAIL,cAAcrgF,QAAS,SAAAC,GACzB,IAAIwkG,EAAJ,CAGA,IAAMC,EAAQH,EAAQlkB,cAAcxyE,KAAM,SAAA62F,GAAK,OAAKA,EAAMn+F,aAAaC,gBAAkBvG,EAAEsG,aAAaC,gBAClG2zD,EAAahkE,EAAKI,cAAc+C,iBAAiB2G,EAAEk6D,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UACrForG,EAAiBxuG,EAAKI,cAAc+C,iBAAiBorG,EAAMvqC,WAAWhkE,EAAKJ,MAAMO,YAAYiD,UAC5E0I,SAASP,WAAWy4D,EAAW5+D,IAAIgD,GAAiBjD,MAAM,SACtD2G,SAASP,WAAWijG,EAAeppG,IAAIipG,GAAqBlpG,MAAM,SAE3FknG,IACAiC,GAAgB,SA5IZvtG,EAAAE,KAAA,GAmJgBjB,EAAKI,cAAc+yE,gBAAgB,KAAK,KAAK,OAnJ7D,eAmJNs5B,EAnJM1rG,EAAAK,QAqJVmnG,EAAMA,EAAI1gG,KAAK4kG,IAIjBlE,EAAMvoG,EAAKI,cAAcgJ,YAAYmC,WAAWg9F,IAzJpCxnG,EAAAE,KAAA,GA2JcjB,EAAKI,cAAcw7E,iBAAiB57E,EAAKJ,MAAMO,aA3J7D,SA2JR47E,EA3JQh7E,EAAAK,QA6JV26E,EAAgB/7E,EAAKI,cAAcgJ,YAAYmC,WAAWwwE,KAG5D/7E,EAAKqN,aAAa,CAChBk7F,MACAtkC,MACA92C,OACAi/E,QACA7G,aACA8G,aACAI,gBACA1wB,gBACAypB,0BAzKU,yBAAAzkG,EAAAS,SAAAZ,EAAAjB,WA6Kd2gC,kDAAc,SAAA3+B,EAAOosC,EAASvqC,GAAhB,OAAA9C,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACNjB,EAAKJ,MAAM2uC,iBAAiBR,EAASvqC,GAD/B,OAEZxD,EAAKJ,MAAM8iB,YAAYlf,GAFX,wBAAA1B,EAAAN,SAAAG,EAAAhC,mEAKdmiG,eAAiB,SAAArlG,GACf,IAAI4kG,EAAgBrhG,EAAKuK,MAAM82F,cAClB,SAAT5kG,GAAmB4kG,EAAcrhG,EAAKuK,MAAM62F,YAC9CC,IACkB,SAAT5kG,GAAmB4kG,EAAc,GAC1CA,IAGF,IAAMW,EAAWv3F,OAAO6N,OAAP,6BAAA/T,OAA2C88F,EAA3C,MACXK,GAAsBn2F,WAAWy2F,EAAS9wF,WAAWnB,MAAM,KAEjE/P,EAAKqN,aAAa,CAChBg0F,gBACAK,mGApbE/hG,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAK8uG,8JAIX9uG,KAAK6K,oBAAqB,+EAGTQ,wFAASpJ,iCAAS,KAC9BjC,KAAK6K,4DACD7K,KAAKiM,SAASZ,EAASpJ,oCAEzB,wJAIPjC,KAAKiM,SAAS,CACZ8gG,sBAAqB,wDAIE,IAAA1jG,EAAArJ,KACnB4sG,EAAgB77F,GAAcC,MAAMimC,SACtC83D,EAAgB,KAQpB,OAPAnvG,OAAO4H,KAAKolG,GAAe1iG,QAAS,SAAA8lC,GACd48D,EAAc58D,GAClBuH,kBAAkBliB,SAAShsB,EAAKpJ,MAAMoH,oBACpD0nG,EAAgB/+D,KAIb++D,yCAGM/+D,GAKb,GAJKA,IACHA,EAAUhwC,KAAK4K,MAAMq8F,cAGlBl2F,GAAcC,MAAMimC,SAASjH,GAChC,OAAO,KAGT,IAAM+1D,EAAcnmG,OAAOC,OAAO,GAAGkR,GAAcC,MAAMimC,SAASjH,IAElE,GAAI+1D,EAAYzuD,kBAAoByuD,EAAYzuD,iBAAiBt3C,KAAKC,MAAMoH,kBAAkB,CAC5F,IAAM2nG,EAAmBjJ,EAAYzuD,iBAAiBt3C,KAAKC,MAAMoH,kBACjEzH,OAAO4H,KAAKwnG,GAAkB9kG,QAAS,SAAA+kG,GACrClJ,EAAYkJ,GAASD,EAAiBC,KAI1C,OAAOlJ,kKAKF/lG,KAAKC,MAAMwN,eAAkBzN,KAAKC,MAAMO,sDACpC,aAGH6K,EAAW,GACA4oC,EAAaj0C,KAAKC,MAA3Bmb,MAAS64B,OAEXi7D,EAAgCtvG,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAEvDitC,EAAOk7D,cAA4F,IAA7ED,EAA8Bj3F,QAAQg8B,EAAOk7D,YAAY3sF,eACnFnX,EAASoC,cAAgBwmC,EAAOk7D,YAAY3sF,cAE5CnX,EAASoC,cAAgBzN,KAAKC,MAAMwN,cAAc+U,cAGpDnX,EAAS7K,YAAcR,KAAKC,MAAM+G,gBAAgBqE,EAASoC,eAC3DpC,EAASwhG,aAAe98C,IAAOh/C,GAAcC,MAAM4kC,OAAO51C,KAAKC,MAAMwN,eAAegH,eAAe,cACnGpJ,EAASkiG,WAAax9C,MAEtB1kD,EAASygG,gBAAkB/7C,IAAOA,MAAS12C,OAAO,oBAAoB,oBAEtEhO,EAAS0jG,cAAgB/uG,KAAKovG,4BAC9B/jG,EAAS47F,YAAyC,OAA3BjnG,KAAK4K,MAAMq8F,YAAuB57F,EAAS0jG,cAAgB/uG,KAAK4K,MAAMq8F,YAEvFlB,EAAc/lG,KAAKqvG,eAAehkG,EAAS47F,aAI7C57F,EAAS47F,aAAelB,EAAY3uD,eAChCk4D,EAAqBv/C,IAAOA,IAAgC,IAAzBg2C,EAAY3uD,cAAmB/9B,OAAO,oBAAoB,oBAC/FhO,EAASygG,gBAAgB58E,QAAQogF,KACnCjkG,EAASygG,gBAAkBwD,EAC3BjkG,EAAS+rC,aAAejrC,SAASd,EAASygG,gBAAgBvyF,GAAGC,UAAU,MAGpEnO,EAASkiG,aAAcliG,EAASkiG,WAAWr+E,QAAQogF,KACtDjkG,EAASkiG,WAAa+B,IAI1BjkG,EAAS+rC,aAAejrC,SAASd,EAASygG,gBAAgBvyF,GAAGC,UAAU,KAGvEnO,EAASwgG,kBAAoBxgG,EAASygG,gBAAgBvwF,QAAQjC,SAAS,EAAE,SACzEjO,EAASoJ,eAAiBtI,SAASd,EAASwgG,kBAAkBtyF,GAAGC,UAAU,KAEvEnO,EAAS47F,aAAelB,EAAYtxF,iBAChC86F,EAAuBx/C,IAAOA,IAAkC,IAA3Bg2C,EAAYtxF,gBAAqB4E,OAAO,oBAAoB,oBACnGhO,EAASwgG,kBAAkByB,SAASiC,KACtClkG,EAASwgG,kBAAoB0D,EAC7BlkG,EAASoJ,eAAiBtI,SAASd,EAASwgG,kBAAkBtyF,GAAGC,UAAU,MAGzEnO,EAASwhG,aAAaS,SAASiC,KACjClkG,EAASwhG,aAAe0C,IAI5BlkG,EAAS4gG,QAAU5gG,EAASwhG,aAAatzF,GACzClO,EAAS6gG,QAAU7gG,EAASkiG,WAAWh0F,GAEnClO,IAAarL,KAAK4K,wCACd5K,KAAK0N,aAAarC,mQA2DrBrL,KAAKC,MAAM+iC,4BACdhjC,KAAKC,MAAMuvG,8BACJ,iBAGH/xF,EAAQhS,SAAS/L,cAAc,UAC/BoR,GAAK,qBACX2M,EAAMjU,KAAO,WACbiU,EAAMosC,UAAN,8DAIAp+C,SAASq+C,KAAK7kC,YAAYxH,GAE1Bzd,KAAKoJ,sBACCpJ,KAAK8uG,qBACX9uG,KAAKwlG,cACLxlG,KAAKyvG,yJAIL,IAAMhO,EAAczhG,KAAKC,MAAMmL,SAAW,EAAI,EAC9CpL,KAAK0N,aAAa,CAChB+zF,mGAIqBt2F,EAAUqC,oFAC3B0O,EAAuB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,qBACrEwzF,EAAkBvkG,EAAU9D,mBAAqBrH,KAAKC,MAAMoH,iBAC5DyU,EAAe3Q,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,eAAiB0S,KAAKC,UAAUjV,EAAU3K,eAAiB2f,KAAKC,UAAUpgB,KAAKC,MAAMO,aAC3ImvG,EAAcniG,EAAUiH,iBAAmBzU,KAAK4K,MAAM6J,gBAAkBjH,EAAU4pC,eAAiBp3C,KAAK4K,MAAMwsC,aAC9Gw4D,EAAiBpiG,EAAUy5F,cAAgBjnG,KAAK4K,MAAMq8F,YACtC97F,EAAUC,WAAapL,KAAKC,MAAMmL,UAGtDpL,KAAKyvG,iBAGHvzF,GAAwBJ,GAAgB4zF,GAAmBE,qCAEvD5vG,KAAK2sB,oDACFgjF,GACT3vG,KAAKwlG,qJAmNA,IAAAn3F,EAAArO,KAED6vG,EAAmB7vG,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,YAC1Ew6B,EAAUp7B,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,YAE/D,IAAKZ,KAAKC,MAAMqH,oBACd,OACE9H,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTsxB,SAAS,EACThtB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACT0C,UAAU,OACVxC,cAAc,UAEhBnR,KAAM,sBAKZ,GAAKmH,KAAKC,MAAMwN,cAoTT,CACL,IAAMqiG,EAAkBlwG,OAAO4H,KAAKuJ,GAAcC,MAAMimC,UAAU76B,OAAQ,SAAA4zB,GACxE,IAAM+1D,EAAc13F,EAAKghG,eAAer/D,GACxC,OAAO+1D,EAAYl8E,cAAcwL,SAAShnB,EAAKpO,MAAMwN,gBAAkBs4F,EAAYxuD,kBAAkBliB,SAAShnB,EAAKpO,MAAMoH,oBACxHmU,IAAK,SAAAw0B,GAEN,MAAO,CACLxhC,MAAMwhC,EACN7+B,MAHkB9C,EAAKghG,eAAer/D,GAGpB7+B,SAIhB40F,EAAc/lG,KAAKqvG,eAAervG,KAAK4K,MAAMq8F,aAE/CpvD,EAAqB,KACzB,GAAI73C,KAAK4K,MAAMq8F,aAAelB,EAE5BluD,EAD+B73C,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,WAAWZ,KAAK4K,MAAMq8F,YAAY,2BAC/DjnG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,uBAAyB,KAGvJ,IAAMsiG,EAAsBD,EAAgB/3F,KAAM,SAAArJ,GAAC,OAAKA,EAAEF,QAAUH,EAAKzD,MAAMq8F,cAE/E,OACEznG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHjQ,MAAO,EACP8P,cAAe,UAuCfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,IAEPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KAEVsF,EAAAC,EAAAC,cAACswG,GAAD,CACE9E,gBAAgB,EAChBryG,KAAM,kBACNuS,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAIC,EAAKpO,MAAMqvC,YAAY,UAC1C+E,KAAM,CAACr0C,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,cAGxF7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPvlB,MAAO,CAAC,EAAE,IACV8P,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,kBAE1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACojB,GAAD,CACElC,WAAY,CACVzW,EAAE,EACFlL,OAAO,CAAC,OAAO,SAEjB8N,KAAM,eACNsT,QAASyvF,EACTvvF,aAAcwvF,EACdhuF,SAAW,SAAArT,GAAC,OAAIL,EAAKs/F,eAAej/F,OAGxClP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPvlB,MAAO,CAAC,EAAE,IACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,CACE+gB,WAAY,CACVzW,EAAE,IAEAnK,KAAKC,SAGbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPvlB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACF2E,QAAQ,OACR/E,WAAW,SACX9K,OAAO,CAAC,OAAO,QACfgL,eAAe,UAEjB8Q,eAAe,EACf6D,YAAc,SAAAxQ,GAAC,OAAIC,EAAKo/F,mBAAkB,KAE1CjuG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZ7Q,MAAO,aAGP6B,KAAK4K,MAAM2gG,eAETvrG,KAAKitG,gBAAgBjtG,KAAK4K,MAAM2gG,gBAChCvrG,KAAK4K,MAAMihG,mBAAqB7rG,KAAK4K,MAAMkhG,iBAA3C,GAAAlnG,OACG5E,KAAK4K,MAAMihG,kBAAkBxyF,OAAO,YADvC,OAAAzU,OACwD5E,KAAK4K,MAAMkhG,gBAAgBzyF,OAAO,mBAUtGrZ,KAAK4K,MAAMq8F,aAAgBlB,EAAYtxF,eAAetI,UAAS,IAAIiN,MAAOI,UAAU,KAClFha,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,CAAC,EAAE,MAGXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,eAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,cAMczR,KAAK4K,MAAMq8F,YANzB,kCAYNznG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACP/N,GAAI,CAAC,EAAE,IAEPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEzhG,MAAOxO,KAAK4K,MAAMg+F,IAClBlvG,MAAO,yBACPyX,MAAQnR,KAAK4K,MAAMwxE,cAAX,iBAAAx3E,OAA4C5E,KAAK4K,MAAMwxE,cAAvD,KAAAx3E,OAAwE5E,KAAKC,MAAMwN,eAAkBzN,KAAKC,MAAMwN,cACxHu9F,aAAehrG,KAAK4K,MAAMwxE,cAAgBp8E,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAAkB,QAG/GpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEv2G,MAAO,UACPyX,MAAO,cAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACue,GAAD,CACEnR,UAAW,KACXG,QAAS,QACTD,SAAU,QACV/C,eAAgB,aAChB/P,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACPa,SAAU,CAAC,EAAE,IAEZgB,KAAK4K,MAAM05D,IACZ9kE,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAO,YAAa6Q,WAAY,EAAGhQ,SAAU,CAAC,MAAM,QAA/D,UAMVQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEv2G,MAAO,8BACPyX,MAAO,cAGLnR,KAAK4K,MAAM6hG,QAAU9qG,MAAM3B,KAAK4K,MAAM6hG,OACpCjtG,EAAAC,EAAAC,cAACue,GAAD,CACEnR,UAAW,KACXG,QAAS,QACTD,SAAU,QACV/C,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,aAEN6B,KAAK4K,MAAM6hG,MACZjtG,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAO,YAAa6Q,WAAY,EAAGhQ,SAAU,CAAC,MAAM,QAA/D,OAIJQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,aAEN6B,KAAK4K,MAAM6hG,SAMtBjtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,IACPzX,MAAO,aACP8U,MAAOxO,KAAK4K,MAAM8hG,WAAWt2F,gBA+BrC5W,EAAAC,EAAAC,cAACqhB,GAAD,CACErnB,MAAO,yBACPomB,YAAa+3B,EACbx4B,UAAW,CACT3N,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,cAAc5W,MAAO,EAAGwX,GAAI,GACnClS,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAS,KACLe,KAAK4K,MAFX,CAGEW,SAAU,cACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,sBAClCmB,UAAWhnG,KAAK4K,MAAMq8F,cAAgBjnG,KAAK4K,MAAMmkG,cAAgB,WAAa,aAKpFvvG,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqK,GAAG,EACHhY,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjK,KAAK4K,MAAMq8F,cAAgBjnG,KAAK4K,MAAMmkG,eACtCvvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,EACJj8B,MAAO,CAAC,EAAE,EAAE,GACZ4W,GAAI,mBACJ9G,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACmf,GAADjf,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAKC,MAFX,CAGEsL,SAAU,sBAEZ/L,EAAAC,EAAAC,cAACywG,GACKnwG,KAAKC,QAIfT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPZ,GAAI,YACJ8oB,GAAI,CAAC,EAAE55B,KAAK4K,MAAMq8F,cAAgBjnG,KAAK4K,MAAMmkG,cAAgB,EAAI,GACjE70G,MAAO,CAAC,EAAG8F,KAAK4K,MAAMq8F,cAAgBjnG,KAAK4K,MAAMmkG,cAAgB,EAAE,EAAI,IAEvEvvG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,aAAcE,eAAgB,aAAcD,cAAe,SAAU9P,MAAO,GAC5FsF,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACEjO,GAAI,EACJhF,GAAI,EACJ+S,GAAI,CAAC,EAAE,GACPzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WARd,yBAYApgB,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAK4K,MAFX,CAGEo8F,UAAW,MACXz7F,SAAU,YACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,6BAO5CrmG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,qBACJ7G,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACmkG,GAAD,CACEz9E,YAAa,CACX1D,GAAG,GAEL0a,SAAU,YACVplC,SAAuC,IAA7BgI,KAAK4K,MAAM82F,cACrB9iF,YAAc,SAAAxQ,GAAC,OAAIC,EAAK8zF,eAAe,WAEzC3iG,EAAAC,EAAAC,cAACmkG,GAAD,CACEzmE,SAAU,eACVxe,YAAc,SAAAxQ,GAAC,OAAIC,EAAK8zF,eAAe,SACvCnqG,SAAUgI,KAAK4K,MAAM82F,gBAAkB1hG,KAAK4K,MAAM62F,eAGtDjiG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJxgB,OAAQ,QACRsS,SAAU,WACVT,GAAI,kBACJ5W,MAAO,CAAC,OAAO,QACf+P,eAAgB,aAChBmG,KAAMpQ,KAAK4K,MAAMm3F,mBACjBtkF,MAAO,CACLmW,WAAW,0BAGbp0B,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHzjB,OAAO,cACPwe,MAAMzd,KAAKC,MAAMmL,SAAW,CAAClR,MAAM,QAAU,CAACA,MAAM,UAGtDsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAG,aAEHtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACEjT,GAAI,EACJ+S,GAAI,EACJ/N,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WARd,0BAYApgB,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAK4K,MAFX,CAGEo8F,UAAW,MACXz7F,SAAU,YACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,4BAK1CrmG,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHzjB,OAAO,cACPwe,MAAMzd,KAAKC,MAAMmL,SAAW,CAAClR,MAAM,QAAU,CAACA,MAAM,UAGtDsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,YAAY5W,MAAO,GAC1BsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACEjO,GAAI,EACJhF,GAAI,EACJ+S,GAAI,EACJzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WARd,QAYApgB,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAK4K,MAFX,CAGEo8F,UAAW,MACXz7F,SAAU,YACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,4BAK1CrmG,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHzjB,OAAO,cACPwe,MAAMzd,KAAKC,MAAMmL,SAAW,CAAClR,MAAM,QAAU,CAACA,MAAM,SAEtDR,MAAO,aACPomB,YAAa,iGACbJ,iBAAkB,CAChBhT,GAAG,GACH+S,GAAG,KAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,cAAc5W,MAAO,GAC5BsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAK4K,MAFX,CAGEo8F,UAAW,QACXz7F,SAAU,cACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,4BAK1CrmG,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqD,GAAG,EACHzjB,OAAO,cACPwe,MAAMzd,KAAKC,MAAMmL,SAAW,CAAClR,MAAM,QAAU,CAACA,MAAM,UAGtDsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMmR,GAAG,YAAY5W,MAAO,GAC1BsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACEjO,GAAI,EACJhF,GAAI,EACJ+S,GAAI,EACJzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WARd,UAYApgB,EAAAC,EAAAC,cAACwwG,GAADtwG,OAAAC,OAAA,CACEZ,OAAQ,KACJe,KAAK4K,MAFX,CAGEo8F,UAAW,MACXz7F,SAAU,YACVH,SAAUpL,KAAKC,MAAMmL,SACrB2oC,UAAW/zC,KAAKC,MAAM8zC,UACtB6xD,WAAY5lG,KAAK4K,MAAMg7F,WACvBqB,YAAajnG,KAAK4K,MAAMq8F,YACxBpB,sBAAuB7lG,KAAK4K,MAAMi7F,+BAWpDrmG,EAAAC,EAAAC,cAAC0wG,GAAD,CACEnE,QAASjsG,KAAK4K,MAAMqhG,QACpBC,QAASlsG,KAAK4K,MAAMshG,QACpBN,aAAc5rG,KAAKotG,aACnBrrE,OAAQ/hC,KAAK4K,MAAMoiG,qBACnB3tE,WAAY,SAAAjxB,GAAC,OAAIC,EAAKo/F,mBAAkB,IACxCnhF,UAAWtsB,KAAK4K,MAAMihG,kBAAoB7rG,KAAK4K,MAAMihG,kBAAkBtyF,GAAK,KAC5EkyF,QAASzrG,KAAK4K,MAAMkhG,gBAAkB9rG,KAAK4K,MAAMkhG,gBAAgBvyF,GAAK,QAh6B5E,IAAM68B,EAAap2C,KAAKS,cAAcG,gBAAgB,CAAC,eACjDipB,EAAgB,GAChBwmF,EAAcrwG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,WAC1D0vG,EAAiBtwG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,cAOnE,OANAhB,OAAO4H,KAAK6oG,GAAanmG,QAAQ,SAAArG,GACbwsG,EAAYxsG,GAChBc,SACZklB,EAAchZ,KAAKhN,KAIrBrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACqkG,GACK/jG,KAAKC,OAGTL,OAAO4H,KAAK4uC,GAAY56B,IAAI,SAAA4yB,GAC1B,IAAM+hC,EAAe/5B,EAAWhI,GAC1BpnC,EAAkBqH,EAAKpO,MAAMqH,oBAAoB8mC,GACvD,QAAKpnC,GAIHxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACfC,eAAgB,SAChB6T,IAAG,sBAAAlZ,OAAwBwpC,IAE3B5uC,EAAAC,EAAAC,cAAC67B,GAAD,CACE9b,GAAI,EACJ/N,GAAI,CAAC,EAAE,IAEPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,MACfD,WAAY,WACZE,eAAgB,UAEfkmE,EAAaz2E,MAEZy2E,EAAa55B,cACX/2C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJsC,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,aAENgyE,EAAa55B,gBAKxB/2C,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAeA,EACfjL,YAAa,SAAC3e,GAAD,OAAWoO,EAAKsyB,YAAYyN,EAASnuC,EAAM4D,QACxD6kB,KAAM,CACJ,CACEhvB,MAAM,WACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACErT,MAAM,OACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,kBACL+b,QAAO,EACPC,YAAY,CACV7uB,MAAM,IAERujB,MAAM,CACJyL,SAAS,WAEX7c,YAAW,GAEb,CACEU,KAAK,OACL9M,MAAM,CACJyM,GAAG,GAELqc,YAAY,CACV7uB,MAAM,CAAC,EAAE,QAKjB,CACER,MAAM,MACN6vB,KAAK6R,EACLn7B,MAAM,CACJ/F,MAAO,CAAC,IAAK,MAEf6uB,YAAY,CACV/e,cAAc,SACdD,WAAW,cAEbif,OAAO,CACL,CACEjc,KAAK,MACLsL,aAAY,GAEd,CACEtL,KAAK,mBACLV,YAAW,EACXpM,MAAM,CACJwD,SAAS4K,EAAKpO,MAAMmL,SAAW,EAAI,EACnCpM,SAASqP,EAAKpO,MAAMmL,SAAW,MAAQ,MAK/C,CACE1R,MAAM,aACN6vB,KAAKlb,EAAK5N,cAAcG,gBAAgB,CAAC,WAAW,cACpDkoB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,gBACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAO,KAET6uB,YAAY,CACV7uB,MAAM,EACN+xB,GAAG,CAAC,EAAE,IAERjD,OAAO,CACL,CACEjc,KAAK,cAIX,CACErT,MAAM,GACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd6uB,YAAY,CACV7uB,MAAM,GAER8uB,OAAO,CACL,CACEjc,KAAK,SACLoE,MAAM9C,EAAKpO,MAAMmL,SAAW,OAAS,aACrCnL,MAAM,CACJ/F,MAAM,EACN8E,SAAS,EACTgQ,WAAW,EACX/P,OAAO,OACPK,aAAa,EACbye,UAAU,KACVkI,UAAU,SACVxZ,KAAM4B,EAAKpO,MAAMmL,SAAW,QAAU,SACtCwT,YAAY,SAAC3e,GAAD,OAAWoO,EAAKsyB,YAAYyN,EAASnuC,EAAM4D,cAM7DwK,EAAKpO,MAnIX,CAoIEoH,iBAAkB+mC,EAClBpnC,gBAAiBA,MAGhBqH,EAAKpO,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGdrK,OAAO+X,OAAO24F,GAAgBl0F,OAAQ,SAAAjS,GAAC,OAAKA,EAAExN,SAAU6e,IAAK,SAACrR,EAAE8iB,GAAH,OAC3DztB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ3Y,WAAY,SACZC,cAAe,MACf8T,IAAG,UAAAlZ,OAAYqoB,IAEfztB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJxoB,MAAO,OACP+E,OAAQ,OACRK,aAAc,MACdlB,gBAAe,OAAAwG,OAASuF,EAAEhM,MAAMs5C,IAAIvmC,KAAK,KAA1B,OAGjB1R,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACE3mC,SAAU,EACVb,MAAO,YAENgM,EAAEgH,cAYvB0+F,IAAqB7vG,KAAK4K,MAAMmiG,qBAC9BvtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6rB,GAAI,CAAC,EAAE,GACPhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6nB,WAAY,UACZ7I,QAAS3e,KAAK+sG,qBAAqB9hG,KAAKjL,OAF1C,uBAOA6vG,GAAoB7vG,KAAK4K,MAAMmiG,sBACjCvtG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHjQ,MAAO,EACP6rB,GAAI,CAAC,EAAE,GACPzmB,aAAc,EACdyK,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB7L,gBAAiB,UACjB2f,UAAW,sCAEXve,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,IACZ7Q,MAAO,UACPsT,UAAW,SACXzS,SAAU,CAAC,EAAE,SAJf,6FAQAQ,EAAAC,EAAAC,cAAC6wG,GAAD3wG,OAAAC,OAAA,CACE/C,OAAQ,UACRqD,UAAWqwG,IACXznF,YAAa,CACXtJ,GAAG,GAEL8sF,eAAgB,CACd9/F,KAAK,QACL+B,MAAM,sBAERylC,OAAQ,GACRoc,aAAc,iBACdma,WAAY,qBACRxqE,KAAKC,OAETT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ3V,KAAM,OACNN,KAAM,QACNtO,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,IACZhQ,SAAU,OACVb,MAAO,YACPsT,UAAW,UAJb,mCAlyBAtR,aC2HLswG,8MAxIb7lG,MAAQ,KAKRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAGE,IAAAC,EAAArJ,KACD0wG,EAAe1wG,KAAKC,MAAM0wG,oBAAsB3wG,KAAKC,MAAM0wG,mBAAmBtvD,aAAerhD,KAAKC,MAAM0wG,mBAAmBtvD,aAAe,KAChJ,OACE7hD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGbhK,KAAKC,MAAM0wG,mBACTnxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACswG,GAAD,CACE9E,gBAAgB,EAChB9/F,SAAUpL,KAAKC,MAAMmL,SACrBipC,KAAM,CAACr0C,KAAKC,MAAM0wG,mBAAmBx/F,OACrCtY,KAAMmH,KAAKC,MAAM69F,gBAAgB3sF,MAAMqR,cACvC5D,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAYjmC,EAAKpJ,MAAM69F,gBAAgBxxD,WAGzE9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,CAAC,EAAE,GACP/b,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,GAEH1R,KAAKC,MAAM0wG,mBAAmBx/F,OAEjC3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8R,UAAW,UAEVzR,KAAKC,MAAM0wG,mBAAmBpnF,OAGnC/pB,EAAAC,EAAAC,cAACgxG,EAAD9wG,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAKC,MAAM0wG,mBAAmB7sD,YAFpC,CAGEx+B,UAAWtlB,KAAKC,MAAM0wG,mBAAmB1wG,UAI7CT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,CAAC,EAAE,GACP/b,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,GADN,SAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLgkB,SAAS,SAIXzhC,KAAKC,MAAM69F,gBAAgB8S,QAAQp1F,IAAK,SAACq1F,EAAKC,GAAN,OACtCtxG,EAAAC,EAAAC,cAACqhB,GAAD,CACEhG,eAAe,EACf+C,IAAG,QAAAlZ,OAAUksG,GACbzxF,UAAW,CACTlV,EAAE,CAAC,EAAE,GACLuH,GAAG,CAAC,EAAE,GACNgR,GAAG,CAAC,EAAE,MACNjF,MAAM,CACJoF,KAAMxZ,EAAKpJ,MAAMmL,SAAW,WAAa,WAE3CrB,WAAW,SACXC,cAAc,SACdC,eAAe,UAEjB2U,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAYjmC,EAAKpJ,MAAM69F,gBAAgBxxD,MAAM,IAAIukE,EAAKvkE,SAEpF9sC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbyS,UAAW,UAEVo/F,EAAK1/F,OAER3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsK,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,CAAC,EAAE,GACPtZ,KAAM,MACNM,KAAM8jG,EAAKv/F,QAGf9R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbyS,UAAW,UAEVo/F,EAAKtnF,mBA5HRppB,aCwnBL4wG,8MApnBbnmG,MAAQ,CACNsJ,cAAc,KACd8lB,iBAAiB,GACjBg3E,kBAAkB,KAClB/1E,qBAAqB,KACrB2xD,sBAAsB,KACtB5xD,sBAAsB,KACtBi2E,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7Bj2E,6BAA6B,QAI/Bz6B,cAAgB,OAChBuuD,aAAe,gFAGThvD,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKgvD,aAAehvD,KAAKS,cAAckzE,uKAIvC3zE,KAAKoJ,8SAKCgnE,EAA0B,IACRpwE,KAAKC,MAAMwN,eAAiBzN,KAAKC,MAAMO,qBAQrDsE,QAAQC,IAAI,CACpB/E,KAAKS,cAAc6X,iBAAiBtY,KAAKC,MAAMwN,cAAczN,KAAKC,MAAMO,aACxER,KAAKgvD,aAAaloD,oBAAoB9G,KAAKC,MAAMuB,QAAQ4uE,GAAwB,GACjFpwE,KAAKS,cAAc+pB,yBAAyBxqB,KAAKC,MAAMuB,QAAQ4uE,EAAwB,MACvFpwE,KAAKS,cAAcyV,eAAe,SAASlW,KAAKC,MAAMwN,cAAczN,KAAKC,MAAMO,YAAYR,KAAKC,MAAMuB,SACtGxB,KAAKS,cAAcyV,eAAe,mBAAmBlW,KAAKC,MAAMwN,cAAczN,KAAKC,MAAMO,YAAYR,KAAKC,MAAMuB,8CAVhH0S,OACAg9F,OACAj2E,OACAT,OACAhN,OASIwN,EAAwBC,EAAuBr7B,OAAO+X,OAAOsjB,GAAsBsT,OAAQ,SAAC6iE,EAAW1mF,GAC3G,OAAO0mF,EAAWlpG,KAAKmB,EAAK5I,cAAciB,MAAMgpB,KAChD1qB,KAAKS,cAAciB,MAAM,IAAM,KAE3Bw5B,EAA+BD,EAAuBr7B,OAAO4H,KAAKyzB,GAAsBzf,IAAK,SAAAgD,GACjG,IAAMtd,EAAU+5B,EAAqBzc,GACrC,OAAItd,EAAQ6V,GAAG,GACb,IAAAnS,OAAW1D,EAAQ0P,QAAQ,GAA3B,KAAAhM,OAAiC4Z,GAE1B,OAERpC,OAAO,SAAA1N,GAAC,OAAW,OAANA,IAAe,KAIzBsiG,EAAoB98F,EAAgBtU,OAAO+X,OAAOzD,GAAeq6B,OAAQ,SAAC8iE,EAAO3+D,GACrF,OAAO2+D,EAAOnpG,KAAKmB,EAAK5I,cAAciB,MAAMgxC,KAC5C1yC,KAAKS,cAAciB,MAAM,IAAM,KAE3BuvG,EAA2B/8F,EAAgBtU,OAAO4H,KAAK0M,GAAesH,IAAK,SAAAgD,GAC/E,IAAM8lD,EAAMpwD,EAAcsK,GAC1B,OAAI8lD,EAAIvtD,GAAG,GACT,GAAAnS,OAAU4Z,EAAV,MAAA5Z,OAAuB0/D,EAAI1zD,QAAQ,GAAnC,KAEK,OACNwL,OAAO,SAAA1N,GAAC,OAAW,OAANA,IAAe,KAazBsrB,EAAmB,CACvB,CACElwB,UAAU,CACR5P,MAAM,CAAC,EAAE,MAEX+F,MAAM,CACJvG,MAAM,UACNwG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZ9K,OAAQ,CAAC,OAAO,QAChB+K,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8Q,WAAY,UACZjQ,SAAU,CAAC,QAAQ,SACnBmtB,wBAAyB,CAAEC,OAASoO,EAASA,EAAO5pB,QAAQ,GAAG,IAAM,UAM/E,CACE9G,UAAU,CACR5P,MAAM,CAAC,EAAE,MAEX+F,MAAM,CACJvG,MAAM,qBACNwG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,kBACJ7R,OAAQ,CAAC,OAAO,QAChB+K,cAAe,UAEfxK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEoM,YAAY,EACZ+F,UAAW,CACTrF,KAAK,mBAEPxB,SAAU,kBACV1H,MAAO7D,KAAKC,MAAMwN,cAClBjN,YAAaR,KAAKC,MAAMO,gBAI9B2Q,MAAM,KAGV,CACErH,UAAU,CACR5P,MAAM,CAAC,EAAE,MAEX+F,MAAM,CACJvG,MAAM,2BACNwG,SACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZ9K,OAAQ,CAAC,OAAO,QAChB+K,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8Q,WAAY,UACZjQ,SAAU,CAAC,QAAQ,SACnBmtB,wBAAyB,CAAEC,OAASoB,EAAOrhB,SAASqhB,GAAQ,WAQxExtB,KAAKiM,SAAS,CACZiI,gBACA8lB,mBACAg3E,oBACA/1E,uBACAD,wBACAi2E,2BACAC,4BACAh2E,uNAIqB/vB,EAAUqC,mEACjCxN,KAAKoJ,kJAKL,OACE5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGbhK,KAAK4K,MAAMovB,iBAAiBl3B,OAAO,GACjCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP+N,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjK,KAAK4K,MAAMovB,iBAAiBxe,IAAI,SAAC9M,EAAE6B,GAAH,OAC9B/Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACM6O,EAAE5E,UADR,CAEEE,cAAe,SACf8T,IAAG,mBAAAlZ,OAAqB2L,KAExB/Q,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,CAAC,EAAE,GACNjQ,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdyE,EAAEzO,MAAMC,SAAWwO,EAAEzO,MAAMC,SACzBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8Q,WAAY,UACZjQ,SAAU,CAAC,EAAE,SACbmtB,wBAAyB,CAAEC,OAAQ1d,EAAEzO,MAAMuO,SAKjDhP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YAENuQ,EAAEzO,MAAMvG,aAS3B8F,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqC,GAAG,EACHC,GAAG,IAGLniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwS,GAAI,CAAC,EAAE,GACPoE,GAAI,kBAEJtR,EAAAC,EAAAC,cAACi8B,GAAD/7B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+L,YAAa,IACbT,SAAU,iBACVwjB,WAAY/uB,KAAKC,MAAMwN,cACvBoc,cAAe,CAAC7pB,KAAKC,MAAMwN,eAC3BoH,iBAAkB7U,KAAKS,cAAcmZ,oBAAoB,MAAM,OAGnEpa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,aAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,aACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACboF,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,gBAMzBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,cAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,2BACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACb6T,MAAM,CACJzO,WAAW,IACX7Q,MAAMhF,EAAMR,OAAOoB,QACnBiF,SAAUgB,KAAKC,MAAMmL,SAAW,QAAU,SAE5CtB,UAAU,CACRG,eAAe,eAKvBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,QAEJjgB,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,eACL9M,MAAM,CACJjB,SAAS,EACTgQ,WAAW,EACX7Q,MAAM,WACN2L,UAAU,CACRG,eAAe,iBAO3BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,YAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,kBACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACb6T,MAAM,CACJzO,WAAW,IACXhQ,SAASgB,KAAKC,MAAMmL,SAAW,QAAU,QACzCjN,MAAMhF,EAAMR,OAAOoB,SAErB+P,UAAU,CACRG,eAAe,eAMrBjK,KAAK4K,MAAMswB,8BAAgCl7B,KAAK4K,MAAMswB,6BAA6Bp4B,OAAO,GACxFtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdjK,KAAK4K,MAAMswB,6BAA6B1f,IAAI,SAACkP,EAAgB7M,GAAjB,OAC1Cre,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACV4gB,WAAY,EACZ5Q,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,SACXgO,GAAI5B,EAAgB,EAAI,EACxBC,IAAG,YAAAlZ,OAAciZ,IAEhB6M,OAqCflrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,QAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,cACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACb6T,MAAM,CACJzO,WAAW,IACXhQ,SAASgB,KAAKC,MAAMmL,SAAW,QAAU,QACzCjN,MAAMhF,EAAMR,OAAOoB,SAErB+P,UAAU,CACRG,eAAe,gBAMzBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,eAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,MACL9M,MAAM,CACJwD,SAAS,EACTuL,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,eAMrBjK,KAAK4K,MAAMsmG,2BACT1xG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACV4gB,WAAY,EACZ5Q,WAAY,EACZ7Q,MAAO,WACPsT,UAAW,UAEVzR,KAAK4K,MAAMsmG,0BAA0BtgG,QAAQ,GARhD,IAQqD5Q,KAAKgvD,aAAazuD,UARvE,IAQmFP,KAAKgvD,aAAaxuD,YAAY6H,yBA4DzH7I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,EAAE,GACZ6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,cAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,QACL9M,MAAM,CACJwD,SAAS,EACTuL,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,0BAzmBT9J,aC0DbmxG,8MA1Db7wG,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,kJAIL,OACE5J,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,QACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,uDAQAjS,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKC,MAAMovC,2BAL1B,oBA9CelvC,aCqvBVoxG,8MA7uBb3mG,MAAQ,CACN03B,WAAW,CACTjM,OAAO,KACPvP,SAAQ,GAEVgb,WAAW,KACX0vE,YAAY,GACZhxG,YAAY,KACZo/E,cAAc,KACdnyE,cAAc,KACdzG,gBAAgB,KAChB4/B,gBAAe,EACf6qE,iBAAgB,EAChBC,kBAAiB,EACjBp7C,iBAAiB,KACjBN,kBAAkB,KAClBC,kBAAkB,KAClBwa,kBAAkB,KAClBkhC,mBAAmB,KACnB7qE,oBAAoB,KACpB8qE,qBAAoB,EACpBC,0BAA0B,QAI5BpxG,cAAgB,OAqBhBqxG,oBAAsB,SAACF,GACrBvxG,EAAK4L,SAAS,CACZ2lG,2BA8EJrqE,oBAAsB,WAAiB,IAAhBzU,EAAgBtwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAEvBswB,IACHA,EAASzyB,EAAKuK,MAAMk3B,YAGtB,IAAI8E,EAGFA,GAAkB9T,GAAUA,EAAO/b,GAAG1W,EAAKuK,MAAM6lE,mBAKnDpwE,EAAK4L,SAAS,CACZ26B,sBAsKJU,iBAAmB,SAACl5B,GAClB,IAAM0zB,EAAa1zB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM0M,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM,GACzIrB,EAAKknC,oBAAoBzF,GAIzBzhC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,aACAgF,oBAJ0B,WAe9BY,uBAAyB,SAACZ,GACxBzmC,EAAK4L,SAAS,CACZ66B,2BAIJirE,eAAiB,SAACP,GAChBnxG,EAAK4L,SAAS,CACZulG,4FAlTExxG,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAKgyG,wJAIXhyG,KAAKiM,SAAS,CACZwlG,iBAAgB,+LAUI5uB,iCAAa,MAC7B/gD,EAAa9hC,KAAK4K,MAAMk3B,WAAa9hC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAAc,QAE1EA,EAAWz8B,IAAI,6CACzB,aAGH4sG,EAAmBjyG,KAAKS,cAAcynC,qBAAqBpG,EAAW9hC,KAAK4K,MAAMorD,kBAAkBvyD,UAErGyuG,EAAmB,KACnBP,EAAqB,KACrBQ,EAAyB,MACzBnyG,KAAK4K,MAAMgnG,sDAIH9sG,QAAQC,IAAI,CACpB/E,KAAKS,cAAc8iF,sBAAsBvjF,KAAKC,MAAMuB,QAAQywG,GAAiB,GAC7EjyG,KAAKS,cAAckiF,0BAA0B3iF,KAAKC,MAAMuB,QAAQywG,gDAJhEN,OACAQ,iBAKuBnyG,KAAKS,cAAc2kF,iBAAiBplF,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAAMouG,GAAiB,EAAME,WAAtHD,kDAEyBlyG,KAAKS,cAAc2kF,iBAAiBplF,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAAMouG,GAAiB,kBAAhHC,mBAC8BlyG,KAAKS,cAAcy5D,6BAA3CnH,SACA/7C,EAAoB8qB,EAAWt8B,MAAMutD,GAAiBr3C,MAAMomB,EAAWt8B,MAAM0sG,EAAiB1sG,MAAM,KAAK0C,KAAKlI,KAAK4K,MAAM4mG,aAAexxG,KAAKS,cAAciB,MAAM,IAAI+D,IAAI,QAC/KksG,EAAqB,IACF3xG,KAAK4K,MAAM6C,eAAiBuJ,iBAG7Ck7F,IACFA,EAAmBA,EAAiB1sG,MAAM,MAG5CxF,KAAKiM,SAAS,CACZimG,mBACAP,qBACAQ,2BAIED,GAAoBrvB,IACtBqvB,EAAmBA,EAAiBhqG,KAAK26E,sBAGpCqvB,yLAGgB/mG,EAAUqC,kFACjCxN,KAAKoJ,cAEgB+B,EAAU3K,YAAYqE,KAAKhB,QAAU7D,KAAKC,MAAMO,YAAYqE,KAAKhB,uCAE9E7D,KAAKgyG,mBAGPI,EAA6B5kG,EAAUokG,sBAAwB5xG,KAAK4K,MAAMgnG,qBAC7C5xG,KAAK4K,MAAMk8B,sBAAwBt5B,EAAUs5B,qBAC9CsrE,IAChCpyG,KAAKwnC,gBAGD6qE,EAAe7kG,EAAUs0B,aAAe9hC,KAAK4K,MAAMk3B,WACnDwwE,EAAqB1mG,WAAW4B,EAAUgkG,eAAiB5lG,WAAW5L,KAAK4K,MAAM4mG,aACjFe,EAAqBpyF,KAAKC,UAAU5S,EAAUhN,eAAiB2f,KAAKC,UAAUpgB,KAAK4K,MAAMpK,cAC3F6xG,GAAgBE,GAAsBD,IACxCtyG,KAAKwyG,oBAGsBhlG,EAAUC,gBAAkBzN,KAAK4K,MAAM6C,eAElEzN,KAAKyyG,wKAwBP,GAAuC,OAAnCzyG,KAAK4K,MAAMk8B,oBACb,OAAO,EAGT,IACIhF,EADE2F,EAAqBznC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk8B,qBAAqBrhC,IAAI,KAIxFq8B,EAAa9hC,KAAK4K,MAAM6lE,kBAAoBzwE,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAM6lE,mBAAmBjrE,MAAMiiC,GAAsB,KAK/HznC,KAAKunC,oBAAoBzF,GAEzB9hC,KAAKiM,SAAS,CACZ61B,8DAImBr0B,GACrBzN,KAAKiM,SAAS,CACZwB,sLAKIilG,EAAc1yG,KAAKS,cAAcG,gBAAgB,CAAC,UAClDJ,EAAcR,KAAK4K,MAAM5D,gBAAgBhH,KAAK4K,MAAM6C,eACpD6oD,EAAmBo8C,EAAY1rG,gBAAgBxG,EAAYqE,KAAKhB,OACtE7D,KAAKiM,SAAS,CACZzL,cACA81D,iTAKkDxxD,QAAQC,IAAI,CAC9D/E,KAAKS,cAAcwgF,uBACnBjhF,KAAKS,cAAc+hF,mEAFdxsB,OAAkBC,gBASfnxD,QAAQC,IAAI,CACpB/E,KAAKS,cAAcy5D,qBACnBl6D,KAAKS,cAAc6yE,qBAAqBtzE,KAAKC,MAAMuB,SACnDxB,KAAKS,cAAc8yE,6BAA6BvzE,KAAKC,MAAMuB,8CAN3DuxD,OACA0d,OACAohC,OAOIjyB,EAAgB,GAChB5oE,EAAoBy5D,EAAoBA,EAAkBjrE,MAAMutD,GAAmB/yD,KAAKS,cAAciB,MAAM,GAE5GsF,EAAkBhH,KAAKS,cAAcmyD,0BACrCnlD,EAAgB7N,OAAO4H,KAAKR,GAAiB,GAEnDhH,KAAKiM,SAAS,CACZwB,gBACAmyE,gBACA7sB,kBACA/rD,kBACAgvD,oBACAC,oBACAwa,oBACAz5D,oBACA66F,8SAMG7xG,KAAK4K,MAAM6lE,4DACP,iBAGHzoC,EAAiB,SAAC3rB,EAAG8lB,GACzB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBlkB,WAAY7H,EAAG1e,OACfqmB,cAAa,cACbC,YAAa5a,EAAKpJ,MAAMwN,cACxB46B,WAAYh/B,EAAKuB,MAAM6lE,kBAAkB7/D,WAGvCuxB,IACFiG,EAAUlkB,WAAa7a,EAAK5I,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0L,EAAK5I,cAAcsjB,yBAAyBqkB,GAG9C/+B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAI6B,oBAA9Bzd,EAAKpJ,MAAM+nC,gBAAiCG,GACrD9+B,EAAKpJ,MAAM+nC,eAAe3rB,IAIxB4rB,EAAwB,SAAC5rB,GAC7B,IAAMga,EAASha,EAAGksB,gBAClBl/B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKAg6B,EAAerwD,KAAK4K,MAAMqrD,kBAAkBlpD,cACnB/M,KAAKwyG,kBAAkBxyG,KAAK4K,MAAM4mG,uBAA3DU,SACArvB,EAAe7iF,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAM4mG,aAAa/rG,IAAI,KACpEq8B,EAAa9hC,KAAK4K,MAAMk3B,WAAa9hC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAAc,KAEvF6wE,EAAU3yG,KAAKS,cAAcynC,qBAAqBpG,EAAW9hC,KAAK4K,MAAMorD,kBAAkBvyD,WAE5FzD,KAAK4K,MAAMgnG,yCACO5xG,KAAK4K,MAAM8mG,mDAAyB1xG,KAAKS,cAAc8iF,sBAAsBvjF,KAAKC,MAAMuB,QAAQmxG,GAAQ,GAAM,gEAAc3yG,KAAKS,cAAckiF,0BAA0B3iF,KAAKC,MAAMuB,QAAQmxG,EAAQ9vB,+BAAlN+vB,OACNxiD,QAAQqK,IAAI,mBAAmBk4C,EAAQv8F,WAAWw8F,GAClD5yG,KAAKC,MAAMmC,0BAA0BiuD,EAAc,mBAAoB,CAACsiD,EAASC,EAAa5yG,KAAK4K,MAAM8mG,kBAAmB,KAAM1pE,EAAgBC,kCAE5I4qE,EAAa7yG,KAAK4K,MAAM0rD,iBAAiB3rB,gBAAgBoK,oBACjC/0C,KAAKS,cAAcy5D,6BAA3CnH,SACA+/C,EAAa9yG,KAAKS,cAAcynC,qBAAqBpG,EAAWt8B,MAAMutD,GAAiBr3C,MAAMomB,EAAWt8B,MAAM0sG,EAAiBzsG,IAAI,OAAOzF,KAAK4K,MAAMpK,YAAYiD,UAKvK2sD,QAAQqK,IAAI,4BAA4Bk4C,EAASE,EAAYC,GAG7D9yG,KAAKC,MAAMmC,0BAA0BiuD,EAAc,4BAA6B,CAACsiD,EAASE,EAAYC,EAAY9yG,KAAK4K,MAAM8mG,kBAAmB,KAAM1pE,EAAgBC,WAGxKjoC,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,8PAMZ9mB,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,wJAkBZ,OAAuC,OAAnC9mB,KAAK4K,MAAMk8B,qBAGR9mC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk8B,qBAAqBrhC,IAAI,sCAgB7D,IAAA4I,EAAArO,KAED+yG,GAAgB/yG,KAAK4K,MAAMg8B,gBAAkB5mC,KAAK4K,MAAMsnG,iBACxDc,EAAiBhzG,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,eAAe,UAElF,OACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGbjK,KAAK4K,MAAM6lE,kBA0BRzwE,KAAK4K,MAAM03B,WAAWxb,QACxBtnB,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB9V,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,+BACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/C0lC,SAAW1lC,KAAKC,MAAMylC,SAAW1lC,KAAKC,MAAMylC,SAAW,0BAK7DlmC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuH,GAAG,IAGLlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,eAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,uGAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAU,EACVxW,MAAK,0BACLijB,QAASp0B,KAAK4K,MAAMgnG,oBACpB7vF,SAAW,SAAA3T,GAAC,OAAIC,EAAKyjG,oBAAoB1jG,EAAEtO,OAAOs0B,YAEpD50B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAO,yCAAA9X,OAA2ChF,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBAAiBkK,KAAK,MAAxF,kEAEP1R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,MACNtO,MAAO,YACP4O,KAAM,qBAOb/M,KAAK4K,MAAMgnG,qBACVpyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,GAGL8F,KAAK4K,MAAMpK,aACThB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,6BAKAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJ8R,aAAa,EACbpiB,YAAaR,KAAK4K,MAAMpK,YACxBiN,cAAezN,KAAK4K,MAAM6C,cAC1BzG,gBAAiBhH,KAAK4K,MAAM5D,gBAC5B+a,SAAU/hB,KAAKizG,uBAAuBhoG,KAAKjL,WAQvDA,KAAK4K,MAAM+mG,qBAAuB3xG,KAAK4K,MAAMg8B,gBAC3CpnC,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTI,GAAG,EACH/N,GAAG,EACHiQ,GAAG,EACHD,GAAG,IAGLliB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,qBAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6jB,UAAW,EACXN,MAAO,CACLgkB,SAAS,QAEX13B,WAAY,SACZE,eAAgB,UAGZrK,OAAO4H,KAAKxH,KAAK4K,MAAM+mG,oBAAoBn2F,IAAK,SAAA3X,GAC9C,IAAM3C,EAAUmN,EAAKzD,MAAM+mG,mBAAmB9tG,GAC9C,OACErE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJsU,GAAI,EACJ9rB,MAAO,OACP8P,cAAe,MACf8T,IAAG,gBAAAlZ,OAAkBf,GACrBoG,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPrD,YAAa,CACXqD,MAAMA,GAERuO,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHxoB,MAAM,CAAC,QAAQ,SACf+E,OAAO,CAAC,QAAQ,aAItBO,EAAAC,EAAAC,cAACkS,EAAD,CACElF,GAAI,EACJ1N,SAAU,CAAC,EAAE,GACbgQ,WAAY,IACZpF,aAAc,EACdzL,MAAO,WACPoL,OAAQrI,EAAQkV,mBAYpCpW,KAAK4K,MAAM6mG,iBAAmBsB,GAC5BvzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAO,yDAEPld,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAIZvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGuR,IAAK,SAAA03C,GAAQ,OACzB1zD,EAAAC,EAAAC,cAAC8sC,GAAD,CACEntB,UAAW,CACTlV,EAAE,GAEJO,UAAW,CACT1L,SAAS,GAEXqjC,WAAY6wB,EACZp1C,IAAG,YAAAlZ,OAAcsuD,GACjB/sB,YAAa,kBAAI93B,EAAK0jG,eAAe7+C,IACrCh0C,SAAU7Q,EAAKzD,MAAM4mG,cAAgB5lG,WAAWsnD,SAQ9D1zD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGd8oG,GACEvzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPw4B,SAAU,MACV3oB,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,QACXgM,MAAO,CACL6L,WAAW,UAEbnrB,MAAQyN,WAAW5L,KAAK4K,MAAMsnG,iBAAiBthG,QAAQ,IAAI,EAAI5Q,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOG,OAASkC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,WAGvG,IAAvDgO,WAAW5L,KAAK4K,MAAMsnG,iBAAiBthG,QAAQ,IAC7C,cADF,GAAAhM,OAEM5E,KAAK4K,MAAMsnG,iBAAiBn7F,GAAG,GAAK,aAAe,UAFzD,KAAAnS,OAEuE5E,KAAK4K,MAAMsnG,iBAAiBlvC,MAAMpyD,QAAQ,GAFjH,MAKJpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAU1c,KAAK4K,MAAMgnG,oBAAX,yCAAAhtG,OAA0EhF,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBAAiBkK,KAAK,MAAvH,iEAA8LlR,KAAK4K,MAAMsnG,iBAAiBn7F,GAAG,GAAK,uHAAyH,kHAErWvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAIP/M,KAAK4K,MAAMgnG,qBACVpyG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJvO,MAAO,YACPqpB,WAAY,UACZ7I,QAAS3e,KAAKyxG,gBAAgBxmG,KAAKjL,OAJrC,WAYVR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPw4B,SAAU,MACV3oB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,QACX+V,WAAY,YACZ7I,QAAU,SAACvQ,GAAD,OAAOC,EAAKq5B,uBAAuB,MAC7CjqB,MAAO,CACLiV,SAAS,OACTxJ,SAAS,SACTI,WAAW,SACXqJ,aAAa,aAGd3yB,KAAK4K,MAAM6lE,kBAAkB7/D,QAAQ5Q,KAAKC,MAAMmL,SAAW,EAAI,GAdlE,IAcuE4nG,KAI3ExzG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACX8J,YAAW,gBACX9F,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,SAC7CiS,MAAiC,OAA1BxO,KAAK4K,MAAMk3B,WAAsB9hC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAAYlxB,UAAY,KAEtGpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKuR,IAAK,SAAA6mB,GAAU,OAC5B7iC,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAYA,EACZvkB,IAAG,YAAAlZ,OAAcy9B,GACjB8D,YAAa,kBAAI93B,EAAKq5B,uBAAuBrF,IAC7CnjB,SAAU7Q,EAAKzD,MAAMk8B,sBAAwB36B,SAASk2B,SAMhE7iC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsK,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACTlC,SAASgI,KAAK4K,MAAMg8B,gBAEtBhoB,YAAa5e,KAAKxD,OAAOyO,KAAKjL,OANhC,YAlXJR,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,EACHjT,UAAU,QACViR,MAAM,CACJ3O,QAAQ,OACR/E,WAAW,SACXE,eAAe,YAInBzK,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,qCA/XEsH,mCCsDX+yG,8MArDbzyG,cAAgB,OAqBhB0yG,MAAQ,WAEN9yG,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,UACbC,WAAY7jB,EAAKJ,MAAMmzG,SAGzB,IAAMC,EAAIt6F,KAAKC,IAAIlO,OAAO8N,WAAW,KAE/BhE,GAAK9J,OAAO8N,WAAWy6F,GAAG,EAEhCvoG,OAAOyrB,KAAP,yCAAA3xB,OAAqDvE,EAAKJ,MAAMqzG,OAAQ,SAAxE,8CAAA1uG,OADU,IACV,UAAAA,OAAyIgQ,EAAzI,WAAAhQ,OAAoJyuG,EAApJ,YAAAzuG,OAHU,kFA5BN5E,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,wDAILpJ,KAAKoJ,yDAILpJ,KAAKoJ,6CAkBE,IAAAC,EAAArJ,KACP,OACIR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACd2mB,UAAW,UACXqX,cAAe,QACf3e,QAAU,SAAAvQ,GAAO/E,EAAK8pG,UAEtB3zG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAOroB,cACvBqI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,QAAS6Q,WAAY,EAAGtC,GAAI,GAAK1M,KAAKC,MAAMpH,KAAOmH,KAAKC,MAAMpH,KAAO,kBAjD7DsH,mCCyElBozG,8MApEb9yG,cAAgB,OAqBhB4+B,iDAAa,SAAAp+B,EAAOnE,GAAP,OAAAiE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACWjB,EAAKI,cAAc8iB,mBAEvB2b,UAAUC,OAAOC,OAAOz6B,QAH/B,CAAAvD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIHjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,QACfC,YAAannB,EACbonB,WAAY,eAPL,OAST7jB,EAAKJ,MAAMo/B,aATFj+B,EAAAE,KAAA,eAWTjB,EAAKJ,MAAMo/B,aAXF,wBAAAj+B,EAAAS,SAAAZ,EAAAjB,0IAnBPA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,wDAILpJ,KAAKoJ,yDAILpJ,KAAKoJ,6CAkBE,IAAAC,EAAArJ,KACDszG,EAAQxoG,OAAO0oG,OAAOxzG,KAAKC,MAAMqzG,OACjCG,EAAa,CAACrnF,OAAQpsB,KAAKC,MAAMpH,MACvC,OACE2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAE7Br/B,KAAKC,MAAMyzG,iBACXl0G,EAAAC,EAAAC,cAACi0G,GAAAl0G,EAAD,CACEge,MAAO,CAAElM,SAAU,QAAQC,OAAS,MACpCq9C,KAAK,EACL+kD,SAAS,EACT15G,MAAO4Q,OAAO8N,WACd3Z,OAAQ6L,OAAOgO,cAGnBtZ,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAOsG,KAAKC,MAAMvG,MAAO4X,KAAMtR,KAAKC,MAAMqR,OAC5D9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG7rB,MAAO,EAAG8P,cAAe,SAAUgc,GAAI,QAClDxmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAasT,UAAW,SAAUzS,SAAU,EAAG0S,GAAI,EAAGya,wBAAyBsnF,KAE9Fj0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EzK,EAAAC,EAAAC,cAACm0G,GAAD,CAAoBP,MAAOA,EAAOz6G,KAAM,YAAau6G,OAAQ,eAC7D5zG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8f,GAAI,EAAGd,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKg2B,WAAW,6BAA8B7X,WAAY,QAAtF,uCA9DW6K,IAAMlyB,WC++DhB2zG,8MAx+DblpG,MAAQ,CACNmpG,QAAQ,GACR9/F,SAAS,IACT6tB,WAAW,GACXQ,WAAW,GACXsvC,SAAS,KACToiC,WAAU,EACVxC,YAAY,GACZrkE,YAAW,EACXrwC,OAAO,UACP01C,YAAW,EACXyhE,YAAY,KACZC,aAAY,EACZ93B,cAAc,KACdxzC,eAAc,EACdjC,eAAc,EACdwtE,gBAAe,EACfhvC,gBAAe,EACfv+B,gBAAe,EACfwtE,gBAAe,EACf3C,iBAAgB,EAChB/yD,iBAAgB,EAChB21D,iBAAgB,EAChBvtE,oBAAoB,GACpBwtE,oBAAoB,GACpBztE,kBAAiB,EACjB0tE,kBAAiB,EACjB9jC,kBAAkB,KAClB+jC,oBAAmB,EACnBC,oBAAoB,KACpBC,qBAAoB,EACpBC,qBAAoB,EACpBC,qBAAqB,KACrB3tE,yBAAwB,KAI1BxmC,cAAgB,OAmBhBo0G,kBAAoB,SAACV,GACnB9zG,EAAK4L,SAAS,CACZkoG,sBAIJW,eAAiB,SAACZ,GAChB7zG,EAAK4L,SAAS,CACZioG,mBAIJa,0BAA4B,SAAAJ,GAC1Bt0G,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5BmnG,qBAAqBnnG,EAAUmnG,0BAInCttE,oBAAsB,SAAAV,GACpBtmC,EAAK4L,SAAS,CACZ06B,qBAIJquE,kBAAoB,SAAAR,GAClBn0G,EAAK4L,SAAS,CACZuoG,0BAIJS,mBAAqB,SAAAP,GACnBr0G,EAAK4L,SAAS,CACZyoG,2BAIJQ,eAAiB,SAAC1iE,GAChBnyC,EAAK4L,SAAS,CACZumC,kBAIJ2iE,sBAAwB,SAACz2D,GACvBr+C,EAAK4L,SAAS,CACZyyC,uBAIJlW,8BAAgC,SAACvB,GAC/B5mC,EAAK4L,SAAS,CACZg7B,+BAwBJ1H,WAAa,WACXl/B,EAAK4L,SAAS,CACZgoG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACf5zG,EAAK4L,SAAS,CACZgoG,mBAgGJoB,sDAAkB,SAAAp0G,EAAOgpC,EAAgBC,GAAvB,IAAAgsB,EAAA5X,EAAA,OAAAv9C,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZjB,EAAKuK,MAAM8pG,qBACPx+C,EAAuB71D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACzEP,EAAKI,cAAc0pC,YAAY9pC,EAAKJ,MAAMwN,cAAcyoD,EAAqBtvD,QAAQqjC,EAAgBC,KAE/FoU,EAAgBj+C,EAAKuK,MAAM0pG,oBAAoBj0G,EAAKuK,MAAM9N,UAC3CuD,EAAKuK,MAAMq8B,yBAA2B5mC,EAAKJ,MAAM0pC,SACpEtpC,EAAKI,cAAc0pC,YAAY9pC,EAAKJ,MAAMwN,cAAc6wC,EAAc13C,QAAQqjC,EAAgBC,GAE9F7pC,EAAKI,cAAc0pC,YAAY9pC,EAAKJ,MAAMwN,cAAcpN,EAAKJ,MAAMO,YAAYqE,KAAK+B,QAAQqjC,EAAgBC,GAThG,wBAAA9oC,EAAAS,SAAAZ,EAAAjB,mEAclB8oC,wCAAqB,SAAA9mC,IAAA,IAAA4mC,EAAAstB,EAAA5X,EAAA,OAAAv9C,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEfsnC,GAAgB,GAEhBvoC,EAAKuK,MAAM8pG,oBAJI,CAAAvyG,EAAAb,KAAA,eAKX40D,EAAuB71D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBALxDuB,EAAAb,KAAA,EAMKjB,EAAKI,cAAcqoC,mBAAmBzoC,EAAKJ,MAAMwN,cAAcyoD,EAAqBtvD,QAAQvG,EAAKJ,MAAMuB,SAN5G,OAMjBonC,EANiBzmC,EAAAV,KAAAU,EAAAb,KAAA,sBAQXg9C,EAAgBj+C,EAAKuK,MAAM0pG,oBAAoBj0G,EAAKuK,MAAM9N,UAC3CuD,EAAKuK,MAAMq8B,yBAA2B5mC,EAAKJ,MAAM0pC,UATrD,CAAAxnC,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GAUOjB,EAAKI,cAAcqoC,mBAAmBzoC,EAAKJ,MAAMwN,cAAc6wC,EAAc13C,QAAQvG,EAAKJ,MAAMuB,SAVvG,QAUfonC,EAVezmC,EAAAV,KAAAU,EAAAb,KAAA,wBAAAa,EAAAb,KAAA,GAYOjB,EAAKI,cAAcqoC,mBAAmBzoC,EAAKJ,MAAMwN,cAAcpN,EAAKJ,MAAMO,YAAYqE,KAAK+B,QAAQvG,EAAKJ,MAAMuB,SAZrH,QAYfonC,EAZezmC,EAAAV,KAAA,eAAAU,EAAAP,OAAA,SAeZgnC,GAfY,yBAAAzmC,EAAAN,SAAAG,EAAAhC,WAkBrBs1G,kCAAe,SAAA5yG,IAAA,IAAAkmC,EAAAqB,EAAAC,EAAA,OAAAnpC,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAGejB,EAAKyoC,qBAHpB,YAGPF,EAHO/lC,EAAApB,MAAA,CAAAoB,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAMJvB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CACnCo7B,gBACAtG,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,SAZH,OAkBPmjB,EAAkB,SAAC5tB,EAAG8lB,GAE1B,IAAMiG,EAAY,CAChBpkB,cAAe,UACfC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,QAGbwkC,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bo7B,cAA8B,YAAdvsB,EAAG1e,OACnB2kC,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,SAMVojB,EAAyB,SAAC7tB,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ3mC,OAAA0L,EAAA,EAAA1L,CAAA,GACH4N,EAAU80B,WAAV,QADE,CAELjM,iBAMRh2B,EAAKg1G,gBAAgBprE,EAAgBC,GAErC7pC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,QAnED,wBAAAjkB,EAAAhB,SAAAa,EAAA1C,WAyEfu1G,mCAAgB,SAAAryG,IAAA,IAAAwvG,EAAAp8C,EAAAk/C,EAAAviG,EAAAtP,EAAAilC,EAAAu8B,EAAAlP,EAAAC,EAAAkmB,EAAAv1C,EAAA4pC,EAAAtjC,EAAA6mE,EAAAK,EAAAK,EAAAN,EAAAI,EAAAnpG,EAAA,OAAAtK,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAEVjB,EAAKuK,MAAM2pG,kBACbl0G,EAAK4L,SAAS,CACZsoG,kBAAiB,IAIf7B,EAAcryG,EAAKI,cAAcG,gBAAgB,CAAC,UAClD01D,EAAmBj2D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBP,EAAKJ,MAAMO,YAAYqE,KAAKhB,QAC7G2xG,EAAoB9C,EAAY/tG,SAAW2xD,GAAoBA,EAAiB3xD,QAVxExB,EAAA7B,KAAA,EAoBJwD,QAAQC,IAAI,CACpB1E,EAAKyoC,qBACLzoC,EAAKI,cAAcwkE,sBACnB5kE,EAAKI,cAAc+hF,uBACnBniF,EAAKI,cAAcq/E,0BACnBz/E,EAAKI,cAAcw7E,iBAAiB57E,EAAKJ,MAAMO,aAC/CH,EAAKI,cAAc+V,eAAenW,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,SACpEg0G,EAAoBn1G,EAAKI,cAAc6yE,qBAAqBjzE,EAAKJ,MAAMuB,SAAW,OA3BtE,OAAAyR,EAAA9P,EAAA1B,KAAAkC,EAAA/D,OAAAsF,EAAA,EAAAtF,CAAAqT,EAAA,GAaZ21B,EAbYjlC,EAAA,GAcZwhE,EAdYxhE,EAAA,GAeZsyD,EAfYtyD,EAAA,GAgBZuyD,EAhBYvyD,EAAA,GAiBZy4E,EAjBYz4E,EAAA,GAkBXkjC,EAlBWljC,EAAA,GAkBXkjC,iBACD4pC,EAnBY9sE,EAAA,GA8BRwpC,EAAa9sC,EAAKJ,MAAMkW,cAAgB9V,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAMkW,cAAcY,GAAG,GAC7Fi9F,EAAY3zG,EAAKJ,MAAM0W,kBAAoBtW,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM0W,kBAAkBI,GAAG,GAGpG29F,EADAL,EAAkBmB,GAAqBroE,EAGvCinE,EAAiBoB,GAAqB/kC,GAAqBA,EAAkB15D,GAAG,GAChFy9F,EAAqBJ,GAErB/oG,EAvCQzL,OAAA0L,EAAA,EAAA1L,CAAA,GAuCOS,EAAKuK,QAGb8pG,sBAAwBc,IACnCnqG,EAASqpG,qBAAsB,GAGjCrpG,EAAS2oG,UAAYA,EACrB3oG,EAAS8hC,WAAaA,EACtB9hC,EAAS+wE,cAAgBA,EACzB/wE,EAASu9B,cAAgBA,EACzBv9B,EAAS85D,eAAiBA,EAC1B95D,EAAS+oG,eAAiBA,EAC1B/oG,EAASgpG,gBAAkBA,EAC3BhpG,EAASw7B,iBAAmBA,EAC5Bx7B,EAASolE,kBAAoBA,EAC7BplE,EAAS4qD,kBAAoBA,EAC7B5qD,EAASmpG,mBAAqBA,EAC9BnpG,EAASqpG,oBAAsBA,EAC/BrpG,EAAS6qD,qBAAuBA,EAEhC7qD,EAAS0oG,QAAU,CACjBv3G,QAAO,EACPC,SAAQ,GAEV4O,EAASi3B,WAAa,CACpB9lC,OAAO,CACL65B,OAAO,KACPvP,SAAQ,GAEVrqB,QAAQ,CACN45B,OAAO,KACPvP,SAAQ,GAEVyf,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,GAEV7pB,MAAM,CACJo5B,OAAO,KACPvP,SAAQ,IAGZzb,EAASy2B,WAAa,CACpB7kC,MAAM,KACNT,OAAO,KACPC,QAAQ,MAEV4O,EAASy7B,oBAAsB,CAC7B7pC,MAAM,KACNT,OAAO,KACPC,QAAQ,MAGV4O,EAASkpG,kBAAmB,EAE5Bl0G,EAAK4L,SAASZ,EAAS,WACrBhL,EAAKo1G,cACLp1G,EAAKq1G,YAjGO,yBAAAvyG,EAAAtB,SAAAqB,EAAAlD,WAqGhB+lC,uCAAoB,SAAA1iC,IAAA,OAAAtC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,OAClBjB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,CAER2mC,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,IAETzmB,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAVI,wBAAAvjB,EAAA1B,SAAAwB,EAAArD,WAgBpB2nC,mCAAgB,SAAA/jC,IAAA,IAAA+xG,EAAAj3D,EAAA5c,EAAA2F,EAAA3gB,EAAA8uF,EAAAC,EAAAnD,EAAAoD,EAAAC,EAAAr2B,EAAAs2B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1rE,EAAA2rE,EAAA1wG,EAAAS,EAAAkwG,EAAArlB,EAAAslB,EAAA1uE,EAAAC,EAAA4nC,EAAAhoC,EAAA1P,EAAAw+E,EAAAC,EAAAC,EAAA,OAAA91G,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAEVq0G,EAAqB,KACnBj3D,EAAkBr+C,EAAKuK,MAAM8zC,gBAC7B5c,EAAazhC,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,QAC9C2qC,EAAqBpnC,EAAKy2G,yBAE5BhwF,GAAU,EAPApiB,EAAAU,GASN/E,EAAKuK,MAAM9N,OATL4H,EAAApD,KAUP,YAVOoD,EAAAU,GAAA,EAsKP,WAtKOV,EAAAU,GAAA,uBAYN/E,EAAKuK,MAAMg8B,gBAAmB9E,IAAczhC,EAAKI,cAAciB,MAAMogC,GAAYz8B,IAAI,GAZ/E,CAAAX,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,UAaD,GAbC,WAgBLvB,EAAKuK,MAAMg+B,cAhBN,CAAAlkC,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,SAiBDvB,EAAKi1G,gBAjBJ,WAoBN5wE,cACFrkC,EAAKI,cAAcokC,gBAAgB,6BAA6B,GAGlExkC,EAAK4L,SAAS,CACZ8qG,kBAAmB12G,EAAKJ,MAAMuB,QAC9Bw1G,WAAY,GACZC,aAAc,KAGVrB,EAAkB,SAACv5F,EAAG8lB,IAErB9lB,GAAM8lB,IACT9lB,EAAK,CACH1e,OAAO,UAIX,IAAMo2G,EAAwB,UAAd13F,EAAG1e,OACbwqC,EAA4B,YAAd9rB,EAAG1e,OAEjByqC,EAAY,CAChBpkB,cAAe,UACfC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,OACf0qC,WAAYl8B,SAAS21B,IAGnBK,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,EACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5BymG,YAAY,QACZnyE,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,QAGzCrB,EAAKuK,MAAMq8B,yBAA2B8sE,GAC/C1zG,EAAK4L,SAAS,CACZ8nG,QAAQn0G,OAAAic,EAAA,EAAAjc,CAAA,GACLS,EAAKuK,MAAM9N,QAAS,MAMvB+4G,EAAyB,SAACx5F,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBAMFq8E,EAAcryG,EAAKI,cAAcG,gBAAgB,CAAC,YAC9B8xG,EAAY/tG,SAAWtE,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBP,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAM,eAGxHxD,EAAKuK,MAAM8pG,oBArG1B,CAAAhwG,EAAApD,KAAA,gBAuGFw0G,EAAwBz1G,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBACpEm1G,EAAkB11G,EAAKI,cAAcynC,qBAAqBpG,EAAWg0E,EAAsBryG,UAxGzFiB,EAAApD,KAAA,GA0GcjB,EAAKI,cAAc0jF,gBAAgB9jF,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAMkyG,GA1GnF,eA0GFr2B,EA1GEh7E,EAAAjD,KAAAiD,EAAApD,KAAA,GA2GkBjB,EAAKI,cAAcqkF,oBAAoBpF,GA3GzD,eA2GJs2B,EA3GItxG,EAAAjD,KA4GJpB,EAAKuK,MAAM4mG,cAEbwE,GADAA,EAAgB31G,EAAKI,cAAciB,MAAMs0G,IACXt6F,MAAMs6F,EAAcxwG,MAAMnF,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAM4mG,aAAa/rG,IAAI,OAC7GuwG,EAAgB31G,EAAKI,cAAcwqC,aAAa+qE,IAG5CC,EAAgB,CAACv2B,EAAQs2B,GAlHvBtxG,EAAApD,KAAA,GAoHmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKuK,MAAMsrD,qBAAqBnpD,KAAM,gBAAiBkpG,EAAeL,EAAiBC,GApHvJ,QAoHRF,EApHQjxG,EAAAjD,KAAAiD,EAAApD,KAAA,oBAsHFy0G,EAAkB11G,EAAKI,cAAcynC,qBAAqBpG,EAAWzhC,EAAKJ,MAAMO,YAAYiD,UAE5F0yG,EAAiC91G,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,4BAEtGq1G,EAAgB,GAGdI,EAAwBh2G,EAAKuK,MAAM0pG,oBAAoBj0G,EAAKuK,MAAM9N,UACpEq5G,GAAkCE,GAAyBh2G,EAAKJ,MAAM0pC,UAAYtpC,EAAKuK,MAAMq8B,yBA9HzF,CAAAviC,EAAApD,KAAA,YA+HAg1G,EAAoBj2G,EAAKuK,MAAM0pG,oBAAoBj0G,EAAKuK,MAAM9N,QAAQmhD,SAC5Eg4D,EAAgB,CAACF,EAAiB11G,EAAKJ,MAAMO,YAAYqE,KAAK+B,UAE1DvG,EAAKuK,MAAMq8B,wBAlIT,CAAAviC,EAAApD,KAAA,gBAmIEupC,GAAoB0rE,EAAAD,EAAkBn1E,SAAQk1E,EAAsB73D,UAAhDj8C,MAAAg0G,EAAA32G,OAAA0hC,EAAA,EAAA1hC,CAA6Dq2G,IAAe9qE,YAnIlGzmC,EAAApD,KAAA,GAoIuBjB,EAAKI,cAAc2qC,+BAA+BirE,EAAsBtpG,KAAM89B,EAAmB+qE,EAAiBC,GApIzI,QAoIJF,EApIIjxG,EAAAjD,KAAAiD,EAAApD,KAAA,wBAAAoD,EAAApD,KAAA,GAsIuBjB,EAAKI,cAAc2B,0BAA0Bi0G,EAAsBtpG,KAAMspG,EAAsB73D,SAAUy3D,EAAeL,EAAiBC,GAtIhK,QAsIJF,EAtIIjxG,EAAAjD,KAAA,QAAAiD,EAAApD,KAAA,oBA0IFk1G,GAAan2G,EAAKuK,MAAM4nC,YAAcnyC,EAAKI,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,eAC7G41G,EAAiE,qBAA9Cn2G,EAAKJ,MAAMO,YAAY0qC,mBAAqC7qC,EAAKJ,MAAMO,YAAY0qC,mBAAqBsrE,GA3IrH,CAAA9xG,EAAApD,KAAA,gBAAAoD,EAAApD,KAAA,GAkJMwD,QAAQC,IAAI,CACpB1E,EAAKI,cAAcuC,oBAAoB,eAAgB,iBACvD3C,EAAKI,cAAcyV,eAAe,OAAO7V,EAAKJ,MAAMwN,cAAcpN,EAAKJ,MAAMO,YAAYH,EAAKJ,MAAMuB,WApJlG,QAAAsE,EAAApB,EAAAjD,KAAA8E,EAAA3G,OAAAsF,EAAA,EAAAtF,CAAAkG,EAAA,GAgJF2wG,EAhJElwG,EAAA,GAiJF6qF,EAjJE7qF,EAAA,GAuJAkwG,GAAiBrlB,IACbslB,EAAc50E,EAAWr8B,IAAI2rF,GAAU5rF,MAAM,KACnDixG,EAAgBp2G,EAAKI,cAAciB,MAAM+0G,GAAehxG,IAAI,KACxDixG,EAAY/8E,IAAI88E,EAAcjxG,MAAM,MACtCgxG,GAAY,IA3JZ,eAiKNP,EAAgB,CAACF,EAAiBS,EAAW,8CAjKvC9xG,EAAApD,KAAA,GAkKqBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO,gBAAiBoyG,EAAeL,EAAiBC,GAlKtJ,QAkKNF,EAlKMjxG,EAAAjD,KAAA,eAAAiD,EAAA9C,OAAA,yBAwKN88C,EAxKM,CAAAh6C,EAAApD,KAAA,gBAyKF0mC,EAAiB,SAAC3rB,EAAG8lB,GACzB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBpkB,cAAa,aACbC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,OACf0qC,WAAY,GAGVlG,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,GACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,SAMhDumC,EAAwB,SAAC5rB,GAC7B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBAxNA3xB,EAAApD,KAAA,GA8NmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO,kBAAmB,CAAC,GAAImkC,EAAgBC,GA9N3I,QA8NR0tE,EA9NQjxG,EAAAjD,KAAAiD,EAAApD,KAAA,qBAkOJjB,EAAKuK,MAAMg8B,gBAAmB9E,IAAczhC,EAAKI,cAAciB,MAAMogC,GAAYz8B,IAAI,GAlOjF,CAAAX,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,UAmOC,GAnOD,WAsOFiuE,EAAS,CACbrhE,MAAMnO,EAAKI,cAAciB,MAAMogC,IAG7B+F,EAAoB,MACpBJ,EA3OI,CAAA/iC,EAAApD,KAAA,SA4ONumC,EAAoBxnC,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM0W,kBAAkBnR,MAAMiiC,GA5O1E/iC,EAAApD,KAAA,wBAAAoD,EAAApD,KAAA,GA8OuBjB,EAAKI,cAAcuC,oBAAoB3C,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO,cA9OjG,QA8OAs0B,EA9OAzzB,EAAAjD,KA+ONomC,EAAoBxnC,EAAKI,cAAciB,MAAMrB,EAAKI,cAAcynC,qBAAqBpG,EAAWzhC,EAAKJ,MAAMO,YAAYiD,WAAWgC,IAAI0yB,GA/OhI,WAmPR0P,EAAoBxnC,EAAKI,cAAcynC,qBAAqBL,EAAkB,IAnPtE,CAAAnjC,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,UAsPC,GAtPD,eAyPFomC,EAAiB,SAAC3rB,EAAG8lB,GACzB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBpkB,cAAa,iBACbC,YAAa5jB,EAAKJ,MAAMwN,cACxByW,WAAY7H,EAAG1e,OACf0qC,WAAYl8B,SAAS21B,IAGnBK,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,GACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,SAMhDumC,EAAwB,SAAC5rB,GAC7B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBAMJwgF,EAAe,CAAChvE,GA9SZnjC,EAAApD,KAAA,GAiTmBjB,EAAKI,cAAc2B,0BAA0B/B,EAAKJ,MAAMO,YAAYqE,KAAKhB,MAAO,kBAAmBgzG,EAAc7uE,EAAgBC,EAAuB4nC,GAjT3K,QAiTR8lC,EAjTQjxG,EAAAjD,KAAA,eAAAiD,EAAA9C,OAAA,4BAqTVklB,GAAU,EArTApiB,EAAA9C,OAAA,uBAyTa,IAAvB+zG,GACFt1G,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINgqB,iBA/TM,0BAAApiB,EAAA7C,SAAA+B,EAAA5D,WAsUhB+xG,eAAiB,SAACP,GAChBnxG,EAAK4L,SAAS,CACZulG,mBAIJC,gBAAkB,WAChBpxG,EAAK4L,SAAS,CACZwlG,iBAAgB,OAIpBgE,YAAc,WACZ,IAAI34G,EAASuD,EAAKuK,MAAM9N,OAExB,OAAOA,GACL,IAAK,SACEuD,EAAKuK,MAAMopG,YACdl3G,EAAS,WAOXA,IAAWuD,EAAKuK,MAAM9N,OACxBuD,EAAK4L,SAAS,CACZnP,UACA,WACAuD,EAAKknC,wBAGPlnC,EAAKknC,yBAITA,oBAAsB,WAAiB,IAAhBzU,EAAgBtwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE5B,IAAKnC,EAAKuK,MAAM9N,OACd,OAAO,EAGJg2B,IACHA,EAASzyB,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,SAG5C,IAAI8pC,GAAiB,EAErB,OAAQvmC,EAAKuK,MAAM9N,QACjB,IAAK,UACH8pC,EAAiBA,GAAmB9T,GAAUA,EAAO/b,GAAG1W,EAAKJ,MAAMkW,cACrE,MACA,IAAK,SACHywB,GAAkBvmC,EAAKuK,MAAMwpG,iBAAmB/zG,EAAKuK,MAAM8zC,kBAAqB9X,GAAmB9T,GAAUA,EAAO/b,GAAG1W,EAAKJ,MAAM+W,oBAMtI3W,EAAK4L,SAAS,CACZ26B,sBAIJY,cAAgB,WACd,IAAKnnC,EAAKuK,MAAM9N,QAAgE,OAAtDuD,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,QAClE,OAAO,EAGT,IAAM2qC,EAAqBpnC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAAS2I,IAAI,KACvGqtB,EAAS,KAEb,OAAOzyB,EAAKuK,MAAM9N,QAChB,IAAK,UACHg2B,EAASzyB,EAAKJ,MAAMkW,aAAe9V,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAMkW,cAAc3Q,MAAMiiC,GAAsB,KACnH,MACA,IAAK,SACH3U,EAASzyB,EAAKJ,MAAM+W,kBAAoB3W,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM+W,mBAAmBxR,MAAMiiC,GAAsB,KAM/HpnC,EAAKknC,oBAAoBzU,GAEzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3BgkF,uBAAyB,WACvB,OAA0D,OAAtDz2G,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAIvCuD,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAAS2I,IAAI,QAGzFiiC,uBAAyB,SAACrF,GACxB,IAAKhiC,EAAKuK,MAAM9N,OACd,OAAO,EAETuD,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAASulC,UAK3BiF,iBAAmB,SAACl5B,GAClB,IAAK/N,EAAKuK,MAAM9N,OACd,OAAO,EAET,IAAMg2B,EAAS1kB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM0M,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM,GACrIrB,EAAKknC,oBAAoBzU,GACzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAAS,OAEvBglC,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3BsU,UAAY,SAACtqC,GACX,OAAQA,EAAO4T,eACb,IAAK,UAEL,MACA,IAAK,SACErQ,EAAKuK,MAAMopG,WAAc3zG,EAAKuK,MAAMwpG,iBACvCt3G,EAAS,MAEb,MACA,QACEA,EAAS,KAIE,OAAXA,GACFuD,EAAK4L,SAAS,CACZnP,uFA13BAkD,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,mKAK9CD,KAAKoJ,qBACCpJ,KAAKk3G,ihBA8DL7jF,EAAU,CAAC,UAAU,UACrBhoB,EAAW,CACfipG,oBAAoB,aAGhBt0G,KAAKS,cAAc8G,aAAa8rB,EAAhC,eAAA9V,EAAA3d,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwC,SAAA0G,EAAO5K,GAAP,IAAAu5G,EAAAc,EAAA74D,EAAA,OAAAv9C,EAAAtB,EAAA0B,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UACtC+0G,EAAwBhtG,EAAK5I,cAAcG,gBAAgB,CAAC,WAAW,UAAU9D,EAAO,kBACxFq6G,EAAmBd,GAAyBA,EAAsB1xG,QACxE0G,EAASipG,oBAAoBx3G,GAAUq6G,EAAmBd,EAAwB,MAC9Ec,EAJwC,CAAAnvG,EAAA1G,KAAA,gBAAA0G,EAAA1G,KAAA,EAKd+H,EAAKpJ,MAAMwlB,aAAa4wF,EAAsBtpG,KAAKspG,EAAsBzvG,QAAQyvG,EAAsB7wF,KALzF,cAKpC84B,EALoCt2C,EAAAvG,KAM1C4J,EAASipG,oBAAoBx3G,GAAQmhD,SAAWK,EAAcL,SANpBj2C,EAAA1G,KAAA,GAOY+H,EAAK5I,cAAcqoC,mBAAmBz/B,EAAKpJ,MAAMwN,cAAc4oG,EAAsBzvG,QAAQyC,EAAKpJ,MAAMuB,SAPpH,QAO1C6J,EAASipG,oBAAoBx3G,GAAQs6G,SAPKpvG,EAAAvG,KAAA,yBAAAuG,EAAAnG,SAAA6F,EAAA1H,SAAxC,gBAAA2F,GAAA,OAAA4X,EAAAhb,MAAAvC,KAAAwC,YAAA,WAWNxC,KAAKiM,SAASZ,yQAgBUrL,KAAKS,cAAcg4B,aAAaz4B,KAAKC,MAAMO,yBAA7D43B,WACgC,OAArBA,EAAUO,2BACnB1kB,EAAWjU,KAAKS,cAAciB,MAAM02B,EAAUO,QAAQ/nB,QAAQ,GAEhEghE,EAAW,MACX5xE,KAAK4K,MAAMypG,iDACIr0G,KAAKS,cAAcqW,sBAApC86D,YAGEA,EAAWA,EAAS1pE,KAAK+L,YAG7BjU,KAAKiM,SAAS,CACZgI,WACA29D,mMAKmBzmE,EAAUqC,sFACjCxN,KAAKoJ,YAE2B,OAA5BpJ,KAAKC,MAAMkW,uDACN,aAGH2F,EAAe3Q,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,cACtD4pG,EAAsBlsG,EAAUgL,eAAiBnW,KAAKC,MAAMkW,cAA4C,OAA5BnW,KAAKC,MAAMkW,cAEzF2F,IAAgBu7F,mCACZr3G,KAAKk3G,mCACXl3G,KAAKu1G,mCACE,cAGH9pE,EAAgBzrC,KAAK4K,MAAM9N,SAAW0Q,EAAU1Q,OAChD4uC,EAA6B1rC,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAY0Q,EAAUs5B,oBAAoB9mC,KAAK4K,MAAM9N,SAE9H2uC,GAAiBC,IACnB1rC,KAAKwnC,iBAGwBh6B,EAAUkxC,kBAAoB1+C,KAAK4K,MAAM8zC,iBAC1CjT,IAC5BzrC,KAAKunC,sBAGD+vE,EAAsB9pG,EAAUknG,sBAAwB10G,KAAK4K,MAAM8pG,sBACzClnG,EAAUy5B,0BAA4BjnC,KAAK4K,MAAMq8B,2BAClDqwE,oCACDt3G,KAAK8oC,6BAA3BF,SACN5oC,KAAKiM,SAAS,CACZ28B,0BAIiBp7B,EAAUs0B,WAAW9hC,KAAK4K,MAAM9N,UAAYkD,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAEhGkD,KAAKu3G,wSAKDzkF,EAAS9yB,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,QAAUkD,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAAW,QAEhHg2B,EAAOztB,IAAI,6CACjB,UAGHywG,EAAwB91G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAEpEqxG,EAAmBjyG,KAAKS,cAAcynC,qBAAqBpV,EAAOgjF,EAAsBryG,UACxF4H,EAAW,QAETrL,KAAK4K,MAAM9N,cACZ,mBAIA,0CAHHuO,EAASopG,oBAAsB3hF,YACO9yB,KAAKS,cAAc2kF,iBAAiBplF,KAAKC,MAAMO,YAAYqE,KAAKhB,MAAMouG,GAAiB,kBAA7H5mG,EAASupG,qGAWb50G,KAAKiM,SAASZ,uIAgsBR,IAAAgD,EAAArO,KAEN,IAAKA,KAAKC,MAAMwN,gBAAkBzN,KAAKC,MAAMO,YAC3C,OAAO,KAGT,IAAMg3G,EAAoBx3G,KAAKC,MAAMO,YAAYg3G,kBAC3ChhE,EAAmBx2C,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,qBAChGowG,EAAiF,qBAA9Cz3G,KAAKC,MAAMO,YAAY0qC,oBAAqClrC,KAAKC,MAAMO,YAAY0qC,mBACtHmT,EAA0Br+C,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,UAAU,UAAU,6BAA+B62G,EAE5HC,EAAwB13G,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,UAAU,kBAAkB,cAAgB42G,GAAqBhhE,EACxIkI,EAAkBg5D,GAAyB13G,KAAK4K,MAAM8zC,iBAAyC,WAAtB1+C,KAAK4K,MAAM9N,OAEpF66G,EAA4B33G,KAAKC,MAAM0pC,UAAY3pC,KAAK4K,MAAM0pG,oBAAoBt0G,KAAK4K,MAAM9N,QAC7FytC,EAAYotE,GAA6B33G,KAAK4K,MAAMq8B,wBACpDnM,EAAqC,YAAtB96B,KAAK4K,MAAM9N,OAAuBkD,KAAKC,MAAMkW,aAAenW,KAAKC,MAAM+W,kBACtFm1B,EAAcnsC,KAAK4K,MAAMi8B,uBAAiE9jC,IAA7C/C,KAAKC,MAAMO,YAAYiX,UAAUiF,QAAwB1c,KAAKC,MAAMO,YAAYiX,UAAUiF,QAAU,KAEjJg2F,EAAc1yG,KAAKS,cAAcG,gBAAgB,CAAC,UAClD40G,EAAoB9C,EAAY/tG,SAAW3E,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBZ,KAAKC,MAAMO,YAAYqE,KAAKhB,MAAM,YAE3I+zG,EAAepC,GAAqBx1G,KAAK4K,MAAM8pG,qBAA6C,YAAtB10G,KAAK4K,MAAM9N,OAEjF+6G,EAA2C,YAAtB73G,KAAK4K,MAAM9N,SAAyBkD,KAAK4K,MAAMu6D,iBAAmBqwC,GAAqBx1G,KAAK4K,MAAMg+B,eAEvHkvE,EAAkG,YAAtB93G,KAAK4K,MAAM9N,QAAwBkD,KAAK4K,MAAMuiC,YAAsC,WAAtBntC,KAAK4K,MAAM9N,QAAuBkD,KAAK4K,MAAMopG,WAAct1D,EACrMq5D,EAAmBF,GAAsBrC,GAAqBx1G,KAAK4K,MAAM2pG,oBAAsBv0G,KAAK4K,MAAMi8B,kBAAoB7mC,KAAK4K,MAAM+7B,gBAAkB3mC,KAAK4K,MAAMypG,iBAAyC,YAAtBr0G,KAAK4K,MAAM9N,OACpMk7G,EAAkBxC,GAAqBx1G,KAAK4K,MAAM2pG,oBAAsBv0G,KAAK4K,MAAMi8B,kBAAoB7mC,KAAK4K,MAAM+7B,gBAAkB3mC,KAAK4K,MAAMwpG,gBAAwC,WAAtBp0G,KAAK4K,MAAM9N,OAE5Km7G,GAAkBv5D,GAAmBo5D,EACrC5D,EAAcl0G,KAAK4K,MAAM2pG,oBAAsBwD,GAAoB/3G,KAAK4K,MAAMspG,eAAiBl0G,KAAK4K,MAAM8pG,qBAAuB10G,KAAK4K,MAAMg+B,gBAAkB5oC,KAAK4K,MAAMu6D,kBAAoBnlE,KAAK4K,MAAMi8B,kBAAoB7mC,KAAK4K,MAAM+7B,gBAAwC,YAAtB3mC,KAAK4K,MAAM9N,SAAyBkD,KAAK4K,MAAMuiC,WACxSgnE,EAAiBn0G,KAAK4K,MAAMopG,aAAeh0G,KAAK4K,MAAM4pG,oBAAsBx0G,KAAK4K,MAAMupG,gBAEvF+D,EAAoBN,GAAgB53G,KAAK4K,MAAMgqG,sBAAwB50G,KAAK4K,MAAM6pG,sBAAwBz0G,KAAK4K,MAAMg8B,eAErHuxE,EAAsBN,GAAsB73G,KAAK4K,MAAMuiC,YAAckR,GAAiD,YAAtBr+C,KAAK4K,MAAM9N,OAC3Gs7G,EAA6BL,GAAoBI,EAEjDhqE,EAAmBnuC,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAC/D8sC,EAAsBS,EAAiBxpC,SAAgG,qBAA9EwpC,EAAiBluC,MAAM+G,gBAAgBhH,KAAKC,MAAMO,YAAYqE,KAAKhB,OAC5Hw0G,EAA6BlqE,EAAiBrC,eAEpD,OACEtsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,sBAGAlS,EAAAC,EAAAC,cAAComB,GACK9lB,KAAKC,QAGbT,EAAAC,EAAAC,cAAC0vC,GAADxvC,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEisC,kBAAmBC,EACnBA,YAA6B,OAAhBA,EAAuB,GAAK,KACzC9E,oBAAqBrnC,KAAKqnC,oBAAoBp8B,KAAKjL,QAGhDA,KAAKC,MAAMuB,QAKZxB,KAAK4K,MAAM2pG,iBACTv0G,KAAK4K,MAAM9N,OACT0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,GACVsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,sBAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV93B,EAAK+4B,UAAU,aAGnBrsB,eAAe,EACfmE,SAAiC,YAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,WAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAQJxP,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFjQ,MAAM,IACNisC,YAAY,WACV93B,EAAK+4B,UAAU,YAGnBrsB,eAAe,EACfmE,SAAiC,WAAtBlf,KAAK4K,MAAM9N,OACtBmiB,YAAcjf,KAAK4K,MAAMopG,YAAch0G,KAAK4K,MAAMwpG,gBAElD50G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,UAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,cAWNopG,EACE54G,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACT8W,GAAG,EACHzU,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,SACfyf,GAAG1pB,KAAK4K,MAAM+pG,oBAAsB,EAAI,IAG1Cn1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJuZ,UAAW,UACXuB,WAAY,UACZ7I,QAAS3e,KAAK+0G,2BAEZ/0G,KAAK4K,MAAM+pG,oBAAsB,OAAS,OAN9C,qBAQAn1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM/M,KAAK4K,MAAM+pG,oBAAsB,cAAgB,mBAIzD30G,KAAK4K,MAAM+pG,qBACTn1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAGb+tG,GACEv4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,OAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAU,EACV3vB,SAAUgI,KAAK4K,MAAM4nC,WACrBrhC,MAAK,4BACLijB,QAASp0B,KAAK4K,MAAM8pG,oBACpB3yF,SAAW,SAAA3T,GAAC,OAAIC,EAAK4mG,mBAAmB7mG,EAAEtO,OAAOs0B,YAEnD50B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsmB,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKpO,MAAMupB,iBAAiB,kBAAkBnb,EAAK5N,cAAcG,gBAAgB,CAAC,WAAW,yBAH9G,gBAUJu3G,GACE34G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,OAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAU,EACVxW,MAAK,qBACLijB,QAASp0B,KAAK4K,MAAM4nC,WACpBx6C,SAAUgI,KAAK4K,MAAM8pG,oBACrB3yF,SAAW,SAAA3T,GAAC,OAAIC,EAAK6mG,eAAe9mG,EAAEtO,OAAOs0B,YAE/C50B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,SACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,gBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,MACNtO,MAAO,YACP4O,KAAM,oBASxBvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGb+tG,GACEv4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE3B,WAAW,EACXC,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACR0S,IAAK+gG,EAAYz+D,OAAOhX,QAE1Bz9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJiC,GAAI,EACJ1iB,SAAU,EACVb,MAAO,YACPsT,UAAW,UALb,kEAOkEzR,KAAK4K,MAAMgnE,SAAW5xE,KAAK4K,MAAMgnE,SAAShhE,QAAQ,GAAK,IAPzH,KAQEpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJuZ,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKpO,MAAMupB,iBAAiB,kBAAkBnb,EAAK5N,cAAcG,gBAAgB,CAAC,WAAW,yBAJ9G,cASFpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxW,MAAK,mBACLijB,QAASp0B,KAAK4K,MAAM8pG,oBACpB3yF,SAAW,SAAA3T,GAAC,OAAIC,EAAK4mG,mBAAmB7mG,EAAEtO,OAAOs0B,eAKnDp0B,KAAK4K,MAAMspG,cAAgBl0G,KAAK4K,MAAM8pG,sBAAwB10G,KAAK4K,MAAMuiC,YACzE3tC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8R,UAAW,SACX+V,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKymG,gBAAe,KAHrC,+BAK+B90G,KAAKC,MAAMwN,gBAOlD0qG,GACE34G,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,gBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJiC,GAAI,EACJ1iB,SAAU,EACVb,MAAO,WACPsT,UAAW,UALb,+FAUFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxW,MAAK,qBACLijB,QAASp0B,KAAK4K,MAAM4nC,WACpBzwB,SAAW,SAAA3T,GAAC,OAAIC,EAAK6mG,eAAe9mG,EAAEtO,OAAOs0B,cASxDujF,IAA8BzD,IAAgBl0G,KAAK4K,MAAMu6D,gBAC1D3lE,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHqE,GAAG,EACHjX,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAIfjK,KAAK4K,MAAMq8B,yBAA2BjnC,KAAK4K,MAAMmpG,QAAQ/zG,KAAK4K,MAAM9N,SAAWkD,KAAK4K,MAAM0pG,oBAAoBt0G,KAAK4K,MAAM9N,QAAQs6G,SAC/H53G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,6HAS2C,kBAA3CzR,KAAKS,cAAc4hE,qBAA2CriE,KAAK4K,MAAMq8B,wBAC3EznC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,kGAUFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,yBAMyBzR,KAAK4K,MAAMq8B,wBAA0B,YAAc,WAN5E,QAM6FjnC,KAAK4K,MAAM9N,OANxG,KAMiH0C,EAAAC,EAAAC,cAAA,WAE7GM,KAAK4K,MAAMq8B,0BAA4BjnC,KAAK4K,MAAM0pG,oBAAoBt0G,KAAK4K,MAAM9N,QAAQs6G,UAAzF,6DAAAxyG,OAAkK5E,KAAK4K,MAAM9N,OAA7K,8BAKR0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVyM,QAASp0B,KAAK4K,MAAMq8B,wBACpBllB,SAAW,SAAA3T,GAAC,OAAIC,EAAKm6B,8BAA8Bp6B,EAAEtO,OAAOs0B,UAC5DjjB,MAAK,GAAAvM,OAAK5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QAA9C,6BAKTk7G,GAAmBh4G,KAAK4K,MAAMopG,WAC5Bx0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE3B,WAAW,EACXC,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,QACR0S,IAAK+gG,EAAYz+D,OAAOhX,QAE1Bz9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJiC,GAAI,EACJ1iB,SAAU,EACVb,MAAO,YACPsT,UAAW,UALb,0CAQEjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJuZ,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKpO,MAAMupB,iBAAiB,kBAAkBnb,EAAK5N,cAAcG,gBAAgB,CAAC,WAAW,yBAJ9G,cAUAZ,KAAK4K,MAAMopG,WACTx0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxW,MAAK,oBACLijB,QAASp0B,KAAK4K,MAAM4pG,mBACpBzyF,SAAW,SAAA3T,GAAC,OAAIC,EAAK2mG,kBAAkB5mG,EAAEtO,OAAOs0B,cAMxDp0B,KAAKg0G,WACHx0G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8R,UAAW,SACX+V,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIC,EAAKwmG,mBAAkB,KAHxC,4BAK4B70G,KAAKC,MAAMwN,gBAOxB,WAAtBzN,KAAK4K,MAAM9N,QAAuBkD,KAAK4K,MAAMwxE,eAAiB+3B,GAC7D30G,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,oBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,EACJ1iB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,sCAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,SACX+V,WAAY,aAEXxnB,KAAK4K,MAAMwxE,cAAcxrE,QAAQ,GAPpC,IAOyC5Q,KAAKC,MAAMwN,eAEpDjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,iBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,oBAQK,WAAtB/M,KAAK4K,MAAM9N,QAAuB46G,GAAyBvD,GAC1D30G,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHjC,GAAG,EACH3Q,QAAQ,OACR/E,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNtO,MAAO,WACP4O,KAAM,gBAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJiC,GAAI,EACJ1iB,SAAU,EACVb,MAAO,WACPsT,UAAW,UALb,qBAOqBzR,KAAKC,MAAMwN,cAPhC,wFAOqIzN,KAAKC,MAAM0yE,kBAAoB3yE,KAAKC,MAAM0yE,iBAAiB57D,GAAG,GAA9D,QAAAnS,OAA2E5E,KAAKC,MAAM0yE,iBAAiB/hE,QAAQ,GAA/G,KAAuH,KAP5P,MAUFpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVyM,QAASp0B,KAAK4K,MAAM8zC,gBACpBvtC,MAAK,gCACL4Q,SAAW,SAAA3T,GAAC,OAAIC,EAAK8mG,sBAAsB/mG,EAAEtO,OAAOs0B,aAMzDp0B,KAAK4K,MAAMu6D,gBAAwC,YAAtBnlE,KAAK4K,MAAM9N,OACvC0C,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,gBAMgBzR,KAAKC,MAAMwN,cAN3B,mGAUAzN,KAAK4K,MAAMg+B,eAAuC,YAAtB5oC,KAAK4K,MAAM9N,QA0DvCo3G,GAAe4D,IAClB93G,KAAK4K,MAAM03B,WAAWtiC,KAAK4K,MAAM9N,QAAQgqB,QAsRxCtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB+C,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/CktB,KAAMltB,KAAK4K,MAAM03B,WAAWtiC,KAAK4K,MAAM9N,QAAQu5B,OAC/CoP,WAAU,cAAA7gC,OAAgB5E,KAAK4K,MAAM9N,OAA3B,eACV4oC,SAAQ,GAAA9gC,OAAK5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QAA9C,oBA9RZ0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAGbiuG,GACEz4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,WAiCZ8wB,GAAgB96B,KAAKC,MAAMq4G,sBAC1B94G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,GAGL8F,KAAK4K,MAAM6mG,iBAAmByG,GAC5B14G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAO,yDAEPld,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAIZvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGuR,IAAK,SAAA03C,GAAQ,OACzB1zD,EAAAC,EAAAC,cAAC8sC,GAAD,CACEntB,UAAW,CACTlV,EAAE,GAEJO,UAAW,CACT1L,SAAS,GAEXqjC,WAAY6wB,EACZp1C,IAAG,YAAAlZ,OAAcsuD,GACjB/sB,YAAa,kBAAI93B,EAAK0jG,eAAe7+C,IACrCh0C,SAAU7Q,EAAKzD,MAAM4mG,cAAgB5lG,WAAWsnD,SAS3DxlB,GAAuB2qE,IAA+Br4G,KAAKC,MAAMgsC,iBAChEzsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACH4b,GAAI,EACJ7rB,MAAO,EACPoF,aAAc,EACdyK,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB7L,gBAAiB,QACjBwpB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAOiC,UAE7C4E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8R,UAAW,SACX+V,WAAY,UACZpC,KAAI,sBAAAxgB,OAAwBupC,EAAiB7B,MAAzC,KAAA1nC,OAAkD5E,KAAKC,MAAMO,YAAYqE,KAAKhB,QAHpF,uDAOArE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,UACP4O,KAAM,qBAIdvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGhBiuG,EACE14G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPw4B,SAAU,MACV3oB,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,QACXgM,MAAO,CACL6L,WAAW,UAEbnrB,MAAQ6B,KAAK4K,MAAMgqG,qBAAqB79F,GAAG,GAAK/W,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOG,OAASkC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,WAGzE,IAAtEgO,WAAW5L,KAAK4K,MAAMgqG,qBAAqBpvG,MAAM,KAAKoL,QAAQ,IAC5D,cADF,GAAAhM,OAEM5E,KAAK4K,MAAMgqG,qBAAqB79F,GAAG,GAAK,aAAe,UAF7D,KAAAnS,OAE2E5E,KAAK4K,MAAMgqG,qBAAqBpvG,MAAM,KAAKw9D,MAAMpyD,QAAQ,GAFpI,MAKJpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,wBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,iBAGVvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJvO,MAAO,YACPqpB,WAAY,UACZ7I,QAAS3e,KAAKyxG,iBAJhB,WASAzxG,KAAKC,MAAMq4G,qBACb94G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,QACX+V,WAAY,aALd,oBAOoBxnB,KAAKC,MAAMq4G,oBAAoB9yG,MAAM,KAAKoL,QAAQ,GAPtE,KASApR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,oBAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAOd+tB,GACEt7B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,QACX+V,WAAY,YACZ7I,QAAU,SAACvQ,GAAD,OAAOC,EAAKq5B,uBAAuB,OAE5C5M,EAAalqB,QAAQ,GARxB,IAQ6B5Q,KAAKC,MAAMwN,iBAQlDjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACX8J,YAAW,gBACX9F,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAezL,EAAMR,OAAO4D,SAClCiS,MAAoD,OAA7CxO,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,QAAmBkD,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAAS8T,UAAY,KAE5IpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKuR,IAAK,SAAA6mB,GAAU,OAC5B7iC,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAYA,EACZvkB,IAAG,YAAAlZ,OAAcy9B,GACjB8D,YAAa,kBAAI93B,EAAKq5B,uBAAuBrF,IAC7CnjB,SAAU7Q,EAAKzD,MAAMk8B,oBAAoBz4B,EAAKzD,MAAM9N,UAAYqP,SAASk2B,SASrFy1E,GACEt4G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsK,eAAgB,SAChBwV,GAAKi/B,EAAkB,EAAI,GAE3Bl/C,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,OACNgF,SAAS,CAAC,EAAE,IACZue,MAAM,CACJyO,cAAc,cAEhBl0B,SAASgI,KAAK4K,MAAMg8B,gBAEtBhoB,YAAa5e,KAAK4K,MAAMg8B,eAAiB,KAAO5mC,KAAK2nC,cAAc18B,KAAKjL,OAEvEA,KAAK4K,MAAM9N,OAAS4hD,EAAkB,cAAgB,OA1UnEl/C,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAIHzf,KAAK4K,MAAM03B,WAAX,SAAoCtiC,KAAK4K,MAAM03B,WAAX,QAAiCxb,QACnEtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,uBACRD,WAAU,gCACVvY,KAAMltB,KAAK4K,MAAM03B,WAAX,QAAiCjM,OACvC0P,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAGTzR,KAAK4K,MAAM8pG,oBAAX,MAAA9vG,OACQ5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QADjD,UAAA8H,OACiE5E,KAAKC,MAAMwN,cAD5E,oEAEE88B,EAAS,MAAA3lC,OACH5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QADtC,UAAA8H,OACsD5E,KAAKC,MAAMwN,cADjE,yFAAA7I,OAGH5E,KAAKS,cAAc2Q,WAAWpR,KAAK4K,MAAM9N,QAHtC,UAAA8H,OAGsD5E,KAAKC,MAAMwN,cAHjE,6DAMfjO,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKs1G,aAAarqG,KAAKjL,OALtC,cAoTZ,KAEJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,2BA17BV2G,EAAAC,EAAAC,cAAC64G,GACKv4G,KAAKC,SAw8BjB+3G,GAAmBh4G,KAAK4K,MAAM4pG,oBAC5Bh1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAAC84G,GACKx4G,KAAKC,QAMfi0G,GACE10G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,CAAC,EAAE,IACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+4G,GAAD74G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEw/B,YAAY,EACZ5B,iBAAkB,GAClBI,SAAUj+B,KAAKC,MAAMwN,kBAK7BjO,EAAAC,EAAAC,cAACg5G,GAAD,CACEhF,iBAAiB,EACjBpiG,KAAI,mBACJ5X,MAAK,mBACL8H,QAASxB,KAAKC,MAAMuB,QACpB69B,WAAYr/B,KAAKu/B,WACjBh/B,UAAWP,KAAKC,MAAMwN,cACtBs0B,OAAmC,UAA3B/hC,KAAK4K,MAAMqpG,YACnBp7G,KAAI,+DAAA+L,OAAiE5E,KAAK4K,MAAMqJ,SAA5E,mCAAArP,OAAsH5E,KAAKC,MAAMwN,cAAjI,cACJ6lG,MAAK,eAAA1uG,OAAiB5E,KAAK4K,MAAMqJ,SAA5B,gBAAArP,OAAmD5E,KAAKC,MAAMwN,cAA9D,8BAAA7I,OAAwG5E,KAAKS,cAAcG,gBAAgB,CAAC,YAA5I,2DAl+DaT,aCkCbw4G,oLA7CX,IAAMt5F,EAAYzf,OAAOC,OAAO,CAC9B8hB,GAAG,EACHznB,MAAM,OACNwnB,GAAG,CAAC,OAAO,IACX1hB,KAAKC,MAAMof,WAEb,OACG7f,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAWA,EACXtE,eAAe,EACf6D,YAAa5e,KAAKC,MAAM2e,aAExBpf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJvY,EAAG,CAAC,MAAM,OACV7K,aAAc,MACdyK,WAAY,SACZE,eAAgB,SAChB7L,gBAAkB4B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAaa,SAASlB,QAEhEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEizB,MAAO,SACPz0B,MAAO,SACP4O,KAAM/M,KAAKC,MAAMqR,KACjB7E,KAAOzM,KAAKC,MAAMmL,SAAW,QAAU,WAG3C5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,IAEZgB,KAAKC,MAAMpH,eAvCIsH,aCoXdy4G,8MA5WbhuG,MAAQ,CACNiuG,SAAS,KACT1rG,UAAU,KACVf,WAAW,KACX01B,WAAW,IACXg3E,cAAc,mBAIhBr4G,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,kQAILpJ,KAAK+4G,iMAGkB5tG,EAAUqC,mEACjCxN,KAAKoJ,YAEgB+B,EAAUsC,gBAAkBzN,KAAKC,MAAMwN,eAE1DzN,KAAK+4G,6QAKU/4G,KAAK4K,MAAMiuG,8CAAkB74G,KAAKS,cAAc+xF,YAAYxyF,KAAKC,MAAMO,8CAAlFq4G,OACF74G,KAAK4K,MAAMiuG,WAAaA,GAC1B74G,KAAKiM,SAAS,CACZ4sG,+BAGGA,wSAKgB74G,KAAKwyF,qBAkD5B,IAlDMqmB,SAEA/lF,EAAS9yB,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAC7C7J,EAAenF,EAAOttB,MAAMqzG,EAASpzG,IAAI,MAEzCuzG,EAAcptG,WAAWqsB,EAAaxyB,IAAI,KAC1CwzG,EAAgBrtG,WAAWqsB,EAAaxyB,IAAI,IAC5CyzG,EAAgBttG,WAAWqsB,EAAaxyB,IAAI,IAC5C0zG,EAAavtG,WAAWqsB,EAAaxyB,IAAI,IAEzC0H,EAAY,CAChB,CACEgqB,KAAK,EAAE,GACPhmB,MAAM,QACN3C,MAAMwqG,EACN7L,MAAM6L,EACN76G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KACzGkoG,WAAW,OAAOp5G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE5H,CACEimB,KAAK,IACLhmB,MAAM,WACN3C,MAAMyqG,EACNI,OAAOJ,EACP96G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KACzGooG,YAAY,OAAOt5G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE7H,CACEimB,KAAK,GACLhmB,MAAM,WACN3C,MAAM0qG,EACNK,OAAOL,EACP/6G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KACzGsoG,YAAY,OAAOx5G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,KAE7H,CACEimB,KAAK,EACLhmB,MAAM,OACNsoG,KAAKN,EACL3qG,MAAM2qG,EACNh7G,MAAM6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KACzGwoG,UAAU,OAAO15G,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,QAAQyD,KAAK,KAAK,MAIzH0mC,EAA0B53C,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAASZ,KAAKC,MAAMwN,cAAc,QAAQ,4BAE/F,EACfmiB,EAAYupF,EADG,EAEftpF,EAAc,CAAC,GACZtf,EAAE,EAAEA,GAHQ,EAGQA,IACrBuf,EAAavf,EAAEqf,EACrBC,EAAYhf,KAAKif,GAGb1jB,EAAa,CACjBjN,QAAS,GACTyO,SAAS,EACT45F,QAAS,QAETY,eAAgB,GAChBC,gBAAiB,GACjB7gG,KAAM,CAAC,QAAQ,SAAS,SAAS,QACjC7O,OAAQ,SAAA2xB,GAAA,IAAGxZ,EAAHwZ,EAAGxZ,GAAH,OAAAwZ,EAAOhe,KAAe,GAAA1H,OAAIkM,EAAJ,WAC9BK,MAAO,SAAAjD,GAAC,OAAI7E,EAAK5I,cAAckJ,iBAAiBuE,EAAEM,MAAM,EAAE,GAAG,IAAInF,EAAKpJ,MAAMwN,eAC5E06F,eAAgBvwD,EAA0B,CAAE9nC,KAAM,QAASC,UAAW,CAAE6nC,IAA8B,KACtG78B,eAAc,EACd2sF,SAAS,EACT73E,cAEAvV,SAAS,CACPjB,OAAQ,SAAA3K,GAAC,OAAIrF,EAAK5I,cAAckJ,iBAAiB+E,EAAE,EAAE,IACrDkiB,WAAWf,EACXY,OAAQ,OACRF,SAAU,EACVC,YAAa,EACbK,aAAc,EACdl0B,OAAQ,GACRg0B,eAAgB,UAElBnW,WAAW,CACT7d,OAAQ,GACR4zB,SAAS,EACTC,YAAa,GACbC,OAAQ,UAEVt3B,MAAM,CACJ4V,OAAO,CACLlW,KAAK,CACHmG,SAAS,GACTgQ,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOoB,QAClBkV,WAAY9V,EAAMS,MAAME,YAG5Bm3B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAS,GACTgQ,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQ,UAAWC,gBAAiB,SAI1CthB,OAAQhQ,KAAKC,MAAMmL,SAAW,CAAE6E,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,GAAM,CAAEH,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,KAGnHpQ,KAAKiM,SAAS,CACZkB,YACAf,2JAIagC,GACf,IAAI0zB,EAAa1zB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASuK,KAAKC,IAAIhZ,KAAK4K,MAAMkuG,cAAcltG,WAAWwC,EAAEtO,OAAO0O,QAAU,EACnIszB,EAAa9hC,KAAKS,cAAciB,MAAMogC,GACtC9hC,KAAKiM,SAAS,CACZ61B,gDAIK,IAAAzzB,EAAArO,KAEP,IAAKA,KAAKC,MAAMwN,gBAAkBzN,KAAKC,MAAMO,YAC3C,OAAO,KAGT,IACMm5G,EADmB35G,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,aAClCZ,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,YAErG,OACEpB,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,CAAC,EAAE,KAGP3K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,IACV8P,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyR,GAAG,EACHzS,OAAO,YAIbO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,WACPsT,UAAW,UAHb,oFAKqFzR,KAAK4K,MAAMiuG,SAAX,GAAAj0G,OAAyB5E,KAAK4K,MAAMiuG,SAASjoG,QAAQ,GAArD,KAA6D,KAE9I+oG,GACEn6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACL3O,QAAQ,cACR8qG,cAAc,WAGhBp6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,aAExDpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJK,KAAM,OACNN,KAAM,MACNtO,MAAO,kBAOrBqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLE,IAAKlZ,KAAK4K,MAAMkuG,cAChBtvG,KAAM,SACNme,UAAU,EACV1oB,OAAQ,CAAC,MAAM,SACfK,aAAc,EACd0P,WAAY,IACZyC,UAAW,SACXsM,UAAW,kBACXgE,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAezL,EAAMR,OAAO4D,SAClCsrB,YAAW,UAAAjjB,OAAY5E,KAAKC,MAAMwN,cAAc+U,cAArC,WACXhU,MAAOxO,KAAK4K,MAAMk3B,aAAengC,MAAM3B,KAAK4K,MAAMk3B,YAAc9hC,KAAK4K,MAAMk3B,WAAa,MAG5FtiC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJxV,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXlsB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAK+4G,UAAU9tG,KAAKjL,OAJnC,eAUJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPvlB,MAAO,CAAC,EAAE,IACV4W,GAAI,4BAGF9Q,KAAKC,MAAMmL,SACT5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGY,OAAzBhK,KAAK4K,MAAMuC,WAAsBnN,KAAK4K,MAAMuC,UAAUqO,IAAI,SAAC9M,EAAEue,GAAH,OACxDztB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJoE,GAAI,EACJ7rB,MAAO,EACP8P,cAAe,MACf8T,IAAG,YAAAlZ,OAAcqoB,IAEjBztB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,UAENuQ,EAAEyC,QAGP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACPqX,SAAU,WACVxH,WAAY,SACZyC,UAAW,CAAC,OAAO,QACnBvC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6R,OAAQ,EACRD,SAAU,WACVxH,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,WAENkQ,EAAK5N,cAAckJ,iBAAiB+E,EAAEF,MAAM,EAAE,GALjD,IAKsDH,EAAKpO,MAAMwN,gBAGnEjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuQ,MAAO,EACPhW,MAAOwU,EAAEyoB,KACT5lB,SAAU,WACVtS,OAAQ,CAAC,OAAO,QAChBK,aAAc,CAAC,gBAAgB,iBAC/Bme,MAAO,CAAC6B,WAAU,gCAAA1a,OAAiC8J,EAAEvQ,MAAnC,iBAAAyG,OAAwD8J,EAAEvQ,MAA1D,qBAQ9BqB,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACE2J,KAAM+9F,KACNtoG,OAAQ,IACRoN,YAAY,GACRrM,KAAK4K,MAAMwB,WAJjB,CAKEE,KAAMtM,KAAK4K,MAAMuC,UACjB5B,SAAU,wCAnWIpL,aC0ajB05G,8MArabjvG,MAAQ,CACNkvG,UAAU,GACV3jG,aAAa,GACbyyB,cAAc,GACdqrE,YAAY,KACZthC,iBAAiB,GACjBh8D,iBAAiB,GACjBK,kBAAkB,GAClBwgG,kBAAkB,GAClBp9E,mBAAmB,GACnBk+E,oBAAoB,GACpB/D,kBAAiB,KAInB9zG,cAAgB,OAUhB8+B,WAAa,WACXl/B,EAAK4L,SAAS,CACZgoG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACf5zG,EAAK4L,SAAS,CACZgoG,4FAfEj0G,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yKAiB1CD,KAAKC,MAAMuB,+BACP6J,iBAAerL,KAAK4K,gBACpB5K,KAAKS,cAAc8G,aAAa3H,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAvD,eAAAsjB,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAwE,SAAAC,EAAO4C,GAAP,IAAArD,EAAA4vE,EAAAruE,EAAA4Q,EAAA2lG,EAAAniG,EAAA2jG,EAAA3hF,EAAAxhB,EAAAiyB,EAAA+pC,EAAA,OAAA5xE,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtEd,EAAc6I,EAAKpJ,MAAM+G,gBAAgBnD,IACzCusE,EAA0B,IACRvsE,GAASrD,EAH2CY,EAAAE,KAAA,EAalEwD,QAAQC,IAAI,CACpBsE,EAAK5I,cAAcoW,aAAarW,GAChC6I,EAAK5I,cAAcc,gBAAgBsC,EAAMwF,EAAKpJ,MAAMuB,SACpD6H,EAAK5I,cAAc0zE,iBAAiB3zE,EAAY6I,EAAKpJ,MAAMuB,SAC3D6H,EAAK5I,cAAcuC,oBAAoBxC,EAAYqE,KAAKhB,MAAO,cAC/DwF,EAAK5I,cAAcc,gBAAgBf,EAAYqE,KAAKhB,MAAMwF,EAAKpJ,MAAMuB,SACrE6H,EAAK5I,cAAcqoC,mBAAmBjlC,EAAMrD,EAAYqE,KAAK+B,QAAQyC,EAAKpJ,MAAMuB,SAChF6H,EAAK5I,cAAcs6B,6BAA6B1xB,EAAKpJ,MAAMuB,QAAQ4uE,EAAwB,SApBjB,OAAAruE,EAAAX,EAAAK,KAAAkR,EAAA/S,OAAAsF,EAAA,EAAAtF,CAAAmC,EAAA,GAM1Eu2G,EAN0E3lG,EAAA,GAO1EwD,EAP0ExD,EAAA,GAQ1EmnG,EAR0EnnG,EAAA,GAS1EwlB,EAT0ExlB,EAAA,GAU1EgE,EAV0EhE,EAAA,GAW1Ei2B,EAX0Ej2B,EAAA,GAY1EggE,EAZ0EhgE,EAAA,GAuB5EtH,EAASyuG,UAAUj2G,GAASi2G,EAC5BzuG,EAAS8K,aAAatS,GAASsS,EAC/B9K,EAASu9B,cAAc/kC,GAAS+kC,EAChCv9B,EAASsL,iBAAiB9S,GAAS8S,EACnCtL,EAASsnE,iBAAiB9uE,GAAS8uE,EACnCtnE,EAASitG,oBAAoBz0G,GAASy0G,EACtCjtG,EAASmsG,kBAAkB3zG,GAASrD,EAAYg3G,kBAChDnsG,EAAS2L,kBAAkBnT,GAAS8S,EAAmBtN,EAAK5I,cAAc+C,iBAAiBmT,EAAiBnR,MAAM2yB,GAAgB33B,EAAYiD,UAAY4F,EAAK5I,cAAciB,MAAM,GA9BvG,yBAAAN,EAAAS,SAAAZ,EAAAjB,SAAxE,gBAAAqC,GAAA,OAAAioB,EAAA/nB,MAAAvC,KAAAwC,YAAA,WAiCN6I,EAAS+uB,mBAAqBp6B,KAAKS,cAAc4V,kBAAkBrW,KAAKC,MAAMO,aAE9E6K,EAASkpG,kBAAmB,EAC5Bv0G,KAAKiM,SAASZ,iQAKhBrL,KAAKoJ,qBACCpJ,KAAK+5G,sMAGY5uG,EAAWqC,yEAClCxN,KAAKoJ,YACC+S,EAAsBhR,EAAUtO,cAAgBmD,KAAKC,MAAMpD,cAAgB+C,OAAO+X,OAAOxM,EAAUtO,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,SAAWlD,OAAO+X,OAAO3X,KAAKC,MAAMpD,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,QAC9NqI,EAAU3J,UAAYxB,KAAKC,MAAMuB,SAClC2a,IACpBnc,KAAK+5G,uJAIA,IAAA1rG,EAAArO,KAEDg6G,EAAeh6G,KAAKC,MAAMuB,SAAWxB,KAAK4K,MAAM+L,iBAAiB3W,KAAKC,MAAMwN,gBAAkBzN,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAM+L,iBAAiB3W,KAAKC,MAAMwN,gBAAgBsJ,GAAG,GAEvL,OACEvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IAEPsF,EAAAC,EAAAC,cAACswG,GAAD,CACE5kG,SAAUpL,KAAKC,MAAMmL,SACrBipC,KAAM,CAACr0C,KAAKC,MAAMwN,eAClBmR,YAAc,SAAAxQ,GAAC,OAAIC,EAAKpO,MAAMqvC,YAAYjhC,EAAKpO,MAAMoH,mBACrDxO,KAAMmH,KAAKS,cAAcG,gBAAgB,CAAC,aAAaZ,KAAKC,MAAMoH,iBAAiB,aAGvF7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP+P,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACu6G,GAADr6G,OAAAC,OAAA,CACEyR,KAAM,OACFtR,KAAKC,MAFX,CAGEpH,KAAM,YACN+lB,YAAc,SAAAxQ,GAAC,OAAIC,EAAK+mG,eAAe,aAI7C51G,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,oBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACw6G,GAADt6G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE65G,UAAW95G,KAAK4K,MAAMkvG,UAAU95G,KAAKC,MAAMwN,eAC3C0I,aAAcnW,KAAK4K,MAAMuL,aAAanW,KAAKC,MAAMwN,eACjDm7B,cAAe5oC,KAAK4K,MAAMg+B,cAAc5oC,KAAKC,MAAMwN,eACnDklE,iBAAkB3yE,KAAK4K,MAAM+nE,iBAAiB3yE,KAAKC,MAAMwN,eACzDkJ,iBAAkB3W,KAAK4K,MAAM+L,iBAAiB3W,KAAKC,MAAMwN,eACzDuJ,kBAAmBhX,KAAK4K,MAAMoM,kBAAkBhX,KAAKC,MAAMwN,eAC3D6qG,oBAAqBt4G,KAAK4K,MAAM0tG,oBAAoBt4G,KAAKC,MAAMwN,mBAIjEusG,GACEx6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,4BAEJtR,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,kBACAvmB,EAAAC,EAAAC,cAACy6G,GAADv6G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE65G,UAAW95G,KAAK4K,MAAMkvG,UAAU95G,KAAKC,MAAMwN,mBAKjDusG,GAAgBh6G,KAAKC,MAAMuB,UAAYxB,KAAK4K,MAAM4sG,kBAAkBx3G,KAAKC,MAAMwN,gBAAkB7N,OAAO4H,KAAKxH,KAAK4K,MAAMwvB,oBAAoBt3B,OAAO,GACjJtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4W,GAAI,gBACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,iBACAvmB,EAAAC,EAAAC,cAACm8B,GAADj8B,OAAAC,OAAA,CACEgqB,cAAejqB,OAAO4H,KAAKxH,KAAK4K,MAAMwvB,oBACtC1R,KAAM,CACJ,CACEhvB,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,GAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpB,CACE8N,KAAK,eAIX,CACE+b,QAAO,EACPpvB,MAAM,UACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAM,MAEf8uB,OAAO,CACL,CACEjc,KAAK,eACL9M,MAAM,CACJwD,SAAUzD,KAAKC,MAAMmL,SAAW,EAAI,MAK5C,CACE1R,MAAM,aACN6vB,KAAKvpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,8BACpDX,MAAM,CACJ/F,MAAM,CAAC,IAAK,IACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,oBACL9M,MAAM,CACJwD,SAAUzD,KAAKC,MAAMmL,SAAW,EAAI,MAK5C,CACE1R,MAAM,eACN6vB,KAAKvpB,KAAKS,cAAcG,gBAAgB,CAAC,WAAW,0BACpDX,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd8uB,OAAO,CACL,CACEjc,KAAK,wBACL9M,MAAM,CACJwD,SAAS,QA+CfzD,KAAKC,MA7GX,CA8GE+G,gBAAiBhH,KAAK4K,MAAMwvB,uBAKpCp6B,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,gCAEJtR,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,sBACAvmB,EAAAC,EAAAC,cAAC06G,GACKp6G,KAAKC,QAKfD,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,0BAEJtR,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,gBACAvmB,EAAAC,EAAAC,cAACq8B,GAADn8B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4pB,cAAe,CAAC7pB,KAAKC,MAAMwN,eAC3Bib,KAAM,CACJ,CACEhvB,MAAOsG,KAAKC,MAAMmL,SAAW,GAAK,OAClCnL,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACE3V,KAAK,OACL+b,QAAO,KAIb,CACEpvB,MAAM,SACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,OACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,YAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,IACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,YACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,GACNzjB,OAAO,CAAC,QAAQ,WAGpB,CACE6pB,QAAO,EACP/b,KAAK,oBASnBvN,EAAAC,EAAAC,cAAC+4G,GAAD74G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEo/B,WAAYr/B,KAAKu/B,WACjBtB,SAAUj+B,KAAKC,MAAMwN,cACrBs0B,OAAmC,QAA3B/hC,KAAK4K,MAAMqpG,uBAhaL9zG,aC6wBTs0C,8MAhxBb7pC,MAAQ,CACN03B,WAAW,CACTjM,OAAO,KACPvP,SAAQ,GAEVgb,WAAW,KACX0vE,YAAY,GACZ6I,gBAAgB,KAChBrjG,kBAAkB,KAClB6xB,kBAAkB,KAClB2pB,mBAAmB,KACnB/kB,oBAAmB,EACnB3G,oBAAoB,KACpBK,2BAA0B,KAI5B1mC,cAAgB,OAsChB6mC,iBAAmB,SAACl5B,GAClB,IAAM0zB,EAAa1zB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM0M,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM,GACzIrB,EAAKknC,oBAAoBzF,GAIzBzhC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,aACAgF,oBAJ0B,WAQ9BU,cAAgB,WACd,GAAuC,OAAnCnnC,EAAKuK,MAAMk8B,oBACb,OAAO,EAGT,IAAMW,EAAqBpnC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,qBAAqBrhC,IAAI,KAClFq8B,EAAazhC,EAAKJ,MAAM0W,iBAAmBtW,EAAKI,cAAciB,MAAMrB,EAAKJ,MAAM0W,kBAAkBnR,MAAMiiC,GAAsB,KAEnIpnC,EAAKknC,oBAAoBzF,GAEzBzhC,EAAK4L,SAAS,CACZ61B,kBAIJg1E,uBAAyB,WACvB,OAAuC,OAAnCz2G,EAAKuK,MAAMk8B,qBAGRzmC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,qBAAqBrhC,IAAI,QAGtEiiC,uBAAyB,SAACZ,GACxBzmC,EAAK4L,SAAS,CACZ66B,2BAIJS,oBAAsB,WAAiB,IAAhBzU,EAAgBtwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAEvBswB,IACHA,EAASzyB,EAAKuK,MAAMk3B,YAGtB,IAAM8E,GAAkB9T,GAAUA,EAAO/b,GAAG1W,EAAKuK,MAAM+L,kBAEvDtW,EAAK4L,SAAS,CACZ26B,sBAIJL,6BAAU,SAAAtlC,IAAA,IAAA4nC,EAAAoB,EAAAC,EAAA,OAAAnpC,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACFunC,EAAoBxoC,EAAKuK,MAAMi+B,mBAD7B,CAAAznC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAKkCjB,EAAKooC,iCALvC,OAAArnC,EAAAK,KAmEJpB,EAAK4L,SAAS,CACZk7B,2BAA0B,KA3DtB8C,EAAkB,SAAC5tB,EAAG8lB,GAE1B,IAAMiG,EAAY,CAChBnkB,YAAa,UACbD,cAAe,eACfE,WAAY7H,EAAKA,EAAG1e,OAAS,MAGzBwqC,EAAc9rB,GAAoB,YAAdA,EAAG1e,OAIzBwkC,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B25B,0BAA2BgB,EAC3B7F,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,OAAO,KACPvP,SAAQ,OAI8B,oBAA/BzmB,EAAKJ,MAAMgqC,iBAAkC9B,GACtD9nC,EAAKJ,MAAMgqC,gBAAgB5tB,GAG7Bhc,EAAKmW,kBAGD0zB,EAAyB,SAAC7tB,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKNh2B,EAAKI,cAAc0pC,YAAY9pC,EAAKJ,MAAMwN,cAAco7B,EAAkBjiC,QAAQqjC,EAAgBC,GAElG7pC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,OAAO,KACPvP,SAAQ,IAEVqgB,2BAA0B,MAhExB,wBAAA/lC,EAAAS,SAAAZ,EAAAjB,WA0EVvD,6BAAU,SAAAuF,IAAA,IAAA8/B,EAAA8zE,EAAAC,EAAAxlD,EAAAsiD,EAAAsD,EAAA,OAAAl1G,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEFwgC,EAAazhC,EAAKuK,MAAMk3B,WAAazhC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk3B,YAAc,KAFrF,CAAA3/B,EAAAb,KAAA,eAAAa,EAAAP,OAAA,UAIC,GAJD,cAOFg0G,EAAkB,SAACv5F,EAAG8lB,GAC1B,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBlkB,WAAY7H,EAAG1e,OACfqmB,cAAa,eACbC,YAAa5jB,EAAKJ,MAAMwN,cACxB46B,WAAYvG,EAAWlxB,WAGrBuxB,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAI8B,oBAA/BzmB,EAAKJ,MAAM21G,iBAAkCztE,GACtD9nC,EAAKJ,MAAM21G,gBAAgBv5F,IAIzBw5F,EAAyB,SAACx5F,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKAg6B,EAAehwD,EAAKuK,MAAMi+B,kBAAkB97B,KAC5C4lG,EAAUtyG,EAAKI,cAAcynC,qBAAqBpG,EAAWzhC,EAAKJ,MAAMO,YAAYiD,UAlDlFtB,EAAAb,KAAA,EAmDoBjB,EAAKi6G,mBAAmB3H,GAnD5C,OAmDFsD,EAnDE9zG,EAAAV,KAqDRpB,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,gBAAiB4lD,EAAe,KAAML,EAAiBC,GAE1Gx1G,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,OA1DJ,yBAAA3kB,EAAAN,SAAAG,EAAAhC,WA+DV+lC,uCAAoB,SAAArjC,IAAA,OAAA3B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAClBjB,EAAK4L,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,KAJM,wBAAAjkB,EAAAhB,SAAAa,EAAA1C,WASpB+xG,eAAiB,SAACP,GAChBnxG,EAAK4L,SAAS,CACZulG,mBA4EJ+I,gBAAkB,WAChBl6G,EAAK2xG,eAGPjnE,kBAAoB,WAClB1qC,EAAK4L,SAAS,CACZwhC,oBAAmB,gFA9TjBztC,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,kRAICpJ,KAAKgyG,iMAGY7mG,EAAUqC,8EACjCxN,KAAKoJ,YAEC2S,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDg5G,EAA0BrvG,EAAUwL,mBAAqB3W,KAAKC,MAAM0W,kBACtEoF,IAAkBy+F,kCACdx6G,KAAKgyG,mBAGsBhyG,KAAK4K,MAAMk8B,sBAAwBt5B,EAAUs5B,qBAE9E9mC,KAAKwnC,gBAGmBxnC,KAAK4K,MAAMk3B,aAAet0B,EAAUs0B,YAE5D9hC,KAAKwyG,6MAiNgBhoE,kFACjBG,EAAkB,GAClB2rB,EAAmBt2D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,kBAAkBZ,KAAKC,MAAMwN,0DAGzF,cAGuB6oD,EAAiB3rB,gBACrBuJ,yCACJl0C,KAAKS,cAAc0jF,gBAAgBnkF,KAAKC,MAAMwN,cAAc+8B,GAAU,iBAAtFk1C,mBACoB1/E,KAAKS,cAAcqkF,oBAAoBpF,WAA7Ds2B,SAEAh2G,KAAK4K,MAAM4mG,cAEbwE,GADAA,EAAgBh2G,KAAKS,cAAciB,MAAMs0G,IACXt6F,MAAMs6F,EAAcxwG,MAAMxF,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAM4mG,aAAa/rG,IAAI,OAC7GuwG,EAAgBh2G,KAAKS,cAAcwqC,aAAa+qE,IAGlDrrE,EAAgB95B,KAAK6uE,GACrB/0C,EAAgB95B,KAAKmlG,oCAGhBrrE,8QAID7I,EAAa9hC,KAAK4K,MAAMk3B,WAAa9hC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAAc,4BAGvF24E,EAA6B34E,oCAEF9hC,KAAKS,cAAc8pB,kBAAkBvqB,KAAKC,MAAMO,qBAAvE23B,YAEJsiF,EAA6BA,EAA2Bj1G,MAAM2yB,4BAGhEsiF,EAA6Bz6G,KAAKS,cAAciB,MAAM,kBAGlDg5G,EAA4B16G,KAAKS,cAAcynC,qBAAqBuyE,EAA2Bz6G,KAAKC,MAAMO,YAAYiD,oBAChGzD,KAAKS,cAAc2kF,iBAAiBplF,KAAKC,MAAMO,YAAYqE,KAAKhB,MAAM62G,YAA9FL,YAEFA,EAAkBA,EAAgB70G,MAAM,MAG1CxF,KAAKiM,SAAS,CACZouG,sSAMsBr6G,KAAK4K,MAAMi+B,uDAA2B7oC,KAAKS,cAAc+hF,sDAA7E35C,yCAES7oC,KAAKS,cAAcqoC,mBAAmB9oC,KAAKC,MAAMO,YAAYqE,KAAKhB,MAAMglC,EAAkBjiC,QAAQ5G,KAAKC,MAAMuB,mFAErH,0QAMyBxB,KAAKS,cAAc+hF,qCAA7C35C,kBACkC7oC,KAAKyoC,wCAAvCtB,SAENnnC,KAAKiM,SAAS,CACZ48B,oBACA1B,iKAcK,IAAA99B,EAAArJ,KAEP,IAAKA,KAAKC,MAAMwN,cACd,OAAO,KAIT,IAAMktG,EAAiB36G,KAAK4K,MAAM4nD,oBAAsBxyD,KAAK4K,MAAM4nD,mBAAmBz7C,GAAG,GAEzF,OACEvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZjK,KAAKC,MAAM0W,kBAAoB3W,KAAKC,MAAM0W,iBAAiBI,GAAG,IAC5DvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuX,GAAG,CAAC,EAAE,KAGRliB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAMu8B,0BAA4B,WAAa,WAC3DhpC,MAAQ6B,KAAK4K,MAAMu8B,0BAA4BnnC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAEzG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,+BASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO4tG,EAAiB,WAAa,WACrCx8G,MAAQw8G,EAAiB36G,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAEnF4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVb,MAAO,WACPsT,UAAW,QAJb,gBAMgBzR,KAAKC,MAAMO,YAAYqE,KAAKhB,UAM/C7D,KAAK4K,MAAMu8B,0BAkDVnnC,KAAK4K,MAAM03B,WAAWxb,QACtBtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,uBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,gCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAO,yDAEPld,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAIZvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAI,GAAI,EAAE,GAAGuR,IAAK,SAAA03C,GAAQ,OACzB1zD,EAAAC,EAAAC,cAAC8sC,GAAD,CACEntB,UAAW,CACTlV,EAAE,GAEJO,UAAW,CACT1L,SAAS,GAEXqjC,WAAY6wB,EACZp1C,IAAG,YAAAlZ,OAAcsuD,GACjB/sB,YAAa,kBAAI98B,EAAK0oG,eAAe7+C,IACrCh0C,SAAU7V,EAAKuB,MAAM4mG,cAAgB5lG,WAAWsnD,QAKxD1zD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ/N,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfC,eAAgBjK,KAAK4K,MAAMyvG,gBAAkB,gBAAkB,YAG7Dr6G,KAAK4K,MAAMyvG,iBACT76G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPw4B,SAAU,MACV3oB,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,QACXgM,MAAO,CACL6L,WAAW,UAEbnrB,MAAQyN,WAAW5L,KAAK4K,MAAMyvG,gBAAgBzpG,QAAQ,IAAI,EAAI5Q,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOG,OAASkC,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,WAGvG,IAAtDgO,WAAW5L,KAAK4K,MAAMyvG,gBAAgBzpG,QAAQ,IAC5C,cADF,GAAAhM,OAEM5E,KAAK4K,MAAMyvG,gBAAgBtjG,GAAG,GAAK,aAAe,UAFxD,KAAAnS,OAEsE5E,KAAK4K,MAAMyvG,gBAAgBr3C,MAAMpyD,QAAQ,GAF/G,MAKJpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8c,UAAW,MACXC,QAAS1c,KAAK4K,MAAMyvG,gBAAgBtjG,GAAG,GAAK,uHAAyH,kHAErKvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,YACP4O,KAAM,kBAOd/M,KAAKC,MAAM0W,kBACTnX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPw4B,SAAU,MACV3oB,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,QACX+V,WAAY,YACZ7I,QAAU,SAACvQ,GAAD,OAAO/E,EAAKq+B,uBAAuB,MAC7CjqB,MAAO,CACLiV,SAAS,OACTxJ,SAAS,SACTI,WAAW,SACXqJ,aAAa,aAGd3yB,KAAKC,MAAM0W,iBAAiB/F,QAAQ5Q,KAAKC,MAAMmL,SAAW,EAAI,GAdjE,IAcsEpL,KAAKC,MAAMwN,iBAMzFjO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,SACNme,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZ+O,UAAW,kBACX8J,YAAW,gBACX9F,SAAU/hB,KAAKsnC,iBAAiBr8B,KAAKjL,MACrC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,SAC7CiS,MAAiC,OAA1BxO,KAAK4K,MAAMk3B,WAAsB9hC,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,YAAYlxB,UAAY,KAEtGpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJ1V,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAKuR,IAAK,SAAA6mB,GAAU,OAC5B7iC,EAAAC,EAAAC,cAAC8sC,GAAD,CACEnK,WAAYA,EACZvkB,IAAG,YAAAlZ,OAAcy9B,GACjB8D,YAAa,kBAAI98B,EAAKq+B,uBAAuBrF,IAC7CnjB,SAAU7V,EAAKuB,MAAMk8B,sBAAwB36B,SAASk2B,QAK9D7iC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJxV,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACTlC,SAASgI,KAAK4K,MAAMg8B,gBAEtBhoB,YAAa5e,KAAKvD,QAAQwO,KAAKjL,OANjC,cA7NNA,KAAK4K,MAAM03B,WAAWxb,QACpBtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,uBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,gCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,IAGLjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,mBAMmBzR,KAAKC,MAAMwN,cAN9B,oEAQAjO,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAKumC,QAAQt7B,KAAKjL,OALjC,uBA7cDG,aCkbZy6G,8MAhbbhwG,MAAQ,CACN0hB,UAAU,KACVnf,UAAU,KACVf,WAAW,KACXmgB,WAAW,KACXvgB,YAAY,QAIdvL,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,2JAK9CD,KAAKoJ,YACLpJ,KAAKwsB,qMAGkBrhB,EAAWqC,gFAClCxN,KAAKoJ,YAECqjB,EAA4BthB,EAAUuhB,qBAAuB1sB,KAAKC,MAAMysB,oBACzDvM,KAAKC,UAAUjV,EAAU0e,iBAAmB1J,KAAKC,UAAUpgB,KAAKC,MAAM4pB,gBACvE4C,IAClBzsB,KAAKiM,SAAS,CACZkB,UAAU,MACV,WACA9D,EAAKsjB,sBAIaxhB,EAAUC,WAAapL,KAAKC,MAAMmL,UAEtDpL,KAAKwsB,uVAMH3C,EAAgB7pB,KAAKC,MAAM4pB,gBACRA,EAAc/mB,SACnC+mB,EAAgBjqB,OAAO4H,KAAKxH,KAAKC,MAAM+G,2BAGlBhH,KAAKS,cAAcoyD,YAAY7yD,KAAKC,MAAMuB,QAAQ,EAAE,SAASqoB,UAA9E4oC,SAEAtlD,EAAY,GACd2f,EAAgB,GACdkI,EAAe,GACjBjI,EAAmB,KACnB+N,EAAe96B,KAAKS,cAAciB,MAAM,GACtCs0D,EAAoBh2D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,iBAElE6xD,GAAYA,EAAS3vD,QAEvB2vD,EAASvoD,QAAQ,SAACmS,EAAG4Q,GAMnB,GAJK+H,EAAa3Y,EAAG6Q,QACnB8H,EAAa3Y,EAAG6Q,MAAQ,KAGtB8H,EAAa3Y,EAAG6Q,MAAMmI,SAAShZ,EAAGvf,QAAtC,CAIAiwB,EAAmBA,EAAmBhU,KAAKC,IAAI+T,EAAiB5gB,SAASkQ,EAAG8Q,YAAchhB,SAASkQ,EAAG8Q,WAEtG,IAAM2lC,EAAczkD,EAAK5N,cAAciB,MAAM2a,EAAGy2C,aAEhD,OAAQz2C,EAAGvf,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACHg+B,EAAeA,EAAa5yB,KAAK4qD,GACnC,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACL,IAAK,mBACHh4B,EAAeA,EAAapf,MAAMo3C,GAOlCh4B,EAAazN,GAAG,KAClByN,EAAezsB,EAAK5N,cAAciB,MAAM,IAG1C,IAAM5E,EAASuf,EAAGvf,OACZoE,EAAU45B,EACV3N,EAAYhhB,SAASkQ,EAAG8Q,WACxB4lC,EAAkB1kD,EAAK5N,cAAc+C,iBAAiB6Y,EAAG02C,gBAAgBiD,EAAkBvyD,UAI5FsvD,EAAgBpxD,SAAYoxD,EAAgBpxD,UAC/CmrB,EAAcjc,KAAK,CACjB/T,SACAoE,UACAisB,YACA2lC,cACAC,oBAGF/9B,EAAa3Y,EAAG6Q,MAAMrc,KAAK/T,OAM7BwvB,EAAY,KACViB,EAAcvtB,KAAKS,cAAc0Y,YAAY,IAAIC,WAE/CpZ,KAAKC,MAAMysB,0BACZ,iBAGA,kBAGA,mBAGA,2CARHJ,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,4CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAYiB,EAAYhS,QAAQjC,SAAS,EAAE,6CAG3CgT,EAAY,yCAIVkB,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KACdE,EAAyB,GACzBC,EAAwB,GAC1BF,EAAoB7tB,KAAKS,cAAciB,MAAM,GAE3CssB,EAAgB7hB,UAAS,IAAIiN,MAAOI,UAAU,KAAM,gBAEjCxZ,KAAKS,cAAcoZ,gBAAgBja,OAAO+X,OAAO3X,KAAKC,MAAM+G,iBAAiB,GAAGJ,SAAQ,EAAMmmB,EAAiB,MAAK,EAAM,cAA7IkB,mIAIAC,EAAgB,GAChBC,EAAiB,GACrBhB,EAAYpU,KAAKC,IAAIgV,EAAcb,GAC/B6B,EAAa3gB,EAAK5N,cAAc0Y,YAAsB,IAAVgU,GAG1CmB,EAAoBL,EAAW7R,OAAO,SAAAC,GAAE,OAAKA,EAAGvC,WAAW4T,GAAiBrR,EAAGvC,WAAWqT,KAG5FqB,EAAmB1B,EAAc1Q,OAAO,SAAAC,GAAE,OAAKA,EAAG8Q,WAAWA,KAAeO,GAAiBrR,EAAG8Q,UAAUO,MAExF5qB,4BAChB2qB,sBACFe,EAAmBf,EACbgB,EAAiB7uB,OAAO+X,OAAO6W,GAAkBjK,MACjDsiF,EAAiBj7F,WAAW6iB,EAAevtB,SAE3CktB,EAAgBxuB,OAAO+X,OAAO2W,GAAmB/J,MACnDwuC,EAAkB,MAClB3kC,oCACsB/f,EAAK5N,cAAcy5D,mBAAmB9rC,EAAczS,qBAA5Eo3C,iBAIE8zC,EAAe,GAAK15E,EAAUJ,GAAoBgmC,IAEpDtkC,EAAeskC,gBAAkBA,EACjCvkC,EAAmB,CAACC,4BAGtBD,EAAmB,CAAC,CAClBttB,QAAQmN,EAAK5N,cAAciB,MAAM,GACjCqxD,gBAAgB1kD,EAAK5N,cAAciB,MAAM,aAKzCitB,EAAS/uB,OAAOC,OAAO,GAAG2uB,GAAkBjK,MAC9CqK,EAAgBvgB,EAAK5N,cAAciB,MAAMitB,EAAOztB,SAASsE,MAAMmpB,EAAOokC,iBAE1E5kC,EAAe6nC,EAAkBnyD,OAASwK,EAAK5N,cAAciB,MAAMitB,EAAOztB,SAC1E2sB,EAAoBe,EAEpBV,EAAgBM,GAIE,OAAdlC,GAAsB0C,EAAWC,cAAc3C,MAE7C0C,EAAWE,QAAQ,IAAI9V,KAAO,SAChC4V,EAAa3gB,EAAK5N,cAAc0Y,YAAY,IAAIC,OAI5C+V,EAAgBH,EAAW3V,OAAO,oBAGxCmU,EAAKwB,EAAW3V,OAAO,eAAiB,EAElCwhG,EAA0BjvG,WAAWA,WAAWiiB,EAAkBjd,QAAQ,KAEhFkd,EAAuBqB,GAAiB0rF,EACxC9sF,EAAsBoB,GAAiBhB,EAIvCR,EAAkC,OAAlBA,EAAyBktF,EAA0B9hG,KAAKC,IAAI2U,EAAcktF,GAC1FjtF,EAAkC,OAAlBA,EAAyBitF,EAA0B9hG,KAAKG,IAAI0U,EAAcitF,IAG5FntF,EAAgBP,EAChBM,EAAeS,oDAzERf,EAAUJ,eAAiBI,GAAWa,6CAAtCb,oBAAoDA,GAAWntB,KAAKC,MAAM4U,yCAiInF,IArDMwa,EAAqBzvB,OAAO4H,KAAKsmB,GAAwBtS,IAAI,SAAA8T,GAAI,MAAK,CAC1E1a,EAAE0a,EACF5a,EAAEoZ,EAAuBwB,GACzBC,SAASxB,EAAsBuB,MAG7BE,EAAY,EAChBH,EAAmBnlB,QAAS,SAACulB,EAAKxC,GAChC,IAAMnB,EAAU/S,KAAK2W,MAAMF,EAAUH,EAAmBvsB,OAAO,KAC/DusB,EAAmBpC,GAAOnB,QAAUA,EACpC0D,MAyBFriB,EAAU0D,KAAK,CACbC,GAAG,MACH3S,MAAO,OAAQ6B,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,SAAS,MAAM,QAAQ,QAAQsQ,KAAK,KAAK,IACpG5E,KAAK+iB,IAGHM,EAAkB,EAClB/B,EAAcD,EAAc,IAC9BgC,EAAkB,GAGhB/B,IAAkBD,IACpBA,EAAgB5U,KAAKG,IAAI,EAAE0U,EAAc,IAGtB,EACfgC,GAAahC,EAAcD,GADZ,EAEfkC,EAAc,GACXtf,EAAE,EAAEA,GAHQ,EAGQA,IACrBuf,EAAalkB,WAAWA,WAAW+hB,EAAepd,EAAEqf,GAAYhf,QAAQ,IAC9Eif,EAAYhf,KAAKif,GAGS,GACtBC,EAAYnwB,OAAO+X,OAAO6V,GAAM1qB,OAChCktB,EAAgBjX,KAAKG,IAAI,EAAEH,KAAKkX,KAAKF,EAFf,KAItB3jB,EAAa,CACjB8jB,OAAO,CACL1mB,KAAM,OACN6P,OAAQ,kBAEV8W,OAAO,CACL3mB,KAAM,SACN4mB,SAAS,EACTpX,IAAK2U,EACLzU,IAAK0U,GAEPyC,QAAQ,gBACRC,QAAQ,SAAA9hB,GAAK,OAAIH,EAAK5N,cAAcgJ,YAAY+E,EAAMmhB,IACtDnV,WAAYxa,KAAKC,MAAMmL,SAAW,KAAO,CACvCzO,OAAQ,GACR4zB,SAAS,EACTlX,OAAQ,QACRmX,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASZ,EAAc,SAEpCH,cACA1V,UAAU,EACVE,SAAQ,EACRC,SAAUta,KAAKC,MAAMmL,SAAW,KAAO,CACrCzO,OAAQ,GACR4zB,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbK,aAAc,EACdH,cAAe,GACfE,WAAWf,EACXc,eAAgB,SAChBtX,OAAQ,SAAA3K,GAAC,OAAIL,EAAK5N,cAAckJ,iBAAiB+E,EAAE,KAErDd,SAAQ,EACRkjB,WAAW,IACXpW,YAAY,GACZD,YAAW,EACXK,aAAa,IACbF,aAAY,EACZL,MAAM,YACNI,aAAY,EACZE,iBAAiB,EACjBliB,OAAO,SAAAuV,GAAC,OAAIA,EAAE/P,OACdyd,mBAAmB,GACnBmV,kBAAkBpD,EAClBqD,WAAW,CAAElhB,KAAM,QAASC,UAAW,IACvC5W,MAAM,CACJ83B,KAAM,CACJC,MAAO,CACLr4B,KAAM,CACJmG,SAAS,GACTgQ,WAAW,IACXmM,KAAKhiB,EAAMR,OAAOgE,OAClBsS,WAAY9V,EAAMS,MAAME,aAI9Bq3B,KAAM,CACJC,KAAM,CACJC,OAAQ,UAAWC,gBAAiB,SAa1CthB,OAAQhQ,KAAKC,MAAMmL,SAAW,CAAE6E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHmhB,aAAa,SAACC,GAAc,IAEpB3F,EADY2F,EAAVC,MACYC,OAAO,GAC3B,OACElyB,EAAAC,EAAAC,cAACiyB,GAAD,CACE9F,MAAOA,GAEPrsB,EAAAC,EAAAC,cAACkyB,GAAD,CACEzzB,MAAO0tB,EAAM1tB,MACbgT,MAAO0a,EAAMgG,QACbrjB,MAAK,KAAA5J,OAAOinB,EAAMvf,KAAKwlB,cAGM,kBAAxBjG,EAAMvf,KAAKijB,UAAyB3vB,OAAO4H,KAAKqkB,EAAMvf,KAAKijB,UAAUzsB,OAAO,GACjFlD,OAAO4H,KAAKqkB,EAAMvf,KAAKijB,UAAU/T,IAAI,SAAA3X,GACnC,GAAIA,IAAUgoB,EAAMgG,QAClB,OAAO,KAET,IAAM6d,EAAYrhC,EAAK5N,cAAcG,gBAAgB,CAAC,QAAQ,SAASiD,IACvE,GAAI6rC,EAAU,CACZ,IAAMnvC,EAAYmvC,EAAU3iC,KAAO2iC,EAAU3iC,KAAOlJ,EAC9C1F,EAAQuxC,EAAUvxC,MAAMu5C,IACxBx2C,EAAU2qB,EAAMvf,KAAKijB,SAAS1rB,GAChCkuB,EAAmB1jB,EAAK5N,cAAcgJ,YAAYvI,EAAQ,GAC9D,GAAI0K,WAAW1K,IAAU,IACvB,OACE1B,EAAAC,EAAAC,cAACkyB,GAAD,CACEzgB,MAAO5Q,EACPpC,MAAOA,EACP2f,IAAG,OAAAlZ,OAASf,GACZ2K,MAAK,GAAA5J,OAAKmtB,KAKlB,OAAO,UAQnB/xB,KAAKiM,SAAS,CACZkB,YACAf,mJAKF,OACE5M,EAAAC,EAAAC,cAACmS,GAADjS,OAAAC,OAAA,CACE2J,KAAM0Q,IACN7N,YAAY,GACRrM,KAAK4K,MAAMwB,WAHjB,CAIEE,KAAMtM,KAAK4K,MAAMuC,UACjB5B,SAAUvL,KAAKC,MAAMsL,SACrBtM,OAAQe,KAAKC,MAAM+L,YACnBF,eAAgB9L,KAAKC,MAAM6L,yBA3aA3L,aCgdpB26G,8MA9cblwG,MAAQ,CACN07E,QAAQ,KACRtsD,iBAAiB,GACjBiB,qBAAqB,QAIvBx6B,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,kRAKCpJ,KAAKS,cAAc2yD,6CAInBpzD,KAAKS,cAAc6xD,2MAuHFnnD,EAAUqC,mEACjCxN,KAAKoJ,kJAIL,OACE5J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGbhK,KAAK4K,MAAMovB,iBAAiBl3B,OAAO,GACjCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP+N,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdjK,KAAK4K,MAAMovB,iBAAiBxe,IAAI,SAAC9M,EAAE6B,GAAH,OAC9B/Q,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACM6O,EAAE5E,UADR,CAEEE,cAAe,SACf8T,IAAG,mBAAAlZ,OAAqB2L,KAExB/Q,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,CAAC,EAAE,GACNjQ,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdyE,EAAEzO,MAAMC,SAAWwO,EAAEzO,MAAMC,SACzBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEigB,WAAY,EACZ5Q,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8Q,WAAY,UACZjQ,SAAU,CAAC,EAAE,SACbmtB,wBAAyB,CAAEC,OAAQ1d,EAAEzO,MAAMuO,SAKjDhP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YAENuQ,EAAEzO,MAAMvG,aAS3B8F,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTqC,GAAG,EACHC,GAAG,IAGLniB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwS,GAAI,CAAC,EAAE,GACPoE,GAAI,kBAEJtR,EAAAC,EAAAC,cAACq7G,GAADn7G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+L,YAAa,IACbT,SAAU,iBACVsJ,iBAAkB7U,KAAKS,cAAcmZ,oBAAoB,MAAM,OAGnEpa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,aAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,kBACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACboF,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,gBAMzBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,cAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,gCACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACb6T,MAAM,CACJzO,WAAW,IACX7Q,MAAMhF,EAAMR,OAAOoB,QACnBiF,SAAUgB,KAAKC,MAAMmL,SAAW,QAAU,SAE5CtB,UAAU,CACRG,eAAe,eAKvBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,QAEJjgB,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,oBACL9M,MAAM,CACJjB,SAAS,EACTgQ,WAAW,EACX7Q,MAAM,WACN2L,UAAU,CACRG,eAAe,iBAO3BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,YAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,uBACL9M,MAAM,CACJwD,SAAS,EACTmG,aAAa,EACb6T,MAAM,CACJzO,WAAW,IACXhQ,SAASgB,KAAKC,MAAMmL,SAAW,QAAU,QACzCjN,MAAMhF,EAAMR,OAAOoB,SAErB+P,UAAU,CACRG,eAAe,gBA4CzBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,eAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,WACL9M,MAAM,CACJwD,SAAS,EACTuL,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,gBAMzBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,EACJ1S,SAAU,CAAC,EAAE,GACbkpB,UAAWC,IAAQuO,IAHrB,gBAOAl3B,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4D,MAAO7D,KAAKC,MAAMwN,cAClB2E,UAAW,CACTrF,KAAK,mBACL9M,MAAM,CACJwD,SAAS,EACTuL,WAAW,IACXhQ,SAAS,CAAC,QAAQ,SAClBb,MAAMhF,EAAMR,OAAOoB,QACnB+P,UAAU,CACRG,eAAe,0BAncJ9J,aCwoClB05G,8MAjoCbjvG,MAAQ,CACNk3B,WAAW,GACXQ,WAAW,GACXw3E,UAAU,KACV9F,UAAU,KACV7mE,WAAW,KACXrwC,OAAO,UACPm3G,YAAY,KACZzzG,YAAY,KACZ2V,aAAa,KACbyyB,cAAc,KACdn7B,cAAc,KACdzG,gBAAgB,GAChBg0G,cAAc,KACdC,eAAe,KACfr0E,gBAAe,EACfmsB,gBAAgB,KAChBsnD,gBAAgB,KAChB1jG,iBAAiB,KACjBu7F,iBAAiB,KACjBv/B,iBAAiB,KACjB5c,iBAAiB,KACjBO,iBAAiB,KACjBq7C,mBAAmB,GACnB6F,kBAAkB,KAClBjD,kBAAiB,EACjBv+C,kBAAkB,KAClBC,kBAAkB,KAClBwa,kBAAkB,KAClBz5D,kBAAkB,KAClB8vB,oBAAoB,GACpBgyB,qBAAqB,GACrBw/C,oBAAoB,KACpB1G,qBAAoB,EACpB17C,qBAAqB,QAIvBz1D,cAAgB,OAUhB8+B,WAAa,WACXl/B,EAAK4L,SAAS,CACZgoG,YAAa,UAIjBmB,eAAiB,SAAAnB,GACf5zG,EAAK4L,SAAS,CACZgoG,mBAIJnC,oBAAsB,SAACF,GACrBvxG,EAAK4L,SAAS,CACZ2lG,2BAIJpiE,gBAAkB,SAAC/hC,GACjB,IAAMilG,EAAcryG,EAAKI,cAAcG,gBAAgB,CAAC,UACxDP,EAAKJ,MAAMqvC,YAAX,GAAA1qC,OAA0B8tG,EAAYz+D,OAAO3H,MAA7C,KAAA1nC,OAAsD6I,OAQxDytG,uDAAmB,SAAAj6G,EAAOwM,GAAP,IAAAzG,EAAA8xD,EAAAxC,EAAA91D,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX0F,EAAkB3G,EAAKI,cAAcmyD,0BACrCkG,EAAuBz4D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACnE01D,EAAmBwC,EAAqBrrD,GACxCjN,EAAcwG,EAAgBsvD,EAAiBjzC,WACrDhjB,EAAK4L,SAAS,CACZzL,cACAiN,gBACAzG,kBACAsvD,qBATe,wBAAAl1D,EAAAS,SAAAZ,EAAAjB,iEAanB+5G,oCAAiB,SAAA/3G,IAAA,IAAA82D,EAAArrD,EAAApC,EAAArE,EAAAsvD,EAAA91D,EAAAmS,EAAAG,EAAAijD,EAAAC,EAAAC,EAAAC,EAAAjjD,EAAAtP,EAAA,OAAA5C,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAETw3D,EAAuBz4D,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACzEP,EAAK4L,SAAS,CACZ6sD,2BAGIrrD,EAAgBpN,EAAK86G,qBAEN1tG,IAAkBpN,EAAKJ,MAAM4tC,UAAUutE,OAT7C,CAAAj5G,EAAAb,KAAA,gBAUbjB,EAAKmvC,gBAAgB/hC,GAVRtL,EAAAb,KAAA,EAWAjB,EAAK66G,iBAAiBztG,GAXtB,cAAAtL,EAAAP,OAAA,SAAAO,EAAAV,MAAA,WAYJgM,IAAkBpN,EAAKuK,MAAM6C,cAZzB,CAAAtL,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GAaPjB,EAAK66G,iBAAiBztG,GAbf,eAgBTpC,EAhBSzL,OAAA0L,EAAA,EAAA1L,CAAA,GAgBMS,EAAKuK,OAEpB5D,EAAkB3G,EAAKI,cAAcmyD,0BAEvCvnD,EAASoC,gBAAkBA,IAC7BpC,EAASoC,cAAgBA,GAGrB6oD,EAAmBwC,EAAqBrrD,GACxCjN,EAAcwG,EAAgBsvD,EAAiBjzC,WAzBtClhB,EAAAb,KAAA,GAgCLwD,QAAQC,IAAI,CACpB1E,EAAKI,cAAcwhF,sBACnB5hF,EAAKI,cAAcwgF,uBACnB5gF,EAAKI,cAAc+hF,uBACnBniF,EAAKI,cAAcq/E,4BApCN,WAAAntE,EAAAxQ,EAAAV,KAAAqR,EAAAlT,OAAAsF,EAAA,EAAAtF,CAAA+S,EAAA,GA4BbojD,EA5BajjD,EAAA,GA6BbkjD,EA7BaljD,EAAA,GA8BbmjD,EA9BanjD,EAAA,GA+BbojD,EA/BapjD,EAAA,GAuCfzH,EAAS0qD,iBAAmBA,EAC5B1qD,EAAS2qD,kBAAoBA,EAC7B3qD,EAAS4qD,kBAAoBA,EAC7B5qD,EAAS6qD,qBAAuBA,EAEhC7qD,EAASrE,gBAAkBA,EAIK,GACRyG,GAAiBjN,EAEzC6K,EAAS7K,YAAcA,EACvB6K,EAASirD,iBAAmBA,GAExBj2D,EAAKJ,MAAMuB,QAtDA,CAAAW,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GA+DHwD,QAAQC,IAAI,CACpB1E,EAAKI,cAAcy5D,qBACnB75D,EAAKI,cAAc6yE,uBACnBjzE,EAAKI,cAAcoW,aAAarW,GAChCH,EAAKI,cAAc0zE,iBAAiB3zE,EAAYH,EAAKJ,MAAMuB,SAC3DnB,EAAKI,cAAcc,gBAAgBkM,EAAcpN,EAAKJ,MAAMuB,SAC5DnB,EAAKI,cAAcc,gBAAgBf,EAAYqE,KAAKhB,MAAMxD,EAAKJ,MAAMuB,SACrEnB,EAAKI,cAAcqoC,mBAAmBr7B,EAAcyoD,EAAqBtvD,QAAQvG,EAAKJ,MAAMuB,WAtEjF,QAAAyR,EAAA9Q,EAAAV,KAAAkC,EAAA/D,OAAAsF,EAAA,EAAAtF,CAAAqT,EAAA,GAwDX5H,EAAS0nD,gBAxDEpvD,EAAA,GAyDX0H,EAASolE,kBAzDE9sE,EAAA,GA0DX0H,EAASitG,oBA1DE30G,EAAA,GA2DX0H,EAASyuG,UA3DEn2G,EAAA,GA4DX0H,EAAS8K,aA5DExS,EAAA,GA6DX0H,EAASsL,iBA7DEhT,EAAA,GA8DX0H,EAASu9B,cA9DEjlC,EAAA,GA0Eb0H,EAASi3B,WAAa,CACpB9lC,OAAO,CACL65B,OAAO,KACPvP,SAAQ,GAEVrqB,QAAQ,CACN45B,OAAO,KACPvP,SAAQ,GAEVyf,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,IAGZzb,EAASy2B,WAAa,CACpBtlC,OAAO,KACPC,QAAQ,MAEV4O,EAASy7B,oBAAsB,CAC7BtqC,OAAO,KACPC,QAAQ,MAGV4O,EAASkpG,kBAAmB,EAC5BlpG,EAAS4vG,eAAiB5vG,EAAS8K,aACnC9K,EAAS2vG,cAAgB3vG,EAAS2L,kBAClC3L,EAASmsG,kBAAoBh3G,EAAYg3G,kBACzCnsG,EAAS2oG,UAAY3oG,EAASolE,mBAAqBplE,EAASolE,kBAAkB15D,GAAG,GACjF1L,EAAS8hC,WAAa9hC,EAASsL,kBAAoBtL,EAASsL,iBAAiBI,GAAG,GAChF1L,EAAS2L,kBAAoB3L,EAASolE,kBAAoBplE,EAASolE,kBAAkBjrE,MAAM6F,EAAS0nD,iBAAmB1yD,EAAKI,cAAciB,MAAM,GAvGnI,QA0GfrB,EAAK4L,SAASZ,GA1GC,yBAAAlJ,EAAAN,SAAAG,EAAAhC,WAwKjBq7G,yCAAsB,SAAA34G,IAAA,IAAA2I,EAAA7K,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACd+J,EAAW,GADGxI,EAAAuC,GAEZ/E,EAAKuK,MAAM9N,OAFC+F,EAAAvB,KAGb,YAHauB,EAAAuC,GAAA,EAMb,WANavC,EAAAuC,GAAA,yBAIhB/E,EAAK05G,iBAJWl3G,EAAAjB,OAAA,0BAQVpB,EAAcH,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBAChEyK,EAASytD,qBAAuB,GAChCztD,EAASirD,iBAAmB91D,EAC5B6K,EAASoC,cAAgBjN,EAAYqD,MACrCwH,EAASytD,qBAAqBt4D,EAAYqD,OAASrD,EAZnCqC,EAAAjB,OAAA,2BAAAiB,EAAAjB,OAAA,oBAkBpBvB,EAAK4L,SAASZ,GAlBM,yBAAAxI,EAAAhB,SAAAa,EAAA1C,WAqBtB82G,uBAAyB,WACvB,OAA0D,OAAtDz2G,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAGvCuD,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAAS2I,IAAI,QAGzFiiC,uBAAyB,SAACrF,GACxB,IAAKhiC,EAAKuK,MAAM9N,OACd,OAAO,EAETuD,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAASulC,UAK3BmF,cAAgB,WACd,IAAKnnC,EAAKuK,MAAM9N,QAAgE,OAAtDuD,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,QAClE,OAAO,EAGT,IAAM2qC,EAAqBpnC,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMk8B,oBAAoBzmC,EAAKuK,MAAM9N,SAAS2I,IAAI,KACvGqtB,EAAS,KAEb,OAAOzyB,EAAKuK,MAAM9N,QAChB,IAAK,UACHg2B,EAASzyB,EAAKuK,MAAMuL,aAAe9V,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMuL,cAAc3Q,MAAMiiC,GAAsB,KACnH,MACA,IAAK,SAED3U,EADEzyB,EAAKuK,MAAMgnG,oBACJvxG,EAAKuK,MAAM6lE,kBAAoBpwE,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAM6lE,mBAAmBjrE,MAAMiiC,GAAsB,KAElHpnC,EAAKuK,MAAMoM,kBAAoB3W,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAMoM,mBAAmBxR,MAAMiiC,GAAsB,KAOjIpnC,EAAKknC,oBAAoBzU,GAEzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3BwU,iBAAmB,SAACl5B,GAClB,IAAK/N,EAAKuK,MAAM9N,OACd,OAAO,EAGT,IAAMg2B,EAAS1kB,EAAEtO,OAAO0O,MAAM1L,SAAWnB,MAAMyM,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM0M,EAAEtO,OAAO0O,OAASnO,EAAKI,cAAciB,MAAM,GACrIrB,EAAKknC,oBAAoBzU,GAEzBzyB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs5B,oBAAoBlnC,OAAA0L,EAAA,EAAA1L,CAAA,GACf4N,EAAUs5B,oBADIlnC,OAAAic,EAAA,EAAAjc,CAAA,GAEhBS,EAAKuK,MAAM9N,OAAS,OAEvBglC,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASg2B,UAK3ByU,oBAAsB,WAAiB,IAAhBzU,EAAgBtwB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAE5B,IAAKnC,EAAKuK,MAAM9N,OACd,OAAO,EAGJg2B,IACHA,EAASzyB,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,SAG5C,IAAI8pC,GAAiB,EAErB,OAAQvmC,EAAKuK,MAAM9N,QACjB,IAAK,UACH8pC,EAAiBA,GAAmB9T,GAAUA,EAAO/b,GAAG1W,EAAKuK,MAAMuL,cACrE,MACA,IAAK,SAEDywB,EADEvmC,EAAKuK,MAAMgnG,qBACKvxG,EAAKuK,MAAMopG,WAAcptE,GAAmB9T,GAAUA,EAAO/b,GAAG1W,EAAKuK,MAAM6lE,oBAE3EpwE,EAAKuK,MAAMopG,WAAcptE,GAAmB9T,GAAUA,EAAO/b,GAAG1W,EAAKuK,MAAMoM,mBAOnG3W,EAAK4L,SAAS,CACZ26B,sBAIJb,uCAAoB,SAAA7iC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAClBjB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,CAER2mC,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,IAETzmB,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAVI,wBAAA3jB,EAAAtB,SAAAqB,EAAAlD,WAgBpBs1G,kCAAe,SAAAjyG,IAAA,IAAAulC,EAAAqB,EAAAC,EAAA,OAAAnpC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,YAGPsnC,EAAgBvoC,EAAKuK,MAAMg+B,eAHpB,CAAArlC,EAAAjC,KAAA,eAAAiC,EAAA3B,OAAA,SAMJvB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CACnCo7B,gBACAtG,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,SAZH,OAkBPmjB,EAAkB,SAAC5tB,EAAG8lB,GAE1B,IAAMiG,EAAY,CAChBpkB,cAAe,UACfC,YAAa5jB,EAAKuK,MAAM6C,cACxByW,WAAY7H,EAAG1e,QAGbwkC,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bo7B,cAA8B,YAAdvsB,EAAG1e,OACnB2kC,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,SAMVojB,EAAyB,SAAC7tB,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ3mC,OAAA0L,EAAA,EAAA1L,CAAA,GACH4N,EAAU80B,WAAV,QADE,CAELjM,iBAMRh2B,EAAKI,cAAc0pC,YAAY9pC,EAAKuK,MAAM6C,cAAcpN,EAAKuK,MAAMsrD,qBAAqBtvD,QAAQqjC,EAAgBC,GAEhH7pC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERiE,QAAQ,CACNlQ,OAAO,KACPvP,SAAQ,QAnED,wBAAAvjB,EAAA1B,SAAAwB,EAAArD,WAyEf2nC,mCAAgB,SAAA/jC,IAAA,IAAA+xG,EAAA7zE,EAAA2F,EAAA3gB,EAAAivF,EAAAH,EAAAC,EAAAn2B,EAAAs2B,EAAAC,EAAAqF,EAAAvoD,EAAA/qB,EAAAC,EAAA0qE,EAAAC,EAAAviD,EAAA,OAAAtvD,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAEVq0G,EAAqB,KACnB7zE,EAAazhC,EAAKuK,MAAMk3B,WAAWzhC,EAAKuK,MAAM9N,QAC9C2qC,EAAqBpnC,EAAKy2G,yBAE5BhwF,GAAU,EANApiB,EAAAU,GAQN/E,EAAKuK,MAAM9N,OARL4H,EAAApD,KAUP,YAVOoD,EAAAU,GAAA,EA4FP,WA5FOV,EAAAU,GAAA,uBAYN/E,EAAKuK,MAAMg8B,gBAAmB9E,IAAczhC,EAAKI,cAAciB,MAAMogC,GAAYz8B,IAAI,GAZ/E,CAAAX,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,UAaD,GAbC,cAgBJm0G,EAAkB11G,EAAKI,cAAcynC,qBAAqBpG,EAAWzhC,EAAKuK,MAAMorD,kBAAkBvyD,UAElGmyG,EAAkB,SAACv5F,EAAG8lB,IAErB9lB,GAAM8lB,IACT9lB,EAAK,CACH1e,OAAO,UAIX,IAAMo2G,EAAwB,UAAd13F,EAAG1e,OACbwqC,EAA4B,YAAd9rB,EAAG1e,OAEjByqC,EAAY,CAChBpkB,cAAe,UACfC,YAAa5jB,EAAKuK,MAAM6C,cACxByW,WAAY7H,EAAG1e,OACf0qC,WAAYl8B,SAAS21B,IAGnBK,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,EACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5BymG,YAAY,QACZnyE,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,QAGzCrB,EAAKuK,MAAMq8B,yBAA2B8sE,GAC/C1zG,EAAK4L,SAAS,CACZ8nG,QAAQn0G,OAAAic,EAAA,EAAAjc,CAAA,GACLS,EAAKuK,MAAM9N,QAAS,MAMvB+4G,EAAyB,SAACx5F,GAC9B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBA/EE3xB,EAAApD,KAAA,GAqFYjB,EAAKI,cAAc0jF,gBAAgB9jF,EAAKuK,MAAMpK,YAAYqE,KAAKhB,MAAMkyG,GArFjF,eAqFJr2B,EArFIh7E,EAAAjD,KAAAiD,EAAApD,KAAA,GAsFkBjB,EAAKI,cAAcuC,oBAAoB3C,EAAKuK,MAAMqrD,kBAAkBlpD,KAAK,oBAAoB,CAAC2yE,GAAQ,IAtFxH,eAsFJs2B,EAtFItxG,EAAAjD,KAuFJw0G,EAAgB,CAACv2B,EAAQs2B,GAvFrBtxG,EAAApD,KAAA,GA0FiBjB,EAAKJ,MAAMmC,0BAA0B/B,EAAKuK,MAAMsrD,qBAAqBnpD,KAAM,gBAAiBkpG,EAAe,KAAML,EAAiBC,GA1FnJ,eA0FVF,EA1FUjxG,EAAAjD,KAAAiD,EAAA9C,OAAA,wBA8FNvB,EAAKuK,MAAMg8B,gBAAmB9E,IAAczhC,EAAKI,cAAciB,MAAMogC,GAAYz8B,IAAI,GA9F/E,CAAAX,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,UA+FD,GA/FC,WAkGN05G,EAAsB,MACtB7zE,EAnGM,CAAA/iC,EAAApD,KAAA,SAoGRg6G,EAAsBj7G,EAAKI,cAAciB,MAAMrB,EAAKuK,MAAM6lE,mBAAmBjrE,MAAMiiC,GApG3E/iC,EAAApD,KAAA,oBAsGRg6G,EAAsBj7G,EAAKI,cAAciB,MAAMrB,EAAKI,cAAcynC,qBAAqBpG,EAAWzhC,EAAKuK,MAAMorD,kBAAkBvyD,WAC1HpD,EAAKuK,MAAMgnG,oBAvGR,CAAAltG,EAAApD,KAAA,gBAAAoD,EAAApD,KAAA,GAwGwBjB,EAAKI,cAAcy5D,qBAxG3C,QAwGAnH,EAxGAruD,EAAAjD,KAyGN65G,EAAsBA,EAAoB71G,IAAIstD,GAzGxC,WA6GLuoD,EA7GK,CAAA52G,EAAApD,KAAA,gBAAAoD,EAAA9C,OAAA,UA8GD,GA9GC,eAiHJomC,EAAiB,SAAC3rB,EAAG8lB,GACzB,IAAMgG,EAA4B,YAAd9rB,EAAG1e,OAGjByqC,EAAY,CAChBlkB,WAAY7H,EAAG1e,OACfqmB,cAAa,cACbC,YAAa5jB,EAAKuK,MAAM6C,cACxB46B,WAAYizE,EAAoB1qG,WAG9BuxB,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C/nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAAQ,CAClBu5B,OAAO,KACPvP,SAAQ,QAKVqhB,GACF9nC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5Bs0B,WAAWliC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUs0B,WADLliC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAASuD,EAAKI,cAAciB,MAAM,SAMhDumC,EAAwB,SAAC5rB,GAC7B,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINu5B,iBAMFs8E,EAAUtyG,EAAKI,cAAcynC,qBAAqBozE,EAAoBj7G,EAAKuK,MAAMorD,kBAAkBvyD,UAAU2S,WAtKzG1R,EAAApD,KAAA,GAuKcjB,EAAKI,cAAc0jF,gBAAgB9jF,EAAKuK,MAAMpK,YAAYqE,KAAKhB,MAAM,GAvKnF,WAuKN+uG,EAvKMluG,EAAAjD,KAyKJ4uD,EAAehwD,EAAKuK,MAAMsrD,qBAAqBnpD,MACjD1M,EAAKuK,MAAMgnG,oBA1KL,CAAAltG,EAAApD,KAAA,SA2KR8uD,QAAQqK,IAAI,6BAA6Bp6D,EAAKI,cAAciB,MAAMogC,GAAY1rB,WAAWu8F,EAAQv8F,WAAWw8F,GAC5GvyG,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,6BAA8B,CAACuiD,EAAaD,GAAU,KAAM3qE,EAAgBC,GA5KvHvjC,EAAApD,KAAA,wBAAAoD,EAAApD,KAAA,GA8KYjB,EAAKI,cAAc0jF,gBAAgB9jF,EAAKuK,MAAMpK,YAAYqE,KAAKhB,MAAM8uG,GA9KjF,QA8KRC,EA9KQluG,EAAAjD,KA+KR2uD,QAAQqK,IAAI,mBAAmBp6D,EAAKI,cAAciB,MAAMogC,GAAY1rB,WAAWu8F,EAAQv8F,WAAWw8F,GAClGvyG,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,mBAAoB,CAACsiD,EAASC,GAAc,KAAM5qE,EAAgBC,GAhL7G,eAAAvjC,EAAA9C,OAAA,2BAoLVklB,GAAU,EApLApiB,EAAA9C,OAAA,qBA0La,IAAvB+zG,GACFt1G,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL1iC,OAAAic,EAAA,EAAAjc,CAAA,GAEPS,EAAKuK,MAAM9N,OAFJ8C,OAAA0L,EAAA,EAAA1L,CAAA,GAGH4N,EAAU80B,WAAWjiC,EAAKuK,MAAM9N,QAH7B,CAINgqB,iBAhMM,yBAAApiB,EAAA7C,SAAA+B,EAAA5D,WAuMhBonC,UAAY,SAACtqC,GACX,OAAQA,EAAO4T,eACb,IAAK,UAEL,MACA,IAAK,SACErQ,EAAKuK,MAAMopG,YACdl3G,EAAS,MAEb,MACA,QACEA,EAAS,KAIE,OAAXA,GACFuD,EAAK4L,SAAS,CACZnP,uFAtoBAkD,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,kDA4B9C,IAAM64D,EAAuB94D,KAAKS,cAAcG,gBAAgB,CAAC,QAAQ,oBACzE,OAAOZ,KAAKC,MAAM4tC,UAAUutE,QAAUtiD,EAAqB94D,KAAKC,MAAM4tC,UAAUutE,QAAUp7G,KAAKC,MAAM4tC,UAAUutE,OAASx7G,OAAO4H,KAAKsxD,GAAsB,+JA8H1J94D,KAAKoJ,qBACCpJ,KAAK+5G,qRAILjnF,EAAS9yB,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,QAAUkD,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAAW,QAEhHg2B,EAAOztB,IAAI,6CACjB,UAGH4sG,EAAmBjyG,KAAKS,cAAcynC,qBAAqBpV,EAAO9yB,KAAK4K,MAAMorD,kBAAkBvyD,UAC/F4H,EAAW,QAETrL,KAAK4K,MAAM9N,cACZ,mBAIA,0CAHHuO,EAAS4vG,eAAiBnoF,YACO9yB,KAAKS,cAAc2kF,iBAAiBplF,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAAMouG,GAAiB,kBAAxH5mG,EAASgvG,2DAGThvG,EAAS2vG,cAAgBloF,YACS9yB,KAAKS,cAAc2kF,iBAAiBplF,KAAK4K,MAAMpK,YAAYqE,KAAKhB,MAAMouG,GAAiB,kBAAzH5mG,EAAS6mG,yFAOblyG,KAAKiM,SAASZ,yLAGSF,EAAWqC,sFAClCxN,KAAKoJ,YACC2S,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDsa,EAAe3Q,EAAU0iC,UAAUutE,SAAWp7G,KAAKC,MAAM4tC,UAAUutE,OACnEj/F,EAAsBhR,EAAUtO,cAAgBmD,KAAKC,MAAMpD,cAAgB+C,OAAO+X,OAAOxM,EAAUtO,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,SAAWlD,OAAO+X,OAAO3X,KAAKC,MAAMpD,cAAcuf,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAG1e,SAAqBmF,SAEjPiZ,GAAkBI,GAAuBL,mCACrC9b,KAAK+5G,wBAGPtuE,EAAgBzrC,KAAK4K,MAAM9N,SAAW0Q,EAAU1Q,OAChDs1G,EAA6BpyG,KAAK4K,MAAMgnG,sBAAwBpkG,EAAUokG,oBAC1ElmE,EAA6B1rC,KAAK4K,MAAMk8B,oBAAoB9mC,KAAK4K,MAAM9N,UAAY0Q,EAAUs5B,oBAAoB9mC,KAAK4K,MAAM9N,SAC9H2uC,GAAiBC,GAA8B0mE,IACjDpyG,KAAKwnC,gBAGHiE,GACFzrC,KAAKq7G,sBAGc7tG,EAAUs0B,WAAW9hC,KAAK4K,MAAM9N,UAAYkD,KAAK4K,MAAMk3B,WAAW9hC,KAAK4K,MAAM9N,SAEhGkD,KAAKwyG,2JAubD,IAAAnpG,EAAArJ,KAEAg6G,EAAeh6G,KAAKC,MAAMuB,SAAWxB,KAAK4K,MAAM6lE,mBAAqBzwE,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAM6lE,mBAAmB15D,GAAG,GAGrI,OACEvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IAGLsF,EAAAC,EAAAC,cAACswG,GAAD,CACE5kG,SAAUpL,KAAKC,MAAMmL,SACrBipC,KAAM,CAAC,QAAQr0C,KAAK4K,MAAM6C,eAC1BmR,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,SAC1Cz2C,KAAMmH,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,OAAO,cAKtEpB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,cAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,sBAKAlS,EAAAC,EAAAC,cAAComB,GAADlmB,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6Q,GAAI,aACJiR,SAAU/hB,KAAKwvC,gBACf/hC,cAAezN,KAAK4K,MAAM6C,cAC1BjN,YAAaR,KAAK4K,MAAM0rD,iBACxB1zC,YAAmC,YAAtB5iB,KAAK4K,MAAM9N,OACxBkK,gBAAiBhH,KAAK4K,MAAMkuD,yBAGhCt5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAIHsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzV,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GADN,sBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,CAAC,EAAE,GACLjQ,MAAM,IACNisC,YAAY,WACV98B,EAAK+9B,UAAU,aAGnBrsB,eAAe,EACfmE,SAAiC,YAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,WAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,OAIZljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,aAQJxP,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,CAAC,EAAE,GACLjQ,MAAM,IACNisC,YAAY,WACV98B,EAAK+9B,UAAU,YAGnBrsB,eAAe,EACfkE,YAAcjf,KAAK4K,MAAMopG,UACzB90F,SAAiC,WAAtBlf,KAAK4K,MAAM9N,QAEtB0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC2sC,GAAD,CACE5Z,YAAa,CACX31B,OAAO,UAETsV,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,OAIZljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,GAFd,gBAiChBxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAKzf,KAAKC,MAAMuB,QAAU,EAAI,GAGR,YAAtBxB,KAAK4K,MAAM9N,OACT0C,EAAAC,EAAAC,cAAC67G,GAAD37G,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAK4K,QAEa,WAAtB5K,KAAK4K,MAAM9N,QACb0C,EAAAC,EAAAC,cAAC84G,GAAD54G,OAAAC,OAAA,GACMG,KAAKC,MACLD,KAAK4K,WAQjBovG,GACEx6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,4BAEJtR,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,kBACAvmB,EAAAC,EAAAC,cAAC87G,GAAD57G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE65G,UAAW95G,KAAK4K,MAAMkvG,UACtBt5G,YAAaR,KAAK4K,MAAMpK,YACxBiN,cAAezN,KAAK4K,MAAM6C,cAC1BzG,gBAAiBhH,KAAK4K,MAAM5D,gBAC5B6iB,cAAejqB,OAAO4H,KAAKxH,KAAK4K,MAAM5D,qBAyH9ChH,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,0BAEJtR,EAAAC,EAAAC,cAAC67B,GAAD,CAAOxV,GAAI,CAAC,EAAE,IAAd,gBACAvmB,EAAAC,EAAAC,cAACq8B,GAADn8B,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+G,gBAAiBhH,KAAK4K,MAAM5D,gBAC5B6iB,cAAejqB,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBACtC8uB,eAAgB,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBACvHpN,KAAM,CACJ,CACEhvB,MAAOsG,KAAKC,MAAMmL,SAAW,GAAK,OAClCnL,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACE3V,KAAK,OACL+b,QAAO,KAIb,CACEpvB,MAAM,SACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,OACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,YAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,YAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,IACZ+P,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,YACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,GACNzjB,OAAO,CAAC,QAAQ,WAGpB,CACE6pB,QAAO,EACP/b,KAAK,oBASnBvN,EAAAC,EAAAC,cAAC+4G,GAAD74G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEo/B,WAAYr/B,KAAKu/B,WACjBtB,SAAUj+B,KAAK4K,MAAM6C,cACrBs0B,OAAmC,QAA3B/hC,KAAK4K,MAAMqpG,uBA5nCL9zG,aCkOTs7G,eAnNb,SAAAA,EAAYx7G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAy7G,IACjBp7G,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAA67G,GAAAnwE,KAAAtrC,KAAMC,KAVR2K,MAAQ,CACN43D,MAAM,KACNrgC,OAAM,EACNu5E,YAAW,EACXC,aAAY,GAKKt7G,EAFnBI,cAAgB,KAEGJ,EAOnBqrG,mBAPmB9rG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAOE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAKI,cAAcC,SAASL,EAAKJ,OADd,wBAAAmB,EAAAS,SAAAZ,EAAAjB,SAPFK,EAWnBu7G,aAAe,WAAoB,IAAnBC,IAAmBr5G,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAC3Bs5G,EAAiBz7G,EAAKI,cAAc4hE,oBACpCE,EAAW,CACf37D,QAASvG,EAAKJ,MAAMuB,QACpB28B,SAAU29E,GAGRD,GAAkC,OAArBx7G,EAAKuK,MAAM43D,QAC1BD,EAASC,MAAQniE,EAAKuK,MAAM43D,OAG9BniE,EAAKI,cAAc6hE,qBAAqBC,IAtBvBliE,EAyEnBg/B,WAzEmBz/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyEN,SAAAgB,IAAA,IAAAq9B,EAAA,OAAAt+B,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OAEL+9B,EAAa,WACjBh/B,EAAKJ,MAAMo/B,cAGb,IAEEh/B,EAAKu7G,cAAa,GAGd7qG,GAAcmuB,UAAUC,OAAOC,OAAOz6B,SACxCtE,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,yBACbC,WAAY,gBACZmb,GAGFgF,WAAWhF,EAAW,MAEtBA,IAEF,MAAO6D,GACP7D,IAxBS,wBAAAl9B,EAAAN,SAAAG,EAAAhC,SAvEXK,EAAKI,cAAgB,IAAIE,GAAcV,GACvCI,EAAK0/F,aAAe1/F,EAAK0/F,aAAa90F,KAAlBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,KACpBA,EAAK2/F,iBAAmB3/F,EAAK2/F,iBAAiB/0F,KAAtBrL,OAAAqZ,EAAA,EAAArZ,QAAAqZ,EAAA,EAAArZ,CAAAS,KAJPA,4EAyBN+N,GAAG,IAAA/E,EAAArJ,KAGd,GAFAoO,EAAEsnB,kBAEG11B,KAAK4K,MAAM43D,MACd,OAAO,EAGT,IAAMvgE,EAAW,WACfoH,EAAK4C,SAAS,CACZ0vG,aAAY,EACZD,YAAW,IAEb5wG,OAAOu5B,WAAWh7B,EAAKpJ,MAAMo/B,WAAW,OAsB1C,GAnBAr/B,KAAK47G,eAGL57G,KAAKS,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,aACbC,WAAY,iBAGdmf,IAAM68D,KAAKnvF,GAAckhC,uBAAuBC,SAAU,CACxDswB,MAASxiE,KAAK4K,MAAM43D,QACnB29B,KAAK,SAAA1pC,GACNx0D,MAED49D,MAAM,SAAA38B,GACLjhC,MAIEyiC,aAAa,CACf,IAAM0mB,EAAgBprD,KAAKC,MAAMuB,QAAQkP,cACrCqrG,EAAYr3E,aAAaC,QAAQ,aAAexkB,KAAKykB,MAAMF,aAAaC,QAAQ,cAAgB,KAChGo3E,GAAaA,EAAU3wD,KAAmB2wD,EAAU3wD,GAAe4wD,WACrED,EAAU3wD,GAAe4wD,UAAW,EACpCh8G,KAAKS,cAAcokC,gBAAgB,YAAY1kB,KAAKC,UAAU27F,KAIlE/7G,KAAKiM,SAAS,CACZ0vG,aAAY,6CAgCCvtG,GACXA,GAAKA,EAAEtO,SACTE,KAAKiM,SAAS,CAAEu2D,MAAOp0D,EAAEtO,OAAO0O,QAChCJ,EAAEtO,OAAOsgG,WAAWC,UAAU3mF,IAAI,mDAKpC,OACEla,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QAEtB/hC,KAAK4K,MAAM8wG,WACTl8G,EAAAC,EAAAC,cAACsiC,GAAD,CACE9F,UAAWl8B,KAAKq/B,YAEhB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,WAAY4X,KAAI,oBACzC9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,SAAU0H,GAAI,GAC3ClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAasT,UAAW,SAAUzS,SAAU,EAAG+mB,GAAI,GAAhE,2BAGAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJ7rB,MAAO,OACPoF,aAAc,EACdqf,QAAS3e,KAAKq/B,YAJhB,YAYN7/B,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKq/B,YACzB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,mBAAoB4X,KAAI,4BAEjD9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM2gG,SAAUtgG,KAAK+/F,cACnBvgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,SAAU0H,GAAI,GAC3ClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,WAAYsT,UAAW,OAAQzS,SAAU,EAAG+mB,GAAI,GAA7D,8CAIFvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAG8P,cAAe,SAAUyV,GAAI,GAC3CjgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG/b,cAAe,MAAOD,WAAY,UAC7CvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,cACN5O,MAAOxF,EAAOL,MACdmU,KAAM,OAERjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAasT,UAAW,OAAQzS,SAAU,EAAGgQ,WAAY,EAAG+W,GAAI,EAAGrZ,GAAI,GAApF,wBAIFlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG/b,cAAe,OAC1BxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,cACN5O,MAAOxF,EAAOL,MACdmU,KAAM,OAERjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAasT,UAAW,OAAQzS,SAAU,EAAGgQ,WAAY,EAAG+W,GAAI,EAAGrZ,GAAI,GAApF,2BAIFlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG/b,cAAe,OAC1BxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,cACN5O,MAAOxF,EAAOL,MACdmU,KAAM,OAERjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO,YAAasT,UAAW,OAAQzS,SAAU,EAAGgQ,WAAY,EAAG+W,GAAI,EAAGrZ,GAAI,GAApF,mBAIFlN,EAAAC,EAAAC,cAACC,EAAA,EAAK4gG,MAAN,CAAYrmG,MAAO,EAAGiX,MAAO,IAC3B3R,EAAAC,EAAAC,cAACC,EAAA,EAAKyiB,MAAN,CACE5Y,KAAK,QACLuD,KAAK,QACL7S,MAAO,EACPsmG,QAAS,OACT54E,OAAQ,EACRlG,GAAI,EACJC,GAAI,EACJ3iB,SAAU,EACVyS,UAAW,CAAC,SAAS,QACrBoW,YAAa,oBACb9F,SAAU/hB,KAAKggG,iBACfr4E,UAAQ,KAGZnoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EzK,EAAAC,EAAAC,cAACooB,GAAD,CACEvB,WAAY,SACZF,UAAWrmB,KAAK4K,MAAM+wG,YACtBv1F,YAAa,CAAC7G,UAAU08F,KAAcnlH,eAAeoD,MAAM,OAAOsP,KAAK,YAGzEhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8f,GAAI,EAAGd,QAAS3e,KAAKq/B,WAAY7X,WAAY,QAAnD,wCAjNK6K,IAAMlyB,WCiElB+7G,eA/Db,SAAAA,EAAYj8G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAk8G,IACjB77G,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAs8G,GAAA5wE,KAAAtrC,KAAMC,KAbR2K,MAAQ,GAYWvK,EATnBI,cAAgB,KASGJ,EAKnBqrG,mBALmB9rG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK+I,YADc,wBAAAhI,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBg/B,WATmBz/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACXjB,EAAKJ,MAAMo/B,aADA,wBAAAl9B,EAAAN,SAAAG,EAAAhC,SAPXK,EAAK+I,YAFY/I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDAmB9C,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoiC,OAAQ/hC,KAAKC,MAAM8hC,QAEnBviC,EAAAC,EAAAC,cAACsiC,GAAD,CACEtP,SAAU,CAAC,QAAQ,SACnBwJ,UAAWl8B,KAAKC,MAAMo/B,YAEtB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CACEpG,GAAI,EACJz8B,MAAOsG,KAAKC,MAAMvG,QAGpB8F,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVyS,UAAW,OACXtT,MAAO,YACPguB,wBAAyB,CAAEC,OAAQpsB,KAAKC,MAAMk8G,YAIlD38G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACE9tB,YAAa5e,KAAKq/B,WAClBjZ,YAAa,CACXlsB,MAAM,CAAC,OAAO,SAHlB,qBA7Dam4B,IAAMlyB,WCoMlBi8G,eAjLb,SAAAA,EAAYn8G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAo8G,IACjB/7G,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAAw8G,GAAA9wE,KAAAtrC,KAAMC,KAfR2K,MAAQ,CACNyxG,eAAc,GAaGh8G,EATnBI,cAAgB,KASGJ,EAKnBqrG,mBALmB9rG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK+I,YADc,wBAAAhI,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBg/B,WATmBz/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACajB,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAD/F,CAAAuB,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAIHjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,KACfC,YAAa,2BACbC,WAAY,iBAPL,OAST7jB,EAAKJ,MAAMo/B,aATFl9B,EAAAb,KAAA,eAWTjB,EAAKJ,MAAMo/B,aAXF,wBAAAl9B,EAAAN,SAAAG,EAAAhC,SATMK,EAwBnBi8G,oBAAsB,SAACD,GAEjBA,EACFh8G,EAAKI,cAAcokC,gBAAgB,uBAAuB,QAE1DxkC,EAAKI,cAAcolE,iBAAiB,wBAGtCxlE,EAAK4L,SAAS,CACZowG,mBAjCeh8G,EAqCnB3D,QAAU,WACR,IAAM6/G,EAAsBl8G,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,iBAAiB,UACzFP,EAAKJ,MAAMqvC,YAAY,SAASitE,GAChCl8G,EAAKJ,MAAMo/B,cAtCXh/B,EAAK+I,YAFY/I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDA+CvC,IAAAoJ,EAAArJ,KAEDqS,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACN2L,UAAU,CACRG,eAAe,eAInB,OACEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoiC,OAAQ/hC,KAAKC,MAAM8hC,QAEnBviC,EAAAC,EAAAC,cAACsiC,GAAD,CACEtP,SAAU,CAAC,QAAQ,SACnBwJ,UAAWl8B,KAAKC,MAAMo/B,YAEtB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CACEC,WAAY,OACZ9iC,MAAO,kBACP4X,KAAI,uBAGN9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJ/mB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,0GASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,UAGbhK,KAAKC,MAAMu8G,yBAA2B58G,OAAO4H,KAAKxH,KAAKC,MAAMu8G,yBAAyBhhG,IAAK,SAAA3X,GAAK,OAC9FrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACf8T,IAAG,SAAAlZ,OAAWf,GACdoG,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPuO,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,UAGXuB,YAAa6I,EAAKpJ,MAAMu8G,wBAAwB34G,GAAOrD,cAEzDhB,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,CACE6iB,GAAI,GACArQ,EAFN,CAGExI,aAAc,EACdN,OAAQF,EAAKpJ,MAAMu8G,wBAAwB34G,GAAO3C,WAEpD1B,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPuO,UAAW,CACTrF,KAAK,YACL9M,MAAMoS,GAER7R,YAAa6I,EAAKpJ,MAAMu8G,wBAAwB34G,GAAOrD,iBAK/DhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVb,MAAO,MACP6Q,WAAY,IACZyC,UAAW,UALb,wJAUFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACooB,GAAD,CACEvB,WAAY,UACZ3H,YAAa5e,KAAKtD,QAClB2pB,UAAWrmB,KAAK4K,MAAM+wG,YACtBv1F,YAAa,CACXlsB,MAAM,CAAC,OAAO,OACdqlB,UAAU08F,KAAcnlH,kBAS5B0I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxpB,MAAO,WACPi2B,QAASp0B,KAAK4K,MAAMyxG,cACpBlrG,MAAK,8BACL4Q,SAAW,SAAA3T,GAAC,OAAI/E,EAAKizG,oBAAoBluG,EAAEtO,OAAOs0B,wBAtLzC/B,IAAMlyB,WCqdlBs8G,eArcb,SAAAA,EAAYx8G,GAAO,IAAAI,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAI,KAAAy8G,IACjBp8G,EAAAT,OAAAq5F,EAAA,EAAAr5F,CAAAI,KAAAJ,OAAAs5F,EAAA,EAAAt5F,CAAA68G,GAAAnxE,KAAAtrC,KAAMC,KAfR2K,MAAQ,CACNyxG,eAAc,GAaGh8G,EATnBI,cAAgB,KASGJ,EAKnBqrG,mBALmB9rG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAKE,SAAAC,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBjB,EAAK+I,YADc,wBAAAhI,EAAAS,SAAAZ,EAAAjB,SALFK,EASnBg/B,WATmBz/B,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KASN,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACajB,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAD/F,CAAAuB,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EAIHjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,KACfC,YAAa,sBACbC,WAAY,iBAPL,OAST7jB,EAAKJ,MAAMo/B,aATFl9B,EAAAb,KAAA,eAWTjB,EAAKJ,MAAMo/B,aAXF,wBAAAl9B,EAAAN,SAAAG,EAAAhC,SATMK,EAwBnBi8G,oBAAsB,SAACD,GAEjBA,EACFh8G,EAAKI,cAAcokC,gBAAgB,uBAAuB,QAE1DxkC,EAAKI,cAAcolE,iBAAiB,wBAGtCxlE,EAAK4L,SAAS,CACZowG,mBAjCeh8G,EAqCnB3D,QArCmB,eAAAiW,EAAA/S,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqCT,SAAA0B,EAAOmB,GAAP,IAAAuqC,EAAAxrC,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,WAAa8sC,EAAbxrC,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAsB,QAG5BwrC,EAAW/tC,EAAKJ,MAAMoH,mBAGAhH,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YANlG,CAAAiC,EAAAvB,KAAA,gBAAAuB,EAAAvB,KAAA,EASAjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,eACfC,YAAa,UACbC,WAAU,GAAAtf,OAAKvE,EAAKJ,MAAMoH,iBAAhB,KAAAzC,OAAoCf,KAZ1C,OAcNxD,EAAKJ,MAAMqvC,YAAX,GAAA1qC,OAA0BwpC,EAA1B,KAAAxpC,OAAsCf,IACtCxD,EAAKJ,MAAMo/B,aAfLx8B,EAAAvB,KAAA,iBAiBNjB,EAAKJ,MAAMqvC,YAAX,GAAA1qC,OAA0BwpC,EAA1B,KAAAxpC,OAAsCf,IACtCxD,EAAKJ,MAAMo/B,aAlBL,yBAAAx8B,EAAAhB,SAAAa,EAAA1C,SArCS,gBAAAqC,GAAA,OAAAsQ,EAAApQ,MAAAvC,KAAAwC,YAAA,GAAAnC,EA2DnBq8G,QA3DmB,eAAA5pG,EAAAlT,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA2DT,SAAAkC,EAAOW,GAAP,IAAA4rC,EAAA,OAAA1uC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UACFmuC,EAAcpvC,EAAKI,cAAcG,gBAAgB,CAAC,QAAQ,oBACxCP,EAAKI,cAAcG,gBAAgB,CAAC,gBAAgB,YAAY,SAAS,SAAS,YAFlG,CAAAuC,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAKAjB,EAAKI,cAAcsjB,yBAAyB,CAChDC,cAAe,eACfC,YAAa,UACbC,WAAU,GAAAtf,OAAKvE,EAAKJ,MAAMoH,iBAAhB,KAAAzC,OAAoCf,KAR1C,OAUNxD,EAAKJ,MAAMqvC,YAAX,SAAA1qC,OAAgC6qC,EAAYnD,MAA5C,KAAA1nC,OAAqDf,IACrDxD,EAAKJ,MAAMo/B,aAXLl8B,EAAA7B,KAAA,gBAaNjB,EAAKJ,MAAMqvC,YAAX,SAAA1qC,OAAgC6qC,EAAYnD,MAA5C,KAAA1nC,OAAqDf,IACrDxD,EAAKJ,MAAMo/B,aAdL,yBAAAl8B,EAAAtB,SAAAqB,EAAAlD,SA3DS,gBAAAsC,GAAA,OAAAwQ,EAAAvQ,MAAAvC,KAAAwC,YAAA,GAEjBnC,EAAK+I,YAFY/I,2EAPbL,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,yDAiFvC,IAAAoJ,EAAArJ,KAEP,IAAKA,KAAKC,MAAMqH,sBAAwBtH,KAAKC,MAAM+G,gBACjD,OAAO,KAGT,IAAMqL,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACN2L,UAAU,CACRG,eAAe,eAInB,OACEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoiC,OAAQ/hC,KAAKC,MAAM8hC,QAEnBviC,EAAAC,EAAAC,cAACsiC,GAAD,CACEtP,SAAU,CAAC,QAAQ,SACnBwJ,UAAWl8B,KAAKC,MAAMo/B,YAEtB7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CACEjrB,KAAI,qBACJ5X,MAAO,oBACP8iC,WAAY,CAAC,OAAO,UAGtBh9B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJ/mB,SAAU,CAAC,EAAE,GACbb,MAAO,WACPsT,UAAW,UAJb,wHASFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACP1V,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACb9E,MAAO,CAAC,GAAI,KACZ8U,WAAY,CAAC,EAAE,GACf7Q,MAAO,aAGL6B,KAAKC,MAAMmL,SAAW,QAAU,qBAIjCpL,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP8U,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8L,eAAgB,UAJlB,YAWDjK,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP8U,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP8L,eAAgB,UAJlB,WAUJzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf9U,MAAO,CAAC,IAAK,KACbiE,MAAO,YACP8L,eAAgB,UAGdjK,KAAKC,MAAMmL,SAAW,MAAQ,WAGlC5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,QAKjBsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,UAGbhK,KAAKC,MAAM85B,iBAAmBn6B,OAAO4H,KAAKxH,KAAKC,MAAM85B,iBAAiBve,IAAK,SAAA68C,GACzE,IAAMx0D,EAAQwF,EAAKpJ,MAAM85B,gBAAgBs+B,GAAUx0D,MAC7CuqC,EAAW/kC,EAAKpJ,MAAM85B,gBAAgBs+B,GAAUjqB,SAChD5tC,EAAc6I,EAAKpJ,MAAM85B,gBAAgBs+B,GAAU73D,YACnDU,EAAUmI,EAAKpJ,MAAM85B,gBAAgBs+B,GAAU3lD,4BACrD,OACElT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACf8T,IAAG,SAAAlZ,OAAWyzD,GACdpuD,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,GAAI,KACZ6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAAC+iB,GAAD,CACErQ,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,CAAC,QAAQ,WAGpBuB,YAAaA,EACbqD,MAAOrD,EAAYqE,KAAKhB,QAE1BrE,EAAAC,EAAAC,cAAC+iB,GAAD,CACErQ,UAAW,CACTrF,KAAK,YACL9M,MAAMoS,GAER7R,YAAaA,EACbqD,MAAOrD,EAAYqE,KAAKhB,UAIzBwF,EAAKpJ,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GACMwS,EADN,CAEExI,aAAc,EACdN,OAAQrI,EACR4I,UAAW,CACTG,eAAe,eAOtBZ,EAAKpJ,MAAMmL,UACV5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEmS,UAAW,CACTrF,KAAK,SACL9M,MAAMoS,GAERxO,MAAOA,EACPrD,YAAaA,MAKrBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,KACb6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEmS,UAAW,CACTrF,KAAK,MACL9M,MAAMoS,GAERxO,MAAOA,EACPrD,YAAaA,MAGjBhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,IAAK,KACb6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACE9tB,YAAc,SAAAxQ,GAAC,OAAI/E,EAAK3M,QAAQmH,EAAMuqC,IACtChoB,YAAa,CACX3Z,KAAK,QACLvS,MAAM,OACNqlB,UAAU08F,KAAcnlH,iBAL5B,gBAgBZ0I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,UAGbhK,KAAKC,MAAM08G,wBAA0B/8G,OAAO4H,KAAKxH,KAAKC,MAAM08G,wBAAwBnhG,IAAK,SAAA3X,GACvF,IAAMrD,EAAc6I,EAAKpJ,MAAM08G,uBAAuB94G,GAAOrD,YAE7D,IAAKA,EACH,OAAO,KAGT,IAAMU,EAAUmI,EAAKpJ,MAAM08G,uBAAuB94G,GAAO3C,QACrDmvE,EAAiB,KAOrB,OAJEA,EADE7vE,EAAY8G,sBAAwB+B,EAAKpJ,MAAM+G,gBAAgBxG,EAAY6iB,WAC5Dha,EAAKpJ,MAAMqH,oBAAoB9G,EAAY8G,oBAAoB,IAAI9G,EAAY6iB,WAE/Eha,EAAKpJ,MAAM+G,gBAAgBxG,EAAY6iB,WAGxD7jB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACf8T,IAAG,SAAAlZ,OAAWf,GACdoG,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAAC+iB,GAAD,CACErQ,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,EACHzjB,OAAO,UAGXuB,YAAaA,EACbqD,MAAOA,IAETrE,EAAAC,EAAAC,cAAC+iB,GAAD,CACErQ,UAAW,CACTrF,KAAK,YACL9M,MAAMoS,GAER7R,YAAaA,EACbqD,MAAOA,KAGXrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GACMwS,EADN,CAEExI,aAAc,EACdN,OAAQrI,EACR4I,UAAW,CACTG,eAAe,cAIrBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEmS,UAAW,CACTrF,KAAK,SACL9M,MAAMoS,GAERxO,MAAOwsE,EAAexsE,MACtBrD,YAAa6vE,MAGjB7wE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEmS,UAAW,CACTrF,KAAK,MACL9M,MAAMoS,GAERxO,MAAOwsE,EAAexsE,MACtBrD,YAAa6vE,MAGjB7wE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,IACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACE9tB,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKqzG,QAAQ74G,IAChCuiB,YAAa,CACX3Z,KAAK,QACLvS,MAAM,OACNqlB,UAAU08F,KAAcnlH,iBAL5B,gBAgBZ0I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACE9tB,YAAa5e,KAAKq/B,WAClBjZ,YAAa,CACXpnB,SAAS,CAAC,EAAE,GACZ9E,MAAM,CAAC,OAAO,SAJlB,iBAUEsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxpB,MAAO,WACPi2B,QAASp0B,KAAK4K,MAAMyxG,cACpBlrG,MAAK,8BACL4Q,SAAW,SAAA3T,GAAC,OAAI/E,EAAKizG,oBAAoBluG,EAAEtO,OAAOs0B,wBAzc3C/B,IAAMlyB,uDCiOlBy8G,8MAxNbhyG,MAAQ,CACN8uF,QAAQ,EACRnqE,SAAU,QAGZstF,kCAAe,SAAA57G,IAAA,IAAAsuB,EAAA,OAAAxuB,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAERjB,EAAKJ,MAAMqH,qBAAwBjH,EAAKJ,MAAMic,sBAAyB7b,EAAKJ,MAAMuB,SAAmC,OAAxBnB,EAAKuK,MAAM2kB,SAFhG,CAAAnuB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,UAGJ,GAHI,OAMP2tB,EAAW,GACC3vB,OAAO4H,KAAKnH,EAAKJ,MAAMqH,oBAAoB+uC,MAGnDnsC,QAAS,SAAAmZ,GACjB,IAAMuyB,EAAS,GACfA,EAAO/kC,KAAKwS,GACZzjB,OAAO4H,KAAKnH,EAAKJ,MAAMqH,qBAAqB4C,QAAS,SAAAkkC,GACnD,IAAM0uE,EAAgBz8G,EAAKJ,MAAMqH,oBAAoB8mC,GAAU/qB,GAC3Dy5F,GACFlnE,EAAO/kC,KAAKisG,EAAcj4G,KAAKhB,SAInC0rB,EAAS1e,KAAK+kC,KAiBhBv1C,EAAK4L,SAAS,CACZsjB,aAtCW,wBAAAnuB,EAAAS,SAAAZ,EAAAjB,WA2CfS,cAAgB,OA6BhBs8G,mDAAe,SAAA/6G,EAAOqqD,GAAP,OAAAtrD,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAEbjB,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5B5jB,EAAKJ,MAAM88G,cACpB18G,EAAKJ,MAAM88G,aAAa1wD,GARblqD,EAAAb,KAAA,EAWAjB,EAAKJ,MAAM+8G,QAAQD,aAAa1wD,GAXhC,cAAAlqD,EAAAP,OAAA,SAAAO,EAAAV,MAAA,wBAAAU,EAAAN,SAAAG,EAAAhC,0IA3BTA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,wDAILpJ,KAAKoJ,YACLpJ,KAAK68G,0DAGY1xG,GACjBnL,KAAKoJ,YAEL,IAAM2S,EAAiB5Q,EAAU8xG,WAAaj9G,KAAKC,MAAMuB,QACnD0a,GAAwB/Q,EAAU+Q,sBAAwBlc,KAAKC,MAAMic,uBACvC/Q,EAAU7D,qBAAuBtH,KAAKC,MAAMqH,qBAC9CyU,GAAkBG,IAClDlc,KAAK68G,+JAmBP78G,KAAKiM,SAAS,CACZytF,QAAO,IAGT15F,KAAKC,MAAMy5F,kBACL15F,KAAK+8G,aAAa,6IAIlB,IAAA1zG,EAAArJ,KACN,GAAIA,KAAKC,MAAMuB,QAAQ,CAGrB,IAAM0oF,EAAQtqF,OAAO4H,KAAKxH,KAAKC,MAAMqH,qBAAqBxE,OAAO,EAC3Do6G,EAAiBl9G,KAAK4K,MAAM2kB,UAAYvvB,KAAK4K,MAAM2kB,SAAS/T,IAAK,SAACo6B,EAAOrlC,GAC7E,OACE/Q,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6jB,UAAW,EACXD,IAAK,WAAWvN,EAChBxG,WAAY,SACZC,cAAe,OAGX4rC,EAAOp6B,IAAK,SAAC3X,EAAMm1B,GAAP,OACVx5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EAAEgwF,EACTlgF,cAAe,MACf8T,IAAK,iBAAiBja,EACtBoG,eAAgB,cAEhBzK,EAAAC,EAAAC,cAAC+iB,GAAD,CACE5e,MAAOA,EACPrD,YAAa,CACXqD,MAAMA,GAERuO,UAAW,CACTrF,KAAK,OACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,GACNhW,GAAG,CAAC,EAAE,GACNxS,MAAM,CAAC,QAAQ,OACf+E,OAAO,CAAC,QAAQ,WAItBO,EAAAC,EAAAC,cAAC+iB,GAAD7iB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEE4D,MAAOA,EACPrD,YAAa,CACXqD,MAAMA,GAERuO,UAAW,CACTrF,KAAK,eACL9M,MAAM,CACJjB,SAAS,CAAC,EAAE,GACZgQ,WAAW,IACX7Q,MAAM,sBAW1B,OACEqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,qBACzB8F,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,OAAQ,QAChB8P,cAAe,SACfD,WAAY,SACZE,eAAgB,UAChBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfD,WAAY,SACZE,eAAgB,SAChB8b,GAAI,CAAC,EAAE,IACPvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8d,MAAO,CAACic,UAAa,eACxBl6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYiH,QAAS5G,KAAKC,MAAMuB,YAGpChC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,OACP6P,WAAY,SACZ2oB,SAAU,CAAC,OAAO,QAClB1oB,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACElO,UAAW,UADb,YAKEyrG,KAKR19G,EAAAC,EAAAC,cAACsiC,GAAUnF,OAAX,MACI78B,KAAKC,MAAM+8G,QAAQllH,QAAWkI,KAAKC,MAAM+8G,QAAQ76E,OAASniC,KAAKC,MAAM+8G,QAAQ3wD,gBAC7E7sD,EAAAC,EAAAC,cAACooB,GAAD,CACE1B,YAAa,CAAC7G,UAAUC,KAAO1oB,eAAewI,aAAa,OAAOmgB,GAAG,CAAC,EAAE,GAAGvgB,SAAS,CAAC,OAAO,SAASuN,KAAK,CAAC,OAAO,WAClHmS,YAAWhf,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAAoB+H,EAAKqwF,SAAzB,wBAAAv2F,EAAAtB,SAAAqB,EAAAlD,SACdumB,WAAY,gBACZF,UAAWrmB,KAAK4K,MAAM8uF,YASpC,OAAO,YAtNgBrnE,IAAMlyB,WC8JlBg9G,8MApKbvyG,MAAQ,CACNwyG,YAAa,KACbzmG,iBAAkB,QAIpBq4C,aAAe,OACfvuD,cAAgB,OAgDhB48G,YAAc,SAACC,GACbj9G,EAAK4L,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GAASgL,EAAT,CAAgBwyG,YAAcxyG,EAAMwyG,cAAcE,EAAY,KAAOA,kFA9CpFt9G,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKgvD,aAAehvD,KAAKS,cAAckzE,uKAIvC3zE,KAAKoJ,YACLpJ,KAAKu9G,4MAGkBpyG,EAAUqC,mEACjCxN,KAAKoJ,YACkB+B,EAAU3J,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAKu9G,qSAKqBv9G,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,oCAE7E+V,EAAmB3W,KAAKS,cAAciB,MAAM,YAItCoD,QAAQC,IAAI,CACpB/E,KAAKgvD,aAAanuD,WAAWb,KAAKC,MAAMuB,SACxCxB,KAAKgvD,aAAa5rD,mBAAmBpD,KAAKC,MAAMuB,qDAJhDN,OACAs8G,OAMEt8G,GAAWs8G,IACb7mG,EAAmB3W,KAAKS,cAAciB,MAAMR,GAASgH,KAAKs1G,sBAGrDx9G,KAAKiM,SAAS,CACnB0K,uDAGG,0IAOA,IAAAtN,EAAArJ,KACD87G,EAAiB97G,KAAKS,cAAcg4D,cAAc,kBAAiB,EAAM,MACzEglD,EAAgB3B,EAAiB97G,KAAKS,cAAcG,gBAAgB,CAAC,aAAak7G,EAAeprG,gBAAkB,KACnHgtG,EAAaD,GAAiBA,EAAcnsG,KAAOmsG,EAAcnsG,KAAOwqG,EAAc,GAAAl3G,OAAMk3G,EAAeprG,cAArB,QAA2C,KAEvI,OACE1Q,KAAKC,MAAMuB,QACThC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,WAE1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHJ,WAAY,SACZC,cAAe,MACfyT,MAAO,CAACoD,OAAO,WACf5W,eAAgB,aAChB0U,QAAS,SAAAvQ,GAAC,OAAI/E,EAAKg0G,YAAY,aAG7BI,EACEj+G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,MACP+E,OAAQ,MACRyjB,GAAI,CAAC,EAAE,UACP5T,QAAS,cACT6C,IAAG,UAAA/M,OAAY84G,GACfC,IAAK7B,EAAeprG,gBAGtBlR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,MACNiW,GAAI,CAAC,EAAE,UACPvkB,MAAO,YACP4O,KAAM,kBAIZvN,EAAAC,EAAAC,cAACmzB,GAAD,CACE7zB,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YACP+uB,KAAMltB,KAAKC,MAAMuB,WAKnBxB,KAAK4K,MAAM+L,kBACTnX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,CAAC,EAAE,GACPxS,MAAO,QAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACL8J,eAAe,QAEjBhI,UAAWC,KAAOpoB,cAClBunB,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKpJ,MAAM29G,aAAY,KAEtCp+G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJxoB,MAAO,QACP+E,OAAQ,QACR6P,QAAS,cACT6C,IAAG,2BAELnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACP6Q,WAAY,KAEXhP,KAAK4K,MAAM+L,iBAAiB/F,QAAQ,GALvC,YAWVpR,EAAAC,EAAAC,cAACm+G,GAADj+G,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE8hC,OAAiC,YAAzB/hC,KAAK4K,MAAMwyG,YACnB/9E,WAAY,SAAAjxB,GAAC,OAAI/E,EAAKg0G,YAAY,gBAItC79G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+P,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACu6G,GAADr6G,OAAAC,OAAA,CACEyR,KAAM,SACFtR,KAAKC,MAFX,CAGEpH,KAAM,UACN+lB,YAAa5e,KAAKC,MAAMovC,qCA9JVlvC,aCoTX29G,8MAnTblzG,MAAQ,CACNmzE,MAAM,KACN78E,QAAQ,KACRkrG,SAAS,KACToR,UAAU,KACVl7E,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAKZrmB,cAAgB,OAChBuuD,aAAe,OAYfumD,mCAAgB,SAAAt0G,IAAA,IAAAc,EAAA4Q,EAAAzR,EAAAs8G,EAAAz/B,EAAA,OAAAh9E,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIJwD,QAAQC,IAAI,CACpB1E,EAAK2uD,aAAanuD,WAAWR,EAAKJ,MAAMuB,SACxCnB,EAAK2uD,aAAa5rD,mBAAmB/C,EAAKJ,MAAMuB,WANpC,OAAAO,EAAAX,EAAAK,KAAAkR,EAAA/S,OAAAsF,EAAA,EAAAtF,CAAAmC,EAAA,GAEZb,EAFYyR,EAAA,GAGZ6qG,EAHY7qG,EAAA,GASVorE,EAAQ19E,EAAKI,cAAciB,MAAM,GACjCR,GAAWs8G,IACbz/B,EAAQ19E,EAAKI,cAAciB,MAAMR,GAASgH,KAAKs1G,IAGjDn9G,EAAK4L,SAAS,CACZ8xE,QACA78E,UACAs8G,cAjBY,wBAAAp8G,EAAAS,SAAAZ,EAAAjB,WAgDhBqtC,2BAAQ,SAAArrC,IAAA,IAAAC,EAAAC,EAAA,OAAAnB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACAW,EAAW,SAACoa,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBnkB,YAAa,QACbD,cAAe,aACfE,WAAY7H,EAAG1e,OAAS0e,EAAG1e,OAASwkC,GAGlCA,IACFiG,EAAUlkB,WAAa7jB,EAAKI,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0C,EAAKI,cAAcsjB,yBAAyBqkB,GAG9C,IAAM/8B,EAAW,CACfi3B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,GAEVslF,SAAS/vF,EAAG1e,OAAS0e,EAAG1e,OAAS,SAGjB,YAAd0e,EAAG1e,SACL0N,EAASnK,QAAUb,EAAKuK,MAAM4yG,UAC9BnyG,EAASmyG,UAAYn9G,EAAKqB,MAAM,GAEQ,oBAA7BrB,EAAKJ,MAAM89G,eACpB19G,EAAKJ,MAAM89G,iBAIf19G,EAAK4L,SAASZ,IAGVnJ,EAAkB,SAACma,GACvB,IAAMga,EAASha,EAAGksB,gBAClBloC,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKNh2B,EAAK2uD,aAAaltD,aAAaG,EAASC,GAExC7B,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,OArDN,wBAAA3kB,EAAAN,SAAAG,EAAAhC,WA0DRq/B,iDAAa,SAAA38B,EAAO5F,GAAP,OAAAiE,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACXjB,EAAKJ,MAAMo/B,aADA,wBAAAx8B,EAAAhB,SAAAa,EAAA1C,0IAnHPA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9CD,KAAKgvD,aAAehvD,KAAKS,cAAckzE,+DAyBvC3zE,KAAKoJ,YACLpJ,KAAKu1G,4DAILv1G,KAAKoJ,uDAGY+B,EAAUqC,GAC3BxN,KAAKoJ,gKAQLpJ,KAAKiM,SAAS,CACZmgG,SAAS,KACT9pE,WAAY,CACVjM,OAAO,KACPvP,SAAQ,wIAoEZ,OACEtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoiC,OAAQ/hC,KAAKC,MAAM8hC,QAEnBviC,EAAAC,EAAAC,cAACsiC,GAAD,CACE3F,SAAS,EACTpW,UAAW,QACX/mB,SAAU,CAAC,OAAO,SAClBg9B,UAAWl8B,KAAKC,MAAMo/B,WACtB/f,WAAY,4FAEZ9f,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CACEpG,GAAI,EACJtW,WAAY,CACV1hB,MAAM,SAERzE,MAAO,oBACPkiC,aAAc,oCAGhBp8B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,CACElb,GAAI,GAEJliB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,MACP+E,OAAQ,MACR0S,IAAK,2BAEPnS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,QACP6Q,WAAY,KAEXhP,KAAK4K,MAAMmzE,MAAQ/9E,KAAK4K,MAAMmzE,MAAMntE,QAAQ,GAAK,KAEpDpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVb,MAAO,QACP6Q,WAAY,KAGVhP,KAAK4K,MAAM4yG,WAAax9G,KAAK4K,MAAM4yG,UAAUzmG,GAAG,GAAK,sCAAwC,oCAGjGvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJhY,GAAI,EACJxX,MAAO,EACP8P,cAAe,SACf4xB,aAAc,mCAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACP6Q,WAAY,KAFd,YAMAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACP6Q,WAAY,KAEXhP,KAAK4K,MAAM1J,QAAUlB,KAAK4K,MAAM1J,QAAQ0P,QAAQ,GAAK,MAG1DpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACP6Q,WAAY,KAFd,cAMAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACP6Q,WAAY,KAEXhP,KAAK4K,MAAM4yG,UAAYx9G,KAAK4K,MAAM4yG,UAAU5sG,QAAQ,GAAK,MAG9DpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAI,KAAAxgB,OAAO5E,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,gBAE5DpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6R,OAAQ,GACRD,SAAU,WACVxH,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACP6Q,WAAY,KAHd,oBAOAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,MACNtO,MAAO,QACP4O,KAAM,iBAMZ/M,KAAK4K,MAAM4yG,WAAax9G,KAAK4K,MAAM4yG,UAAUzmG,GAAG,IAC9CvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACPsX,OAAQ,GACRD,SAAU,WACVxH,WAAY,SACZE,eAAgB,UAIdjK,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAAC6sC,GAAD,CACE/G,UAAW,QACXxC,KAAMhjC,KAAKC,MAAM+iC,KACjBgD,gBAAiB,YACjBC,qBAAsB,QACtBP,SAAQ,qBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,8BACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,QAGjDR,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXjoB,MAAM,OACNjE,MAAM,CAAC,EAAE,OACT+rB,UAAU,QACVqX,cAAc,OACdtlC,UAAUgI,KAAK4K,MAAM4yG,WAAax9G,KAAK4K,MAAM4yG,UAAUn4G,IAAI,IAE7DuZ,YAAa5e,KAAKqtC,MAAMpiC,KAAKjL,OAR/B,qBA7RDqyB,IAAMlyB,4CC6kBd69G,GAxkBb,SAAAA,EAAY/9G,GAAM,IAAAI,EAAAL,KAAAJ,OAAAU,EAAA,EAAAV,CAAAI,KAAAg+G,GAAAh+G,KAJlBC,MAAQ,GAIUD,KAHlBS,cAAgB,KAGET,KAKlBU,SAAW,SAAAT,GACTI,EAAKJ,MAAQA,EAETI,EAAKI,cACPJ,EAAKI,cAAcC,SAASL,EAAKJ,OAEjCI,EAAKI,cAAgB,IAAIE,GAAcN,EAAKJ,QAX9BD,KAelBi+G,eAfkBr+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAeD,SAAAC,IAAA,IAAA+C,EAAAiC,EAAAoqD,EAAA6tD,EAAA,OAAAn9G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGT0C,EAHS,mBAITiC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,KACjD3D,EAAKI,cAAciB,MAAMuE,GAAYtE,QALzC,CAAAP,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,SAMNqE,GANM,cASToqD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cATnEQ,EAAAE,KAAA,EAUSjB,EAAKI,cAAcuC,oBAAoBqtD,EAAa,eAV7D,YAUX6tD,EAVW98G,EAAAK,MAAA,CAAAL,EAAAE,KAAA,gBAYb48G,EAAc79G,EAAKI,cAAc+C,iBAAiB06G,EAAY,IAZjD98G,EAAAQ,OAAA,SAaNvB,EAAKI,cAAc4F,8BAA8BrC,EAAck6G,EAAY,OAbrE,eAAA98G,EAAAQ,OAAA,SAgBR,MAhBQ,yBAAAR,EAAAS,SAAAZ,EAAAjB,SAfCA,KAkClBm+G,iBAlCkBv+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAkCC,SAAAgB,IAAA,IAAAR,EAAAwC,EAAAiC,EAAAoqD,EAAAnvD,EAAAmxD,EAAA7vD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,YAEjBE,GAFwBA,EAAP6wD,EAAAvvD,OAAA,QAAAC,IAAAsvD,EAAA,GAAAA,EAAA,GAAe,OAEFhyD,EAAKJ,MAAMuB,SAFxB,CAAAW,EAAAb,KAAA,YAMT0C,EANS,oBAAAY,OAM2BpD,KACpCyE,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,KACjD3D,EAAKI,cAAciB,MAAMuE,GAAYtE,QARzC,CAAAQ,EAAAb,KAAA,eAAAa,EAAAP,OAAA,SASNqE,GATM,cAYToqD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAZnEuB,EAAAb,KAAA,GAaOjB,EAAKI,cAAcgpC,mBAAmB4mB,EAAc7uD,GAb3D,aAaTN,EAbSiB,EAAAV,OAcCpB,EAAKI,cAAciB,MAAMR,GAASS,QAdnC,CAAAQ,EAAAb,KAAA,gBAAAa,EAAAP,OAAA,SAeNvB,EAAKI,cAAc4F,8BAA8BrC,EAAc3D,EAAKI,cAAciB,MAAMR,KAflF,eAAAiB,EAAAP,OAAA,SAkBV,MAlBU,yBAAAO,EAAAN,SAAAG,EAAAhC,SAlCDA,KAuDlBo+G,mBAvDkBx+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuDG,SAAA0B,IAAA,IAAAlB,EAAA68G,EAAAz7G,EAAAJ,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACnBE,GAD0BA,EAAPoB,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GAAe,OACJvC,EAAKJ,MAAMuB,QADtBqB,EAAAvB,KAAA,EAEWjB,EAAKI,cAAcuC,oBAAoB,gBAAgB,mBAAmB,CAACxB,IAFtF,UAEb68G,EAFax7G,EAAApB,KAIe,IAA9B0K,SAASkyG,GAJM,CAAAx7G,EAAAvB,KAAA,eAAAuB,EAAAjB,OAAA,SAKV,MALU,cAAAiB,EAAAvB,KAAA,EAQbjB,EAAKJ,MAAMwlB,aAAa,kBAAkB44F,EAAgBC,IAR7C,cAAAz7G,EAAAjB,OAAA,SASZy8G,GATY,yBAAAx7G,EAAAhB,SAAAa,EAAA1C,SAvDHA,KAmElBu+G,gBAnEkB3+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmEA,SAAAkC,IAAA,IAAA1B,EAAAg9G,EAAAv8G,EAAAC,EAAAmxD,EAAA7wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAOE,EAAP6xD,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAAe,KAAKmrD,EAApBnrD,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAA6B,KAAKpxD,EAAlCoxD,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAA2C,KAAKnxD,EAAhDmxD,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAAgE,KAChF7xD,EAAUA,GAAoBnB,EAAKJ,MAAMuB,QADzB2B,EAAA7B,KAAA,EAEajB,EAAK+9G,mBAAmB58G,GAFrC,WAAA2B,EAAA1B,KAAA,CAAA0B,EAAA7B,KAAA,gBAAA6B,EAAA7B,KAAA,GAKDjB,EAAKI,cAAc2B,0BAA0B,kBAAkB,cAAc,CAACo8G,GAAUv8G,EAASC,GALhG,eAAAiB,EAAAvB,OAAA,SAAAuB,EAAA1B,MAAA,eAAA0B,EAAAvB,OAAA,SAOT,MAPS,yBAAAuB,EAAAtB,SAAAqB,EAAAlD,SAnEAA,KA6ElBy+G,iBA7EkB7+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA6EC,SAAAqC,IAAA,IAAA7B,EAAAk9G,EAAAnrD,EAAA/wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cACjBE,GADwBA,EAAP+xD,EAAAzwD,OAAA,QAAAC,IAAAwwD,EAAA,GAAAA,EAAA,GAAe,OACFlzD,EAAKJ,MAAMuB,QADxB+B,EAAAjC,KAAA,EAEYjB,EAAK+9G,mBAAmB58G,GAFpC,WAAA+B,EAAA9B,KAAA,CAAA8B,EAAAjC,KAAA,gBAAAiC,EAAAjC,KAAA,EAIWjB,EAAKI,cAAcuC,oBAAoB,kBAAkB,iBAJpE,YAIX07G,EAJWn7G,EAAA9B,MAAA,CAAA8B,EAAAjC,KAAA,gBAAAiC,EAAA3B,OAAA,SAMNvB,EAAKI,cAAciB,MAAMg9G,IANnB,eAAAn7G,EAAA3B,OAAA,SASV,MATU,yBAAA2B,EAAA1B,SAAAwB,EAAArD,SA7EDA,KAyFlB2+G,mBAzFkB/+G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyFG,SAAA4C,IAAA,IAAApC,EAAAwC,EAAAiC,EAAAoqD,EAAAmuD,EAAA/5G,EAAAjC,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,YAEnBE,GAF0BA,EAAPiD,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,GAAAA,EAAA,GAAe,OAEJpE,EAAKJ,MAAMuB,SAFtB,CAAAkD,EAAApD,KAAA,YAMX0C,EANW,sBAAAY,OAM2BpD,KACtCyE,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,IAPnD,CAAAU,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,SASRqE,GATQ,cAYXoqD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAZjE8D,EAAApD,KAAA,GAaMjB,EAAKI,cAAcuC,oBAAoBqtD,EAAc,YAAa,CAAC7uD,IAbzE,eAaXg9G,EAbW95G,EAAAjD,KAAAiD,EAAA9C,OAAA,SAeVvB,EAAKI,cAAc4F,8BAA8BrC,EAAcw6G,IAfrD,eAAA95G,EAAA9C,OAAA,SAkBZ,MAlBY,yBAAA8C,EAAA7C,SAAA+B,EAAA5D,SAzFHA,KA8GlB4+G,gBA9GkBh/G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8GA,SAAA+E,IAAA,IAAAvE,EAAAwC,EAAAiC,EAAAoqD,EAAAwuD,EAAAC,EAAAt8G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,YAEhBE,GAFuBA,EAAPs9G,EAAAh8G,OAAA,QAAAC,IAAA+7G,EAAA,GAAAA,EAAA,GAAe,OAEDz+G,EAAKJ,MAAMuB,SAFzB,CAAA2E,EAAA7E,KAAA,YAKR0C,EALQ,mBAAAY,OAK2BpD,KACnCyE,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,IANtD,CAAAmC,EAAA7E,KAAA,eAAA6E,EAAAvE,OAAA,SAQLqE,GARK,cAWRoqD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAXpEuF,EAAA7E,KAAA,GAYMjB,EAAKI,cAAcuC,oBAAoBqtD,EAAc,kBAAmB,CAAC7uD,IAZ/E,aAYRq9G,EAZQ14G,EAAA1E,OAaApB,EAAKI,cAAciB,MAAMm9G,GAAOl9G,QAbhC,CAAAwE,EAAA7E,KAAA,gBAAA6E,EAAAvE,OAAA,SAcLvB,EAAKI,cAAc4F,8BAA8BrC,EAAc3D,EAAKI,cAAciB,MAAMm9G,KAdnF,eAAA14G,EAAAvE,OAAA,SAkBT,MAlBS,yBAAAuE,EAAAtE,SAAAkE,EAAA/F,SA9GAA,KAmIlB++G,iBAnIkBn/G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAmIC,SAAAwF,IAAA,IAAAxC,EAAAiC,EAAA6W,EAAA,OAAA/b,EAAAtB,EAAA0B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,UAEX0C,EAFW,qBAGXiC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,KACjD3D,EAAKI,cAAciB,MAAMuE,GAAYtE,QAJvC,CAAAgF,EAAArF,KAAA,eAAAqF,EAAA/E,OAAA,SAKRqE,GALQ,cAAAU,EAAArF,KAAA,EAQCjB,EAAKI,cAAcuC,oBAAoB,WAAW,SARnD,YAQb8Z,EARanW,EAAAlF,MAAA,CAAAkF,EAAArF,KAAA,gBAUfwb,EAAQzc,EAAKI,cAAciB,MAAMob,GAVlBnW,EAAA/E,OAAA,SAWRvB,EAAKI,cAAc4F,8BAA8BrC,EAAc8Y,EAAM,OAX7D,eAAAnW,EAAA/E,OAAA,SAcV,MAdU,yBAAA+E,EAAA9E,SAAA2E,EAAAxG,SAnIDA,KAoJlBg/G,cApJkB,eAAAl5G,EAAAlG,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAoJF,SAAA0G,EAAOu3G,GAAP,IAAAh9G,EAAAC,EAAAmuD,EAAAyE,EAAAtyD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAAkBW,EAAlB6yD,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,GAAAA,EAAA,GAA2B,KAAK5yD,EAAhC4yD,EAAAhyD,OAAA,QAAAC,IAAA+xD,EAAA,GAAAA,EAAA,GAAgD,KACxDzE,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eADpEoH,EAAA1G,KAAA,EAERjB,EAAKI,cAAc2B,0BAA0BiuD,EAAa,QAAQ,CAAChwD,EAAKI,cAAcyuD,KAAK+vD,IAAah9G,EAASC,GAFzG,wBAAA8F,EAAAnG,SAAA6F,EAAA1H,SApJE,gBAAAqC,GAAA,OAAAyD,EAAAvD,MAAAvC,KAAAwC,YAAA,GAAAxC,KAyJlBk/G,gBAzJkB,eAAA34G,EAAA3G,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyJA,SAAA+F,EAAOk4G,GAAP,IAAAh9G,EAAAC,EAAAmuD,EAAAlpD,EAAA3E,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAkBW,EAAlBkF,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAA2B,KAAKjF,EAAhCiF,EAAArE,OAAA,QAAAC,IAAAoE,EAAA,GAAAA,EAAA,GAAgD,KAC1DkpD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eADlEwG,EAAA9F,KAAA,EAEVjB,EAAKI,cAAc2B,0BAA0BiuD,EAAa,UAAU,CAAChwD,EAAKI,cAAcyuD,KAAK+vD,IAAah9G,EAASC,GAFzG,wBAAAkF,EAAAvF,SAAAkF,EAAA/G,SAzJA,gBAAAsC,GAAA,OAAAiE,EAAAhE,MAAAvC,KAAAwC,YAAA,GAAAxC,KA8JlBm/G,kBA9JkB,eAAA5hG,EAAA3d,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA8JE,SAAA6H,EAAOu2G,EAASznG,EAAQ0nG,EAAYC,EAAWx/F,GAA/C,IAAAy/F,EAAAlvD,EAAApS,EAAA4W,EAAA,OAAA9zD,EAAAtB,EAAA0B,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,OACZi+G,EAAU,IAAIC,KAAQn/G,EAAKJ,MAAM+iC,KAAK,8CAEtCqtB,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAC5Eq9C,EAAW59C,EAAKI,cAAc8kB,kBAAkB8qC,GAEhDwE,EAAM,CACV,CACE3D,GAAGjT,EAAS6sB,SACZ1pC,OAAO6c,EAAS9c,QAAQs+E,QACxBC,KAAK,CAACN,EAASznG,EAAQ0nG,EAAYC,EAAWx/F,IAEhD,CACEoxC,GAAGjT,EAAS6sB,SACZ1pC,OAAO6c,EAAS9c,QAAQw+E,SACxBD,KAAK,CAACr/G,EAAKI,cAAciB,MAAM,IAAI,KAIvC69G,EAAQ1qD,GAnBU,wBAAA5rD,EAAApH,SAAAgH,EAAA7I,SA9JF,gBAAA2F,EAAAC,EAAAU,EAAAO,EAAAsB,GAAA,OAAAoV,EAAAhb,MAAAvC,KAAAwC,YAAA,GAAAxC,KAoLlBy/G,QApLkB,eAAAh4G,EAAA7H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAoLR,SAAAuH,EAAO62G,EAASznG,EAAQ0nG,EAAYC,EAAWx/F,GAA/C,IAAA7d,EAAAC,EAAAmuD,EAAA3nD,EAAAlG,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,cAA4DW,EAA5DyG,EAAA5F,OAAA,QAAAC,IAAA2F,EAAA,GAAAA,EAAA,GAAqE,KAAKxG,EAA1EwG,EAAA5F,OAAA,QAAAC,IAAA2F,EAAA,GAAAA,EAAA,GAA0F,KAC5F2nD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAD1E+H,EAAArH,KAAA,EAEKjB,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,UAAW,CAAC+uD,EAASznG,EAAQ0nG,EAAYC,EAAWx/F,GAAc,KAAM7d,EAAUC,GAF1I,cAAAyG,EAAA/G,OAAA,SAAA+G,EAAAlH,MAAA,wBAAAkH,EAAA9G,SAAA0G,EAAAvI,SApLQ,gBAAAkJ,EAAAgyD,EAAAX,EAAAC,EAAAQ,GAAA,OAAAvzD,EAAAlF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAyLlB2/G,SAzLkB,eAAAh4G,EAAA/H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAyLP,SAAA40D,EAAOqpD,EAAWW,GAAlB,IAAA39G,EAAAC,EAAAmuD,EAAA8F,EAAA3zD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAi1D,GAAA,cAAAA,EAAA/0D,KAAA+0D,EAAA90D,MAAA,cAA0BW,EAA1Bk0D,EAAArzD,OAAA,QAAAC,IAAAozD,EAAA,GAAAA,EAAA,GAAmC,KAAKj0D,EAAxCi0D,EAAArzD,OAAA,QAAAC,IAAAozD,EAAA,GAAAA,EAAA,GAAwD,KACjE8oD,EAAa5+G,EAAKI,cAAcyuD,KAAK+vD,GAC/B5uD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAFzEw1D,EAAA90D,KAAA,EAGIjB,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,WAAY,CAAC4uD,EAAYW,GAAU,KAAM39G,EAAUC,GAH1G,cAAAk0D,EAAAx0D,OAAA,SAAAw0D,EAAA30D,MAAA,wBAAA20D,EAAAv0D,SAAA+zD,EAAA51D,SAzLO,gBAAAi7D,EAAAmE,GAAA,OAAAz3D,EAAApF,MAAAvC,KAAAwC,YAAA,GAAAxC,KA+LlB6/G,YA/LkB,eAAAj4G,EAAAhI,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA+LJ,SAAAo5D,EAAOokD,GAAP,IAAAv8G,EAAAC,EAAAmuD,EAAAyvD,EAAAt9G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAk5D,GAAA,cAAAA,EAAAh5D,KAAAg5D,EAAA/4D,MAAA,cAAgBW,EAAhB69G,EAAAh9G,OAAA,QAAAC,IAAA+8G,EAAA,GAAAA,EAAA,GAAyB,KAAK59G,EAA9B49G,EAAAh9G,OAAA,QAAAC,IAAA+8G,EAAA,GAAAA,EAAA,GAA8C,KACpDzvD,EAAehwD,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cADtEy5D,EAAA/4D,KAAA,EAECjB,EAAKJ,MAAMmC,0BAA0BiuD,EAAc,WAAY,CAACmuD,GAAW,KAAMv8G,EAAUC,GAF5F,cAAAm4D,EAAAz4D,OAAA,SAAAy4D,EAAA54D,MAAA,wBAAA44D,EAAAx4D,SAAAu4D,EAAAp6D,SA/LI,gBAAAm/D,GAAA,OAAAv3D,EAAArF,MAAAvC,KAAAwC,YAAA,GAAAxC,KAoMlB+/G,oBApMkBngH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAoMI,SAAA85D,IAAA,IAAA7lC,EAAA+qF,EAAAC,EAAAC,EAAAlqF,EAAAmqF,EAAAC,EAAA,OAAAr/G,EAAAtB,EAAA0B,KAAA,SAAA45D,GAAA,cAAAA,EAAA15D,KAAA05D,EAAAz5D,MAAA,cAAAy5D,EAAAz5D,KAAA,EAEUjB,EAAKJ,MAAM+iC,KAAKC,IAAIu3C,iBAF9B,OASpB,IAPMvlD,EAFc8lC,EAAAt5D,KAIdu+G,EAAmB,GAEnBC,EAAY5/G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,eAC7Ds/G,EAAwB7/G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAElFo1B,EAAciqF,EAAWjqF,EAAcf,EAAiBe,GAJ3C,IAKdmqF,EAAUpnG,KAAKC,IAAIgd,EALL,IAK+Bf,GACnD+qF,EAAiBnvG,KAAKxQ,EAAKI,cAAck6E,sBAAsBulC,EAAsB,kBAAmB,CAACD,UAAWjqF,EAAamqF,aAX/G,OAAAplD,EAAAz5D,KAAA,GAcUwD,QAAQC,IAAIi7G,GAdtB,eAcdI,EAdcrlD,EAAAt5D,KAAAs5D,EAAAn5D,OAAA,SAgBbw+G,EAAgB7xE,OAAQ,SAAC8xE,EAAYnyG,GAE1C,OADAmyG,EAAcA,EAAYz7G,OAAOsJ,IAEjC,KAnBkB,yBAAA6sD,EAAAl5D,SAAAi5D,EAAA96D,SApMJA,KA0NlBsgH,yBA1NkB1gH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA0NS,SAAAs4D,IAAA,IAAArkC,EAAA+qF,EAAAC,EAAAC,EAAAlqF,EAAAmqF,EAAAC,EAAA,OAAAr/G,EAAAtB,EAAA0B,KAAA,SAAA84D,GAAA,cAAAA,EAAA54D,KAAA44D,EAAA34D,MAAA,cAAA24D,EAAA34D,KAAA,EAEKjB,EAAKJ,MAAM+iC,KAAKC,IAAIu3C,iBAFzB,OASzB,IAPMvlD,EAFmBglC,EAAAx4D,KAInBu+G,EAAmB,GAEnBC,EAAY5/G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,eAC7Ds/G,EAAwB7/G,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,cAElFo1B,EAAciqF,EAAWjqF,EAAcf,EAAiBe,GAJ3C,IAKdmqF,EAAUpnG,KAAKC,IAAIgd,EALL,IAK+Bf,GACnD+qF,EAAiBnvG,KAAKxQ,EAAKI,cAAck6E,sBAAsBulC,EAAsB,uBAAwB,CAACD,UAAWjqF,EAAamqF,aAX/G,OAAAlmD,EAAA34D,KAAA,GAcKwD,QAAQC,IAAIi7G,GAdjB,eAcnBI,EAdmBnmD,EAAAx4D,KAAAw4D,EAAAr4D,OAAA,SAgBlBw+G,EAAgB7xE,OAAQ,SAAC8xE,EAAYnyG,GAE1C,OADAmyG,EAAcA,EAAYz7G,OAAOsJ,IAEjC,KAnBuB,yBAAA+rD,EAAAp4D,SAAAy3D,EAAAt5D,SA1NTA,KAgPlBugH,aAhPkB3gH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAgPH,SAAAk4D,IAAA,IAAAqK,EAAAv/D,EAAAiC,EAAA8C,EAAAswD,EAAAmnD,EAAAtC,EAAAmC,EAAAI,EAAAzsE,EAAA0sE,EAAAl+G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAi4D,GAAA,cAAAA,EAAA/3D,KAAA+3D,EAAA93D,MAAA,UAAOiiE,EAAPm9C,EAAA59G,OAAA,QAAAC,IAAA29G,EAAA,GAAAA,EAAA,GAAa,KAGpB18G,EAHO,iBAIPiC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,IAJvD,CAAAo1D,EAAA93D,KAAA,eAAA83D,EAAAx3D,OAAA,SAMJqE,GANI,cAAAmzD,EAAA93D,KAAA,EAaHwD,QAAQC,IAAI,CACpB1E,EAAKsgH,WACLtgH,EAAK49G,iBACL59G,EAAKigH,6BAhBM,cAAAv3G,EAAAqwD,EAAA33D,KAAA43D,EAAAz5D,OAAAsF,EAAA,EAAAtF,CAAAmJ,EAAA,GAUXy3G,EAVWnnD,EAAA,GAWX6kD,EAXW7kD,EAAA,GAYXgnD,EAZWhnD,EAAA,GAmBPonD,EAAmB,GACzBJ,EAAYn2G,QAAQ,SAAAkE,GAAK,IAAAwyG,EACUxyG,EAAEyyG,aAA3BrC,EADeoC,EACfpC,SAAU9vF,EADKkyF,EACLlyF,WAClB+xF,EAAiBjC,GAAY9vF,IAG3BslB,EAAY,GAChBp0C,OAAO4H,KAAKi5G,GAAkBv2G,QAAQ,SAAC1I,GACrC,IAAMq9G,GAAS4B,EAAiBj/G,GAClB,IAAVq9G,GACJ7qE,EAAUnjC,KAAK,CACbguG,MAAOA,EAAM,KACbL,SAAUh9G,MAIdwyC,EAAU1e,KAAK,SAAC71B,EAAG81B,GACjB,OAAO91B,EAAEo/G,MAAQtpF,EAAEspF,MAAQ,GAAK,IAGlC7qE,EAAU9pC,QAAS,SAACgE,EAAE+e,GACpB/e,EAAE4yG,KAAO7zF,EAAM,EACf/e,EAAE2wG,MAAQ3wG,EAAE2wG,MAAMjuG,QAAQ,GAC1B1C,EAAE6yG,aAAsB7yG,EAAE2wG,MAAQjzG,WAAWsyG,GAA5B,KAA2CttG,QAAQ,GAAK,IACzE1C,EAAE8yG,UAAYR,EAAUpkG,OAAQ,SAAA1N,GAAC,OAAKA,EAAEuyG,MAAMvwG,gBAAkBxC,EAAEswG,SAAS9tG,gBAAiB5N,SAG9FzC,EAAKI,cAAc4F,8BAA8BrC,EAAcgwC,GAEjD,OAAVuvB,IACFvvB,EAAYA,EAAUktE,OAAO,EAAE39C,IAjDpBnK,EAAAx3D,OAAA,SAoDNoyC,GApDM,yBAAAolB,EAAAv3D,SAAAq3D,EAAAl5D,SAhPGA,KAuSlBmhH,kBAvSkBvhH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAuSE,SAAA03D,IAAA,IAAA10D,EAAAiC,EAAAm7G,EAAAvmD,EAAAM,EAAAkmD,EAAAC,EAAArtE,EAAA,OAAAlzC,EAAAtB,EAAA0B,KAAA,SAAA63D,GAAA,cAAAA,EAAA33D,KAAA23D,EAAA13D,MAAA,UAGZ0C,EAHY,sBAIZiC,EAAa5F,EAAKI,cAAcgZ,cAAczV,IAJlC,CAAAg1D,EAAA13D,KAAA,eAAA03D,EAAAp3D,OAAA,SAMTqE,GANS,cASZm7G,EAAkB/gH,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eATnEo4D,EAAA13D,KAAA,EAaRwD,QAAQC,IAAI,CACpB1E,EAAKI,cAAcuC,oBAAoBo+G,EAAgB,qBACvD/gH,EAAKI,cAAcuC,oBAAoBo+G,EAAgB,2BAfvC,cAAAvmD,EAAA7B,EAAAv3D,KAAA05D,EAAAv7D,OAAAsF,EAAA,EAAAtF,CAAAi7D,EAAA,GAWhBwmD,EAXgBlmD,EAAA,GAYhBmmD,EAZgBnmD,EAAA,GAkBdkmD,IACFA,EAAoBhhH,EAAKI,cAAciB,MAAM2/G,IAGzCptE,EAAS,CACbotE,oBACAC,yBAxBgBtoD,EAAAp3D,OAAA,SA2BXvB,EAAKI,cAAciF,cAAc1B,EAAciwC,IA3BpC,yBAAA+kB,EAAAn3D,SAAA62D,EAAA14D,SAvSFA,KAqUlB2gH,SArUkB/gH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAqUP,SAAA+8D,IAAA,IAAA/5D,EAAAiC,EAAAs7G,EAAA1C,EAAA,OAAA99G,EAAAtB,EAAA0B,KAAA,SAAA68D,GAAA,cAAAA,EAAA38D,KAAA28D,EAAA18D,MAAA,UAGH0C,EAHG,aAIHiC,EAAa5F,EAAKI,cAAcgZ,cAAczV,IAJ3C,CAAAg6D,EAAA18D,KAAA,eAAA08D,EAAAp8D,OAAA,SAMAqE,GANA,cASHs7G,EAAyBlhH,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eATnFo9D,EAAA18D,KAAA,EAWSjB,EAAKI,cAAck6E,sBAAsB4mC,EAAuB,WAAY,CAACtB,UAAW,EAAGE,QAAS,WAX7G,cAWLtB,EAXK7gD,EAAAv8D,QAcPo9G,EAAQA,EAAMrjG,IAAK,SAAApN,GAAK,IAAAozG,EAMlBpzG,EAAEyyG,aAJFI,EAFkBO,EAElBP,MAKJ,MAAO,CACLpC,MARoB2C,EAGlB3C,MAMFoC,QACArB,QAVoB4B,EAIlB5B,QAOFX,WAXoBuC,EAKlBvC,eAnBCjhD,EAAAp8D,OAAA,SA8BFvB,EAAKI,cAAciF,cAAc1B,EAAc66G,IA9B7C,yBAAA7gD,EAAAn8D,SAAAk8D,EAAA/9D,SArUOA,KAsWlByhH,aAtWkB7hH,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAsWH,SAAA29D,IAAA,IAAA+iD,EAAA19G,EAAAiC,EAAA07G,EAAAJ,EAAAK,EAAAC,EAAAC,EAAAC,EAAA1b,EAAA91F,EAAAutD,EAAAM,EAAAygD,EAAAmC,EAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7/G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAy9D,GAAA,cAAAA,EAAAv9D,KAAAu9D,EAAAt9D,MAAA,UAAOogH,EAAPW,EAAAv/G,OAAA,QAAAC,IAAAs/G,EAAA,GAAAA,EAAA,GAAgB,KAGvBr+G,EAAgB,iBAClBiC,EAAa5F,EAAKI,cAAc2F,8BAA8BpC,IAJrD,CAAA46D,EAAAt9D,KAAA,eAMM,OAAbogH,IACFz7G,EAAaA,EAAWmW,OAAQ,SAAAjS,GAAC,OAAKA,EAAE00G,MAAM9mG,KAAM,SAAArJ,GAAC,OAAKA,EAAEuyG,MAAMvwG,gBAAkBgxG,EAAShxG,mBAPpFkuD,EAAAh9D,OAAA,SASJqE,GATI,cAYP07G,EAAyB,SAAC/2G,GAE9B,MADuB,CAAC,UAAW,SAAU,WAAY,WAAY,YAAa,SAAU,UAAW,YACjFA,IAGlB22G,EAAyBlhH,EAAKI,cAAcG,gBAAgB,CAAC,aAAa,YAAY,eAjB/Eg+D,EAAAt9D,KAAA,GAkBejB,EAAKI,cAAcuC,oBAAoBu+G,EAAuB,iBAlB7E,WAkBPK,EAlBOhjD,EAAAn9D,KAAA,CAAAm9D,EAAAt9D,KAAA,gBAAAs9D,EAAAh9D,OAAA,SAqBJ,IArBI,QA0Bb,IAFMigH,EAAe,GACfC,EAAoB,GAzBbC,EA0BGlyD,MAAM//C,KAAK+/C,MAAM1jD,SAASy1G,IAAgB,SAACtkG,EAAE/M,GAAH,OAASA,EAAE,IAArE81F,EAAA,EAAAA,EAAA0b,EAAAj/G,OAAAujG,IAAW91F,EAA8DwxG,EAAA1b,GACvEwb,EAAahxG,KAAKxQ,EAAKI,cAAcuC,oBAAoBu+G,EAAuB,YAAY,CAAChxG,KAC7FuxG,EAAkBjxG,KAAKxQ,EAAKI,cAAcuC,oBAAoBu+G,EAAuB,QAAQ,CAAChxG,KA5BnF,OAAAquD,EAAAt9D,KAAA,GAuCHwD,QAAQC,IAAI,CACpB1E,EAAKsgH,WACL77G,QAAQC,IAAI88G,GACZ/8G,QAAQC,IAAI+8G,GACZzhH,EAAKI,cAAck6E,sBAAsB4mC,EAAuB,iBAAkB,CAACtB,UAAW,EAAGE,QAAS,WAC1G9/G,EAAKI,cAAck6E,sBAAsB4mC,EAAuB,kBAAmB,CAACtB,UAAW,EAAGE,QAAS,WAC3G9/G,EAAKI,cAAck6E,sBAAsB4mC,EAAuB,mBAAoB,CAACtB,UAAW,EAAGE,QAAS,WAC5G9/G,EAAKI,cAAck6E,sBAAsB4mC,EAAuB,mBAAoB,CAACtB,UAAW,EAAGE,QAAS,aA9CjG,eAAAriD,EAAAc,EAAAn9D,KAAA28D,EAAAx+D,OAAAsF,EAAA,EAAAtF,CAAAk+D,EAAA,GAgCX+gD,EAhCWzgD,EAAA,GAiCX4iD,EAjCW5iD,EAAA,GAkCX4jD,EAlCW5jD,EAAA,GAmCX6jD,EAnCW7jD,EAAA,GAoCX8jD,EApCW9jD,EAAA,GAqCX+jD,EArCW/jD,EAAA,GAsCXgkD,EAtCWhkD,EAAA,GA6Db4iD,EAAUsB,UACVN,EAAeM,UACfL,EAAqBK,UACrBJ,EAAsBI,UACtBH,EAAuBG,UACvBF,EAAuBE,UAlEV1jD,EAAAt9D,KAAA,GAoEPjB,EAAKI,cAAc8G,aAAay5G,EAAhC,eAAAtiD,EAAA9+D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAq9D,EAAOl0D,EAAEoG,GAAT,IAAA0uG,EAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzjG,EAAAu/F,EAAAD,EAAAznG,EAAA2nG,EAAA,OAAAv+G,EAAAtB,EAAA0B,KAAA,SAAAm9D,GAAA,cAAAA,EAAAj9D,KAAAi9D,EAAAh9D,MAAA,cACzC29G,EAAa9yG,SAAShC,EAAE2G,IAExByxG,EAAeL,EAAsB3xG,GACrCiyG,EAAgBL,EAAuBpqG,KAAM,SAAA3J,GAAC,OAAKjC,SAASiC,EAAEyyG,aAAa/vG,MAAQmuG,IACnFwD,EAAgBL,EAAuBrqG,KAAM,SAAA3J,GAAC,OAAKjC,SAASiC,EAAEyyG,aAAa/vG,MAAQmuG,IACnFyD,EAAcT,EAAqBlqG,KAAM,SAAA3J,GAAC,OAAKjC,SAASiC,EAAEyyG,aAAa/vG,MAAQmuG,IAGrF90G,EAAEq5G,OAAS,GAToCllD,EAAAh9D,KAAA,EAYhBjB,EAAKJ,MAAM+iC,KAAKC,IAAIwgF,SAASlB,EAAavsF,aAZ1B,UAYzC2sF,EAZyCrkD,EAAA78D,KAazCmhH,EAAe,CACnBh4G,MAAO,UACPorB,YAAausF,EAAavsF,YAC1B0tF,SAAUf,EAAiB7oG,UAC3B6pG,WAAYhB,EAAiB7oG,UAC7B8pG,SAAUrB,EAAah6E,iBAEzBp+B,EAAEq5G,OAAO3yG,KAAK+xG,GAGRC,EAAc,CAClBa,SAAU,KACVE,SAAU,KACVh5G,MAAO,SACPorB,YAAausF,EAAavsF,YAC1B2tF,WAAYf,EAAae,YAE3Bx5G,EAAEq5G,OAAO3yG,KAAKgyG,IAGVL,EAjC2C,CAAAlkD,EAAAh9D,KAAA,gBAAAg9D,EAAAh9D,KAAA,GAkCbjB,EAAKJ,MAAM+iC,KAAKC,IAAIwgF,SAASjB,EAAcxsF,aAlC9B,QAkCvC8sF,EAlCuCxkD,EAAA78D,KAmCvCshH,EAAgB,CACpBW,SAAU,KACV94G,MAAO,WACPorB,YAAawsF,EAAcxsF,YAC3B2tF,WAAYb,EAAkBhpG,UAC9B8pG,SAAUpB,EAAcj6E,iBAG1Bp+B,EAAEq5G,OAAOr5G,EAAEq5G,OAAO1gH,OAAO,GAAG4gH,SAAWZ,EAAkBhpG,UACzD3P,EAAEq5G,OAAO3yG,KAAKkyG,GA5C+BzkD,EAAAh9D,KAAA,qBA+CzCohH,EA/CyC,CAAApkD,EAAAh9D,KAAA,gBAAAg9D,EAAAh9D,KAAA,GAgDbjB,EAAKJ,MAAM+iC,KAAKC,IAAIwgF,SAASf,EAAY1sF,aAhD5B,QAgDrCgtF,EAhDqC1kD,EAAA78D,KAiDrCwhH,EAAiB,CACrBS,SAAU,KACVE,SAAU,KACVh5G,MAAO,YACPorB,YAAa0sF,EAAY1sF,YACzB2tF,WAAYX,EAAgBlpG,WAGxBopG,EAAc,CAClBQ,SAAU,KACV94G,MAAO,SACPorB,YAAa0sF,EAAY1sF,YACzB4tF,SAAUlB,EAAYn6E,gBACtBo7E,WAAYX,EAAgBlpG,WAI9B3P,EAAEq5G,OAAOr5G,EAAEq5G,OAAO1gH,OAAO,GAAG4gH,SAAWV,EAAgBlpG,UAEvD3P,EAAEq5G,OAAO3yG,KAAKoyG,GAEd94G,EAAEq5G,OAAO3yG,KAAKqyG,GAtE6B,YA0EzCT,EA1EyC,CAAAnkD,EAAAh9D,KAAA,gBAAAg9D,EAAAh9D,KAAA,GA2EXjB,EAAKJ,MAAM+iC,KAAKC,IAAIwgF,SAAShB,EAAczsF,aA3EhC,QA2ErCmtF,EA3EqC7kD,EAAA78D,KA4ErC2hH,EAAgB,CACpBM,SAAU,KACV94G,MAAO,WACPorB,YAAaysF,EAAczsF,YAC3B2tF,WAAYR,EAAkBrpG,UAC9B8pG,SAAUnB,EAAcl6E,iBAG1Bp+B,EAAEq5G,OAAOr5G,EAAEq5G,OAAO1gH,OAAO,GAAG4gH,SAAWP,EAAkBrpG,UACzD3P,EAAEq5G,OAAO3yG,KAAKuyG,GArF6B,WA0F/Cj5G,EAAES,MAAQ+2G,EAAuBK,EAAezxG,IAC7BpG,EAAEq5G,OAAOzrG,KAAM,SAAAo3B,GAAC,OAAKA,EAAEvkC,QAAUT,EAAES,QA3FP,CAAA0zD,EAAAh9D,KAAA,gBAAAg9D,EAAAh9D,KAAA,GA6FlBjB,EAAKJ,MAAM+iC,KAAKC,IAAIwgF,SAASt5G,EAAE05G,UA7Fb,QA6FvCR,EA7FuC/kD,EAAA78D,KA8FvC6hH,EAAW,CACf14G,MAAOT,EAAES,MACT84G,SAAU,KACVE,SAAU,KACV5tF,YAAa7rB,EAAE05G,SACfF,WAAYN,EAAavpG,WAG3B3P,EAAEq5G,OAAOr5G,EAAEq5G,OAAO1gH,OAAO,GAAG4gH,SAAWL,EAAavpG,UACpD3P,EAAEq5G,OAAO3yG,KAAKyyG,GAvG+B,QA0G/Cn5G,EAAE00G,MAAQA,EAAMziG,OAAQ,SAAA1N,GAAC,OAAKvC,SAASuC,EAAEuwG,cAAcA,IA1GRsE,EA4GiBhB,EAAa1B,aAArE/gG,EA5GuCyjG,EA4GvCzjG,YAAau/F,EA5G0BkE,EA4G1BlE,WAAYD,EA5GcmE,EA4GdnE,QAASznG,EA5GK4rG,EA4GL5rG,OAAQ2nG,EA5GHiE,EA4GGjE,UAClDn1G,EAAE2P,UAAY6oG,EAAmBA,EAAiB7oG,UAAY,KAI9D3P,EAAEzQ,MAAQomB,EAAYwE,MAAM,iBAAY,GAAGksC,QAAQ,KAAK,KAAO,WAC/DrmD,EAAE2V,YAAcA,EAAYwE,MAAM,cAClCna,EAAE2V,YAAY4gD,QACdv2D,EAAE2V,YAAc3V,EAAE2V,YAAY5O,KAAK,MAOnC8vG,EAAUzwG,GAAK,CACbuzG,IAAI35G,EAAE25G,IACNzwF,QAAQ,CACN1b,SACAynG,UACAE,YACAD,cAEFvuG,GAAGmuG,EACHvlH,MAAMyQ,EAAEzQ,MACRkR,MAAMT,EAAES,MACRi0G,MAAM10G,EAAE00G,MACR2E,OAAOr5G,EAAEq5G,OACTO,SAAS55G,EAAE45G,SACXF,SAAS15G,EAAE05G,SACXG,SAAS75G,EAAE65G,SACXC,SAAS95G,EAAE85G,SACXC,SAAS/5G,EAAE+5G,SACXpqG,UAAU3P,EAAE2P,UACZ05B,WAAWrpC,EAAEqpC,WACb1zB,YAAY3V,EAAE2V,YACdqkG,aAAah6G,EAAEg6G,cAhJ8B,yBAAA7lD,EAAAz8D,SAAAw8D,EAAAr+D,SAA3C,gBAAAi/D,EAAAC,GAAA,OAAAR,EAAAn8D,MAAAvC,KAAAwC,YAAA,IApEO,WAwNbnC,EAAKI,cAAc4F,8BAA8BrC,EAAcg9G,GAE9C,OAAbU,EA1NS,CAAA9iD,EAAAt9D,KAAA,gBAAAs9D,EAAAh9D,OAAA,SA2NJo/G,GA3NI,eAAApiD,EAAAh9D,OAAA,SA6NJo/G,EAAU5kG,OAAQ,SAAAjS,GAAC,OAAKA,EAAE00G,MAAM9mG,KAAM,SAAArJ,GAAC,OAAKA,EAAEuyG,MAAMvwG,gBAAkBgxG,EAAShxG,mBA7N3E,yBAAAkuD,EAAA/8D,SAAA88D,EAAA3+D,SArWbA,KAAKU,SAAST,ICwZHmkH,8MA9Zbx5G,MAAQ,CACN03B,WAAW,CACTjM,OAAO,KACPvP,SAAQ,GAEVu9F,YAAY,GACZC,UAAU,KACV5F,cAAc,KACd6F,gBAAgB,KAChBC,sBAAqB,EACrBC,yBAAwB,EACxBC,0BAAyB,KAI3B11D,aAAe,OACfvuD,cAAgB,OAChBkkH,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,cACzCT,KAAKgvD,aAAehvD,KAAKS,cAAckzE,uLAIX3zE,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,cACxDZ,KAAKC,MAAMuB,yCAK1BsD,QAAQC,IAAI,CACpB/E,KAAK2kH,eAAe5E,sBACpB//G,KAAK2kH,eAAehG,mBAAmB3+G,KAAKC,MAAMuB,SAClDxB,KAAK2kH,eAAevG,mBAAmBp+G,KAAKC,MAAMuB,iDANlDojH,OACAL,OACAlG,OAQEiG,EAAY,KACZ5F,EAAgB,KAChBgG,GAA2B,GAE3BrG,oCAEoBr+G,KAAK2kH,eAAelG,iBAAiBz+G,KAAKC,MAAMuB,iBAAtEk9G,SAGMmG,EAAiBD,EAAiBxoG,OAAQ,SAAAlO,GAAC,OAAKA,EAAE2yG,aAAaiE,UAAUp0G,gBAAkB2tG,EAAgB3tG,gBAAkB6T,MACnI+/F,IAAYO,GAAiBA,EAAehE,aAAakE,WACzDL,EAA2BJ,GAA2B,+CAAdA,mCAGnCtkH,KAAKiM,SAAS,CACnBq4G,YACA5F,gBACA6F,kBACAG,+DAGG,6RA4DaM,kCAEhBxG,EAAWx+G,KAAK4K,MAAM65G,wBAA0BzkH,KAAK4K,MAAMy5G,YAAcrkH,KAAKC,MAAMuB,QACpFwjH,IACFxG,EAAW,KAAK,IAAI3mB,OAAO,KAGP73F,KAAKS,cAAc+2E,aAAagnC,6CAE7C,UAGHv8G,EAAW,SAACoa,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBpkB,cAAe,aACfC,YAAa,mBAGXke,IACFiG,EAAUlkB,WAAa7a,EAAK5I,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0L,EAAK5I,cAAcsjB,yBAAyBqkB,GAG9C,IAAM/8B,EAAW,CACfi3B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,IAIsB,YAAdzK,EAAG1e,SAErB0N,EAASi5G,UAAU9F,EACnBnzG,EAASo5G,yBAAwB,EACjCp5G,EAASq5G,0BAA0BM,EACnC37G,EAAKkE,YAGPlE,EAAK4C,SAASZ,IAGVnJ,EAAkB,SAACma,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl/B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKNr2B,KAAK2kH,eAAepG,gBAAgBv+G,KAAKC,MAAMuB,QAAQg9G,EAASv8G,EAASC,GAEzElC,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,iJAKC1Y,GACb,IAAMi2G,EAAcj2G,EAAEtO,OAAO0O,MACvBg2G,EAAuBxkH,KAAKS,cAAc+2E,aAAa6sC,GAC7DrkH,KAAKiM,SAAS,CACZo4G,cACAG,4EAIuBC,GACzBzkH,KAAKiM,SAAS,CACZw4G,gLAKFzkH,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,4PAMZ9mB,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,YACkB+B,EAAU3J,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAKuN,iJAIA,IAAAc,EAAArO,KACP,OAAOA,KAAK4K,MAAM8zG,cAChBl/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHsV,GAAI,EACJvlB,MAAO,EACPoF,aAAc,EACdyK,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB7L,gBAAiB,UACjB2f,UAAW,sCAEXve,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,UACPsT,UAAW,UALb,YAOYzR,KAAK4K,MAAM8zG,cAAcj5G,IAAI,MAAMmL,QAAQ,GAPvD,IAO4D5Q,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,cAPrH,4BAUGZ,KAAK4K,MAAM85G,0BAA4B1kH,KAAK4K,MAAM05G,YAActkH,KAAK4K,MAAM65G,wBAC1EjlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,IACZ7Q,MAAO,UACPa,SAAU,OACVyS,UAAW,UALb,yCAOyCzR,KAAK4K,MAAM05G,WAGpD9kH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,IACZ7Q,MAAO,UACPa,SAAU,OACVyS,UAAW,UAGTzR,KAAK4K,MAAM65G,wBAA0B,iDAAmD,qFAI1FzkH,KAAK4K,MAAM65G,yBACTjlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ3H,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAO/M,KAAK4K,MAAM45G,qBAAuB,WAAa,WACtDrmH,MAAQ6B,KAAK4K,MAAM45G,qBAAuBxkH,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,UAAY,aAEpG4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJsC,WAAY,IACZhQ,SAAU,OACVb,MAAO,UACPsT,UAAW,QALb,4BAUFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,WACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJsC,WAAY,IACZhQ,SAAU,OACVb,MAAO,UACPsT,UAAW,QALb,wBAkBdzR,KAAK4K,MAAM65G,yBACTjlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJsH,IAAK,EACLxP,KAAM,OACNme,UAAU,EACVroB,aAAc,EACd0P,WAAY,IACZyC,UAAW,SACXvX,MAAO,CAAC,OAAO,QACf6jB,UAAW,kBACXvP,MAAOxO,KAAK4K,MAAMy5G,YAClBx8F,YAAW,0BACX9F,SAAU/hB,KAAKilH,eAAeh6G,KAAKjL,MACnC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,WAKjDyD,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,wBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,iCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAGhDA,KAAK4K,MAAM85G,2BAA6B1kH,KAAK4K,MAAM65G,wBACtDjlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNwZ,UAAW,MACXtH,QAAU,SAAAvQ,GAAC,OAAIC,EAAKkwG,iBAAgB,KAHtC,qBAiBEv+G,KAAK4K,MAAM85G,0BAA4B1kH,KAAK4K,MAAM65G,0BACpDjlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNkS,QAAU,SAAAvQ,GAAC,OAAIC,EAAKkwG,iBAAgB,IACpCvmH,SAAWgI,KAAK4K,MAAM65G,0BAA4BzkH,KAAK4K,MAAM45G,sBAH/D,oBASJhlH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkI,UAAU,EACVxpB,MAAO,UACPgT,MAAK,+BACLijB,QAASp0B,KAAK4K,MAAM65G,wBACpB1iG,SAAW,SAAA3T,GAAC,OAAIC,EAAK62G,2BAA2B92G,EAAEtO,OAAOs0B,aAG3D,YA5ZsBj0B,aCmPfglH,8MA5Obv6G,MAAQ,CACN4yG,UAAU,KACVkB,cAAc,KACd0G,gBAAe,KAIjBp2D,aAAe,OACfvuD,cAAgB,OAChBkkH,eAAiB,OAiCjB5H,mDAAe,SAAA97G,EAAOorD,GAAP,OAAAtrD,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbjB,EAAKI,cAAcsjB,yBAAyB,CAC1CE,YAAa,SACbD,cAAe,YAGsB,oBAA5B3jB,EAAKJ,MAAM88G,cACpB18G,EAAKJ,MAAM88G,aAAa1wD,GARbjrD,EAAAE,KAAA,EAWAjB,EAAKJ,MAAM+8G,QAAQD,aAAa1wD,GAXhC,cAAAjrD,EAAAQ,OAAA,SAAAR,EAAAK,MAAA,wBAAAL,EAAAS,SAAAZ,EAAAjB,0IA9BTA,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,cACzCT,KAAKgvD,aAAehvD,KAAKS,cAAckzE,uKAIvC3zE,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,sQAIuBpJ,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,OAAO,cACxDZ,KAAKC,MAAMuB,wCACZxB,KAAKgvD,aAAa5rD,mBAAmBpD,KAAKC,MAAMuB,uBAAlEg8G,2BACCx9G,KAAKiM,SAAS,CACnBuxG,+CAGG,+OAkBPx9G,KAAKC,MAAMqvC,YAAY,KAAI,yIAGjB81E,GACVplH,KAAKiM,SAAS,CACZm5G,oDAIK,IAAA/7G,EAAArJ,KACDqlH,EAAcrlH,KAAKC,MAAMolH,YACzBC,EAAetlH,KAAKC,MAAMqlH,aAC1BC,EAAkBvlH,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,cACnEs3F,EAAoBl4F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YACrE4kH,EAAiBxlH,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAAc,IAAIhB,OAAO4H,KAAKxH,KAAKC,MAAMqH,qBAAqB,GACrI,OACE9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,GAEJlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACP8P,cAAe,MACfC,eAAgB,gBAChBF,WAAY,CAAC,WAAW,UACxB6xB,aAAY,aAAAh3B,OAAezL,EAAMR,OAAO4D,UAExCiD,EAAAC,EAAAC,cAAC+lH,GAAD7lH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE29G,YAAa59G,KAAK49G,YAAY3yG,KAAKjL,SAErCR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ1Y,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,WAAW,WAGtBmuF,GAAqBmtB,EACnB7lH,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXH,UAAU,SACVxZ,KAAKzM,KAAKC,MAAMmL,SAAW,QAAU,UAEvCwT,YAAc,SAACxQ,GAAQ/E,EAAKpJ,MAAMqvC,YAAYi2E,GAAgB,KAE9D/lH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,CAAC,EAAE,GACPjW,KAAM,QACNtO,MAAO,QACP4O,KAAM,cAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZ7Q,MAAO,QACPa,SAAU,CAAC,EAAE,IAHf,gBASFsmH,GACF9lH,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXH,UAAU,SACVxZ,KAAKzM,KAAKC,MAAMmL,SAAW,QAAU,UAEvCwT,YAAc,SAACxQ,GAAQ/E,EAAKpJ,MAAMqvC,YAAYk2E,GAAe,KAE7DhmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,CAAC,EAAE,GACPjW,KAAM,QACNtO,MAAO,QACP4O,KAAM,cAERvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZ7Q,MAAO,QACPa,SAAU,CAAC,EAAE,IAHf,iBAwCVgB,KAAK4K,MAAM4yG,WAAax9G,KAAK4K,MAAM4yG,UAAUzmG,GAAG,IAC9CvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHsV,GAAI,EACJvlB,MAAO,EACPoF,aAAc,EACdyK,WAAY,SACZE,eAAgB,SAChB7L,gBAAiB,UACjB4L,cAAe,CAAC,SAAS,OACzB+T,UAAW,sCAEXve,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,IACZ7Q,MAAO,UACPa,SAAU,OACVyS,UAAW,UAJb,0CAOEjS,EAAAC,EAAAC,cAAC24F,EAAD,CACE3rF,GAAI,EACJsC,WAAY,IACZ7Q,MAAO,UACPa,SAAU,OACVwoB,WAAY,UACZpC,KAAM,uEANR,iBAPF,cAgBwBplB,KAAK4K,MAAM4yG,UAAU5sG,QAAQ,GAhBrD,0BAkBApR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,CAAC,EAAE,GACP+S,GAAI,CAAC,EAAE,GACPhT,KAAM,QACNkS,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKu0G,aAAY,KAJlC,cAWJ59G,KAAKC,MAAMqlH,cACT9lH,EAAAC,EAAAC,cAACgmH,GACK1lH,KAAKC,OAGfT,EAAAC,EAAAC,cAACimH,GAAD/lH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE8hC,OAAQ/hC,KAAK4K,MAAMw6G,eACnBrH,cAAe/9G,KAAKuN,SAAStC,KAAKjL,MAClCq/B,WAAY,SAAAjxB,GAAC,OAAI/E,EAAKu0G,aAAY,eAvOdz9G,aC0nBfylH,8MAhnBbh7G,MAAQ,CACNg6F,KAAK,GACLvxD,UAAU,KACV4gE,YAAY,KACZ4R,aAAa,KACbC,cAAc,KACdC,eAAe,KACfjoB,gBAAgB,KAChB/jE,gBAAgB,KAChBisF,iBAAgB,EAChBrV,mBAAmB,KACnBgM,uBAAuB,KACvBH,wBAAwB,QAG1ByJ,UAAY,OAGZxlH,cAAgB,OA0EhB8+B,WAAa,WACXl/B,EAAK4L,SAAS,CACZgoG,YAAa,UAIjBzqF,iBAAmB,SAAC08F,EAAWC,GAE7B9lH,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfC,YAAaiiG,EACbhiG,WAAY,iBAGd7jB,EAAK4L,SAAS,CACZi6G,aACAC,gBACA,WACA9lH,EAAK+0G,eAAe,gBAIxBA,eAAiB,SAACnB,GAChB5zG,EAAK4L,SAAS,CACZgoG,mBA2TJva,4BAAS,SAAAz4F,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPjB,EAAKJ,MAAM88G,aAAa,SAAS,UAD1B37G,EAAAE,KAAA,EAEDjB,EAAKJ,MAAMuvG,SAAS,UAFnB,wBAAApuG,EAAAS,SAAAZ,EAAAjB,oFA3ZHA,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,OAG9C6K,OAAOrK,cAAgBT,KAAKS,8KAItB4yC,EAAYrzC,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAC5Dw1C,EAAap2C,KAAKS,cAAcG,gBAAgB,CAAC,eACjDgkG,EAAOhlG,OAAO4H,KAAK4uC,GAAYh6B,OAAQ,SAAA+yB,GAAC,OAAOiH,EAAWjH,GAAGmH,aAAe96B,IAAI,SAAA4yB,GAAQ,MAAK,CAC/FwiE,QAAQ,GACRzyG,MAAM,OACNinG,UAAS,EACT94D,MAAM+G,EAAU,IAAIjF,EACpBj9B,MAAMilC,EAAWhI,GAAU10C,MAC3BujC,MAAMmZ,EAAWhI,GAAU98B,KAC3B6iC,cAAciC,EAAWhI,GAAUsI,aACnClkB,QAAQ4jB,EAAWhI,GAAUjwC,MAC7B+pB,UAAUkuB,EAAWhI,GAAUlmB,cAK7BwqF,EAAc1yG,KAAKS,cAAcG,gBAAgB,CAAC,WAGxC+D,UACRyhH,EAAcxmH,OAAOC,OAAO,CAChC+wG,QAAQ,GACRxL,UAAS,EACTl9E,UAAUm+F,IACV3T,EAAYz+D,QAEd2wD,EAAK/zF,KAAKu1G,IAIZxhB,EAAK/zF,KACH,CACES,KAAK,YACLH,MAAM,QACNqhB,QAAQ,UACRr0B,MAAM,YACN+pB,UAAUskF,GACVpH,UAAS,EACT94D,MAAM,mBACNskE,QAAQ,KAKZhM,EAAK/zF,KACH,CACES,KAAK,QACLH,MAAM,QACNhT,MAAM,YACN+pB,UAAUuoF,GACVrL,UAAS,EACT94D,MAAM,mBACN9Z,QAAQxyB,KAAKC,MAAM9G,MAAMR,OAAOiC,QAChCg2G,QAAQhxG,OAAO+X,OAAO3X,KAAKS,cAAcG,gBAAgB,CAAC,WAAWwb,OAAQ,SAAAkqG,GAAC,OAAKA,EAAE3hH,qBAInF3E,KAAKiM,SAAS,CAClB24F,+RAiCe3wD,EAAaj0C,KAAKC,MAA3Bmb,MAAS64B,OAEXZ,EAAYrzC,KAAKS,cAAcG,gBAAgB,CAAC,YAAY,cAC9DilH,EAAexyE,EAEfyyE,EAAgB,KAChBr4G,EAAgB,KAChBs4G,EAAiB,KACjB1+G,EAAmB,KAGnB4sC,EAAOkqD,UACT4nB,EAAiB9xE,EAAOkqD,QAClBid,EAASnnE,EAAOmnE,OAChBttE,EAASmG,EAAOnG,OAEhBy4E,EAAsB3mH,OAAO4H,KAAKxH,KAAKC,MAAMqH,qBAAqB+tB,SAAS0wF,EAAer1G,eAC1F81G,EAAqBpL,GAAUx7G,OAAO4H,KAAKxH,KAAKC,MAAMqH,qBAAqB+tB,SAAS+lF,EAAO1qG,eAE7F61G,GAAuBC,GAEzBX,GAAgB,KADhBx+G,EAAmBk/G,EAAsBR,EAAiB3K,GAIpDqL,EAAkBrL,GAAUx7G,OAAO4H,KAAKxH,KAAKC,MAAMqH,oBAAoBD,IAAmBguB,SAAS+lF,EAAO54F,eAC1GkkG,EAAkB54E,GAAUluC,OAAO4H,KAAKxH,KAAKC,MAAMqH,oBAAoBD,IAAmBguB,SAASyY,EAAOtrB,gBAC5GikG,GAAmBC,KACrBj5G,EAAgBg5G,EAAkBrL,EAAO54F,cAAgBsrB,EAAOtrB,cAChEqjG,GAAgB,IAAIp4G,EAEhB84G,IACFT,EAAgBjM,OAIpBgM,GAAgB,IAAI5xE,EAAOkqD,QAEvBlqD,EAAOmnE,QAAUnnE,EAAOmnE,OAAOt4G,SACjC+iH,GAAgB,IAAI5xE,EAAOmnE,UAS3BxW,EAAO5kG,KAAK4K,MAAMg6F,KAEpB9G,EAAkB,KAClB6S,EAAqB,KAEzB/L,EAAK16F,QAAQ,SAAAgsB,GACXA,EAAEkvE,UAAW,EACb,IAAMuhB,EAAetzE,EAAU,IAAIY,EAAOkqD,QACtC0nB,EAAan1G,gBAAkBwlB,EAAEoW,MAAM57B,gBAAoBwlB,EAAE06E,QAAQ9tG,QAAUozB,EAAEoW,MAAM57B,gBAAkBi2G,EAAaj2G,eACxHwlB,EAAEkvE,UAAW,EACS,OAAlB0gB,IACFA,EAAgB5vF,EAAEhO,YAEXgO,EAAE06E,QAAQ9tG,QACnBozB,EAAE06E,QAAQ1mG,QAAQ,SAAA08G,GAChBA,EAAKxhB,UAAW,GACElvE,EAAEoW,MAAM,IAAIs6E,EAAKt6E,OACrB57B,gBAAkBm1G,EAAan1G,gBAC3CwlB,EAAEkvE,UAAW,EACbwhB,EAAKxhB,UAAW,EAGM,OAAlB0gB,IAEAA,EADEc,EAAK1+F,UACS0+F,EAAK1+F,UAELgO,EAAEhO,YAMpB0+F,EAAKxhB,WACPuL,EAAqBiW,KAOvB1wF,EAAEkvE,WACJtH,EAAkB5nE,KAOjB4vF,4CACI9lH,KAAKsvC,YAAY,KAAI,6BAIxBtvC,KAAKC,MAAM2uC,iBAAiBvnC,EAAiBoG,4BAE7CzN,KAAKiM,SAAS,CAClB24F,OACA3wD,SACAZ,YACAwyE,eACAC,gBACAC,iBACAjoB,kBACA6S,yKAKE3wG,KAAKimH,WACPn7G,OAAOg6B,aAAa9kC,KAAKimH,uKAM3BjmH,KAAKoJ,qBACCpJ,KAAK6mH,kBACX7mH,KAAK8uG,iRAKL9uG,KAAKimH,UAAYn7G,OAAOu5B,WAAW,WAC5Bh7B,EAAKpJ,MAAM6mH,oBAAuBz9G,EAAKpJ,MAAMic,sBAChD7S,EAAK4C,SAAS,CACZ+5G,iBAAgB,KAGpB,KAEGhmH,KAAKC,MAAM+iC,8CACPhjC,KAAKC,MAAMuvG,sBACRxvG,KAAKC,MAAM6mH,4DACd9mH,KAAKC,MAAM8mH,yBACR/mH,KAAKC,MAAMic,+DACdlc,KAAKC,MAAM+mH,sCAGpBhnH,KAAKoJ,sBACCpJ,KAAK6mH,mBACX7mH,KAAK8uG,aACL9uG,KAAKinH,oMAGkB97G,EAAUqC,6FAEjCxN,KAAKoJ,YAEC89G,EAAa/7G,EAAUiQ,MAAM64B,OAC7BA,EAASj0C,KAAKC,MAAMmb,MAAM64B,OAE5B9zB,KAAKC,UAAU8mG,KAAgB/mG,KAAKC,UAAU6zB,mCAC1Cj0C,KAAKiM,SAAS,CAClB65G,cAAc,MACb,WACDz3G,EAAKygG,sBAIH/yF,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDkuG,EAAkB1vG,KAAKC,MAAMoH,kBAAoB8D,EAAU9D,mBAAqBrH,KAAKC,MAAMoH,iBAC3Fy/G,EAAqB9mH,KAAKC,MAAM6mH,oBAAsB37G,EAAU27G,qBAAuB9mH,KAAKC,MAAM6mH,mBAClG5qG,EAAuBlc,KAAKC,MAAMic,sBAAwB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,sBAE1GH,GAAkB+qG,GAAsB5qG,GAAwBwzF,IAClE1vG,KAAKinH,sQAMHjnH,KAAKC,MAAMwN,eAAkBzN,KAAKC,MAAM6mH,oBAAuB9mH,KAAKC,MAAMic,sBAAyBlc,KAAKC,MAAMqH,qBAAwBtH,KAAKC,MAAM+G,yDAC5I,6BAGHhH,KAAKmnH,8CACLnnH,KAAKonH,2CACLpnH,KAAKqnH,qSAKLC,EAA2F,OAAxEtnH,KAAKS,cAAcg4D,cAAc,wBAAuB,EAAM,OACnFz4D,KAAKC,MAAMwN,eAAkB65G,GAAqBtnH,KAAKC,MAAM+G,yDACxD,6BAGqBhH,KAAKS,cAAc06B,mCAA3CpB,kBAC+B/5B,KAAKS,cAAcgzF,2BAA2B,kBAA7EkpB,WAID5iF,GAAmBn6B,OAAO4H,KAAKuyB,GAAiBj3B,OAAO,GAAO65G,GAA0B/8G,OAAO4H,KAAKm1G,GAAwB75G,OAAO,uBAClH,sBACA9C,KAAK4K,MAAMqpG,oCAC7Bj0G,KAAKiM,SAAS,CACZgoG,YAHgB,UAIhBl6E,kBACA4iF,6CALgB,4CAYf,kRAIF38G,KAAKC,MAAMuB,SAAYxB,KAAKC,MAAM6mH,oBAAuB9mH,KAAKC,MAAMic,8DAChE,iBAILlc,KAAKC,MAAMuB,SAAsC,OAA3BxB,KAAK4K,MAAMqpG,gCAC/BsT,GAAgB,GAEdC,EAAoBxnH,KAAKS,cAAcG,gBAAgB,CAAC,SAAS,aAEjD+D,SAAW+/B,eAGzB+iF,GAAW,IAAIruG,MAAOI,UACtB4xC,EAAgBprD,KAAKC,MAAMuB,QAAQkP,eACrCqrG,EAAYr3E,aAAaC,QAAQ,aAAexkB,KAAKykB,MAAMF,aAAaC,QAAQ,cAAgB,IAGrFymB,GAOH2wD,EAAU3wD,GAAe4wD,WAC7B0L,EAAWv7G,SAAS4vG,EAAU3wD,GAAes8D,UAEnDH,GAD2BE,EAASC,GAAU,KACXF,EAAkBr0E,YATrD4oE,EAAU3wD,GAAiB,CACzB4wD,UAAW,EACX0L,SAAWD,GAEbF,GAAgB,GAQdA,IACFxL,EAAU3wD,GAAes8D,SAAWD,EACpCznH,KAAKS,cAAcokC,gBAAgB,YAAY1kB,KAAKC,UAAU27F,MAI5D9H,EAAcsT,EAAgB,UAAYvnH,KAAK4K,MAAMqpG,YACvDj0G,KAAK4K,MAAMqpG,cAAgBA,0BAC7Bj0G,KAAKiM,SAAS,CACZgoG,kCAGKA,oCAIJ,yRAKFj0G,KAAKC,MAAMuB,SAAYxB,KAAKC,MAAM6mH,oBAAuB9mH,KAAKC,MAAMic,8DAChE,gBAIHyrG,EAAsB3nH,KAAKS,cAAcG,gBAAgB,CAAC,SAAS,UAAU,YAC7EgnH,EAA2F,OAAxE5nH,KAAKS,cAAcg4D,cAAc,wBAAuB,EAAM,MAExD,OAA3Bz4D,KAAK4K,MAAMqpG,cAAwB0T,IAAuBC,GAAqB5nH,KAAK4K,MAAM4xG,yDACtDx8G,KAAKS,cAAcgzF,2CAAnD+oB,SACAvI,EAAcuI,GAA2B58G,OAAO4H,KAAKg1G,GAAyB15G,OAAO,EAAI,UAAY,KACrGuI,EAAW,CACf4oG,cACAuI,2BAEFx8G,KAAKiM,SAASZ,qBACP4oG,oCAGF,6IAGG9V,GAAyB,IAAjBknB,IAAiB7iH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAG/B6iH,IACFlnB,EAAUA,EAAQ3tC,QAAQxwD,KAAK4K,MAAMyoC,UAAW,IAAI,KAGtD,IAAMw0E,EAAWxC,EAAcrlH,KAAK4K,MAAMyoC,UAAW,IAAM8qD,EAAUA,EACrErzF,OAAOi2C,SAAS7zB,KAAK26F,EAGrB7nH,KAAKS,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfC,YAAa,cACbC,WAAY2jG,IAGd/8G,OAAOmmD,SAAS,EAAG,uCAQTxjD,GAEV,GADAA,EAAgBA,EAAc+U,cAC1B5iB,OAAO4H,KAAKxH,KAAKC,MAAM+G,iBAAiBquB,SAAS5nB,GAAe,CAClE,IAAMq6G,EAAa,GAGf9nH,KAAK4K,MAAMm7G,eAAer1G,gBAAkB1Q,KAAKC,MAAMoH,iBAAiBqJ,eAC1Eo3G,EAAWj3G,KAAK7Q,KAAK4K,MAAMm7G,gBAI7B+B,EAAWj3G,KAAK7Q,KAAKC,MAAMoH,kBAG3BygH,EAAWj3G,KAAKpD,GAEhBzN,KAAKsvC,YAAYw4E,EAAW52G,KAAK,wCAKnC,IAAM62G,EAAgB/nH,KAAK4K,MAAMk7G,cAAgB9lH,KAAK4K,MAAMk7G,cAAgB,KAC5E,OACEtmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,OACPqX,SAAU,QACVvH,cAAe,MACf/K,OAAQ,CAAE6L,OAAOgO,YAAY,GAAI,KAAK,SACtC1a,gBAAiB,CAAC,cAAc,UAEhCoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwQ,OAAQ,EACRqB,OAAQ,EACRtX,MAAO,CAAC,EAAE,EAAE,GACZ8P,cAAe,SACfuH,SAAU,CAAC,QAAQ,aAEnB/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACNjQ,MAAO,CAAC,QAAQ,QAChB+E,OAAQ,CAAC,OAAO,UAEhBO,EAAAC,EAAAC,cAACsoH,GAADpoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2kG,KAAM5kG,KAAK4K,MAAMg6F,UAIvBplG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJD,GAAI,CAAC,EAAE,GACPhQ,GAAI,EACJxX,MAAO,CAAC,EAAE,EAAE,GACZujB,MAAO,CACLimF,UAAU,SACVukB,UAAU,UAEZj+G,cAAe,UACf5L,gBAAiB,eAGd4B,KAAKC,MAAM6mH,oBAAuB9mH,KAAKC,MAAMic,sBAAyB6rG,EAiErEvoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACwoH,GAADtoH,OAAAC,OAAA,CACEyvC,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,OAC/BA,KAAKC,QAGT8nH,GACEvoH,EAAAC,EAAAC,cAACqoH,EAADnoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEmb,MAAO,CAAE64B,OAAO,IAChBpG,UAAW7tC,KAAK4K,MAAMqpC,OACtBlxB,YAAa/iB,KAAK+iB,YAAY9X,KAAKjL,MACnCsvC,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,MACnC89F,gBAAiB99F,KAAK4K,MAAMkzF,gBAC5B6S,mBAAoB3wG,KAAK4K,MAAM+lG,mBAC/BnnF,iBAAkBxpB,KAAKwpB,iBAAiBve,KAAKjL,UAlFrDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPsS,UAAW,OACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjK,KAAK4K,MAAMo7G,gBAiBVxmH,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,EACHvlB,MAAM,CAAC,EAAE,OAGXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,qCAMoCjS,EAAAC,EAAAC,cAAA,WANpC,yDAQAF,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAK05F,OAAOzuF,KAAKjL,OALhC,YAxCJR,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTsxB,SAAS,EACThtB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACTic,GAAG,EACH/b,cAAc,UAEhBnR,KAAQmH,KAAKC,MAAM6mH,mBAA+C9mH,KAAKC,MAAMic,qBAAgD,oBAAzB,uBAA5D,yBAmEtD1c,EAAAC,EAAAC,cAACyoH,GAADvoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEo/B,WAAYr/B,KAAKu/B,WACjB+P,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,MACnC+5B,gBAAiB/5B,KAAK4K,MAAMmvB,gBAC5BgI,OAAmC,YAA3B/hC,KAAK4K,MAAMqpG,YACnB0I,uBAAwB38G,KAAK4K,MAAM+xG,0BAErCn9G,EAAAC,EAAAC,cAAC0oH,GAADxoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEo/B,WAAYr/B,KAAKu/B,WACjB+P,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,MACnC+hC,OAAmC,YAA3B/hC,KAAK4K,MAAMqpG,YACnBuI,wBAAyBx8G,KAAK4K,MAAM4xG,2BAEtCh9G,EAAAC,EAAAC,cAAC2oH,GAAD,CACEhpF,WAAYr/B,KAAKu/B,WACjB7lC,MAAOsG,KAAK4K,MAAMs7G,WAClB/J,QAASn8G,KAAK4K,MAAMu7G,aACpBpkF,OAAmC,YAA3B/hC,KAAK4K,MAAMqpG,cAGrBz0G,EAAAC,EAAAC,cAAC4oH,GAAD,CACEjpF,WAAYr/B,KAAKu/B,WACjB/9B,QAASxB,KAAKC,MAAMuB,QACpBk/C,SAAU1gD,KAAKC,MAAMygD,SACrB7B,QAAS7+C,KAAKC,MAAM4+C,QAAQ0pE,QAC5BhoH,UAAWP,KAAKC,MAAMwN,cACtBg1D,aAAcziE,KAAKC,MAAMwiE,aACzB+lD,cAAexoH,KAAKC,MAAMwN,cAC1Bs0B,OAAmC,YAA3B/hC,KAAK4K,MAAMqpG,sBA1mBL9zG,oECqBTsoH,oLAzBX,OACEjpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8d,MAXa,CAClBlM,SAAU,QACVpB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPhW,MAAO,OACPkE,gBAAiB,QACjBoT,OAAQ,MAIiBrH,EAAG,GAC1B3K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwK,EAAG,GACN3K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,UAAU5O,MAAM,OAAOsO,KAAK,QAEzCjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,UACnBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,QAAlB,0CAGAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BACwBK,KAAKC,MAAM4+C,QAAQl3B,SAAS5a,KADpD,wDAE8C,IAC5CvN,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWloB,MAAO,CAAEyO,cAAe,eAChClsB,KAAKC,MAAM4+C,QAAQ0pE,QAAQx7G,MACjB,IALf,6DAtBqBslB,IAAMlyB,WCkBxBuoH,oLAfX,OACElpH,EAAAC,EAAAC,cAAA,YAC4C,IAAxCM,KAAKC,MAAM4+C,QAAQ2kD,kBAA8BxjG,KAAKC,MAAM+iC,KAE1DxjC,EAAAC,EAAAC,cAACipH,GAAD,CACE9pE,QAAS7+C,KAAKC,MAAM4+C,UAGtB,aAVcxsB,IAAMlyB,0CCiIjByoH,8MA/HbC,cAAgB,WACd,OACErpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CACEz5F,SAAU,EACVgQ,WAAY,EACZ4Q,WAAY,UACZmG,GAAI,GAJN,uCASC+iG,KAAWC,iBACVvpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,8GAE6C,IAC3CvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,qBACL1rB,MAAM,oBACNoG,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,iCACL1rB,MAAM,gBACNoG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,+BACL1rB,MAAM,kBACNoG,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,qGAE0C,IACxCvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,8BACL1rB,MAAM,yBACNoG,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,2BACL1rB,MAAM,2BACNoG,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,iCACL1rB,MAAM,yBACNoG,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,iCACL1rB,MAAM,0BACNoG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWqjF,MAAI,GAAf,0BADF,2DAE8C,IAC5CxpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,qBACL1rB,MAAM,oBACNoG,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,iCACL1rB,MAAM,gBACNoG,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,+BACL1rB,MAAM,kBACNoG,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACG58B,KAAK6oH,0BAxHex2F,IAAMlyB,WCiDxB8oH,oLAxCX,OACEzpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwK,EAAG,EAAGuoB,SAAU,SACpBlzB,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE+H,UAAQ,EACR9qB,KAAM,QACNnT,MAAO,YACPoT,SAAU,WACVtB,IAAK,EACLC,MAAO,EACPuP,GAAI,EACJiD,GAAI,EACJ/D,QAAS3e,KAAKC,MAAMo/B,aAGtB7/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUC,eAAgB,iBAC7CzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAU8b,GAAI,GAClCvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,UAAU5O,MAAM,OAAOsO,KAAK,QAGzCjN,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CAAY1yE,GAAI,GAAhB,uBAEAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,4GAKAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,4FACLtlB,OAAO,SAASC,IAAI,gCAEpBP,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,SAArB,qCAjCc4lB,IAAMlyB,WC0CnB+oH,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBr+G,OAAO2hD,SAChB08D,EAAoD,qBAA/Br+G,OAAO2hD,SAAS28D,WACL,qBAAhBt+G,OAAOk4B,OACvBmmF,EAAgE,qBAA3Cr+G,OAAOk4B,KAAKkqC,gBAAgBk8C,YAA8Bt+G,OAAOk4B,KAAKkqC,gBAAgBk8C,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBv+G,OAAOk4B,MAA+D,qBAAhCl4B,OAAOk4B,KAAKkqC,kBACL,qBAAxCpiE,OAAOk4B,KAAKkqC,gBAAgBo8C,SAA2Bx+G,OAAOk4B,KAAKkqC,gBAAgBo8C,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBz+G,OAAOk4B,MAA+D,qBAAhCl4B,OAAOk4B,KAAKkqC,kBACI,qBAAjDpiE,OAAOk4B,KAAKkqC,gBAAgBq8C,kBAAoCz+G,OAAOk4B,KAAKkqC,gBAAgBq8C,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1B1+G,OAAO2+G,eAM9B,MAJ+B,qBAApB3+G,OAAO2hD,WAChB+8D,EAAgD,qBAA7B1+G,OAAO2hD,SAASi9D,UAA4B5+G,OAAO2hD,SAASi9D,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAcp2E,KAAKwY,UAAUC,YAGtC49D,UAAW,WACT,IAAMA,IAAY,WAAWr2E,KAAKwY,UAAUC,WAE5C,OAAO49D,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmBt2E,KAAKwY,UAAUC,YAAelhD,OAAOg/G,UAI1D,OAAOD,IC0BIE,8MA7DblB,cAAgB,WACd,OACErpH,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CAAY1yE,GAAI,GAAhB,iBACiB1lB,EAAKJ,MAAM4+C,QAAQl3B,SAAS5a,KAD7C,cAC8D,IAC3Dm8G,GAAYC,cAAZ,uBAGH3pH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,iCACiC,IAC/BvmB,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWloB,MAAO,CAAEyO,cAAe,eAChC7rB,EAAKJ,MAAM4+C,QAAQl3B,SAAS5a,MAClB,IAJf,wCAKmC,IACjCvN,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWloB,MAAO,CAAEyO,cAAe,eAChC,IACA7rB,EAAKJ,MAAM4+C,QAAQ0pE,QAAQx7G,MACjB,IATf,YAaCm8G,GAAYC,gBAAkBa,KAAYjB,iBACzCvpH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzI,GAAI,UAAWiT,EAAG,EAAG2E,QAAS,CAAC,OAAQ,UAC1CtP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,WAAYrX,MAAO,OAChCsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8M,KAAM,UAGlBjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,GAAlB,oCACAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,GAAlB,sCAMJ,KAEJxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKmP,QAAS,CAAC,QAAS,SACtBtP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgf,QAASte,EAAKJ,MAAMo/B,WAAYnlC,MAAO,GAA/C,iFASN,OACEsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACG3rB,KAAK6oH,0BAtDcx2F,IAAMlyB,WCiDvB8pH,OA3Df,SAA6BhqH,GAC3B,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,6CAA8C+iC,SAAU,wDAAyDE,UAAW,0EACrJn9B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChB8b,GAAI,CAAC,EAAG,IACRvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,GAAIgR,GAAI,GACtDljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,cACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,oBACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,UAA9B,6FAKFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,GAAIgR,GAAI,GACtDljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,qBACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,0BACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,UAA9B,6DAIFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,GAAIgR,GAAI,GACtDljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,iBACL5O,MAAM,UACNsO,KAAK,QAEPjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,gBACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,wBACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,UAA9B,4FC1CNsxB,GAAY,WAAc,QAAA6sB,EAAAptD,UAAAM,OAAV7C,EAAU,IAAA4vD,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAV7vD,EAAU6vD,GAAAttD,UAAAstD,IAEjB,SAASo6D,GAAsBjqH,GAC5C,IAAM+8G,EAAUmN,4BAEXnN,EAAQllH,QAAWklH,EAAQ76E,MAErB66E,EAAQ76E,MACjBY,GAAU,gBAAiBi6E,GAE3Bj6E,GAAU,kBAAmBi6E,GAJ7Bj6E,GAAU,kBAAmBi6E,GAM/B,IAAMD,EAAY,eAAAzyF,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAC,EAAOorD,EAAct/C,GAArB,IAAA+uG,EAAA,OAAA/6G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfw6G,EAAmC,aAAlBzvD,EAA+Bt/C,EAAOs/C,EACvD3nB,eACFA,aAAaqhC,QAAQ,iBAAkB+1C,GACvCp3E,aAAaqhC,QAAQ,gBAAiB1Z,IAGpCpsD,EAAM88G,cAA8C,oBAAvB98G,EAAM88G,cACrC98G,EAAM88G,aAAa1wD,EAAcyvD,GAIK,oBAA7B77G,EAAMmqH,oBACfnqH,EAAMmqH,qBAbWhpH,EAAAQ,OAAA,SAgBZyqD,GAhBY,wBAAAjrD,EAAAS,SAAAZ,EAAAjB,SAAH,gBAAAqC,EAAAC,GAAA,OAAAgoB,EAAA/nB,MAAAvC,KAAAwC,YAAA,GAmBZ6nH,EAAc,eAAAtoH,EAAAnC,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,IAAA,OAAAjB,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACrB07G,EAAQqN,iBACJpqH,EAAM88G,cAA8C,oBAAvB98G,EAAM88G,cACrC98G,EAAM88G,aAAa,SAAS,UAHT,wBAAA56G,EAAAN,SAAAG,EAAAhC,SAAH,yBAAA+B,EAAAQ,MAAAvC,KAAAwC,YAAA,GAUdmnH,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBc,EAAapB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BE,EAAmBL,GAAYK,mBAC/BgB,EAAwBD,GAAcX,GAAWD,GAAYH,GAAoBF,EAEjFmB,EAAoBvqH,EAAMuqH,kBAC1BC,EAAexqH,EAAMwqH,aAEvBv5E,GAAW6rD,SACT0tB,GACFv5E,GAAW6rD,OAAO18E,QAAU6wB,GAAW6rD,OAAO18E,SAAW,GACzD6wB,GAAW6rD,OAAO18E,QAAQqqG,uBAAwB,IAElDx5E,GAAW6rD,OAAO18E,QAAU6wB,GAAW6rD,OAAO18E,SAAW,GACzD6wB,GAAW6rD,OAAO18E,QAAQqqG,uBAAwB,IAItD,IAAIC,EAAsB/qH,OAAO4H,KAAK0pC,IAAY90B,OAAO,SAAAk0C,GAAC,MAAU,WAANA,IAE1Dk6D,IACFG,EAAsBA,EAAoBvuG,OAAO,SAAAkB,GAAC,OAA4F,IAAxFktG,EAAkBhvG,IAAI,SAAC9M,GAAQ,OAAOA,EAAEgC,gBAAkBuH,QAAQqF,EAAE5M,kBAG5H,IAAMhS,EAAUisH,EAAoBnvG,IAAI,SAAA6wC,GAEtC,OAAQA,GACN,IAAK,WACH,GAAIk+D,EAAuB,CACzB,IAAIx9G,EAAO,KACPu9G,EACFv9G,EAAO,WACE48G,EACT58G,EAAO,QACE28G,EACT38G,EAAO,SACEw8G,EACTx8G,EAAO,WACEs8G,IACTt8G,EAAO,eAGT,IAAM0wG,EAAgB1sG,GAAcmgC,WAAWnkC,EAAK2D,eACpD,GAAI+sG,GAAiBA,EAAc94G,QAAQ,CACzC,IAAM+4G,EAAaD,EAAcnsG,KAAOmsG,EAAcnsG,KAAnC,GAAA1M,OAA6CmI,EAAK2D,cAAlD,QACnB,OACElR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP4jB,IAAG,UAAAlZ,OAAYmI,GACf0Q,MAAO,CACLoF,KAAK,SACL5Y,eAAe,eAGjBzK,EAAAC,EAAAC,cAACgiC,GAAD,CACErE,QAAStwB,EACT3B,UAAU,EACVlR,MAAO,CAAC,EAAE,KACVgjC,SAAQ,UAAAt4B,OAAY84G,GACpBvgF,WAAY,CAACjjC,MAAM,OAAO+E,OAAO,QACjC2f,YAAWhf,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAA0B,IAAA,OAAA3B,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAAkBy7G,EAAa1wD,EAAct/C,GAA7C,cAAAlK,EAAAjB,OAAA,SAAAiB,EAAApB,MAAA,wBAAAoB,EAAAhB,SAAAa,EAAA1C,SACd09B,WAAa+/E,GAAiBA,EAAc//E,WAAa+/E,EAAc//E,WAA1D,iBAAA94B,OAAwFmI,MAK7G,OAAO,KAEP,IAAM0wG,EAAgB1sG,GAAcmgC,WAAWmb,EAAc37C,eAC7D,OACElR,EAAAC,EAAAC,cAACgiC,GAAD,CACEt2B,UAAU,EACViyB,QAAS,iBACTvf,IAAG,UAAAlZ,OAAYynD,GACfnvB,SAAQ,4BACRC,WAAY,CAACjjC,MAAM,OAAO+E,OAAO,QACjC2f,YAAWhf,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAkC,IAAA,OAAAnC,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAAkBy7G,EAAa1wD,GAA/B,cAAAlpD,EAAAvB,OAAA,SAAAuB,EAAA1B,MAAA,wBAAA0B,EAAAtB,SAAAqB,EAAAlD,SACd09B,WAAa+/E,GAAiBA,EAAc//E,WAAa+/E,EAAc//E,WAA1D,iCACbH,YAAct9B,EAAMmL,SAAW,CAACnB,eAAe,aAAa4Y,KAAK,UAAY,CAAC5Y,eAAe,aAAa4Y,KAAK,WAIvH,QACE,IAAM46F,EAAgB1sG,GAAcmgC,WAAWmb,EAAc37C,eAC7D,GAAI+sG,GAAiBA,EAAc94G,QAAQ,CACzC,IAAM+4G,EAAaD,EAAchsE,UAAYgsE,EAAchsE,UAAagsE,EAAcnsG,KAAOmsG,EAAcnsG,KAAnC,GAAA1M,OAA6CynD,EAAc37C,cAA3D,QAEpE2sB,EAAUogF,EAAc1wG,KAAO0wG,EAAc1wG,KAAOs/C,EACxD,OACE7sD,EAAAC,EAAAC,cAACgiC,GAAD,CACEt2B,UAAU,EACViyB,QAASA,EACTvf,IAAG,UAAAlZ,OAAYynD,GACfnvB,SAAQ,UAAAt4B,OAAY84G,GACpBvgF,WAAY,CAACjjC,MAAM,OAAO+E,OAAO,QACjC2f,YAAWhf,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAqC,IAAA,OAAAtC,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAjC,KAAA,EAAkBy7G,EAAa1wD,GAA/B,cAAA9oD,EAAA3B,OAAA,SAAA2B,EAAA9B,MAAA,wBAAA8B,EAAA1B,SAAAwB,EAAArD,SACd09B,WAAa+/E,GAAiBA,EAAc//E,WAAa+/E,EAAc//E,WAA1D,iBAAA94B,OAAwFynD,GACrG9uB,YAAct9B,EAAMmL,SAAW,CAACnB,eAAe,aAAa4Y,KAAK,UAAY,CAAC5Y,eAAe,aAAa4Y,KAAK,WAIrH,OAAO,QAIb,OACErjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzF,MAAO,CAAC,IACXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,UACxCizG,EAAQ76E,OACP3iC,EAAAC,EAAAC,cAACC,EAAA,EAAKwK,EAAN,CAAQsH,UAAU,UAAlB,+DAEEjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMylB,KAAK,uBAAuBtlB,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMylB,KAAK,8BAA8BtlB,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBAi9G,EAAQllH,QAAWklH,EAAQ76E,OAAS66E,EAAQ3wD,gBAA6C,WAA1B2wD,EAAQ3wD,eACvE7sD,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CACE7iC,MAAO,CAAC,IACRqlB,UAAW,CAACC,KAAOhoB,QACnBka,GAAI,CAAC,EAAG,GACRjF,KAAM,QACNqR,IAAK,QACLa,QAAO/e,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAE,SAAA4C,IAAA,OAAA7C,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EAAkB+oH,IAAlB,cAAA3lH,EAAA9C,OAAA,SAAA8C,EAAAjD,MAAA,wBAAAiD,EAAA7C,SAAA+B,EAAA5D,UAERg9G,EAAQllH,OAAS,uBAAyB,UAIjD0H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,MAAOy3B,SAAU,OAAQx3B,eAAgB,iBAC3DvL,QC8LMksH,8MAtWbhgH,MAAQ,CACNm7G,eAAe,KACf8E,YAAY,EACZC,mBAAmB,KACnBC,oBAAqB,KACrBC,kBAAkB,KAIpBvqH,cAAgB,OAShBwqH,iBAAmB,SAAA78G,GACjBA,EAAEsnB,iBAEFr1B,EAAK4L,SAAS,CACZ4+G,YAAaxqH,EAAKuK,MAAMigH,gBAI5BK,iBAAmB,WACjB,IAAInF,EAAiB,KASrB,OARIrhF,eACFqhF,EAAiBrhF,aAAaC,QAAQ,oBAEpCtkC,EAAK4L,SAAS,CACZ85G,mBAICA,KAGTp5F,kBAAoB,WAClBtsB,EAAK+I,YACL/I,EAAK6qH,sBAGPxf,mBAAqB,WACnBrrG,EAAK+I,eAGPm2B,WAAa,SAAAnxB,GACX/N,EAAK4L,SAAS,CACZ4+G,YAAY,EACZE,oBAAoB,KACpBC,kBAAkB,EAClBjF,eAAe,UAInBhJ,mDAAe,SAAA97G,EAAOorD,EAAct/C,GAArB,IAAA+uG,EAAA,OAAA/6G,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTw6G,EAAmC,aAAlBzvD,EAA+Bt/C,EAAOs/C,EAG3DhsD,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,gBACbC,WAAY43F,IAGVz7G,EAAKJ,MAAM88G,cAAmD,oBAA5B18G,EAAKJ,MAAM88G,cAC/C18G,EAAKJ,MAAM88G,aAAa1wD,EAAcyvD,GAIxCz7G,EAAK4L,SAAS,CACZ8+G,oBAAqB1+D,IAGvBhsD,EAAK8qH,iBAnBQ/pH,EAAAQ,OAAA,SAqBNyqD,GArBM,wBAAAjrD,EAAAS,SAAAZ,EAAAjB,mEA0BfmrH,eAAiB,WACf,IAAML,EAAqBzqH,EAAKuK,MAAMkgH,mBAAqBzqH,EAAKuK,MAAMkgH,mBAAmB,EAAI,EACxFA,EAGHzmF,WAAW,WAAQhkC,EAAK8qH,kBAAmB,KAF3C9qH,EAAKg/B,aAIPh/B,EAAK4L,SAAS,CACZ6+G,0BAIJM,gBAAkB,SAACh9G,EAAEi9G,GACnBj9G,EAAEsnB,iBACFr1B,EAAK4L,SAAS,CACZ8+G,oBAAqBM,OAIzBhsF,WAAa,WAEXh/B,EAAKk/B,aAELl/B,EAAK6qH,mBAEL7qH,EAAKJ,MAAMo/B,gBAGbisF,kBAAoB,SAACl9G,EAAE23G,GACrB33G,EAAEsnB,iBACFr1B,EAAK4L,SAAS,CACZ85G,mBAGmB,iBAAjBA,IAEF1lH,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,cACbC,WAAY6hG,IAGd1lH,EAAKI,cAAcokC,gBAAgB,iBAAiBkhF,OAIxDwF,mBAAqB,WAEnB,IAAMC,EACJhsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAUzS,SAAU,EAAG2iB,GAAI,CAAC,EAAE,IAA/C,kCAAkFniB,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CAAYpnC,GAAG,oBAAoB/yD,MAAO,OAAQsf,MAAO,CAAC8J,eAAe,aAAcznB,OAAQ,SAAUC,IAAI,gCAA7G,sBAIhF0rH,EAAsD,WAA9BprH,EAAKuK,MAAMm7G,eACnC2F,EAA8C,QAA9BrrH,EAAKuK,MAAMm7G,eAGjC,MAFuD,iBAA9B1lH,EAAKuK,MAAMm7G,eAIhCvmH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,qBAAsB+iC,SAAU,4DACzDj9B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChB8b,GAAI,CAAC,EAAG,IAERvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,GAAIgR,GAAI,GACtDljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,SACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,4BACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,UAA9B,4IAMFjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,GAAIgR,GAAI,GACtDljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,uBACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,4BACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAG0S,GAAI,EAAGD,UAAW,UAArC,kJAG2BjS,EAAAC,EAAAC,cAAA,WACzBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEjG,MAAM,wCACNsV,WAAY,IACZ7Q,MAAO,OACPsT,UAAW,SACX+V,WAAY,OACZpC,KAAK,IACLzG,QAASte,EAAK4qH,kBAPhB,gCAaJzrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKkjB,KAAM,MAAO3oB,MAAO,EAAGulB,GAAI,CAAC,EAAG,GAAI/N,GAAI,CAAC,EAAG,IAC9ClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMsK,eAAgB,SAAUyH,GAAI,GAClClS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAK,SACL5O,MAAM,UACNsO,KAAK,SAGTjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASX,SAAU,EAAGyS,UAAW,UAAjC,gCACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,UAA9B,6GAWRg6G,EAEAjsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,qBAAsB+iC,SAAU,6BAA8BnrB,KAAM,yBAC7F9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAGwnB,GAAI,CAAC,EAAE,GAAI1X,cAAe,SAAUC,eAAgB,UAClEzK,EAAAC,EAAAC,cAACwqH,GAAD,CAAuB9+G,SAAU/K,EAAKJ,MAAMmL,SAAUg/G,mBAAqB/pH,EAAKg/B,WAAa09E,aAAe18G,EAAK08G,aAAe7iH,MAAO,GAAKuS,KAAOpM,EAAKJ,MAAMmL,SAAW,SAAW,WAEtL5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMw2B,GAAI,EAAGpsB,WAAY,SAAUE,eAAgB,UACjDzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAU+V,WAAY,OAAQ7I,QAAU,SAAAvQ,GAAC,OAAI/N,EAAKirH,kBAAkBl9G,EAAE,SAAvF,0BAEAo9G,IAMNE,EAEAlsH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,0CAA4C4X,KAAM,yBAC3E9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KAEKv8B,EAAKuK,MAAMmgH,oBAgBVvrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGyS,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAAnE,4BAC4Bvf,EAAKuK,MAAMmgH,oBADvC,uBAGAvrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJxV,eAAgB,SAChBF,WAAY,SACZ0H,UAAW,UACXjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8M,KAAK,SALf,IAKyBjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAGvO,MAAO,aAApB,cAA6CkC,EAAKuK,MAAMkgH,mBAAxD,iBAxB3BtrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAGwnB,GAAI,CAAC,EAAE,GAAI1X,cAAe,SAAUC,eAAgB,UAClEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+R,GAAI,GACPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,CAAC,EAAE,GAAIyS,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAAvE,yCAIFpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFzK,EAAAC,EAAAC,cAACgiC,GAAD,CAAat2B,SAAU/K,EAAKJ,MAAMmL,SAAU8xB,SAAU,mBAAoBC,WAAa98B,EAAKJ,MAAMmL,SAAW,CAAClR,MAAM,OAAO+E,OAAO,QAAU,CAACyS,GAAG,MAAMxX,MAAM,OAAO+E,OAAO,QAASo+B,QAAS,aAAcK,WAAY,oBAAqB9e,YAAc,SAAAxQ,GAAC,OAAI/N,EAAK08G,aAAa,SAAS,aACzRv9G,EAAAC,EAAAC,cAACgiC,GAAD,CAAat2B,SAAU/K,EAAKJ,MAAMmL,SAAU8xB,SAAU,oBAAqBC,WAAa98B,EAAKJ,MAAMmL,SAAW,CAAClR,MAAM,OAAO+E,OAAO,QAAU,CAACyS,GAAG,MAAMxX,MAAM,OAAO+E,OAAO,QAASo+B,QAAS,mBAAoBK,WAAY,uBAAwB9e,YAAc,SAAAxQ,GAAC,OAAI/N,EAAK08G,aAAa,YAAY,iBAExSv9G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,SAAUE,eAAgB,UAC1CzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8R,UAAW,SAAU+V,WAAY,OAAQ7I,QAAU,SAAAvQ,GAAC,OAAI/N,EAAKirH,kBAAkBl9G,EAAE,YAAvF,6BAkBNo9G,IAORhsH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAO,kBAAmB4X,KAAM,yBAClD9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KAEIp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,EAAGwnB,GAAI,CAAC,EAAE,GAAI1X,cAAe,SAAUC,eAAgB,UAClEzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+R,GAAI,GACPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,CAAC,EAAE,GAAIyS,UAAW,SAAUzC,WAAY,EAAG4Q,WAAY,KAAvE,wCAIFpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,CAAC,EAAE,GAAI1H,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UACtFzK,EAAAC,EAAAC,cAACgiC,GAAD,CAAat2B,SAAW/K,EAAKJ,MAAMmL,SAAW8xB,SAAU,6BAA8BC,WAAa98B,EAAKJ,MAAMmL,SAAW,CAAClR,MAAM,OAAO+E,OAAO,QAAU,CAAC/E,MAAM,OAAO+E,OAAO,OAAO0sH,aAAa,OAAStuF,QAAO,kBAAqBK,WAAY,wBAAyB9e,YAAc,SAAAxQ,GAAC,OAAI/N,EAAKirH,kBAAkBl9G,EAAE,aACvT5O,EAAAC,EAAAC,cAACgiC,GAAD,CAAat2B,SAAW/K,EAAKJ,MAAMmL,SAAW8xB,SAAU,wBAAyBC,WAAa98B,EAAKJ,MAAMmL,SAAW,CAAClR,MAAM,OAAO+E,OAAO,QAAU,CAAC/E,MAAM,OAAO+E,OAAO,OAAO0sH,aAAa,OAAStuF,QAAO,aAAgBK,WAAY,oBAAqB9e,YAAc,SAAAxQ,GAAC,OAAI/N,EAAKirH,kBAAkBl9G,EAAE,YAI7So9G,OAMVI,aAAe,WAEb,OAAIvrH,EAAKuK,MAAMmgH,oBACN,KAIPvrH,EAAAC,EAAAC,cAACsiC,GAAUnF,OAAX,KACMx8B,EAAKuK,MAAMm7G,eAeXvmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4f,UAAW,CAACC,KAAO1oB,eAAe0oB,KAAOzoB,OACzC4nB,QAASte,EAAKk/B,WACd9yB,KAAM,SACNnN,aAAc,EACdg+B,cAAe,OACftuB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbgnB,GAAI,OACJtE,GAAI,CAAC,EAAE,IATT,QAdAliB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4f,UAAW,CAACC,KAAO1oB,eAAe0oB,KAAOzoB,OACzC4nB,QAAU,SAAAvQ,GAAC,OAAI/N,EAAKirH,kBAAkBl9G,EAAE,iBACxC3B,KAAM,SACNnN,aAAc,EACdg+B,cAAe,OACftuB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbgnB,GAAI,OACJtE,GAAI,CAAC,EAAE,IATT,kGApSJ1hB,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAmU9C,OACET,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKq/B,aACE,IAA1Br/B,KAAK4K,MAAMigH,WACVrrH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACG3rB,KAAKurH,qBACLvrH,KAAK4rH,gBAGRpsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACmsH,GAAD,MACC7rH,KAAK4rH,yBA9VUv5F,IAAMlyB,WCoCrB2rH,8MA9CbjD,cAAgB,WACd,OACErpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CAAY1yE,GAAI,GAAhB,4BAEAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,kFAEqB,IAClBmjG,GAAYC,cAAZ,2CAHH,KASA3pH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKzI,GAAI,UAAWiT,EAAG,EAAG2E,QAAS,CAAC,OAAQ,UAC1CtP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,WAAYrX,MAAO,OAChCsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8M,KAAM,UAGlBjN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,GAAlB,0CAGAxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqP,WAAY,GAAlB,mHASV,OACExP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACG58B,KAAK6oH,0BAvCmBx2F,IAAMlyB,WCmC5B4rH,8MA1CbC,iBAAmB,SAAAxhE,GACjBnqD,EAAKJ,MAAMo/B,aACXh/B,EAAKJ,MAAM8mH,iBAGb8B,cAAgB,WACd,OACErpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMksB,SAAP,KACEnsB,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,CAAY1yE,GAAI,GAAhB,sDAIAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,GAAV,8EAKAvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAYwV,GAAI,GACtEjgB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBpe,QAASte,EAAKJ,MAAMo/B,WAAY3c,GAAI,CAAC,EAAG,GAAIhR,GAAI,CAAC,EAAG,IAApE,qBAGAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgf,QAASte,EAAK2rH,kBAAtB,wFASN,OACExsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAWl8B,KAAKC,MAAMo/B,YAC/B7/B,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACG58B,KAAK6oH,0BAnCwBx2F,IAAMlyB,WCiRjC8rH,8MApQbrhH,MAAQ,CACNshH,eAAe,EACfrB,YAAY,KAGdsB,gBAAkB,WAChB9rH,EAAK4L,SAAS,CACZigH,eAAgB7rH,EAAKuK,MAAMshH,mBAI/BjB,iBAAmB,SAAA78G,GACjBgiD,QAAQqK,IAAI,aAAcp6D,EAAKuK,MAAMigH,YACrCz8G,EAAEsnB,iBAEFr1B,EAAK4L,SAAS,CACZ4+G,YAAaxqH,EAAKuK,MAAMigH,sFAK1B,OACErrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEssB,GAAI,CAAC,EAAG,GACR2N,GAAI,CAAC,EAAG,GACRzD,GAAI,CAAC,OAAQ,GACbzM,GAAI,CAAC,OAAQ,GACbgJ,SAAU,QACVxJ,SAAU,SACV3X,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,YACb/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsK,eAAgB,WAChByY,GAAI,CAAC,GAAI,GACTjD,GAAI,CAAC,SAAU,GACflO,SAAU,WACVtB,IAAK,IACLG,KAAM,IACNF,MAAO,IACPhZ,GAAI,QACJsa,OAAQ,KAERhS,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE+H,UAAQ,EACR9qB,KAAM,QACNnT,MAAO,YACPwgB,QAAS3e,KAAKC,MAAMo/B,gBAKI,IAA7Br/B,KAAK4K,MAAMshH,gBACc,IAA1BlsH,KAAK4K,MAAMigH,WACTrrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+hB,GAAI,CAAC,EAAG,GAAIyU,GAAI,CAAC,EAAG,GAAIzM,GAAI,CAAC,EAAG,IAGnClqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKysH,aAAa,SAASzqG,GAAI,GAC7BniB,EAAAC,EAAAC,cAACC,EAAA,EAAQ84F,GAAT,+CAIFj5F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,GAAV,+KAG8D,IAC5DlS,EAAAC,EAAAC,cAAA,kDAAkD,IAClDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEjG,MAAM,wCACN2yH,GAAI,IACJjnG,KAAK,IACLzG,QAAS3e,KAAKirH,kBAJhB,+BAUFzrH,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,yBAEAl3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,UACZic,GAAI,EACJtU,GAAI,CAAC,EAAG,GACR+N,GAAI,CAAC,EAAG,GACRgiB,SAAU,CAAC,OAAQ,YAEnBjiC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwK,EAAG,CAAC,EAAG,GAAIjQ,MAAO,CAAC,EAAG,KACzBsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfC,eAAgB,gBAChBhL,OAAQ,QAERO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAQukG,GAAT,iCACA1kG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAS,KAAf,oKAQFQ,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBhX,GAAI,GAClBvmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,YAAY2V,GAAI,IAD7B,qBAONljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwK,EAAG,CAAC,EAAG,GAAIjQ,MAAO,CAAC,EAAG,KACzBsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfC,eAAgB,gBAChBhL,OAAQ,QAERO,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAQukG,GAAT,sCAGA1kG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAS,KAAf,gIAMFQ,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBhX,GAAI,EAAGpH,QAAS3e,KAAKmsH,iBACnC3sH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,oBAAoB2V,GAAI,IADrC,8BAWZljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPwR,GAAI,CAAC,EAAG,GACRyU,GAAI,EACJzM,GAAI,EACJxyB,GAAI,SAGJsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMk0B,UAAW,EAAGx1B,YAAa,SACjCmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMw2B,GAAI,EAAGlsB,eAAgB,CAAC,SAAU,aACtCzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgf,QAAS3e,KAAKC,MAAMo/B,WAAYnlC,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEH8F,KAAK4K,MAAMshH,cACV1sH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+R,GAAI,GACPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+hB,GAAI,CAAC,EAAG,GAAIyU,GAAI,CAAC,EAAG,GAAIzM,GAAI,CAAC,EAAG,IAEnClqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG9b,eAAgB,UAC3BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,IACN+B,MACExO,KAAKC,MAAMuB,QAAUxB,KAAKC,MAAMuB,QAAU,gBAKhDhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYomB,GAAI,EAAGnf,QAAS5G,KAAKC,MAAMuB,UACvChC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,MAKdlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPwR,GAAI,CAAC,EAAG,GACRyU,GAAI,EACJzM,GAAI,EACJxyB,GAAI,SAGJsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMk0B,UAAW,EAAGx1B,YAAa,SACjCmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8f,GAAI,EAAGxV,eAAgB,CAAC,SAAU,aACtCzK,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CACE7iC,MAAO,CAAC,EAAG,QACXykB,QAAS3e,KAAKmsH,iBAFhB,cAUJ,KAEHnsH,KAAK4K,MAAMigH,WACVrrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+R,GAAI,GACPlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CAAEyL,SAAU,QACnB+J,UAAW,uBAEXzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK+hB,GAAI,CAAC,EAAG,GAAIyU,GAAI,CAAC,EAAG,GAAIzM,GAAI,CAAC,EAAG,IAEnClqB,EAAAC,EAAAC,cAACmsH,GAAD,QAIJrsH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVpB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPwR,GAAI,CAAC,EAAG,GACRyU,GAAI,EACJzM,GAAI,EACJxyB,GAAI,SAGJsI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,EACJlsB,eAAgB,CAAC,SAAU,YAC3B4pB,UAAW,EACXx1B,YAAa,QAEbmB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CACE7iC,MAAO,CAAC,EAAG,QACXykB,QAAS3e,KAAKirH,kBAFhB,cAUJ,cA9Pc54F,IAAMlyB,WCmDnBmsH,oLArDX,OACE9sH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6sH,GAAD,CACEltF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQqrF,wBACtCzqF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKmgH,yBAC/Bh6F,YAAazyB,KAAKC,MAAMwyB,cAG1BjzB,EAAAC,EAAAC,cAACgtH,GAAD,CACErtF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQwrF,mBACtC5qF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKsgH,oBAC/Bn6F,YAAazyB,KAAKC,MAAMwyB,cAG1BjzB,EAAAC,EAAAC,cAACmtH,GAAD,CACExtF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQ2rF,uBACtC/qF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKygH,wBAC/BluE,QAAS7+C,KAAKC,MAAM4+C,UAGtBr/C,EAAAC,EAAAC,cAACstH,GAAD,CACE5hH,SAAUpL,KAAKC,MAAMmL,SACrB2xG,aAAc/8G,KAAKC,MAAM88G,aACzB97C,eAAgBjhE,KAAKC,MAAM4+C,QAAQ0pE,QACnC0E,gBAAiBjtH,KAAKC,MAAMgtH,gBAC5B5tF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQ+rF,qBACtCnrF,OAAS/hC,KAAKC,MAAM8yC,OAAOzmC,KAAK6gH,wBAA0BntH,KAAKC,MAAMmtH,mBAGvE5tH,EAAAC,EAAAC,cAAC2tH,GAAD,CACEhuF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQmsF,4BACtCvrF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKihH,yBAC/BtsD,eAAgBjhE,KAAKC,MAAM4+C,QAAQ0pE,UAErC/oH,EAAAC,EAAAC,cAAC8tH,GAAD,CACEnuF,WACEr/B,KAAKC,MAAM8yC,OAAO5R,QAAQssF,iCAE5B1rF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKohH,oBAC/B3G,YAAa/mH,KAAKC,MAAM8mH,cAG1BvnH,EAAAC,EAAAC,cAACiuH,GAAD,CACEtuF,WAAYr/B,KAAKC,MAAM8yC,OAAO5R,QAAQysF,mBACtC7rF,OAAQ/hC,KAAKC,MAAM8yC,OAAOzmC,KAAKuhH,oBAC/B5sD,eAAgBjhE,KAAKC,MAAM4+C,QAAQ0pE,QACnC/mH,QAASxB,KAAKC,MAAMuB,kBAhDI6wB,IAAMlyB,iCC0EzB2tH,8MAzEbrtH,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,wDAILpJ,KAAKoJ,yDAILpJ,KAAKoJ,uFAGUgF,sEACfA,EAAEsnB,iBAEG11B,KAAKC,MAAMuB,wCACRxB,KAAKC,MAAM+8G,QAAQ+Q,uBAAuB,CAAC,kBACjD/tH,KAAKC,MAAM88G,aAAa,SAAS,aAEnC/8G,KAAKC,MAAM8yC,OAAO5R,QAAQ6sF,gKAGnB,IAAA3kH,EAAArJ,KAED87G,EAAiB97G,KAAKS,cAAc4hE,oBACpC4rD,EAAYnS,GAAmD,WAAjCA,EAAeprG,eAAkF,kBAA3C1Q,KAAKC,MAAM8yC,OAAOzmC,KAAK4hH,iBAAgCluH,KAAKC,MAAM8yC,OAAOzmC,KAAK4hH,gBAAgBx9G,cAAc2kB,SAAS,UAE/M,OACE71B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAY,SAAA9tB,GAAC,OAAI/E,EAAKg2B,WAAWjxB,KAC1C5O,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAQu0H,EAAW,eAAH,mBAAyC38G,KAAM,uBACjF9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG7rB,MAAO,EAAG8P,cAAe,SAAUgc,GAAI,QAClDxmB,EAAAC,EAAAC,cAACC,EAAA,EAAKwK,EAAN,CAAQhM,MAAO,YAAasT,UAAW,UAAvC,iEACkEw8G,EAAW,SAAW,UADxF,IACoGzuH,EAAAC,EAAAC,cAAA,WAClGF,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAO,MAAO6Q,WAAY,GAArC,IAA0ChP,KAAKC,MAAM8yC,OAAOzmC,KAAK4hH,gBAAjE,KAA8F1uH,EAAAC,EAAAC,cAAA,WAE5FuuH,EACEzuH,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,sCACgCnmC,EAAAC,EAAAC,cAAA,2BADhC,QAC+DF,EAAAC,EAAAC,cAAA,0BAD/D,0BAC+GF,EAAAC,EAAAC,cAAA,+BAD/G,QACkJF,EAAAC,EAAAC,cAAA,iCADlJ,uCACsNF,EAAAC,EAAAC,cAAA,YAGpN,0DAIVF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdymB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCuT,QAAO,eAAA2L,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,EAAOoM,GAAP,OAAArN,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAAqB+H,EAAKg2B,WAAWjxB,GAArC,wBAAAjM,EAAAN,SAAAG,EAAAhC,SAAH,gBAAAsC,GAAA,OAAAgoB,EAAA/nB,MAAAvC,KAAAwC,YAAA,IALT,qBA3DqB6vB,IAAMlyB,WC0E1BguH,8MAtEb1tH,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,oDAK9CD,KAAKoJ,wDAILpJ,KAAKoJ,yDAILpJ,KAAKoJ,uFAGUgF,mEACfA,EAAEsnB,iBACF11B,KAAKC,MAAM8yC,OAAO5R,QAAQitF,iKAGnB,IAAA/kH,EAAArJ,KAEDquH,EAAmE,kBAA5CruH,KAAKC,MAAM8yC,OAAOzmC,KAAKgiH,kBAAiCtuH,KAAKC,MAAM8yC,OAAOzmC,KAAKgiH,iBAAiB59G,cAAc2kB,SAAS,UAC9Ik5F,EAAmE,kBAA5CvuH,KAAKC,MAAM8yC,OAAOzmC,KAAKgiH,kBAAiCtuH,KAAKC,MAAM8yC,OAAOzmC,KAAKgiH,iBAAiB59G,cAAc2kB,SAAS,8BAEpJ,OACE71B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoiC,OAAQ/hC,KAAKC,MAAM8hC,QACxBviC,EAAAC,EAAAC,cAACsiC,GAAD,CAAW9F,UAAY,SAAA9tB,GAAC,OAAI/E,EAAKg2B,WAAWjxB,KAC1C5O,EAAAC,EAAAC,cAACsiC,GAAUzF,OAAX,CAAkB7iC,MAAQ,oBAAsB4X,KAAM,uBACtD9R,EAAAC,EAAAC,cAACsiC,GAAUpF,KAAX,KACEp9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMomB,GAAI,EAAG7rB,MAAO,EAAG8P,cAAe,SAAUgc,GAAI,QAClDxmB,EAAAC,EAAAC,cAACC,EAAA,EAAKwK,EAAN,CAAQhM,MAAO,YAAasT,UAAW,UAAvC,kEACiEjS,EAAAC,EAAAC,cAAA,WAC/DF,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CAAWxnC,MAAO,MAAO6Q,WAAY,GAArC,IAA0ChP,KAAKC,MAAM8yC,OAAOzmC,KAAKgiH,iBAAjE,KAA+F9uH,EAAAC,EAAAC,cAAA,WAE7F2uH,EACE7uH,EAAAC,EAAAC,cAACC,EAAA,EAAKgmC,KAAN,CACE3mC,SAAU,GAEVQ,EAAAC,EAAAC,cAAA,WAHF,iCAGsCF,EAAAC,EAAAC,cAAA,2BAHtC,QAGqEF,EAAAC,EAAAC,cAAA,0BAHrE,0BAGqHF,EAAAC,EAAAC,cAAA,+BAHrH,QAGwJF,EAAAC,EAAAC,cAAA,iCAHxJ,uCAG4NF,EAAAC,EAAAC,cAAA,WAH5N,sEAIqEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMX,SAAU,EAAGb,MAAO,OAAQqpB,WAAY,OAAQ1nB,OAAQ,SAAUC,IAAK,+BAAgCqlB,KAAM,iHAAnH,qBAJrE,KAMEmpG,EAAgB,8FAAgG,0DAI1H/uH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+R,GAAI,EAAG1H,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEL,aAAc,EACdymB,GAAI,EACJC,GAAI,CAAC,EAAG,GACRvZ,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,SACtCuT,QAAO,eAAA2L,EAAA1qB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAG,SAAAgB,EAAOoM,GAAP,OAAArN,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EAAqB+H,EAAKg2B,WAAWjxB,GAArC,wBAAAjM,EAAAN,SAAAG,EAAAhC,SAAH,gBAAAsC,GAAA,OAAAgoB,EAAA/nB,MAAAvC,KAAAwC,YAAA,IALT,qBAxDsB6vB,IAAMlyB,WCI1C4uD,EAAQ,MAAU2Q,SAClB,IAAM8uD,GAAa1+E,mCAEb2+E,GAA2Bp8F,IAAMq8F,cAAc,CACnD1rF,KAAM,GACNxhC,QAAS,GACTmoC,SAAU,GACV+W,SAAU,GACV3M,UAAW,GACX46E,WAAY,GACZnuH,YAAa,GACb3D,aAAc,GACd+xH,eAAgB,GAChBpf,SAAU,aACV4d,iBAAkB,GAClBrG,YAAa,aACb8H,kBAAmB,GACnBpsD,aAAc,aACdh9C,aAAc,aACdqpG,oBAAqB,GACrBC,eAAgB,aAChB9B,gBAAiB,aACjBpuE,QAAS,CACP0pE,QAAS,GACT5gG,SAAU,GACVqnG,aAAc,aACdxrB,iBAAkB,MAEpBsjB,oBAAoB,EACpBt9E,iBAAkB,aAClBylF,iBAAkB,aAClBlwF,kBAAmB,aACnB7iB,sBAAsB,EACtBgzG,yBAA0B,GAC1BlI,oBAAqB,aACrBmI,qBAAsB,aACtBC,0BAA0B,EAC1B//E,0BAA2B,aAC3B0D,OAAQ,CACNzmC,KAAM,CACJ4hH,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBkC,uBAAwB,GACxBtC,wBAAyB,GACzBmC,yBAA0B,GAC1B3B,yBAA0B,GAC1Bd,yBAA0B,GAC1B6C,iCAAkC,IAEpCnuF,QAAS,CACPouF,kBAAmB,aACnB3B,mBAAoB,aACpB4B,sBAAuB,aACvB1C,uBAAwB,aACxB2C,uBAAwB,aACxBjD,wBAAyB,aACzBkD,yBAA0B,aAC1B1B,0BAA2B,aAC3B2B,0BAA2B,aAC3BvB,2BAA4B,aAC5BwB,2BAA4B,aAC5BtC,4BAA6B,aAC7BuC,gCAAiC,aACjCC,gCAAiC,aACjCrC,iCAAkC,aAClCsC,iCAAkC,eAGtCt9F,YAAa,CACXnmB,KAAM,CACJzP,aAAc,IAEhBmzH,KAAM,GACN7uF,QAAS,MAIT8uF,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJtlH,oBAAqB,IAGrBpK,cAAgB,OAuBhBksB,uCAAoB,SAAA1rB,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBjB,EAAKoiE,eAGLpiE,EAAKmvG,WAKL1kG,OAAOslH,gBAAkB,SAAChvF,GACxB,IAAM3O,EAAcpyB,EAAKgwH,oBAGzB,OAFA59F,EAAY2O,OAASA,EACrB/gC,EAAKiwH,eAAe79F,GACbA,GAGT3nB,OAAOylH,kBAAoB,SAAC99F,EAAYvF,EAAKvvB,EAAOs2C,GAOlD,OALAxhB,EAAYjpB,KAAO,WACnBipB,EAAY90B,OAASA,EACrB80B,EAAYwhB,OAASA,EACrBxhB,EAAY8V,gBAAkBrb,EAC9B7sB,EAAKkwH,kBAAkB99F,GAChBA,GAvBS,wBAAArxB,EAAAS,SAAAZ,EAAAjB,WA2BpB0rG,yDAAqB,SAAA1pG,EAAOmJ,EAAWqC,GAAlB,IAAAgjH,EAAAC,EAAA30G,EAAA40G,EAAA1T,EAAA,OAAAj8G,EAAAtB,EAAA0B,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,UAEnBjB,EAAK+I,YAID+B,EAAUkhD,gBAAkBhsD,EAAKJ,MAAMosD,eAAiBhsD,EAAKJ,MAAMosD,cACrEhsD,EAAKmvG,WACKrkG,EAAU6xG,UAAY38G,EAAKJ,MAAM+8G,QACvC38G,EAAKJ,MAAM+8G,QAAQ76E,iBAAiBqnC,OAASnpE,EAAKJ,MAAM+8G,QAAQ76E,MAAMzlB,QAAQ5Z,QAC1E0tH,EAAenwH,EAAKJ,MAAM+8G,QAAQ76E,MAAMzlB,QACxC+zG,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBP,IAAwCQ,GAE1CpwH,EAAKJ,MAAM88G,aAAa,SAAS,MAIjCkT,GAAmB,MAETQ,EAGVpwH,EAAKmvG,WAFLnvG,EAAKqvH,yBAAyB,KAAKc,IAK5BnwH,EAAKJ,MAAM+8G,QAAQllH,QAA6C,kBAAnCuI,EAAKJ,MAAM+8G,QAAQ3wD,eAA8D,kBAA3BhsD,EAAKJ,MAAMosD,eACvGhsD,EAAKmvG,YAEInvG,EAAKJ,MAAM+8G,QAAQ3wD,eAAiBhsD,EAAKJ,MAAM+8G,QAAQ3wD,gBAAkBhsD,EAAKJ,MAAMosD,eAAkBlhD,EAAUwlH,gBAAkBtwH,EAAKJ,MAAM0wH,gBACxJtwH,EAAKmvG,WAGD1zF,EAAe3Q,EAAUsC,gBAAkBpN,EAAKJ,MAAMwN,cAEtDijH,EAA6BvlH,EAAU7D,qBAAuBjH,EAAKJ,MAAMqH,qBAAuB6Y,KAAKC,UAAUxgB,OAAO4H,KAAK2D,EAAU7D,wBAA0B6Y,KAAKC,UAAUxgB,OAAO4H,KAAKnH,EAAKJ,MAAMqH,sBAGvMwU,GACFzb,EAAK4L,SAAS,CACZsiB,cAAe,OAKfpjB,EAAUikH,2BAA6B/uH,EAAKJ,MAAMmvH,0BACpD/uH,EAAK4L,SAAS,CACZmjH,yBAAyB/uH,EAAKJ,MAAMmvH,2BAIpC1qF,gBACIs4E,EAAU78F,KAAKykB,MAAMF,aAAaC,QAAQ,cAC/BtkC,EAAKJ,MAAM+8G,QAAQllH,SAAWklH,EAAQllH,QAAUuI,EAAKJ,MAAM+8G,QAAQ3wD,gBAAkB2wD,EAAQ3wD,eAC5GhsD,EAAKI,cAAcokC,gBAAgB,UAAU1kB,KAAKC,UAAU,CAACtoB,OAAOuI,EAAKJ,MAAM+8G,QAAQllH,OAAOu0D,cAAchsD,EAAKJ,MAAM+8G,QAAQ3wD,mBAI/HvwC,IAA8C40G,EA3D/B,CAAAvuH,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GA4DXjB,EAAK2mH,sBA5DM,yBAAA7kH,EAAAN,SAAAG,EAAAhC,mEAiErBwvG,8BAAW,SAAAtsG,IAAA,IAAAmpD,EAAAukE,EAAA5T,EAAA2R,EAAA3rF,EAAA6tF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvnD,EAAA+xC,EAAAyV,EAAA5nF,EAAA0pB,EAAA7wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAO+qD,EAAPgH,EAAAvwD,OAAA,QAAAC,IAAAswD,EAAA,GAAAA,EAAA,GAAqB,KAArBlwD,EAAA7B,KAAA,EAGsBkwH,OAHtB,YAGHZ,EAHGztH,EAAA1B,OAIiBqJ,OAAO2hD,UAAY3hD,OAAO2hD,WAAamkE,IAC/D9lH,OAAO2hD,SAAWmkE,GAIhB9lH,OAAO2hD,UAAY3hD,OAAO2hD,SAASglE,6BACrC3mH,OAAO2hD,SAASglE,4BAA6B,GAGzCzU,EAAU38G,EAAKJ,MAAM+8G,QAErB2R,EAAa,IAAI+C,IAAK,IAAIA,IAAKzyF,UAAU0yF,aAAa5gH,GAAc8tC,QAAQ5f,UAAUogB,OAAOtuC,GAAc8tC,QAAQK,iBAAiBsvE,KAEtIxrF,EAAOg6E,EAAQ4U,QAGd9mH,OAAOwhD,oBAAsB0wD,EAAQ3wD,gBAAkBvhD,OAAOwhD,mBAAmBD,gBACpFvhD,OAAOwhD,mBAAqB0wD,GAI1B3wD,EACF4jE,GAAmB,KAEnB5jE,EAAgBhsD,EAAKJ,MAAMosD,cAMzB2wD,GAA6B,WAAlB3wD,GAA8BA,IAAkB2wD,EAAQ3wD,gBACjErpB,GAAgD,oBAAjCA,EAAKkqC,gBAAgBitB,QACtCn3D,EAAKkqC,gBAAgBitB,UACZ6iB,EAAQxwD,WAAkD,oBAA9BwwD,EAAQxwD,UAAU2tC,SACvD6iB,EAAQxwD,UAAU2tC,UAEpBn3D,EAAO,KACPitF,GAAmB,MAGfY,EAAwB7T,EAAQ3wD,eAAiB2wD,EAAQ3wD,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB4jE,GAI/IjT,EAAQllH,SAAU+4H,EAhDd,CAAA1tH,EAAA7B,KAAA,aAkDH+qD,IAAiBwkE,EAlDd,CAAA1tH,EAAA7B,KAAA,gBAoDL2uH,GAAmB5jE,EApDdlpD,EAAA7B,KAAA,GAqDC07G,EAAQD,aAAa1wD,GArDtB,eAAAlpD,EAAAvB,OAAA,SAuDEohC,GAvDF,WAkHL8tF,EAAW,KACXC,EAAe,KAEd/tF,EAYH+tF,EAAe/tF,EAAKkqC,gBAXhBpiE,OAAO2hD,UACTpsD,EAAKI,cAAcsiC,UAAU,+BAC7BguF,EAAejmH,OAAO2hD,UACb3hD,OAAOk4B,MAChB3iC,EAAKI,cAAcsiC,UAAU,uCAC7BguF,EAAejmH,OAAOk4B,OAEtB3iC,EAAKI,cAAcsiC,UAAU,yDAC7B+tF,EAAW//G,GAAc8tC,QAAQ5f,UAAUogB,OAAOtuC,GAAc8tC,QAAQK,iBAAiBsvE,IAMzFwC,GAAgB,EAEd3kE,GAAmC,WAAlBA,IAA+B0kE,GAA+C,oBAAxBA,EAAa/2B,OAtIjF,CAAA72F,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,GAAA8B,EAAA7B,KAAA,GAwICyvH,EAAa/2B,SAxId,QAAA72F,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAiC,GAAAjC,EAAA,UA0IL4tH,EAAe,KACfD,EAAW//G,GAAc8tC,QAAQ5f,UAAUogB,OAAOtuC,GAAc8tC,QAAQK,iBAAiBsvE,GACzFwC,GAAgB,EA5IX,eAgJHC,EAAelgH,GAAc8tC,QAAQ5f,UAAUihB,WAEjC+wE,EAAatsH,UAA8F,IAAnFssH,EAAaxxE,kBAAkBxnC,QAAQlH,GAAc8tC,QAAQK,kBACjGgyE,EAA6BD,EAAah9E,OAC1Ck9E,EAAqBzsF,cAAgBA,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoBktF,cAAWx1B,OACxI60B,EAA2B5wE,OAAS6wE,EAEhCJ,EACFG,EAA2BY,mBAAqBf,EACvCD,IACTI,EAA2B5zB,KAAOwzB,GAG9BM,EAAuB,IAAIW,wBAAqBb,GACtDluF,EAAO,IAAI0uF,IAAKN,IAGZL,EACF/tF,EAAO,IAAI0uF,IAAKX,GAEPD,IACT9tF,EAAO,IAAI0uF,IAAK,IAAIA,IAAKzyF,UAAU0yF,aAAab,IAC1B,WAAlBzkE,GACFhsD,EAAKJ,MAAM88G,aAAa,SAAS,OAKjCsU,EA5KG,eAAAv+G,EAAAlT,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KA4KY,SAAA0B,IAAA,IAAAinC,EAAA,OAAA5oC,EAAAtB,EAAA0B,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAEnBwJ,OAAOknH,aAAe3xH,EAAKuK,MAAMo4B,KAGY,oBAAlC3iC,EAAKJ,MAAMgyH,qBACpB5xH,EAAKJ,MAAMgyH,qBACX5xH,EAAKJ,MAAMiyH,sBAAsB,OAPhBrvH,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAYXjB,EAAK2uH,eAZM,WAab3uH,EAAKuK,MAAMi0C,QAAQ2kD,iBAbN,CAAA3gG,EAAAvB,KAAA,YAeVjB,EAAKuK,MAAMsR,qBAfD,CAAArZ,EAAAvB,KAAA,eAAAuB,EAAAvB,KAAA,EAgBPjB,EAAK2mH,sBAhBE,WAmBXhK,EAAQx7G,QAnBG,CAAAqB,EAAAvB,KAAA,aAqBTjB,EAAKuK,MAAM++B,SArBF,CAAA9mC,EAAAvB,KAAA,YAsBLqoC,EAAWtpC,EAAKuK,MAAM++B,UACP54B,GAAc8tC,QAAQ5f,UAAU0K,SACpC6V,aAAgB7V,EAASwoF,SAAYjC,GAxB3C,CAAArtH,EAAAvB,KAAA,gBAyBT4uH,IAA0B,EAC1BvmF,EAAS0vD,MAAM2jB,EAAQx7G,QAAS,SAAC2gC,EAAOmrC,GAGtC,GAAInrC,EACF,OAAO9hC,EAAK4L,SAAS,CACnB09B,UAAS,GACT,WACAtpC,EAAK0mH,YAAY/J,EAAQx7G,WAI7B0uH,IAA0B,EAEtB5iD,EAAS/kC,gBACXloC,EAAK0mH,YAAY/J,EAAQx7G,SACjB8rE,EAAS8kD,cACjB/xH,EAAK0mH,YAAY/J,EAAQx7G,WA1CpBqB,EAAAjB,OAAA,UA6CF,GA7CE,eAAAiB,EAAAvB,KAAA,GAiDPjB,EAAK0mH,YAAY/J,EAAQx7G,SAjDlB,QAAAqB,EAAAvB,KAAA,wBAAAuB,EAAAvB,KAAA,GAmDPjB,EAAK4L,SAAS,CAClB66G,oBAAoB,EACpBtlH,QAASnB,EAAKJ,MAAM0wH,gBArDT,QAAA9tH,EAAAvB,KAAA,iBAAAuB,EAAAxB,KAAA,GAAAwB,EAAAuC,GAAAvC,EAAA,SA2DjBxC,EAAKqvH,yBAAyB,KAAK7sH,EAAAuC,GAAMsX,SA3DxB,yBAAA7Z,EAAAhB,SAAAa,EAAA1C,KAAA,aA5KZ,yBAAA8S,EAAAvQ,MAAAvC,KAAAwC,YAAA,GA4OH8uH,EAAetuF,EACf+mC,EAAeh5D,GAAc8tC,QAAQ5f,UAAU0K,SAC/CmyE,EAAiBz7G,EAAKI,cAAc4hE,sBAEpB,WAAlBhW,GAA8B0d,GAAgBA,EAAaplE,SAAWolE,EAAatqB,kBAAkBpqB,SAAStkB,GAAc8tC,QAAQK,mBAAsB48D,GAAmB/xC,EAAarqB,gBAAgBrqB,SAASymF,EAAeprG,eA0ChOsyB,IAAS3iC,EAAKuK,MAAMo4B,KACtB3iC,EAAK4L,SAAS,CACZ+2B,OACA2rF,cACC0C,IACMrU,EAAQx7G,SAAWwvH,IAC5BK,IA9C0B,OAAxBhxH,EAAKuK,MAAM++B,WACP4nF,EAAuBR,GAA8BD,GACrDnnF,EAAW,IAAI0oF,KAASd,EAAqBxnD,EAAa91B,UAEpB,oBAArBtK,EAAS2oF,SAC9BtvF,EAAO,IAAI0uF,IAAK/nF,GAChBA,EAAS2oF,QAAQ3oF,EAAS4oF,MAAO,WAC/B,GAAIlyH,EAAKwK,qBAA8C,IAAxBxK,EAAKuK,MAAM++B,UAAsBtpC,EAAKuK,MAAM++B,WAAaA,EACtF,OAAO,EAGT,IAAMt+B,EAAW,CACf23B,OACA2G,WACAglF,cAEE3rF,IAAS3iC,EAAKuK,MAAMo4B,MACtB3iC,EAAK4L,SAASZ,EAAUgmH,KAEzBiB,QAAQ3oF,EAAS6oF,MAAO,SAACrwF,EAAOzlB,GAEjCsmB,EAAOsuF,GAEqB,IAAxBjxH,EAAKuK,MAAM++B,UACbtpC,EAAK4L,SAAS,CACZ+2B,OACA2rF,aACAhlF,UAAS,GACR0nF,MAIPhxH,EAAK4L,SAAS,CACZ+2B,OACA2rF,aACAhlF,UAAS,GACR0nF,IAtRAluH,EAAAvB,OAAA,SAoSFohC,GApSE,yBAAA7/B,EAAAtB,SAAAqB,EAAAlD,KAAA,gBAuSXylB,mDAAe,SAAApiB,EAAO0J,EAAMnG,EAAS4e,GAAtB,IAAAitG,EAAAl/D,EAAA/wD,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAA2BmxH,EAA3Bl/D,EAAAzwD,OAAA,QAAAC,IAAAwwD,EAAA,IAAAA,EAAA,GACblzD,EAAKI,cAAcsiC,UAAnB,kBAAAn+B,OAA+CmI,IADlCxJ,EAAAjC,KAAA,EAEAjB,EAAKwhE,eAAe90D,EAAMnG,EAAS4e,EAAKitG,GAFxC,cAAAlvH,EAAA3B,OAAA,SAAA2B,EAAA9B,MAAA,wBAAA8B,EAAA1B,SAAAwB,EAAArD,qEAKf6hE,qDAAiB,SAAAj+D,EAAOmJ,EAAMnG,EAAS4e,GAAtB,IAAAitG,EAAA1B,EAAA9yE,EAAAx5C,EAAAjC,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,UAA2BmxH,EAA3BhuH,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,IAAAA,EAAA,GACfpE,EAAKI,cAAcsiC,UAAnB,qBAAAn+B,OAAkDmI,EAAlD,aAAAnI,OAAkEgC,IAE5DmqH,EAAe0B,GAAqBpyH,EAAKuK,MAAM+jH,WAAatuH,EAAKuK,MAAM+jH,WAAatuH,EAAKuK,MAAMo4B,KAHtF,CAAAt+B,EAAApD,KAAA,eAAAoD,EAAA9C,OAAA,SAMN,MANM,cAAA8C,EAAArD,KAAA,EAWP48C,EAAW,IAAI8yE,EAAa9tF,IAAIg/B,SAASz8C,EAAK5e,GACpDvG,EAAK4L,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GACdgL,EADc,CAEjBmpC,UAAUn0C,OAAA0hC,EAAA,EAAA1hC,CAAKgL,EAAMmpC,WAAZnvC,OAAA,CAAuB,CAACmI,OAAMkxC,kBAd5Bv5C,EAAA9C,OAAA,SAgBN,CAACmL,OAAMkxC,aAhBD,QAAAv5C,EAAArD,KAAA,GAAAqD,EAAAU,GAAAV,EAAA,SAkBbrE,EAAKI,cAAcuvD,eAAe,6BAA6BjjD,EAAKnG,EAApElC,EAAAU,IAlBa,eAAAV,EAAA9C,OAAA,SAqBR,MArBQ,yBAAA8C,EAAA7C,SAAA+B,EAAA5D,KAAA,yEAwBjByiE,aAAe,WAEb,GAAIpiE,EAAKuK,MAAM81C,SACb,OAAOrgD,EAAKuK,MAAM81C,SAGpB,IAAMgyE,EAAe3hH,GAAc8tC,QAAQ5f,UAAUyhB,SACjDA,EAAW,KAEf,GAAIgyE,GAAgBA,EAAa/tH,UAA8F,IAAnF+tH,EAAajzE,kBAAkBxnC,QAAQlH,GAAc8tC,QAAQK,iBAAyB,CAChI,IAAMyzE,EAAiBD,EAAaz+E,OACpC0+E,EAAe9zE,QAAU6zE,EAAa/xE,WAAWtgD,EAAKuK,MAAMi0C,QAAQ0pE,QAAQz3G,GAAGC,GAAc8tC,QAAQC,mBACrG4B,EAAW,IAAIkyE,KAASD,GAS1B,OANA7nH,OAAO41C,SAAWA,EAElBrgD,EAAK4L,SAAS,CACZy0C,aAGKA,KAGTqmE,iCAAc,SAAAhhH,IAAA,IAAAvE,EAAAqxH,EAAA/W,EAAAp7D,EAAAoyE,EAAAC,EAAAC,EAAAlU,EAAAt8G,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,UAAOE,EAAPs9G,EAAAh8G,OAAA,QAAAC,IAAA+7G,EAAA,IAAAA,EAAA,GAEZz+G,EAAKI,cAAcsiC,UAAU,cAAcvhC,IAEvCnB,EAAKJ,MAAM0wH,cAJH,CAAAxqH,EAAA7E,KAAA,eAOVjB,EAAK4L,SAAS,CACZ66G,oBAAoB,EACpBtlH,QAASnB,EAAKJ,MAAM0wH,gBAItBtwH,EAAK0+B,oBAbK54B,EAAAvE,OAAA,UAeH,GAfG,UAAAuE,EAAA9E,KAAA,EAmBLG,EAnBK,CAAA2E,EAAA7E,KAAA,gBAAA6E,EAAA7E,KAAA,GAoBcjB,EAAKuK,MAAMo4B,KAAKC,IAAIg3D,cApBlC,SAoBF44B,EApBE1sH,EAAA1E,OAqBOoxH,EAAQ/vH,SACrBtB,EAAUqxH,EAAQ,IAtBZ,WA0BLrxH,GAAWnB,EAAKuK,MAAMpJ,UAAYA,EA1B7B,CAAA2E,EAAA7E,KAAA,gBA2BRjB,EAAK4L,SAAS,CACZ66G,oBAAoB,IA5Bd3gH,EAAAvE,OAAA,UA8BD,GA9BC,YAkCNJ,EAlCM,CAAA2E,EAAA7E,KAAA,YAoCFw6G,EAAiBp3E,cAAgBA,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,WAGnH+b,EAAWrgD,EAAKoiE,gBAvCd,CAAAt8D,EAAA7E,KAAA,gBAAA6E,EAAA7E,KAAA,GA2CsBo/C,EAASoyE,gBA3C/B,SA2CAA,EA3CA3sH,EAAA1E,OA6CeqxH,EAAchwH,QAAUgI,OAAOmoH,SAE9CF,EAAqB,GACrBruF,eACFquF,EAAqBruF,aAAaC,QAAQ,uBAAyBxkB,KAAKykB,MAAMF,aAAaC,QAAQ,uBAAyBxkB,KAAKykB,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLmuF,EAAc5oH,QAAQ,SAACoT,EAAE/M,GAEvB,IAAM2iH,EAAiB51G,EAAEvQ,MAG2B,IAAhDgmH,EAAmB96G,QAAQi7G,KAC7BpoH,OAAOmoH,OAAOpiH,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQxQ,EAAKI,cAAc8vD,8BAA8BjzC,EAAE6+F,YAGtG4W,EAAmBliH,KAAKqiH,MAKxBxuF,cACFrkC,EAAKI,cAAcokC,gBAAgB,qBAAqB1kB,KAAKC,UAAU2yG,KAnErE,QAyER1yH,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,YACbC,WAAY43F,IAmMdz7G,EAAK4L,SAAS,CACZzK,UAEAslH,oBAAoB,IAItBzmH,EAAK0+B,oBAtRG,QAAA54B,EAAA7E,KAAA,oBAAA6E,EAAA9E,KAAA,GAAA8E,EAAAf,GAAAe,EAAA,SA8RV9F,EAAK4L,SAAS,CACZ66G,oBAAoB,IAItBzmH,EAAKI,cAAcsiC,UAAU,yCAA7B58B,EAAAf,MAKIe,EAAAf,IAASe,EAAAf,GAAMsX,SAAWvW,EAAAf,GAAMsX,QAAQ2Y,SAAS,yCAxS3C,CAAAlvB,EAAA7E,KAAA,gBAAA6E,EAAAvE,OAAA,kBA6SJoxH,EAAU7sH,EAAAf,cAAiBokE,MAC7BnpE,EAAKI,cAAcmgE,kBAAoBoyD,GACzCG,KAAAhtH,EAAAf,IA/SQ,yBAAAe,EAAAtE,SAAAkE,EAAA/F,KAAA,eAwTdmvH,qBAAuB,SAAAhtF,GACrB,IAAI4Q,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKihH,0BAA2B,EACvCx6E,EAAOzmC,KAAKohH,qBAAsB,EAClCrtH,EAAK4L,SAAS,CAAE8mC,cAGlBhU,wDAAoB,SAAAv4B,EAAO4sH,GAAP,IAAAttH,EAAAS,EAAAqoH,EAAAE,EAAAvgG,EAAA,OAAAxtB,EAAAtB,EAAA0B,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAElB8xH,EAAiBA,EAAiB/yH,EAAKI,cAAciB,MAAM0xH,GAAkB,KAF3DzsH,EAAAtF,KAAA,EAAAsF,EAAArF,KAAA,EAM+CwD,QAAQC,IAAI,CACzE1E,EAAKuK,MAAMo4B,KAAKC,IAAIpiC,WAAWR,EAAKuK,MAAMpJ,SAC1CnB,EAAKkB,gBAAgBlB,EAAKuK,MAAMpJ,SAChCnB,EAAKmpC,qBATS,OAAA1jC,EAAAa,EAAAlF,KAAA8E,EAAA3G,OAAAsF,EAAA,EAAAtF,CAAAkG,EAAA,GAMX8oH,EANWroH,EAAA,GAMIuoH,EANJvoH,EAAA,GAMwBgoB,EANxBhoB,EAAA,GAYZqoH,IAGEA,EAAex4G,WAAWif,SAAS,OACrCu5F,EAAiBvuH,EAAKuK,MAAMo4B,KAAKmsB,MAAMK,MAAMo/D,IAI/CA,EAAiBvuH,EAAKuK,MAAMo4B,KAAKmsB,MAAMI,QACrCq/D,EACA,SAGFA,EAAiBvuH,EAAKI,cAAciB,MAAMktH,GAAgBx4G,WAE1D/V,EAAK4L,SAAS,CACZ2iH,mBAGFvuH,EAAKI,cAAcsiC,UAAU,oBAAqB6rF,IAKhDE,GAEFA,EAAsBzuH,EAAKI,cAAciB,MAAMotH,GAG3CsE,GAAkB/yH,EAAKuK,MAAMkkH,qBAAuBzuH,EAAKI,cAAcynC,qBAAqB7nC,EAAKuK,MAAMkkH,oBAAoBvgG,GAAenY,aAAe04G,EAAoB14G,aAC/K04G,EAAsBA,EAAoB5mH,KAAKkrH,IAGjDtE,EAAsBzuH,EAAKI,cAAc+C,iBAAiBsrH,EAAoBvgG,GAAenY,WAK7F/V,EAAK4L,SAALrM,OAAAic,EAAA,EAAAjc,CAAA,CACEkvH,uBADF,iBAAAlqH,OAEoBvE,EAAKJ,MAAMwN,eAAiBqhH,KAIhDzuH,EAAKI,cAAcsiC,UAAU,kCAAkC+rF,GAxDjDnoH,EAAArF,KAAA,iBAAAqF,EAAAtF,KAAA,GAAAsF,EAAAvB,GAAAuB,EAAA,SA2DhBtG,EAAKI,cAAcuvD,eAAe,iCAAlCrpD,EAAAvB,IA3DgB,yBAAAuB,EAAA9E,SAAA2E,EAAAxG,KAAA,qEA+DpBgnH,yCAAsB,SAAAlsD,IAAA,IAAA/mB,EAAAxhC,EAAA,OAAAxR,EAAAtB,EAAA0B,KAAA,SAAA45D,GAAA,cAAAA,EAAA15D,KAAA05D,EAAAz5D,MAAA,cAEdyyC,EAAY1zC,EAAKI,cAAcG,gBAAgB,CAAC,cAFlCm6D,EAAAz5D,KAAA,EAGdjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKusC,GAA5C,eAAAtsC,EAAA7H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAuD,SAAA0G,EAAO2oD,GAAP,IAAAgjE,EAAA,OAAAtyH,EAAAtB,EAAA0B,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UAE9B,QADvB+xH,EAAet/E,EAAUsc,IACdzpD,SAAyC,OAArBysH,EAAa7tG,IAFS,CAAAxd,EAAA1G,KAAA,eAGzDjB,EAAKI,cAAcsiC,UAAU,qCAAsCstB,EAAcgjE,EAAazsH,SAHrCoB,EAAA1G,KAAA,EAInDjB,EAAKolB,aAAa4qC,EAAcgjE,EAAazsH,QAASysH,EAAa7tG,KAJhB,wBAAAxd,EAAAnG,SAAA6F,EAAA1H,SAAvD,gBAAAu6D,GAAA,OAAA9yD,EAAAlF,MAAAvC,KAAAwC,YAAA,IAHc,cAWd+P,EAAYlS,EAAKI,cAAcG,gBAAgB,CAAC,cAXlCm6D,EAAAz5D,KAAA,EAYdjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAK+K,GAA5C,eAAA5K,EAAA/H,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAuD,SAAA+F,EAAOlD,GAAP,IAAA+Z,EAAA,OAAA7c,EAAAtB,EAAA0B,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,WACrDsc,EAAiBrL,EAAU1O,IACbc,QAFuC,CAAAyC,EAAA9F,KAAA,eAAA8F,EAAAxF,OAAA,oBAM/BvB,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASlJ,IANX,CAAAuD,EAAA9F,KAAA,eAQzDjB,EAAKI,cAAcsiC,UAAU,qCAAsCl/B,EAAO+Z,EAAehX,SARhCQ,EAAA9F,KAAA,EASnDjB,EAAKolB,aAAa5hB,EAAO+Z,EAAehX,QAASgX,EAAe4H,KATb,wBAAApe,EAAAvF,SAAAkF,EAAA/G,SAAvD,gBAAAw6D,GAAA,OAAA7yD,EAAApF,MAAAvC,KAAAwC,YAAA,IAZc,WAyBhBnC,EAAKJ,MAAMqH,oBAzBK,CAAAyzD,EAAAz5D,KAAA,eAAAy5D,EAAAz5D,KAAA,EA2BZjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKnH,EAAKJ,MAAMqH,qBAAvD,eAAAM,EAAAhI,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA4E,SAAAo5D,EAAOhsB,GAAP,IAAApnC,EAAA,OAAAjG,EAAAtB,EAAA0B,KAAA,SAAAk5D,GAAA,cAAAA,EAAAh5D,KAAAg5D,EAAA/4D,MAAA,cAE1E0F,EAAkB3G,EAAKJ,MAAMqH,oBAAoB8mC,GAFyBisB,EAAA/4D,KAAA,EAI1EjB,EAAKI,cAAc8G,aAAa3H,OAAO4H,KAAKR,GAA5C,eAAA2W,EAAA/d,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA6D,SAAA40D,EAAO/xD,GAAP,IAAArD,EAAAkX,EAAAmxB,EAAA,OAAA9nC,EAAAtB,EAAA0B,KAAA,SAAAi1D,GAAA,cAAAA,EAAA/0D,KAAA+0D,EAAA90D,MAAA,UAC3Dd,EAAcwG,EAAgBnD,GAEXxD,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASlJ,IAHF,CAAAuyD,EAAA90D,KAAA,eAK/DjB,EAAKI,cAAcsiC,UAAU,qCAAqCl/B,EAAOrD,EAAYoG,SALtBwvD,EAAA90D,KAAA,EAMzDjB,EAAKolB,aAAa5hB,EAAOrD,EAAYoG,QAASpG,EAAYglB,KAND,UAUpCnlB,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASvM,EAAYqE,KAAKhB,QAVvB,CAAAuyD,EAAA90D,KAAA,gBAY/DjB,EAAKI,cAAcsiC,UAAU,qCAAqCviC,EAAYqE,KAAKhB,MAAOrD,EAAYqE,KAAK+B,SAZ5CwvD,EAAA90D,KAAA,GAazDjB,EAAKolB,aAAajlB,EAAYqE,KAAKhB,MAAOrD,EAAYqE,KAAK+B,QAASpG,EAAYqE,KAAK2gB,KAb5B,WAiBjEhlB,EAAY6P,UAAUnG,QAAtB,eAAAtB,EAAAhJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA8B,SAAA6H,EAAOsB,EAAEoG,GAAT,OAAAxP,EAAAtB,EAAA0B,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,UACAjB,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAAS5C,EAAEtG,QAD5C,CAAAoF,EAAA3H,KAAA,eAG1BjB,EAAKI,cAAcsiC,UAAU,6BAA6B54B,EAAEtG,MAAM,YAAYsG,GAHpDlB,EAAA3H,KAAA,EAIpBjB,EAAKolB,aAAatb,EAAEtG,MAAOsG,EAAEvD,QAASuD,EAAEqb,KAJpB,wBAAAvc,EAAApH,SAAAgH,EAAA7I,SAA9B,gBAAAo/D,EAAAD,GAAA,OAAAv2D,EAAArG,MAAAvC,KAAAwC,YAAA,KASIhC,EAAYiX,UA1BiD,CAAA2+C,EAAA90D,KAAA,aA4B3Dd,EAAYiX,UAAUC,YA5BqC,CAAA0+C,EAAA90D,KAAA,gBA6BvDoW,EAAclX,EAAYiX,UAAUC,YAC1CrX,EAAKI,cAAcsiC,UAAU,6BAA6BrrB,EAAY3K,KAAK,YAAY2K,GA9B1B0+C,EAAA90D,KAAA,GA+BvDjB,EAAKolB,aAAa/N,EAAY3K,KAAM2K,EAAY9Q,QAAS8Q,EAAY8N,KA/Bd,WAmC3DhlB,EAAYiX,UAAUG,cACxBpX,EAAYiX,UAAUG,aAAa1N,QAAnC,eAAApB,EAAAlJ,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAA2C,SAAAuH,EAAO4B,EAAEoG,GAAT,OAAAxP,EAAAtB,EAAA0B,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,UACbjB,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAAS5C,EAAEtG,QAD/B,CAAA8E,EAAArH,KAAA,eAGvCjB,EAAKI,cAAcsiC,UAAU,6BAA6B54B,EAAEtG,MAAM,YAAYsG,GAHvCxB,EAAArH,KAAA,EAIjCjB,EAAKolB,aAAatb,EAAEtG,MAAOsG,EAAEvD,QAASuD,EAAEqb,KAJP,wBAAA7c,EAAA9G,SAAA0G,EAAAvI,SAA3C,gBAAAi/D,EAAAC,GAAA,OAAAp2D,EAAAvG,MAAAvC,KAAAwC,YAAA,KASEhC,EAAYiX,UAAUoxB,kBA7CqC,CAAAutB,EAAA90D,KAAA,gBA8CvDunC,EAAoBroC,EAAYiX,UAAUoxB,kBAChDxoC,EAAKI,cAAcsiC,UAAU,6BAA6B8F,EAAkB97B,KAAK,YAAY87B,GA/ChCutB,EAAA90D,KAAA,GAgDvDjB,EAAKolB,aAAaojB,EAAkB97B,KAAM87B,EAAkBjiC,QAASiiC,EAAkBrjB,KAhDhC,yBAAA4wC,EAAAv0D,SAAA+zD,EAAA51D,SAA7D,gBAAAi7D,GAAA,OAAAt9C,EAAApb,MAAAvC,KAAAwC,YAAA,IAJ0E,wBAAA63D,EAAAx4D,SAAAu4D,EAAAp6D,SAA5E,gBAAAg7D,GAAA,OAAApzD,EAAArF,MAAAvC,KAAAwC,YAAA,IA3BY,cAAAu4D,EAAAn5D,OAAA,SAsFbvB,EAAK4L,SAAS,CACnBiQ,sBAAqB,KAvFH,yBAAA6+C,EAAAl5D,SAAAi5D,EAAA96D,WA2FtBulB,wDAAoB,SAAA+zC,EAAOjJ,GAAP,IAAApS,EAAAz9C,EAAA,OAAAO,EAAAtB,EAAA0B,KAAA,SAAA84D,GAAA,cAAAA,EAAA54D,KAAA44D,EAAA34D,MAAA,WACd28C,EAAW59C,EAAKuK,MAAMmpC,UAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASsjD,OAExChwD,EAAKJ,MAAMO,YAHV,CAAAy5D,EAAA34D,KAAA,eAIVd,EAAcH,EAAKJ,MAAMO,YAJfy5D,EAAA34D,KAAA,EAKCjB,EAAKolB,aAAa4qC,EAAc7vD,EAAYoG,QAASpG,EAAYglB,KALlE,OAKhBy4B,EALgBgc,EAAAx4D,KAAA,cAAAw4D,EAAAr4D,OAAA,SAQXq8C,EAAWA,EAASA,SAAW,MARpB,wBAAAgc,EAAAp4D,SAAAy3D,EAAAt5D,iEAWpBwpC,sCAAmB,SAAAkvB,IAAA,IAAAnqC,EAAA,OAAAxtB,EAAAtB,EAAA0B,KAAA,SAAA63D,GAAA,cAAAA,EAAA33D,KAAA23D,EAAA13D,MAAA,UACbitB,EAAgB,KAEfluB,EAAKuK,MAAM2jB,cAHC,CAAAyqC,EAAA13D,KAAA,eAAA03D,EAAA13D,KAAA,EAKOjB,EAAKI,cAAc+oC,iBAAiBnpC,EAAKJ,MAAMwN,eALtD,OAKf8gB,EALeyqC,EAAAv3D,KAOfpB,EAAK4L,SAAS,CACZsiB,kBARayqC,EAAA13D,KAAA,uBAAA03D,EAAA13D,KAAA,GAWQ,IAAIwD,QAAJ,eAAAq1D,EAAAv6D,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAtB,EAAAuB,KAAa,SAAAk4D,EAAOr2B,EAASC,GAAhB,OAAA/hC,EAAAtB,EAAA0B,KAAA,SAAAi4D,GAAA,cAAAA,EAAA/3D,KAAA+3D,EAAA93D,MAAA,OAClCuhC,EAAQxiC,EAAKuK,MAAM2jB,eADe,wBAAA6qC,EAAAv3D,SAAAq3D,EAAAl5D,SAAb,gBAAAm+D,EAAAI,GAAA,OAAApE,EAAA53D,MAAAvC,KAAAwC,YAAA,IAXR,QAWf+rB,EAXeyqC,EAAAv3D,KAAA,eAAAu3D,EAAAp3D,OAAA,SAgBV2sB,GAhBU,yBAAAyqC,EAAAn3D,SAAA62D,EAAA14D,WAmBnBuB,sDAAkB,SAAAw8D,EAAOv8D,GAAP,IAAAy8C,EAAA,OAAAl9C,EAAAtB,EAAA0B,KAAA,SAAA68D,GAAA,cAAAA,EAAA38D,KAAA28D,EAAA18D,MAAA,cAAA08D,EAAA18D,KAAA,EACOjB,EAAKklB,kBAAkBllB,EAAKJ,MAAMwN,eADzC,UACVwwC,EADU+f,EAAAv8D,KAAA,CAAAu8D,EAAA18D,KAAA,eAIdjB,EAAKI,cAAcuvD,eAAe,sBAAuB3vD,EAAKJ,MAAMwN,eAJtDuwD,EAAAp8D,OAAA,SAKP,MALO,UAQXq8C,EAAS9c,QAAT,UARW,CAAA68B,EAAA18D,KAAA,eASdjB,EAAK2vD,eAAe,+BATNgO,EAAAp8D,OAAA,SAUP,MAVO,cAAAo8D,EAAA18D,KAAA,GAaH28C,EAAS9c,QAAQmyF,UAAU9xH,GAAS8pC,OAAOu0B,MAAM,SAAA19B,GAC5D9hC,EAAKI,cAAcsiC,UAAnB,iBAAAn+B,OAA8CvE,EAAKJ,MAAMwN,cAAzD,YAAkF00B,KAdpE,eAAA67B,EAAAp8D,OAAA,SAAAo8D,EAAAv8D,MAAA,yBAAAu8D,EAAAn8D,SAAAk8D,EAAA/9D,iEAkBlBuzH,2BAA6B,WAE3B,IAAMn0E,EACyB,qBAAtB/+C,EAAKJ,MAAMy/D,QACiC,qBAA5Cr/D,EAAKJ,MAAMy/D,OAAOtgB,sBACrB/+C,EAAKJ,MAAMy/D,OAAOtgB,sBAClB,EAEAyvE,EACJxuH,EAAKuK,MAAMgkH,eAAiBxvE,EAE9B/+C,EAAK4L,SAAS,CACZ4iH,yBAIJx/E,gEAA4B,SAAAgvB,EAAO4zD,GAAP,OAAAlxH,EAAAtB,EAAA0B,KAAA,SAAAm9D,GAAA,cAAAA,EAAAj9D,KAAAi9D,EAAAh9D,MAAA,OAErBjB,EAAKuK,MAAMpJ,UACdnB,EAAKJ,MAAMiyH,sBAAsBD,GAEjC5xH,EAAKmzH,uBALmB,wBAAAl1D,EAAAz8D,SAAAw8D,EAAAr+D,iEAS5ByzH,mBAAqB,WAEnB,IAAM7yE,EACyB,qBAAtBvgD,EAAKJ,MAAMy/D,QAC2B,qBAAtCr/D,EAAKJ,MAAMy/D,OAAOxgB,gBACrB7+C,EAAKJ,MAAMy/D,OAAOxgB,gBAClBnuC,GAAc8tC,QAAQK,gBAIxBA,EAAkB,CACpBnyC,KAHgBgE,GAAc8tC,QAAQC,kBAAkB8B,GAAa7vC,GAAc8tC,QAAQC,kBAAkB8B,GAAa,UAI1H9vC,GAAI8vC,GAGF/B,EAAOj/C,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMi0C,SAC9BA,EAAQl3B,SAAWu3B,EAEnB7+C,EAAK4L,SAAS,CAAE4yC,eAGlB60E,kCAAe,SAAA/0D,IAAA,OAAA59D,EAAAtB,EAAA0B,KAAA,SAAAy9D,GAAA,cAAAA,EAAAv9D,KAAAu9D,EAAAt9D,MAAA,cAAAs9D,EAAAv9D,KAAA,EAAAu9D,EAAAh9D,OAAA,SAEJvB,EAAKuK,MAAMo4B,KAAKC,IAAI2pC,IAAIC,MAAM,SAAC1qC,EAAOye,GAC3C,IAAI2nE,EAAO3oH,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMi0C,QAAQ0pE,SACtCA,EAAQz3G,GAAK8vC,EACb,IAAI/B,EAAOj/C,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMi0C,SAC9BA,EAAQ0pE,QAAUA,EAClBloH,EAAK4L,SAAS,CAAE4yC,eAPP,OAAA+f,EAAAv9D,KAAA,EAAAu9D,EAAAx5D,GAAAw5D,EAAA,SAUXv+D,EAAKI,cAAcsiC,UAAU,6BAA7B67B,EAAAx5D,IAVW,wBAAAw5D,EAAA/8D,SAAA88D,EAAA3+D,KAAA,cAcf2zH,oCAAiB,SAAA/3D,IAAA,OAAA76D,EAAAtB,EAAA0B,KAAA,SAAAg8D,GAAA,cAAAA,EAAA97D,KAAA87D,EAAA77D,MAAA,cAAA67D,EAAA97D,KAAA,EAAA87D,EAAAv7D,OAAA,SAENvB,EAAKuK,MAAMo4B,KAAKC,IAAI2pC,IAAIgnD,eAAe,SAACzxF,EAAO0e,GACpD,IAAI0nE,EAAO3oH,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMi0C,QAAQ0pE,SACtCA,EAAQx7G,KAAO8zC,EACf,IAAIhC,EAAOj/C,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMi0C,SAC9BA,EAAQ0pE,QAAUA,EAClBloH,EAAK4L,SAAS,CAAE4yC,eAPL,OAAAse,EAAA97D,KAAA,EAAA87D,EAAA/3D,GAAA+3D,EAAA,SAUb98D,EAAKI,cAAcsiC,UAAU,+BAA7Bo6B,EAAA/3D,IAVa,wBAAA+3D,EAAAt7D,SAAA+5D,EAAA57D,KAAA,cAcjBgvH,kCAAe,SAAAvzD,IAAA,IAAA5c,EAAA,OAAA99C,EAAAtB,EAAA0B,KAAA,SAAAu6D,GAAA,cAAAA,EAAAr6D,KAAAq6D,EAAAp6D,MAAA,cACbjB,EAAKozH,qBADQ/3D,EAAAp6D,KAAA,EAGPwD,QAAQC,IAAI,CAChB1E,EAAKqzH,eACLrzH,EAAKszH,mBALM,QAQT90E,EARSj/C,OAAA0L,EAAA,EAAA1L,CAAA,GAQMS,EAAKuK,MAAMi0C,UACtB2kD,iBAAmBnjG,EAAKuK,MAAMi0C,QAAQ0pE,QAAQz3G,KAAOzQ,EAAKuK,MAAMi0C,QAAQl3B,SAAS7W,GAIzFzQ,EAAK4L,SAAS,CAAE4yC,YAbH,wBAAA6c,EAAA75D,SAAA45D,EAAAz7D,WAgBfoC,gEAA4B,SAAAg5D,EAAO/K,EAAcwjE,GAArB,IAAA5/E,EAAAzlC,EAAAvM,EAAAwmE,EAAAqrD,EAAAjkD,EAAAp9C,EAAA2rE,EAAA58F,EAAAuyC,EAAAkK,EAAA81E,EAAArrD,EAAAgC,EAAA3mC,EAAAiwF,EAAAC,EAAAC,EAAAC,EAAAnB,EAAA13D,EAAA94D,UAAA,OAAAzB,EAAAtB,EAAA0B,KAAA,SAAAo6D,GAAA,cAAAA,EAAAl6D,KAAAk6D,EAAAj6D,MAAA,UAAqC2yC,EAArCqnB,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAA8C,GAAI9sD,EAAlD8sD,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAA0D,KAAMr5D,EAAhEq5D,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAA2E,KAAMmN,EAAjFnN,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAAoG,KAAMw4D,EAA1Gx4D,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAAqH,KAAMuU,EAA3HvU,EAAAx4D,OAAA,QAAAC,IAAAu4D,EAAA,GAAAA,EAAA,GAAoI,KAEzJj7D,EAAKuK,MAAMi0C,QAAQ2kD,iBAFE,CAAAjoC,EAAAj6D,KAAA,eAIxBjB,EAAKuK,MAAMmoC,OAAO5R,QAAQquF,wBAJFj0D,EAAA35D,OAAA,UAKjB,GALiB,UASrBvB,EAAKuK,MAAMpJ,QATU,CAAA+5D,EAAAj6D,KAAA,gBAUxBjB,EAAKmzH,sBACmB,oBAAbvxH,GACTA,EAAS,KAAK,yBAZQs5D,EAAA35D,OAAA,UAcjB,GAdiB,YAkBtBvB,EAAKuK,MAAMikH,kBAlBW,CAAAtzD,EAAAj6D,KAAA,gBAmBxBjB,EAAKkvH,oBACmB,oBAAbttH,GACTA,EAAS,KAAK,uBArBQs5D,EAAA35D,OAAA,UAuBjB,GAvBiB,YA8BtB6wB,EAAcpyB,EAAKgwH,kBAAkBxgD,IAC7BzuC,OAASyyF,EAErBxzH,EAAKiwH,eAAe79F,GAGpBA,EAAYjpB,KAAO,WACnBipB,EAAY90B,OAAS,UACrB80B,EAAYwhB,OAASA,EAGrB5zC,EAAKkwH,kBAAkB99F,GAzCG2rE,EA2CK/9F,EAAKuK,MAA5BpJ,EA3CkB48F,EA2ClB58F,QAASuyC,EA3CSqqD,EA2CTrqD,UACbkK,EAAWlK,EAAUh8B,KAAK,SAAAu4C,GAAC,OAAIA,EAAEvjD,OAASsjD,IA5CpB,CAAAkL,EAAAj6D,KAAA,eA8CA,oBAAbW,GACTA,EAAS,KAAK,sBA/CQs5D,EAAA35D,OAAA,SAiDjBvB,EAAKI,cAAcsiC,UAAnB,yBAAAn+B,OAAsDyrD,KAjDrC,eAoD1BpS,EAAWA,EAASA,SAOhB81E,EAA8B,KA3DRx4D,EAAAl6D,KAAA,GA+DnBmN,IACHA,EAAQnO,EAAKI,cAAciB,MAAM,IAGnCrB,EAAKI,cAAcsiC,UAAU,4BAA4BstB,EAAapS,EAAS6sB,SAAStpE,EAAQqyH,EAAe5/E,EAAQzlC,EAAQ,CAAEsB,KAAMtO,EAASgN,SAAU,CAAEsB,KAAMtO,IAnE1I+5D,EAAAj6D,KAAA,IAsERonE,EAAAzqB,EAAS9c,SAAQ0yF,GAAjBtxH,MAAAmmE,EAAA9oE,OAAA0hC,EAAA,EAAA1hC,CAAoCq0C,IACjD+kC,YAAYxqE,EAAQ,CAAEsB,KAAMtO,EAASgN,SAAU,CAAEsB,KAAMtO,IACvDq+D,MAAM,SAAAzxD,GAAC,OAAIgiD,QAAQjuB,MAAM/zB,KAxEJ,eAsEpB21B,EAtEoBw3B,EAAA95D,QA6EtBsiC,GADAA,EAAM1jC,EAAKI,cAAciB,MAAMqiC,IACrB77B,KAAK67B,EAAIv+B,MAAMnF,EAAKI,cAAciB,MAAM,SAG9CoyH,GAAY/vF,EAAI1W,GAAGhtB,EAAKI,cAAciB,MAAMoyH,MAC9C/vF,EAAM1jC,EAAKI,cAAciB,MAAMoyH,IAIjC/vF,EAAM1jC,EAAKuK,MAAMo4B,KAAKmsB,MAAMD,KAAKnrB,EAAIkH,aAAaykB,IAAUmV,eAGxDmvD,EAAuB,SAAClrD,EAAoBC,GAI5CgrD,GACFjpH,OAAOg6B,aAAaivF,GAKtBthG,EAAY2hG,mBAAqB,EAEjC,IAAMC,GAAiBtjH,GAAc8tC,QAAQI,UAAgC,oBAAbh9C,GAA2D,IAAhCwwB,EAAY2hG,kBAGjGE,EAAsBj0H,EAAKJ,MAAMy/D,OAAOvgB,uBAAyB,EAEjC,IAAlC1sB,EAAY2hG,kBAEd3hG,EAAY90B,OAAS,YACZ80B,EAAY2hG,kBAInB3hG,EAAY2hG,oBAAsBE,EAGhCvrD,EAAQprE,OACV80B,EAAY90B,OAAS,UACXorE,EAAQprE,SAClB80B,EAAY90B,OAAS,SAEd80B,EAAY2hG,kBAKnBC,IAEF5hG,EAAY8hG,YAAc,eAC1Bl0H,EAAKkwH,kBAAkB99F,GAEvBxwB,EAASwwB,GAETpyB,EAAKI,cAAcsiC,UAAU,YAAa+lC,EAAoBC,EAASt2C,KAIrEwhG,EAAqB,SAArBA,EAAsB1rF,EAAgBisF,GAC1C,IAAKjsF,EACH,OAAO,EAETloC,EAAKuK,MAAMo4B,KAAKC,IAAIq3B,sBAAsB/xB,EAAgB,SAACrF,EAAI+6B,GACzDA,GAAaA,EAAUtgE,QACzB0C,EAAKI,cAAcsiC,UAAU,wBAAyBk7B,GACtD+1D,EAAqB,EAAE/1D,IAEvB81D,EAA8BjpH,OAAOu5B,WAAY,kBAAM4vF,EAAmB1rF,EAAgBisF,IAAWA,MAKrGN,EAAkB,SAAAnrD,GAIlBgrD,GACFjpH,OAAOg6B,aAAaivF,GAItBthG,EAAY8hG,YAAc,UAGtBxjH,GAAc8tC,QAAQI,UACxBxsB,EAAY90B,OAAS,UACG,oBAAbsE,GACTA,EAASwwB,KAGXpyB,EAAKkwH,kBAAkB99F,GAGnBs2C,EAAQprE,SACVo2H,EAA8BjpH,OAAOu5B,WAAY,kBAAM4vF,EAAmBlrD,EAAQxgC,gBAAgB,MAAO,QA5KvFgzB,EAAA35D,OAAA,UAiLjB8oE,EAAAzsB,EAAS9c,SAAQ0yF,GAAjBtxH,MAAAmoE,EAAA9qE,OAAA0hC,EAAA,EAAA1hC,CAAoCq0C,IACxCl3C,KAAKyR,EAAQ,CAAEsB,KAAMtO,EAASgN,QAAOu1B,OAAS,CAAEj0B,KAAMtO,EAASuiC,QAC/DvY,GAAG,kBAAmB,SAAA0B,GAGrB,GAFA7sB,EAAKI,cAAcsiC,UAAU,sBAAuB7V,IAE/CA,EAEH,OADA7sB,EAAKI,cAAcsiC,UAAU,yCAA0C7V,IAChE,EAGTuF,EAAY8V,gBAAkBrb,EAC9BuF,EAAY90B,OAAS,UACrB80B,EAAY8hG,YAAc,kBAC1Bl0H,EAAKkwH,kBAAkB99F,GAEnBg2C,GACFA,EAAiBh2C,GAIfpyB,EAAKJ,MAAMmL,WACT2oH,GACFjpH,OAAOg6B,aAAaivF,GAEtBA,EAA8BjpH,OAAOu5B,WAAY,kBAAM4vF,EAAmB/mG,EAAK,MAAQ,QAG1F1B,GAAG,UAAW0oG,GACd1oG,GAAG,eAAgBwoG,GACnBxoG,GAAG,QAAS,SAAA2W,GAEXiuB,QAAQqK,IAAI,WAAWt4B,GAEvB,IAAMgyF,KAAahyF,IAASA,EAAMzlB,SAA6C,oBAA3BylB,EAAMzlB,QAAQ2Y,WAA0B8M,EAAMzlB,QAAQ2Y,SAAS,qCASnH,GANA5C,EAAY90B,OAAS,QACrB80B,EAAY8hG,YAAc,QAC1Bl0H,EAAKkwH,kBAAkB99F,IAIlB0hG,EAAW,CACdrpH,OAAO0zB,cAAcC,WAAW,uBAAwB,CACtDntB,KAAM,QACNstB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAMs0F,EAAU7wF,aAAiBqnC,MAEJ,qBAAlBrnC,EAAMzlB,QACfrc,EAAKsvH,0BAA0B,KAAKxtF,EAAMzlB,SACjCrc,EAAKI,cAAcmgE,kBAAoBoyD,GAChDG,KAAwBhxF,GAIJ,oBAAblgC,GACTA,EAASwwB,EAAY0P,MA/OH,eAAAo5B,EAAAl6D,KAAA,GAAAk6D,EAAAn2D,GAAAm2D,EAAA,UAoPxBnL,QAAQqK,IAAI,iBAAZc,EAAAn2D,IAEAqtB,EAAY90B,OAAS,QACrB0C,EAAKkwH,kBAAkB99F,GAIvB3nB,OAAO0zB,cAAcC,WAAW,4CAA6C,CAC3EntB,KAAM,QACNstB,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdy1F,KAAa54D,EAAAn2D,KAASm2D,EAAAn2D,GAAMsX,UAAU6+C,EAAAn2D,GAAMsX,QAAQ2Y,SAAS,qCAE7D29F,EAAUz3D,EAAAn2D,cAAiBokE,MAC5BnpE,EAAKI,cAAcmgE,kBAAoBoyD,IAAYmB,GACtDhB,KAAA53D,EAAAn2D,IAGsB,oBAAbnD,GAETA,EAASwwB,EAAD8oC,EAAAn2D,IA7Qcm2D,EAAA35D,OAAA,UAgRjB,GAhRiB,yBAAA25D,EAAA15D,SAAAu5D,EAAAp7D,KAAA,wEAqR5BqwH,kBAAoB,WAAiB,IAAhBxgD,EAAgBrtE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KACtBiwB,EAAW7yB,OAAA0L,EAAA,EAAA1L,CAAA,GACViwE,GAQL,OANAp9C,EAAYorC,QAAUzkD,KAAKg0D,MAC3B36C,EAAYgiG,YAAcr7G,KAAKg0D,MAC/B36C,EAAY90B,OAAS,cACrB80B,EAAY2hG,kBAAoB,EAChC3hG,EAAY5uB,MAAQxD,EAAKJ,MAAMwN,cAC/BglB,EAAY2b,SAAW/tC,EAAKJ,MAAMoH,iBAC3BorB,KAGT69F,eAAiB,SAAA79F,GACf,IAAM51B,EAAY+C,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAM/N,cACrCA,EAAY,KAAA+H,OAAM6tB,EAAYorC,UAAaprC,EAC3CpyB,EAAK4L,SAAS,CAAEpP,oBAIlB0zH,kBAAoB,SAAAmE,GAClB,IAAM73H,EAAY+C,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAM/N,cAC/B41B,EAAW7yB,OAAA0L,EAAA,EAAA1L,CAAA,GAAQ80H,GAiBzB,OAhBAjiG,EAAYgiG,YAAcr7G,KAAKg0D,MAC/BvwE,EAAY,KAAA+H,OAAM8vH,EAAmB72D,UAAaprC,EAClDpyB,EAAK4L,SAAS,CAAEpP,iBAMZ41B,EAAY8V,kBAEdloC,EAAKI,cAAck1E,kBAGnBt1E,EAAKI,cAAc03D,qBAAnB,KAAAvzD,OAA6C6tB,EAAYorC,SAAUprC,IAG9DA,KAITy6F,qBAAuB,SAAA9+G,GACJ,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAK6gH,uBAAwB,EAEpC9sH,EAAK4L,SAAS,CAAE8mC,cAGlBygF,oBAAsB,SAAAplH,GACH,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAK6gH,uBAAwB,EACpC9sH,EAAK4L,SAAS,CAAE8mC,OAAQA,OAG1Bu6E,4BAA8B,SAAAl/G,GACX,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKihH,0BAA2B,EACvCltH,EAAK4L,SAAS,CAAE8mC,cAGlB68E,2BAA6B,SAAAxhH,GACV,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKihH,0BAA2B,EACvCx6E,EAAOzmC,KAAKgjH,kCAAmC,EAC/Cv8E,EAAOzmC,KAAK6gH,uBAAwB,EAEpC9sH,EAAK4L,SAAS,CAAE8mC,cAGlBq7E,2BAA6B,SAAAhgH,GACV,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKgiH,kBAAmB,EAC/BjuH,EAAK4L,SAAS,CAAE8mC,cAGlB48E,0BAA4B,SAACvhH,EAAE+zB,GACZ,qBAAN/zB,GAAqBA,GAC9BA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKgiH,iBAAmBnsF,EAE/B9hC,EAAK4L,SAAS,CAAE8mC,cAGlBi7E,0BAA4B,SAAA5/G,GACT,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAK4hH,iBAAkB,EAC9B7tH,EAAK4L,SAAS,CAAE8mC,cAGlB28E,yBAA2B,SAACthH,EAAE+zB,GACX,qBAAN/zB,GAAqBA,GAC9BA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAGjB,oBAAR5Q,IACFA,EAAQ,mCAKV4Q,EAAOzmC,KAAK4hH,gBAAkB/rF,EAE9B9hC,EAAK4L,SAAS,CAAE8mC,cAGlB06E,iCAAmC,SAAAr/G,GAChB,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKohH,qBAAsB,EAClCrtH,EAAK4L,SAAS,CAAE8mC,cAGlB88E,gCAAkC,SAAAzhH,GACf,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKohH,qBAAsB,EAClCrtH,EAAK4L,SAAS,CAAE8mC,cAGlBy5E,wBAA0B,SAAAp+G,GACP,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKmgH,0BAA2B,EACvCpsH,EAAK4L,SAAS,CAAE8mC,cAGlB08E,uBAAyB,SAAArhH,GACN,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKmgH,0BAA2B,EACvCpsH,EAAK4L,SAAS,CAAE8mC,cAGlB45E,mBAAqB,SAAAv+G,GACF,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKsgH,qBAAsB,EAClCvsH,EAAK4L,SAAS,CAAE8mC,cAGlB4hF,kBAAoB,SAAAvmH,GACD,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKsgH,qBAAsB,EAClCvsH,EAAK4L,SAAS,CAAE8mC,cAGlB+5E,uBAAyB,SAAA1+G,GACN,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKygH,yBAA0B,EACtC1sH,EAAK4L,SAAS,CAAE8mC,cAGlBy8E,sBAAwB,SAAAphH,GACL,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKygH,yBAA0B,EACtC1sH,EAAK4L,SAAS,CAAE8mC,cAGlB66E,mBAAqB,SAAAx/G,GACF,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKuhH,qBAAsB,EAClCxtH,EAAK4L,SAAS,CAAE8mC,cAGlBw8E,kBAAoB,SAAAnhH,GACD,qBAANA,GACTA,EAAEsnB,iBAGJ,IAAIqd,EAAMnzC,OAAA0L,EAAA,EAAA1L,CAAA,GAAQS,EAAKuK,MAAMmoC,QAC7BA,EAAOzmC,KAAKuhH,qBAAsB,EAClCxtH,EAAK4L,SAAS,CAAE8mC,cAGlBnoC,MAAQ,CACNo4B,KAAM,KACNg6E,QAAQ,KACRx7G,QAAS,KACTuyC,UAAW,GACXpK,SAAU,KACV+W,SAAU,KACViuE,WAAW,KACX9xH,aAAc,GACd+3H,YAAa,KACbrmG,cAAc,KACdqgG,eAAgB,KAChB7hE,iBAAkB,KAClBqgE,iBAAkB,KAClByH,kBAAmB,KACnBrlB,SAAUnvG,EAAKmvG,SACfqf,kBAAmB,KACnB/H,oBAAmB,EACnBgO,uBAAuB,GACvB54G,sBAAqB,EACrB6qG,YAAa1mH,EAAK0mH,YAClBmI,yBAA0B,KAC1BzsD,aAAcpiE,EAAKoiE,aACnBh9C,aAAcplB,EAAKolB,aACnBspG,eAAgB1uH,EAAK0uH,eACrB9B,gBAAiB5sH,EAAK4sH,gBACtBgC,iBAAkB5uH,EAAK4uH,iBACvBzlF,iBAAkBnpC,EAAKmpC,iBACvBzK,kBAAmB1+B,EAAK0+B,kBACxBioF,oBAAqB3mH,EAAK2mH,oBAC1BmI,qBAAsB9uH,EAAK8uH,qBAC3B/sH,0BAA2B/B,EAAK+B,0BAChCitC,0BAA2BhvC,EAAKgvC,0BAChC+/E,yBAA0B/uH,EAAKJ,MAAMmvH,yBACrCvwE,QAAS,CACP0pE,QAAS,GACT5gG,SAAU,GACV67E,iBAAkB,KAClBwrB,aAAc3uH,EAAK2uH,cAErBj8E,OAAQ,CACNzmC,KAAM,CACJ4hH,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBkC,uBAAwB,KACxBtC,wBAAyB,KACzBQ,yBAA0B,KAC1B2B,yBAA0B,KAC1BI,iCAAkC,KAClC1C,oBAAqBvsH,EAAKusH,oBAC1BH,yBAA0BpsH,EAAKosH,0BAEjCtrF,QAAS,CACPouF,kBAAmBlvH,EAAKkvH,kBACxBoF,kBAAmBt0H,EAAKs0H,kBACxBhI,mBAAoBtsH,EAAKssH,mBACzBiB,mBAAoBvtH,EAAKutH,mBACzB4F,oBAAqBnzH,EAAKmzH,oBAC1BtG,qBAAsB7sH,EAAK6sH,qBAC3BsC,sBAAuBnvH,EAAKmvH,sBAC5B1C,uBAAwBzsH,EAAKysH,uBAC7B2C,uBAAwBpvH,EAAKovH,uBAC7BjD,wBAAyBnsH,EAAKmsH,wBAC9BkD,yBAA0BrvH,EAAKqvH,yBAC/B1B,0BAA2B3tH,EAAK2tH,0BAChC2B,0BAA2BtvH,EAAKsvH,0BAChCvB,2BAA4B/tH,EAAK+tH,2BACjCwB,2BAA4BvvH,EAAKuvH,2BACjCtC,4BAA6BjtH,EAAKitH,4BAClCwC,gCAAiCzvH,EAAKyvH,gCACtCD,gCAAiCxvH,EAAKwvH,gCACtCE,iCAAkC1vH,EAAK0vH,iCACvCtC,iCAAkCptH,EAAKotH,mCAG3Ch7F,YAAa,CACXnmB,KAAM,CACJzP,aAAc,MAEhBmzH,KAAM,GACN7uF,QAAS,gFAnoDX,IAAMlhC,EAAQL,OAAOC,OAAO,GAAGG,KAAKC,OACpCA,EAAM8zC,UAAY/zC,KAAK4K,MAAMmpC,UACzB/zC,KAAKS,eACPR,EAAMuB,QAAUxB,KAAK4K,MAAMpJ,QAC3BxB,KAAKS,cAAcC,SAAST,KAE5BA,EAAMuB,QAAUxB,KAAK4K,MAAMpJ,QAC3BxB,KAAKS,cAAgB,IAAIE,GAAcV,mDAKzCD,KAAK6K,oBAAqB,+CAI1B7K,KAAKoJ,YACL0B,OAAO0kG,SAAWxvG,KAAKwvG,0CAunDvB,IAAMulB,EAA+E,kBAA3C/0H,KAAK4K,MAAMmoC,OAAOzmC,KAAK4hH,iBAAgCluH,KAAK4K,MAAMmoC,OAAOzmC,KAAK4hH,gBAAgBprH,OAAO,EACzIkyH,EAAiF,kBAA5Ch1H,KAAK4K,MAAMmoC,OAAOzmC,KAAKgiH,kBAAiCtuH,KAAK4K,MAAMmoC,OAAOzmC,KAAKgiH,iBAAiBxrH,OAAO,EAClJ,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+uH,GAAyBwG,SAA1Br1H,OAAAC,OAAA,CAAmC2O,MAAOxO,KAAK4K,OAAW5K,KAAKC,QAC/DT,EAAAC,EAAAC,cAACw1H,GAAD,CACEniF,OAAQ/yC,KAAK4K,MAAMmoC,OACnB8L,QAAS7+C,KAAK4K,MAAMi0C,QACpBr9C,QAASxB,KAAK4K,MAAMpJ,QACpB4J,SAAUpL,KAAKC,MAAMmL,SACrB27G,YAAa/mH,KAAK4K,MAAMm8G,YACxBhK,aAAc/8G,KAAKC,MAAM88G,aACzBkQ,gBAAiBjtH,KAAK4K,MAAMqiH,gBAC5BG,iBAAkBptH,KAAK4K,MAAMwiH,iBAC7BG,yBAA0BvtH,KAAK4K,MAAM2iH,yBACrC2B,yBAA0BlvH,KAAK4K,MAAMskH,2BAEvC1vH,EAAAC,EAAAC,cAACy1H,GAAD,CACEpiF,OAAQ/yC,KAAK4K,MAAMmoC,OACnBvxC,QAASxB,KAAK4K,MAAMpJ,QACpBw7G,QAASh9G,KAAKC,MAAM+8G,QACpBj7E,OAAQizF,IAEVx1H,EAAAC,EAAAC,cAAC01H,GAAD,CACEriF,OAAQ/yC,KAAK4K,MAAMmoC,OACnBvxC,QAASxB,KAAK4K,MAAMpJ,QACpBw7G,QAASh9G,KAAKC,MAAM+8G,QACpBj7E,OAAQgzF,EACRhY,aAAc/8G,KAAKC,MAAM88G,eAE3Bv9G,EAAAC,EAAAC,cAAC21H,GAAD,CACEryF,KAAMhjC,KAAK4K,MAAMo4B,KACjB6b,QAAS7+C,KAAK4K,MAAMi0C,kBAjrDExsB,IAAMlyB,WAAhCgwH,GACGmF,SAAW7G,GAAyB6G,SAurD9BnF,UC/mDAoF,8MApKb3qH,MAAQ,KAGRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAWqC,mEAClCxN,KAAKoJ,kJAIL,IAAIkI,EAAO,KACPnT,EAAQ,KACRqK,EAAS,KACP4J,EAAYpS,KAAKC,MAAMmS,UACvBojH,EAAW51H,OAAOC,OAAO,GAAGG,KAAKC,MAAMu1H,UAEvCnjH,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACNsf,MAAM,CACJiV,SAAS,OACTxJ,SAAU,SACVI,WAAY,SACZqJ,aAAc,YAEhB7oB,UAAU,CACRG,eAAe,eAYnB,OAPImI,EAAUnS,OAASL,OAAO4H,KAAK4K,EAAUnS,OAAO6C,QAClDlD,OAAO4H,KAAK4K,EAAUnS,OAAOiK,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAUnS,MAAMkK,KAK5BiI,EAAUrF,MAChB,IAAK,OACH,IAAMoiB,EAAgBnvB,KAAKS,cAAc0Y,YAA+B,IAAnBq8G,EAAS17G,WAAgBT,OAAO,gBACrF7Q,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAa8c,GAE3B,MACA,IAAK,aAEH,OADc/c,EAAUxH,MAAQwH,EAAUxH,MAAQ4qH,EAAS5qH,OAEzD,IAAK,UACH0G,EAAO,iBACPnT,EAAQ,UACV,MACA,IAAK,SACHmT,EAAO,SACPnT,EAAQ,UACV,MACA,IAAK,WACHmT,EAAO,SACPnT,EAAQ,UACV,MACA,IAAK,WACHmT,EAAO,QACPnT,EAAQ,UACV,MACA,IAAK,YACHmT,EAAO,OACPnT,EAAQ,UACV,MACA,IAAK,SACHmT,EAAO,YACPnT,EAAQ,UACV,MACA,IAAK,UACHmT,EAAO,eACPnT,EAAQ,UACV,MACA,IAAK,WACHmT,EAAO,cACPnT,EAAQ,UAKZqK,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMwS,EADN,CAEEtI,WAAY,SACZE,eAAgB,WAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAMuE,EACNnT,MAAOA,EACPy0B,MAAO,SACPnmB,KAAO4F,EAAW5F,KAAO4F,EAAW5F,KAAQzM,KAAKC,MAAMmL,SAAW,MAAQ,WAIlF,MACA,IAAK,KACH5C,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAamjH,EAAS1kH,IAEpC,MACA,IAAK,QACHtI,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAamjH,EAAS97H,OAEpC,MACA,IAAK,QACH,IAAMuqH,EAAWjkH,KAAKS,cAAciB,MAAM8zH,EAASvR,UAAUx+G,IAAI,MAC3D0+G,EAAenkH,KAAKS,cAAciB,MAAM8zH,EAASrR,cAAc1+G,IAAI,MACnEgwH,EAAaxR,EAAS/7G,KAAKi8G,GACjC37G,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAarS,KAAKS,cAAcgJ,YAAYgsH,EAAW7kH,QAAQ,EAAE,GAAG,IAElF,MACA,IAAK,SACHpI,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAAamjH,EAAS5qH,OAEpC,MACA,IAAK,UACH,IAAIg1G,EAAU,KACd,GAAI5/G,KAAKC,MAAMu+G,SAAS,CACtB,IAAMA,EAAWx+G,KAAKC,MAAMu+G,SAASA,SAAS9tG,cACxCglH,EAAOF,EAAS3W,MAAM9mG,KAAM,SAAArJ,GAAC,OAAKA,EAAEuyG,MAAMvwG,gBAAkB8tG,IAC9DkX,IACF9V,EAAU8V,EAAK9V,SAGnBp3G,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAAS0S,EAA0B,OAAZutG,EAAmB,OAAUA,EAAU,MAAQ,WAE3E,MACA,IAAK,WACHp3G,EACEhJ,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B9I,OAAQisH,EAASvR,YAElD,MACA,IAAK,eACHz7G,EACEhJ,EAAAC,EAAAC,cAACkS,EAADhS,OAAAC,OAAA,GAAiBwS,EAAjB,CAA6B9I,OAAQisH,EAASrR,gBAMpD,OAAO37G,SAlKiBrI,mCC8Qbw1H,8MA3Qb/qH,MAAQ,CACN8nB,SAAS,GACTxzB,SAAS,IACT+zB,UAAU,IACVC,UAAS,EACTC,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,SAIZC,UAAY,SAAClX,EAAO5N,GAClBnO,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B2lB,cAAcvzB,OAAA0L,EAAA,EAAA1L,CAAA,GACT4N,EAAU2lB,cADFvzB,OAAAic,EAAA,EAAAjc,CAAA,GAEVwc,EAAQ5N,UAKf+kB,aAAe,WAAiB,IAAhBC,IAAgBhxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GACS,oBAA5BnC,EAAKJ,MAAMszB,cACpBlzB,EAAKJ,MAAMszB,aAAalzB,EAAKuK,MAAMuoB,eAEjCK,GACFnzB,EAAKozB,kBAITC,YAAc,SAACtX,GACb/b,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B2lB,cAAcvzB,OAAA0L,EAAA,EAAA1L,CAAA,GACT4N,EAAU2lB,cADFvzB,OAAAic,EAAA,EAAAjc,CAAA,GAEVwc,EAAQ,SAEV,WACD/b,EAAKkzB,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBhxB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAC9BnC,EAAK4L,SAAS,CACZknB,cAAc,CACZx1B,OAAO,KACPy1B,OAAO,KACPC,QAAQ,OAEV,WACuC,oBAA5BhzB,EAAKJ,MAAM0zB,cACpBtzB,EAAKJ,MAAM0zB,eAETH,GACFnzB,EAAKozB,oBAKXA,aAAe,WACbpzB,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5B0lB,UAAW1lB,EAAU0lB,qFAIhB,IAAA7pB,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJzB,IAAK,EACL/V,MAAO,EACPsX,OAAQ,EACRxH,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChBsH,SAAU,CAAC,WAAW,aAEtB/R,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHxnB,MAAM,CAAC,EAAG8F,KAAK4K,MAAMsoB,SAAWlzB,KAAK4K,MAAM8nB,SAAW1yB,KAAK4K,MAAM1L,UACjEue,MAAM,CACJmW,WAAW,2BAGf7Y,eAAiB/a,KAAK4K,MAAMsoB,SAC5BtU,YAAe5e,KAAK4K,MAAMsoB,SAA+B,KAApBlzB,KAAKyzB,cAE1Cj0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLoD,OAAO,WAET9W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0U,QAAU3e,KAAK4K,MAAMsoB,SAAWlzB,KAAKyzB,aAAe,MAEpDj0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,aAHT,WAOAqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,YACPsO,KAAOzM,KAAKC,MAAMmL,SAAW,QAAU,QACvC2B,KAAO/M,KAAK4K,MAAMsoB,SAAW,QAAU,UAG3C1zB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACfyT,MAAO,CACLyL,SAAS,SACT0K,WAAW,8BACXX,UAAUjzB,KAAK4K,MAAMsoB,SAAWlzB,KAAK4K,MAAMqoB,UAAY,IAGzDzzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJkC,GAAI,EACJznB,MAAO,EACP8P,cAAe,MACf6pB,UAAS,aAAAjvB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,UAG9CqD,OAAO4H,KAAKxH,KAAKC,MAAM6zB,SAAStY,IAAI,SAACuY,GACnC,IAAMC,EAAe3qB,EAAKpJ,MAAM6zB,QAAQC,GACxC,OACEv0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,SACf8T,IAAG,UAAAlZ,OAAYmvB,GACftW,MAAO,CACL6J,UAAU,IACVzE,KAAK,YAGPrjB,EAAAC,EAAAC,cAACiqB,GAAD,CACED,GAAI,EACJ1a,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YAEN41B,EAAevR,eAGhB5iB,OAAO4H,KAAKwsB,GAAcxY,IAAI,SAACyY,GAC7B,IAAMC,EAAcF,EAAaC,GAC3BE,EAAY9qB,EAAKuB,MAAMuoB,cAAcY,KAAkBE,EAC7D,OACEz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJ/mB,SAAU,CAAC,EAAE,GACbmS,MAAO+iB,EACPE,QAASD,EACT5U,UAAWC,KAAOvoB,SAClB6mB,IAAG,UAAAlZ,OAAYmvB,EAAZ,KAAAnvB,OAA8BqvB,GACjClS,SAAW,SAAA3T,GAAC,OAAI/E,EAAKiqB,UAAUS,EAAeE,YAUhEz0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACErlB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbinB,UAAW,YACXtH,QAAS3e,KAAKuzB,cAJhB,iBAQA/zB,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE3nB,GAAI,EACJsC,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbinB,UAAW,YACXtH,QAAS3e,KAAK2zB,cALhB,aAaH3zB,KAAK4K,MAAMsoB,UAAYlzB,KAAKC,MAAMkzB,eAAiBvzB,OAAO+X,OAAO3X,KAAKC,MAAMkzB,eAAe/W,OAAQ,SAAA1N,GAAC,OAAW,OAANA,IAAc5L,OAAO,GAC7HtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BrK,OAAO4H,KAAKxH,KAAKC,MAAMkzB,eAAe3X,IAAI,SAAC8Y,GACzC,IAAML,EAAc5qB,EAAKpJ,MAAMkzB,cAAcmB,GAC7C,GAAoB,OAAhBL,EAAqB,CACvB,IAAMC,EAAc7qB,EAAKpJ,MAAM6zB,QAAQQ,GAAYL,GACnD,OACEz0B,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHhQ,GAAG,CAAC,EAAE,GACNgR,GAAG,CAAC,EAAE,GACNxoB,MAAM,CAAC,EAAEmP,EAAKuB,MAAM1L,WAEtB6b,eAAe,EACf+C,IAAG,UAAAlZ,OAAY0vB,IAEf90B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLoD,OAAO,WAET9W,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB0U,QAAS,SAAAvQ,GAAC,OAAI/E,EAAKqqB,YAAYY,KAE/B90B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,WACPsf,MAAO,CACLyO,cAAc,eAGfgI,GAEH10B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,QACN5O,MAAO,WACPsO,KAAOpD,EAAKpJ,MAAMmL,SAAW,QAAU,YAMjD,OAAO,OAGX5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACPzgB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,GACb7Q,MAAO,YACPqpB,WAAY,YACZ/V,UAAW,CAAC,SAAS,QACrBkN,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKsqB,cAAa,KAPnC,8BA3PoBxzB,aC2QnBy1H,8MAtQbhrH,MAAQ,CACN4pB,KAAK,EACL1N,SAAQ,EACR+uG,YAAY,GACZC,UAAU,KACVlhG,WAAW,KACXzB,cAAc,CACZx1B,OAAO,MAETm2B,QAAQ,CACNn2B,OAAO,CACLE,QAAQ,UACR/F,OAAO,SACPksH,SAAS,WACT+R,SAAS,WACTC,UAAU,YACVC,OAAO,SACPC,QAAQ,UACRnS,SAAS,aAGboS,cAAc,KACdlhG,gBAAgB,QAIlBx0B,cAAgB,OAoChB8yB,aAAe,SAAAJ,GACb9yB,EAAK4L,SAAS,CACZknB,iBACA,WACA9yB,EAAK+1H,mBAITziG,aAAe,WACbtzB,EAAK4L,SAAS,CACZknB,cAAc,CACZx1B,OAAO,OAET,WACA0C,EAAK+1H,mBAaTA,YAAc,WAAe,IAAd5hG,EAAchyB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAElB,IAAKnC,EAAKJ,MAAM+gH,UACd,OAAO,EAGTxsF,EAAOA,GAAcn0B,EAAKuK,MAAM4pB,KAEhC,IAAMqhG,EAAcx1H,EAAKJ,MAAM41H,YAAcx1H,EAAKJ,MAAM41H,YAAcx1H,EAAKuK,MAAMirH,YAG3E7U,EAAYphH,OAAO+X,OAAOtX,EAAKJ,MAAM+gH,WACtB5kG,OAAO,SAAAjS,GAAC,OAC8B,OAApC9J,EAAKuK,MAAMuoB,cAAcx1B,QAAmBwM,EAAES,MAAM8F,gBAAkBrQ,EAAKuK,MAAMuoB,cAAcx1B,OAAO+S,gBAExG4kB,KAAK,SAAC71B,EAAE81B,GAAH,OAAU91B,EAAEqa,UAAYyb,EAAEzb,WAAc,EAAI,IAGhEg8G,EAAY9U,EAAUl+G,OACtB8xB,EAAa7b,KAAKkX,KAAK6lG,EAAUD,GAEjCM,EAAgB,GAEtBnV,EAAU92G,QAAQ,SAACC,EAAGoG,GAChBA,IAAKikB,EAAK,GAAGqhG,GAAgBtlH,GAAIikB,EAAK,GAAGqhG,EAAaA,GACxDM,EAActlH,KAAK1G,KAMvB9J,EAAK4L,SAAS,CACZ6a,SAHc,EAIdgvG,YACAlhG,aACAuhG,8FA/FEn2H,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAIvCmO,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKG,IAAI,EAAElZ,KAAK4K,MAAM4pB,KAAK,GACxCx0B,KAAKiM,SAAS,CACZuoB,0CAIKpmB,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKC,IAAIhZ,KAAK4K,MAAMgqB,WAAW50B,KAAK4K,MAAM4pB,KAAK,GAC5Dx0B,KAAKo2H,YAAY5hG,GACjBx0B,KAAKiM,SAAS,CACZuoB,6JAKFx0B,KAAKoJ,YACLpJ,KAAKo2H,mMAqBkBjrH,EAAWqC,2EAClCxN,KAAKoJ,YACCitH,EAAc7oH,EAAUgnB,OAASx0B,KAAK4K,MAAM4pB,KAC5C8hG,EAAmBn2G,KAAKC,UAAUjV,EAAU61G,aAAe7gG,KAAKC,UAAUpgB,KAAKC,MAAM+gH,YACvFqV,GAAeC,IACjBt2H,KAAKo2H,oJA2CA,IAAA/sH,EAAArJ,KAEDu2H,EAAsD,qBAA9Bv2H,KAAKC,MAAMs2H,gBAAkCv2H,KAAKC,MAAMs2H,eAChFtgG,EAAmBsgG,GAAkB32H,OAAO+X,OAAO3X,KAAK4K,MAAMuoB,eAAe/W,OAAQ,SAAA1N,GAAC,OAAW,OAANA,IAAc5L,OAAO,EAChHqzH,EAAgBn2H,KAAK4K,MAAMurH,cAAgBv2H,OAAO+X,OAAO3X,KAAK4K,MAAMurH,eAAiB,KACrFK,EAAUL,GAAiBA,EAAcrzH,OAAO,EAEtD,OACEtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAU9P,MAAO,EAAGg8B,EAAG,UAEvCl2B,KAAK4K,MAAMkc,SAAyC,QAA7B9mB,KAAK4K,MAAMurH,cACjC32H,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,yBAGR2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPqX,SAAU,WACVvH,cAAe,SACf8G,GAAI,2BACJqlB,GAAI,CAAC,EAAKogG,GAAmBC,EAAcvgG,EAAmB,QAAU,EAAjC,IAGrCugG,EACEh3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAGbusH,GACE/2H,EAAAC,EAAAC,cAAC+2H,GAAD72H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE6zB,QAAS9zB,KAAK4K,MAAMkpB,QACpBX,cAAenzB,KAAK4K,MAAMuoB,cAC1BQ,aAAc3zB,KAAK2zB,aAAa1oB,KAAKjL,MACrCuzB,aAAcvzB,KAAKuzB,aAAatoB,KAAKjL,SAG3CR,EAAAC,EAAAC,cAACoqB,GAAD,CACEpB,KAAM1oB,KAAKC,MAAMyoB,KACjBtd,SAAUpL,KAAKC,MAAMmL,WAEvB5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmR,GAAI,iBACJ9G,cAAe,UAGbmsH,EAAc36G,IAAK,SAACg6G,EAASvoG,GAC3B,IAAMgyF,EAAauW,EAAS1kH,GAI5B,OACEtR,EAAAC,EAAAC,cAACqqB,GAADnqB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEwoB,SAAU,CACR1N,eAAc,GAEhBjK,GAAImuG,EACJuW,SAAUA,EACV52G,YAXgB,SAACxQ,GACnB,OAAQ6wG,EAAa51G,EAAKpJ,MAAMqvC,YAAX,aAAA1qC,OAAoCq6G,IAAgB,MAWvEnhG,IAAG,YAAAlZ,OAAcq6G,GACjB12F,eAAgBgtG,GAChB98G,MAAK,gBAAA7T,OAAkBq6G,GACvBz2F,OAAM,iBAAA5jB,OAAmBq6G,SAMnCz/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR8K,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6G,GAAI,6BAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,GACRljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,EAAG/D,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKmtB,SAASpoB,KACxC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,oBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAK,EAAI,UAAY,aAG5Ch1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgf,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKotB,SAASroB,KACjC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,qBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAKx0B,KAAK4K,MAAMgqB,WAAa,UAAY,cAIlEp1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YAHT,QAKQ6B,KAAK4K,MAAM4pB,KALnB,OAK6Bx0B,KAAK4K,MAAMgqB,eAM9Cp1B,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CACE1nB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,SACXxC,WAAY,aALd,mCArPU9O,aCwFbu2H,8MA3Fb9rH,MAAQ,KAGRnK,cAAgB,gFAGVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,iMAGkB+B,EAAWqC,mEAClCxN,KAAKoJ,kJAIL,IAAIZ,EAAS,KACP4J,EAAYpS,KAAKC,MAAMmS,UACvBosG,EAAW5+G,OAAOC,OAAO,GAAGG,KAAKC,MAAMu+G,UAEvCnsG,EAAa,CACjBrD,WAAW,EACXhQ,SAAS,CAAC,EAAE,GACZb,MAAM,WACNsf,MAAM,CACJiV,SAAS,OACTxJ,SAAU,SACVyJ,aAAc,YAEhB7oB,UAAU,CACRG,eAAe,eAWnB,OANImI,EAAUnS,OAASL,OAAO4H,KAAK4K,EAAUnS,OAAO6C,QAClDlD,OAAO4H,KAAK4K,EAAUnS,OAAOiK,QAAQ,SAAAC,GACnCkI,EAAWlI,GAAKiI,EAAUnS,MAAMkK,KAI5BiI,EAAUrF,MAChB,IAAK,SACHvE,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACMwS,EADN,CAEEtI,WAAY,SACZE,eAAgB,WAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEg3H,KAAM,CACJlqH,KAAM,EACNtO,MAAO,OACPy4H,QAAS,OACTC,UAAW,OACXC,KAAMtY,EAASA,aAKzB,MACA,IAAK,OACL,IAAK,QACL,IAAK,WACL,IAAK,YACL,IAAK,cACH,IAAIhwG,EAAQgwG,EAASpsG,EAAUrF,MACR,UAAnBqF,EAAUrF,OACZyB,EAAQxO,KAAKS,cAAcgJ,YAAYzJ,KAAKS,cAAciB,MAAM8M,GAAOoC,QAAQ,EAAE,GAAG,IAEtFpI,EACEhJ,EAAAC,EAAAC,cAACC,EAAA,EACK0S,EAEH7D,GAOT,OAAOhG,SAzFiBrI,aCkPb42H,8MA5ObnsH,MAAQ,CACN4pB,KAAK,EACLV,QAAQ,GACRhN,SAAQ,EACR+uG,YAAY,GACZC,UAAU,KACVlhG,WAAW,KACXzB,cAAc,GACdgjG,cAAc,KACdlhG,gBAAgB,QAIlBx0B,cAAgB,OAoChB8yB,aAAe,SAAAJ,GACb9yB,EAAK4L,SAAS,CACZknB,iBACA,WACA9yB,EAAK+1H,mBAITziG,aAAe,WACbtzB,EAAK4L,SAAS,CACZknB,cAAc,CACZx1B,OAAO,OAET,WACA0C,EAAK+1H,mBAaTA,YAAc,WAAe,IAAd5hG,EAAchyB,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAT,KAElB,IAAKnC,EAAKJ,MAAM+zC,UACd,OAAO,EAGTxf,EAAOA,GAAcn0B,EAAKuK,MAAM4pB,KAEhC,IAAMqhG,EAAcx1H,EAAKJ,MAAM41H,YAAcx1H,EAAKJ,MAAM41H,YAAcx1H,EAAKuK,MAAMirH,YAG7E7hF,EAAYp0C,OAAO+X,OAAOtX,EAAKJ,MAAM+zC,WACpB1e,KAAK,SAAC71B,EAAE81B,GAAH,OAAU91B,EAAEqa,UAAYyb,EAAEzb,WAAc,EAAI,IAE3C,OAAvBzZ,EAAKJ,MAAM+2H,SAAoB32H,EAAKJ,MAAM+2H,QAAQ,IACpDhjF,EAAYA,EAAUktE,OAAO,EAAE7gH,EAAKJ,MAAM+2H,UAI5C,IAAMlB,EAAY9hF,EAAUlxC,OACtB8xB,EAAa7b,KAAKkX,KAAK6lG,EAAUD,GAEjCM,EAAgB,GAEtBniF,EAAU9pC,QAAQ,SAACC,EAAGoG,GAChBA,IAAKikB,EAAK,GAAGqhG,GAAgBtlH,GAAIikB,EAAK,GAAGqhG,EAAaA,GACxDM,EAActlH,KAAK1G,KAMvB9J,EAAK4L,SAAS,CACZ6a,SAHc,EAIdgvG,YACAlhG,aACAuhG,8FAhGEn2H,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,wCAIvCmO,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKG,IAAI,EAAElZ,KAAK4K,MAAM4pB,KAAK,GACxCx0B,KAAKiM,SAAS,CACZuoB,0CAIKpmB,GACHA,GACFA,EAAEsnB,iBAEJ,IAAMlB,EAAOzb,KAAKC,IAAIhZ,KAAK4K,MAAMgqB,WAAW50B,KAAK4K,MAAM4pB,KAAK,GAC5Dx0B,KAAKo2H,YAAY5hG,GACjBx0B,KAAKiM,SAAS,CACZuoB,6JAKFx0B,KAAKoJ,YACLpJ,KAAKo2H,mMAqBkBjrH,EAAWqC,2EAClCxN,KAAKoJ,YACCitH,EAAc7oH,EAAUgnB,OAASx0B,KAAK4K,MAAM4pB,KAC5CyiG,EAAmB92G,KAAKC,UAAUjV,EAAU6oC,aAAe7zB,KAAKC,UAAUpgB,KAAKC,MAAM+zC,YACvFqiF,GAAeY,IACjBj3H,KAAKo2H,oJA4CA,IAAA/sH,EAAArJ,KAEDm2H,EAAgBn2H,KAAK4K,MAAMurH,cAAgBv2H,OAAO+X,OAAO3X,KAAK4K,MAAMurH,eAAiB,KAE3F,OACE32H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAU9P,MAAO,EAAGg8B,EAAG,UAEvCl2B,KAAK4K,MAAMkc,SAAyC,QAA7B9mB,KAAK4K,MAAMurH,cACjC32H,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,2BAGR2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPqX,SAAU,WACVvH,cAAe,SACf8G,GAAI,4BAGFqlH,GAAiBA,EAAcrzH,OAAO,EACpCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACoqB,GAAD,CACEpB,KAAM1oB,KAAKC,MAAMyoB,KACjBtd,SAAUpL,KAAKC,MAAMmL,WAEvB5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEmR,GAAI,iBACJ9G,cAAe,UAGbmsH,EAAc36G,IAAK,SAACgjG,EAASvxF,GAC3B,IAAMiqG,EAAa1Y,EAASA,SAI5B,OACEh/G,EAAAC,EAAAC,cAACqqB,GAADnqB,OAAAC,OAAA,GACMwJ,EAAKpJ,MADX,CAEEwoB,SAAU,CACR1N,eAAc,GAEhBjK,GAAIomH,EACJ1Y,SAAUA,EACV1gG,IAAG,YAAAlZ,OAAcqoB,GACjBrO,YAZgB,SAACxQ,GACnB,OAAQ8oH,EAAa7tH,EAAKpJ,MAAMqvC,YAAX,eAAA1qC,OAAsCsyH,IAAgB,MAYzE3uG,eAAgBmuG,GAChBj+G,MAAK,gBAAA7T,OAAkBqoB,GACvBzE,OAAM,iBAAA5jB,OAAmBqoB,SAMnCztB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR8K,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6G,GAAI,6BAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,GACRljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+iB,GAAI,EAAG/D,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKmtB,SAASpoB,KACxC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,oBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAK,EAAI,UAAY,aAG5Ch1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMgf,QAAU,SAAAvQ,GAAC,OAAI/E,EAAKotB,SAASroB,KACjC5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,qBACNN,KAAM,MACNtO,MAAQ6B,KAAK4K,MAAM4pB,KAAKx0B,KAAK4K,MAAMgqB,WAAa,UAAY,cAIlEp1B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,YAHT,QAKQ6B,KAAK4K,MAAM4pB,KALnB,OAK6Bx0B,KAAK4K,MAAMgqB,eAM9Cp1B,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CACE1nB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,SACXxC,WAAY,aALd,mCA3NU9O,aCsWbg3H,8MAnWbvsH,MAAQ,CACNopC,UAAU,GACVgtE,UAAU,GACV9C,YAAY,EACZkZ,YAAW,EACXC,eAAe,KAIjB52H,cAAgB,OAChBkkH,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,mKAIzCT,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,4RAQKtE,QAAQC,IAAI,CACpB/E,KAAK2kH,eAAepE,eACpBvgH,KAAK2kH,eAAelD,eACpBzhH,KAAK2kH,eAAe1G,sDANpBjqE,OACAgtE,OACA9C,OAOImZ,EAAiBrjF,EAAUzF,OAAQ,SAAC8oF,EAAenpH,GAEvD,OADAmpH,GAAgCzrH,WAAWsC,EAAE2wG,QAE7C,IAEiB,EAEnB7+G,KAAKiM,SAAS,CACZ+nC,YACAgtE,YACAoW,YALiB,EAMjBlZ,cACAmZ,uJAKF,OACE73H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,uBAMG1R,KAAK4K,MAAMwsH,WAeV53H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACP65F,aAAc,KACdtxG,MAAO,kBACP8S,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAKS,cAAcgJ,YAAYzJ,KAAK4K,MAAMysH,eAAezmH,QAAQ,EAAE,GAAG,MAGjFpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACP65F,aAAc,KACdtxG,MAAO,mBACP8S,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAK4K,MAAMopC,UAAUlxC,UAGhCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACP65F,aAAc,KACdtxG,MAAO,YACP8S,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAK4K,MAAMo2G,UAAUl+G,UAGhCtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACPloB,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACP65F,aAAc,KACdtxG,MAAO,mBACP8S,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAKS,cAAcgJ,YAAYzJ,KAAK4K,MAAMszG,YAAY,OAInE1+G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,IAEPjgB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,oBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP4W,GAAI,eACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC43H,GAAD13H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE41H,YAAa,EACbU,gBAAgB,EAChBvV,UAAWhhH,KAAK4K,MAAMo2G,UACtBt4F,KAAM,CACJ,CACEhvB,MAAO,IACPuG,MAAM,CACJ/F,MAAM,CAAC,GAAI,MAEb8uB,OAAO,CACL,CACEjc,KAAK,KACL9M,MAAM,MAKZ,CACEvG,MAAM,OACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACE+b,QAAO,EACPpvB,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ6P,WAAW,CAAC,SAAS,cACrBE,eAAe,CAAC,SAAS,eAE3B8e,YAAY,CACV9e,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,kBAQnBvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,eAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP4W,GAAI,eACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC63H,GAAD33H,OAAAC,OAAA,CACEm3H,QAAS,KACLh3H,KAAKC,MAFX,CAGE41H,YAAa,EACb7hF,UAAWh0C,KAAK4K,MAAMopC,UACtBtrB,KAAM,CACJ,CACEhvB,MAAO,OACPuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,UACNuG,MAAM,CACJ/F,MAAM,CAAC,GAAK,KAEd8uB,OAAO,CACL,CACEF,QAAO,EACP/b,KAAK,SACL9M,MAAM,CACJyiB,GAAG,IAGP,CACE3V,KAAK,cAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACE+b,QAAO,EACPpvB,MAAM,cACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,cACLgc,YAAY,CACVhf,WAAW,aAKnB,CACE+e,QAAO,EACPpvB,MAAM,kBACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,YACLgc,YAAY,CACVhf,WAAW,oBA5Q7BvK,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,4BAnFGsH,aCqTRq3H,8MAnTb5sH,MAAQ,CACNy5G,YAAY,GACZ/hF,WAAW,CACTjM,OAAO,KACPvP,SAAQ,MAKZrmB,cAAgB,OAChBkkH,eAAiB,OAoBjB8S,iBAAmB,WACjB,OAAOp3H,EAAKI,cAAc+2E,aAAan3E,EAAKuK,MAAMy5G,cAAgBhkH,EAAKuK,MAAMy5G,YAAY3zG,gBAAkBrQ,EAAKJ,MAAMskH,gBAAgB7zG,iBAoExIu0G,eAAiB,SAAC72G,GAChB,IAAMi2G,EAAcj2G,EAAEtO,OAAO0O,MAC7BnO,EAAK4L,SAAS,CACZo4G,4FAzFErkH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,mKAIzCT,KAAKoJ,iMAGkB+B,EAAUqC,mEACjCxN,KAAKoJ,qQAQLpJ,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,2IAKFlgB,GAAQ,IAAAyC,EAAArJ,KAGlB,GAFkBA,KAAKS,cAAc+2E,aAAa5wE,GAEpC,CAyCZ5G,KAAK2kH,eAAe9E,YAAYj5G,EAvCf,SAACyV,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBpkB,cAAe,WACfC,YAAard,EACbsd,WAAY7H,EAAG1e,QAGbwkC,IACFiG,EAAUlkB,WAAa7a,EAAK5I,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0L,EAAK5I,cAAcsjB,yBAAyBqkB,GAGP,oBAA5B/+B,EAAKpJ,MAAMy3H,cAA6C,YAAdr7G,EAAG1e,QACtD0L,EAAKpJ,MAAMy3H,eAGbruH,EAAK4C,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAKU,SAACzK,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl/B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,gBAONr2B,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,OAId,OAAO,sCAUA,IAAAzY,EAAArO,KACD23H,EAAyD,IAAzCxrH,SAASnM,KAAKC,MAAMskH,iBAC1C,OACE/kH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGfjK,KAAKC,MAAMuB,QAWRxB,KAAKC,MAAMskH,gBACb/kH,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACT3N,GAAG,EACHiQ,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,GACNxnB,MAAM,CAAC,EAAE,IACTqX,SAAS,YAEXwJ,eAAe,GAGb/a,KAAKC,MAAM23H,UACTp4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsQ,IAAK,IACLuB,OAAQ,EACRtB,MAAO,IACPqB,SAAU,YAEV/R,EAAAC,EAAAC,cAACC,EAAA,EAAO00B,KAAR,CACE+H,UAAQ,EACR9qB,KAAM,QACN7E,KAAM,QACNwZ,UAAW,YACXtH,QAAS3e,KAAKC,MAAMi8B,aAI5B18B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAehBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,UAJb,qBAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB0tH,EAAgB,SAAW,WAGzCA,EACEn4H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UAJb,eASAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP0M,QAAS5G,KAAKC,MAAMskH,mBAM1BvkH,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,wBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,iCACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZ7Q,MAAO,YACPsT,UAAW,UAJb,qBAQAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqZ,IAAK,EACLxP,KAAM,OACNtP,MAAO,OACPytB,UAAU,EACV1oB,OAAQ,QACRK,aAAc,EACd0P,WAAY,IACZyC,UAAW,SACXsM,UAAW,kBACXvP,MAAOxO,KAAK4K,MAAMy5G,YAClBx8F,YAAW,0BACX9F,SAAU/hB,KAAKilH,eAAeh6G,KAAKjL,MACnC4nB,OAAM,aAAAhjB,OAAe5E,KAAKC,MAAM9G,MAAMR,OAAO4D,WAE/CiD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXJ,GAAG,EACHhnB,SAAS,CAAC,EAAE,GACZ9E,MAAM,CAAC,OAAO,QACdlC,UAAUgI,KAAKy3H,oBAEjB74G,YAAc,SAAAxQ,GAAC,OAAIC,EAAKwxG,YAAYxxG,EAAKzD,MAAMy5G,eAPjD,YAWA7kH,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACXJ,GAAG,EACHhnB,SAAS,CAAC,EAAE,GACZ9E,MAAM,CAAC,OAAO,QACd+rB,UAAUjmB,KAAKC,MAAM9G,MAAMR,OAAO6D,OAClCxE,SAASgI,KAAKC,MAAMskH,gBAAgB7zG,gBAAkB1Q,KAAKC,MAAMuB,QAAQkP,eAE3EkO,YAAc,SAAAxQ,GAAC,OAAIC,EAAKwxG,YAAYxxG,EAAKpO,MAAMuB,WARjD,qBAmBZhC,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACT0C,UAAU,OACVxC,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,wBArLR2G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV6P,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC64G,GACKv4G,KAAKC,gBA9HIE,aC4CZ03H,oLA7CJ,IAAAx3H,EAAAL,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNw7C,KAAM,CAAC,kBACPjpC,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAI/N,EAAKJ,MAAMqvC,YAAY,SAG9C9vC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,kBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+hB,GAAI,CAAC,EAAE,GACPhQ,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP8P,cAAe,SACf8G,GAAI,sBAEJtR,EAAAC,EAAAC,cAACo4H,GACK93H,KAAKC,iBAtCAE,kCCirCR43H,8MA3qCbntH,MAAQ,CACNlR,MAAM,GACN25B,QAAQ,GACR0gF,SAAQ,EACRikB,YAAY,EACZC,UAAU,KACVn4G,YAAY,GACZwiB,WAAY,CACVjM,OAAO,KACPvP,SAAQ,GAEV+4E,WAAU,EACVq4B,WAAU,EACVC,WAAW,KACXC,aAAa,KACbC,aAAY,EACZ1H,cAAc,KACd2H,gBAAgB,GAChBC,iBAAgB,EAChBC,iBAAiB,KACjBC,iBAAiB,KACjBC,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnBnlF,mBAAmB,QAIrBhzC,cAAgB,OAChBkkH,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,mKAIzCT,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,YACLpJ,KAAK64H,eACL74H,KAAK84H,cAEoBtrH,EAAUyqH,YAAcj4H,KAAK4K,MAAMqtH,WAEJ,WAAhCj4H,KAAK4K,MAAM6tH,kBACjCz4H,KAAK+4H,+JAKP,IAAMtlF,EAAqBzzC,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,QAAQ,uBAC9E03H,EAAkB,CACtB,CAACnnH,MAAM,oBAAoB3C,MAAM,OAGnC5O,OAAO4H,KAAKisC,GAAoBvpC,QAAS,SAAAmmD,GACvCioE,EAAgBznH,KAAK,CAACM,MAAMk/C,EAAa7hD,MAAM6hD,MAGjDioE,EAAgBznH,KAAK,CAACM,MAAM,SAAS3C,MAAM,WAE3CxO,KAAKiM,SAAS,CACZqsH,kBACA7kF,2DAIQw8B,EAAM7hE,GAAY5L,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,OACxBgM,EAAQJ,EAAEtO,OAAO0O,MACrBxO,KAAKiM,SAALrM,OAAAic,EAAA,EAAAjc,CAAA,GACGqwE,EAAOzhE,2CAKV,IAAMqxF,EAAY7/F,KAAK4K,MAAMlR,MAAMoJ,OAAO,GAAK9C,KAAK4K,MAAMkV,YAAYhd,OAAO,GAAKlD,OAAO+X,OAAO3X,KAAK4K,MAAMyoB,SAASvwB,OAAO,EACvH+8F,IAAc7/F,KAAK4K,MAAMi1F,WAC3B7/F,KAAKiM,SAAS,CACZ4zF,uDAK+B,IAAtB44B,EAAsBj2H,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAL,KAC9Bi2H,EAAmBA,GAAsCz4H,KAAK4K,MAAM6tH,iBAEpE,IAAIO,EAAc,KAClB,IACEA,EAAmC,WAArBP,EAAgCt4G,KAAKykB,MAAM5kC,KAAK4K,MAAMqtH,WAAaj4H,KAAK4K,MAAM6oC,mBAAmBglF,GAC/G,MAAOv1F,IAGT,OAAO81F,iDAGkC,IAAtBP,EAAsBj2H,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAAL,KAEhCg2H,EAAmB,KAGnBI,EAAqB,KAEnBI,EAAch5H,KAAKi5H,eAAeR,GACpCO,IAEFR,GADAI,EAAqBI,EAAY58G,OAAQ,SAAAivB,GAAC,OAAMA,EAAE6tF,UAAuB,aAAX7tF,EAAE7hC,MAAuB6hC,EAAE8tF,OAAOr2H,OAAO,GAAK,CAAC,aAAa,WAAWuyB,SAASgW,EAAE+tF,oBAC1G59G,IAAK,SAAC6vB,EAAEpe,GAAH,MAAc,CACrC9b,MAAMk6B,EAAEt+B,KACRyB,MAAMye,MAIT28E,QAAQ,CAACz4F,MAAM,oBAAoB3C,MAAM,OAK5DxO,KAAKiM,SAAS,CACZmsH,aArBiB,KAsBjBI,mBACAE,iBArBqB,KAsBrBC,kBArBsB,KAsBtBC,8DAIWxqH,GACb,IAAMqqH,EAAmBrqH,EAAEtO,OAAO0O,MAGlC,GAFgCiqH,IAAqBz4H,KAAK4K,MAAM6tH,iBAEpC,CAG1B,IAGMptH,EAAW,CACfotH,mBACAC,iBALqB,KAMrBC,kBALsB,MASxB,GAAyB,OAArBF,EACkBz4H,KAAKi5H,eAAeR,GAEtCz4H,KAAK+4H,qBAAqBN,GAE1BptH,EAASmtH,iBAAmB,KAMhCx4H,KAAKiM,SAASZ,2CAIH+C,GACb,IACIgqH,EAAe,KACbO,EAAoBvqH,EAAEtO,OAAO0O,MAC/BkqH,EAAmB14H,KAAK4K,MAAMguH,mBAAmB7gH,KAAM,SAACszB,EAAEpe,GAAH,OAAcA,IAAU9gB,SAASwsH,KAExFD,EACFN,EAAe,IAAIvoE,MAAM6oE,EAAiBS,OAAOr2H,QAEjD41H,EAAoB,KAGtB14H,KAAKiM,SAAS,CACZ+rH,YAZkB,EAalBI,eACAM,mBACAC,4DAGUnqH,EAAMhF,GAClB,GAAY,OAARgF,EACF,OAAO,EAET,IAAI6qH,GAAQ,EACZ,GAAa,SAAT7vH,EACF6vH,EAAQr5H,KAAKS,cAAc82E,YAAY/oE,OAClC,CACL,IAAM8qH,EAAet5H,KAAKu5H,sBAAsB/vH,GAC5C8vH,IACFD,EAAiD,OAAzC7qH,EAAM4H,WAAWgF,MAAMk+G,IAGnC,OAAOD,gDAEa7vH,GAAwB,IAAnBgwH,EAAmBh3H,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GACxC82H,EAAe,KACnB,OAAQ9vH,GACN,IAAK,UACH8vH,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKE,GAAgBF,IACnBA,EAAe,IAAIG,OAAOH,IAGrBA,wCAGI,IAAAjwH,EAAArJ,KAEX,IAAKA,KAAK4K,MAAMwtH,eAAiBp4H,KAAK4K,MAAM8tH,iBAC1C,OAAO,EAGT,IAAMS,EAASn5H,KAAK4K,MAAM8tH,iBAAiBS,OACvCd,EAAcz4H,OAAO+X,OAAO3X,KAAK4K,MAAMwtH,cAAct1H,SAAWq2H,EAAOr2H,OAEvEu1H,GACFz4H,OAAO+X,OAAO3X,KAAK4K,MAAMwtH,cAAcluH,QAAS,SAAC43B,EAAW43F,GAC1D,IAAMC,EAAYR,EAAOO,GACnBJ,EAAejwH,EAAKkwH,sBAAsBI,EAAUnwH,MACpDowH,GAAaN,GAAkD,OAAnCx3F,EAAW1mB,MAAMk+G,GACnDjB,EAAcA,GAAeuB,IAM7BvB,GAA+C,WAAhCr4H,KAAK4K,MAAM6tH,mBAC5BJ,EAAcA,GAAer4H,KAAK65H,cAAc75H,KAAK4K,MAAMqtH,UAAU,SAAWj4H,KAAK65H,cAAc75H,KAAK4K,MAAM+lH,cAAc,YAK1H0H,IAAgBr4H,KAAK4K,MAAMytH,aAC7Br4H,KAAKiM,SAAS,CACZosH,oDAKMjqH,EAAEsrH,GACZ,IAAI1B,EAAc5pH,EAAEtO,OAAO0O,MAC3BxO,KAAKiM,SAAS,CACZ+rH,oDAIQ5pH,EAAEsrH,GACZ,IAAI53F,EAAa1zB,EAAEtO,OAAO0O,MAE1BxO,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B4qH,aAAax4H,OAAA0L,EAAA,EAAA1L,CAAA,GACR4N,EAAU4qH,aADHx4H,OAAAic,EAAA,EAAAjc,CAAA,GAET85H,EAAY53F,8CAMjB,GAA8B,OAA1B9hC,KAAK4K,MAAMutH,WAAoB,CACjC,IAAI9kG,EAAUrzB,KAAK4K,MAAMyoB,QACzB,GAAIA,EAAQrzB,KAAK4K,MAAMutH,YAAY,QAC1B9kG,EAAQrzB,KAAK4K,MAAMutH,YAC1B9kG,EAAUzzB,OAAO+X,OAAO0b,GAOxBrzB,KAAKiM,SAAS,CACZonB,UACA8kG,WARiB,KASjBC,aARmB,KASnBK,iBARuB,KASvBC,iBARuB,KASvBC,kBARwB,6CAcrB,IAAAtqH,EAAArO,KAGHm5H,EAASv5H,OACE+X,OAAO3X,KAAK4K,MAAMwtH,cAAch8G,OAAQ,SAAA1N,GAAC,OAAIA,EAAE5L,OAAO,IACtD0Y,IAAK,SAACsmB,EAAW43F,GAChB,IAAMC,EAAYtrH,EAAKzD,MAAM8tH,iBAAiBS,OAAOO,GACrD,OAAQC,EAAUnwH,MAChB,IAAK,YACHs4B,EAAaA,EAAWxd,MAAM,KAChC,MACA,IAAK,YACHwd,EAAaA,EAAWxd,MAAM,KAAK9I,IAAK,SAAA8B,GAAC,OAAIjP,EAAK5N,cAAcyuD,KAAK5xC,KACvE,MACA,IAAK,UACHwkB,EAAazzB,EAAK5N,cAAcyuD,KAAKptB,GACvC,MACA,QACoC,OAA9B63F,EAAUnwH,KAAKqhB,QAAQ,KACzBiX,EAAaA,EAAWxd,MAAM,MAKpC,OAAOwd,IAGzB,GAAIq3F,EAAOr2H,OAAO9C,KAAK4K,MAAM8tH,iBAAiBS,OAAOr2H,OACnD,OAAO,EAIT,IAAIhD,EAAS,KACb,GAAoC,WAAhCE,KAAK4K,MAAM6tH,iBAA8B,CAC3C,IAAMx6E,EAAWj+C,KAAKS,cAAc8kB,kBAAkBvlB,KAAK4K,MAAM6tH,kBACjE,IAAKx6E,EACH,OAAO,EAEPn+C,EAASm+C,EAAS6sB,aAEf,CAEL,IADyB9qE,KAAKS,cAAc82E,YAAYv3E,KAAK4K,MAAMqtH,WAEjE,OAAO,EAEPn4H,EAASE,KAAK4K,MAAM+lH,cAIxB,IAAMsH,EAAYj4H,KAAK4K,MAAMqtH,UACvBtH,EAAgB3wH,KAAK4K,MAAM+lH,cAC3BmJ,EAAa95H,KAAK4K,MAAM8tH,iBAAiBS,OAAO39G,IAAK,SAAAjL,GAAC,OAAKA,EAAE/G,OAC7DuwH,EAAW/5H,KAAKC,MAAM+iC,KAAKC,IAAIzd,IAAIw0G,iBAAiBF,EAAWX,GAC/D7vD,EAAYtpE,KAAK4K,MAAM8tH,iBAAiB3rH,KAAK,IAAI+sH,EAAW5oH,KAAK,KAAK,IAGtEpU,EAAS,CACbm3C,OAAO,CACLzlC,MAJUxO,KAAK4K,MAAMotH,YAAch4H,KAAKS,cAAciB,MAAM1B,KAAK4K,MAAMotH,aAAapnH,QAAQ,GAAK5Q,KAAKS,cAAciB,MAAM,GAAGkP,QAAQ,GAKrI9Q,SACAi6H,WACAzwD,aAEF2uD,YACAtH,gBACAwI,OAAOn5H,KAAK4K,MAAMwtH,aAClB55E,SAASx+C,KAAK4K,MAAM8tH,iBACpBz6E,SAASj+C,KAAK4K,MAAM6tH,iBACpBnvD,UAAUtpE,KAAK4K,MAAM+tH,mBAIjBtlG,EAAUzzB,OAAO+X,OAAO3X,KAAK4K,MAAMyoB,SAEX,OAA1BrzB,KAAK4K,MAAMutH,WACb9kG,EAAQxiB,KAAK/T,GAEbu2B,EAAQrzB,KAAK4K,MAAMutH,YAAcr7H,EAKnCkD,KAAKiM,SAAS,CACZonB,UACA6kG,WAbgB,EAchBC,WALiB,6CASPA,GAEZ,IAAKn4H,KAAK4K,MAAMyoB,QAAQ8kG,GACtB,OAAO,EAGT,GAAIA,IAAen4H,KAAK4K,MAAMutH,WAC5B,OAAO,EAGT,IAAMr7H,EAASkD,KAAK4K,MAAMyoB,QAAQ8kG,GAG5BC,EAAet7H,EAAOq8H,OACtBlB,EAAYn7H,EAAOm7H,UACnBD,EAAcl7H,EAAOm3C,OAAOzlC,MAC5BiqH,EAAmB37H,EAAOmhD,SAC1By6E,EAAmB57H,EAAO0hD,SAC1BmyE,EAAgB7zH,EAAO6zH,cACvBgI,EAAoB77H,EAAOwsE,UAEjCtpE,KAAKiM,SAAS,CACZgsH,YACAC,WAXgB,EAYhBC,aACAH,cACAI,eACAzH,gBACA8H,mBACAC,mBACAC,2DAIST,GACX,GAAIA,IAAcl4H,KAAK4K,MAAMstH,UAC3B,OAAO,EAOTl4H,KAAKiM,SAAS,CACZisH,YACAC,WANiB,KAOjBM,iBANuB,KAOvBC,iBANuB,2JAWzB14H,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,4IAKD1Y,GAAE,IAAAyX,EAAA7lB,KACboO,EAAEsnB,iBAEF,IAuDM0pF,EAAU,GACVznG,EAAS,GACT0nG,EAAa,GACbC,EAAY,GACZx/F,EAAc,IAAI9f,KAAK4K,MAAMlR,MAAM,KAAKsG,KAAK4K,MAAMkV,YAmBzD,OAjBAlgB,OAAO+X,OAAO3X,KAAK4K,MAAMyoB,SAASnpB,QAAS,SAAApN,GACzC6a,EAAO9G,KAAK/T,EAAOm3C,OAAOzlC,OAC1B4wG,EAAQvuG,KAAK/T,EAAOm3C,OAAOn0C,QAC3Bw/G,EAAUzuG,KAAK/T,EAAOm3C,OAAO8lF,UAC7B1a,EAAWxuG,KAAK/T,EAAOm3C,OAAOq1B,aAGhCtpE,KAAK2kH,eAAelF,QAAQL,EAASznG,EAAQ0nG,EAAYC,EAAWx/F,EApEnD,SAACzD,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBlkB,WAAY7H,EAAG1e,OACfsmB,YAAa,UACbD,cAAe,YAGbme,IACFiG,EAAUlkB,WAAa2B,EAAKplB,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrBkoB,EAAKplB,cAAcsjB,yBAAyBqkB,GAG9C,IAEM/8B,EAAW,CACfi3B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,IALsB,YAAdzK,EAAG1e,QAUrB0N,EAAS2sH,YAAc,EACvB3sH,EAAS4sH,UAAY,KACrB5sH,EAAS6sH,UAAY,KACrB7sH,EAAS8sH,WAAa,KACtB9sH,EAAS+sH,aAAe,KACxB/sH,EAASslH,cAAgB,KACzBtlH,EAASktH,iBAAkB,EAC3BltH,EAASotH,iBAAmB,KAC5BptH,EAASmtH,iBAAmB,KAC5BntH,EAASqtH,iBAAmB,KAC5BrtH,EAASstH,kBAAoB,MAE7BttH,EAAS0oG,SAAU,EAGrBluF,EAAK5Z,SAASZ,IAGQ,SAACgR,GACvB,IAAMga,EAASha,EAAGksB,gBAClB1iB,EAAK5Z,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,gBAqBNr2B,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,QAIL,4EAOA,IAAAioB,EAAA/uC,KAEP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,mBAMA1R,KAAK4K,MAAM2tH,gBACT/4H,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHxnB,MAAM,CAAC,EAAE,UAGXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,OACN6lB,MAAO,SACPnmB,KAAOzM,KAAKC,MAAMmL,SAAW,QAAU,QACvCjN,MAAO6B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAac,OAAOC,YAErD4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzQ,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UALb,gDAaNzR,KAAKC,MAAM4+G,OAAS7+G,KAAKC,MAAM4+G,MAAMllF,IAAI35B,KAAKC,MAAMohH,mBAClD7hH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP2lG,UAAW7/F,KAAK4K,MAAMi1F,UACtBS,SAAUtgG,KAAK+/F,aAAa90F,KAAKjL,OAEjCR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,kBAE1BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPrT,YAAa,UACbu9B,aAAc,yBAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAFjB,yBAOFxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,QACP0uF,UAAW7/F,KAAK4K,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAM,OACN+V,UAAWC,KAAO9nB,MAClB8W,MAAOxO,KAAK4K,MAAMlR,MAClBmuB,YAAa,yBACb9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,QAAQ7rH,QAI/C5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,cACP0uF,UAAW7/F,KAAK4K,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRuiE,KAAM,EACNhwF,MAAO,EACPqlB,UAAWC,KAAO9nB,MAClB8W,MAAOxO,KAAK4K,MAAMkV,YAClB+H,YAAa,+BACb9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,cAAc7rH,SAMvD5O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+pB,GAAI,EACJxvB,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPrT,YAAa,UACbu9B,aAAc,yBAEdp8B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CACE3gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,IAFjB,YAOFxP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,UAGbpK,OAAO+X,OAAO3X,KAAK4K,MAAMyoB,SAAS7X,IAAK,SAAC1e,EAAOo9H,GAC7C,OACE16H,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHhQ,GAAG,EACHxX,MAAM,GAERwlB,iBAAkB,CAChBhT,GAAG,EACHqZ,GAAG,EACH9b,eAAe,UAEjB4V,WAAY,CACV7gB,SAAS,EACTgQ,WAAW,GAEb+L,eAAe,EACf+C,IAAG,UAAAlZ,OAAYs1H,GACft7G,YAAc,SAAAxQ,GAAC,OAAI2gC,EAAKorF,cAAcD,IACtCxgI,MAAQq1C,EAAKnkC,MAAMutH,aAAe+B,EAAc,cAAgB,MAG9DnrF,EAAKnkC,MAAMutH,aAAe+B,EACxB16H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,QAERytB,UAAU,EACVnZ,MAAOugC,EAAKnkC,MAAM6tH,iBAClBp4G,QAAS0uB,EAAKnkC,MAAM0tH,gBACpBv2G,SAAUgtB,EAAKqrF,eAAenvH,KAAK8jC,MAIrCA,EAAKnkC,MAAM6tH,kBAAoD,WAAhC1pF,EAAKnkC,MAAM6tH,kBAExCj5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,mBACP0uF,UAAW9wD,EAAKnkC,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAM,OACN+V,UAAWC,KAAO9nB,MAClBmwB,YAAa,0BACbwyG,QAAStrF,EAAKwqF,sBAAsB,WAAU,GAC9Cx3G,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,gBAAgB7rH,EAAE,YACnDI,MAAOugC,EAAKnkC,MAAM+lH,cAAgB5hF,EAAKnkC,MAAM+lH,cAAgB,MAGjEnxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,aACP0uF,UAAW9wD,EAAKnkC,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRuiE,KAAM,EACNhwF,MAAO,EACPqlB,UAAWC,KAAO9nB,MAClBmwB,YAAa,kCACb9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,YAAY7rH,EAAE,SAC/CI,MAAOugC,EAAKnkC,MAAMqtH,UAAYlpF,EAAKnkC,MAAMqtH,UAAY,OAO7DlpF,EAAKnkC,MAAM6tH,kBAAoB1pF,EAAKnkC,MAAM4tH,kBACxCh5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,QAERytB,UAAU,EACVtH,QAAS0uB,EAAKnkC,MAAM4tH,iBACpBz2G,SAAUgtB,EAAKurF,eAAervH,KAAK8jC,GACnCvgC,MAAOugC,EAAKnkC,MAAM+tH,kBAAoB5pF,EAAKnkC,MAAM+tH,kBAAoB,MAK3E5pF,EAAKnkC,MAAM8tH,kBAAoB3pF,EAAKnkC,MAAM8tH,iBAAiB6B,SACzD/6H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,MAAK,QACLsM,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,WAGhBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAM,SACN+V,UAAWC,KAAO9nB,MAClBmwB,YAAW,kBACX9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKyrF,YAAYpsH,IACjCI,MAAOugC,EAAKnkC,MAAMotH,YAAcjpF,EAAKnkC,MAAMotH,YAAc,KAM/DjpF,EAAKnkC,MAAM8tH,kBACT3pF,EAAKnkC,MAAM8tH,iBAAiBS,OAAO39G,IAAK,SAAC9jB,EAAMgiI,GAC7C,IAAMe,EAAY,CAAC,UAAU,QAAQplG,SAAS39B,EAAM8R,MAAQ,SAAW,OACjE8vH,EAAevqF,EAAKwqF,sBAAsB7hI,EAAM8R,MAAK,GAC3D,OACEhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhB8T,IAAG,SAAAlZ,OAAW80H,GACdvoH,MAAK,GAAAvM,OAAKlN,EAAMqV,KAAX,MAAAnI,OAAoBlN,EAAM8R,KAA1B,MAELhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAMixH,EACNJ,QAASf,EACT/5G,UAAWC,KAAO9nB,MAClBmwB,YAAW,GAAAjjB,OAAKlN,EAAMqV,KAAX,MAAAnI,OAAoBlN,EAAM8R,KAA1B,KACXuY,SAAW,SAAA3T,GAAC,OAAI2gC,EAAK2rF,YAAYtsH,EAAEsrH,IACnClrH,MAAOugC,EAAKnkC,MAAMwtH,aAAasB,GAAc3qF,EAAKnkC,MAAMwtH,aAAasB,GAAc,QAO7F3qF,EAAKnkC,MAAM6tH,kBAAoB1pF,EAAKnkC,MAAM8tH,kBACxCl5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX1E,GAAG,CAAC,EAAE,GACNxnB,MAAM,CAAC,EAAE,QACTsP,KAAK,SACLxR,UAAU+2C,EAAKnkC,MAAMytH,aAEvBz5G,YAAamwB,EAAK4rF,UAAU1vH,KAAK8jC,IAPnC,eAWAvvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJthB,MAAO,MACPqpB,WAAY,MACZ7I,QAASowB,EAAK6rF,aAAa3vH,KAAK8jC,IAJlC,mBAYRvvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG7C,EAAOmhD,SADV,MACuBnhD,EAAOm3C,OAAOq1B,WAErC9pE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,MAAM,OACV7K,aAAc,MACdyK,WAAY,SACZE,eAAgB,SAChB7L,gBAAkB2wC,EAAK9uC,MAAM9G,MAAMR,OAAOkE,aAAaa,SAASlB,QAEhEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,OACN6lB,MAAO,SACPz0B,MAAO,SACPsO,KAAOsiC,EAAK9uC,MAAMmL,SAAW,QAAU,iBAWrDpL,KAAK4K,MAAMyoB,SAAWzzB,OAAO+X,OAAO3X,KAAK4K,MAAMyoB,SAASvwB,OAAO9C,KAAKC,MAAMqhH,wBAC1E9hH,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTsC,GAAG,EACHD,GAAG,EACHhQ,GAAG,EACHxX,MAAM,GAERwlB,iBAAkB,CAChBhT,GAAG,EACHqZ,GAAG,EACH9b,eAAe,UAEjB4V,WAAY,CACV7gB,SAAS,EACTgQ,WAAW,GAEb+L,eAAe,EACf6D,YAAc,SAAAxQ,GAAC,OAAI2gC,EAAK8rF,cAAa,IACrCnhI,MAAQsG,KAAK4K,MAAMstH,UAAY,aAAe,MAG5Cl4H,KAAK4K,MAAMstH,UACT14H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,QAERytB,UAAU,EACVtH,QAASrgB,KAAK4K,MAAM0tH,gBACpBv2G,SAAU/hB,KAAKo6H,eAAenvH,KAAKjL,SAIrCA,KAAK4K,MAAM6tH,kBAAoD,WAAhCz4H,KAAK4K,MAAM6tH,kBAExCj5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,mBACP0uF,UAAW7/F,KAAK4K,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAM,OACN+V,UAAWC,KAAO9nB,MAClBmwB,YAAa,0BACbwyG,QAASr6H,KAAKu5H,sBAAsB,WAAU,GAC9Cx3G,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,gBAAgB7rH,EAAE,YACnDI,MAAOxO,KAAK4K,MAAM+lH,cAAgB3wH,KAAK4K,MAAM+lH,cAAgB,MAGjEnxH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPiX,MAAO,aACP0uF,UAAW7/F,KAAK4K,MAAMi1F,WAEtBrgG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRuiE,KAAM,EACNhwF,MAAO,EACPqlB,UAAWC,KAAO9nB,MAClBmwB,YAAa,kCACb9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKkrF,YAAY,YAAY7rH,EAAE,SAC/CI,MAAOxO,KAAK4K,MAAMqtH,UAAYj4H,KAAK4K,MAAMqtH,UAAY,OAO7Dj4H,KAAK4K,MAAM6tH,kBAAoBz4H,KAAK4K,MAAM4tH,kBACxCh5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhBmH,MAAO,mBAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,QAERytB,UAAU,EACVtH,QAASrgB,KAAK4K,MAAM4tH,iBACpBz2G,SAAU/hB,KAAKs6H,eAAervH,KAAKjL,MACnCwO,MAAOxO,KAAK4K,MAAM+tH,kBAAoB34H,KAAK4K,MAAM+tH,kBAAoB,MAK3E34H,KAAK4K,MAAM8tH,kBAAoB14H,KAAK4K,MAAM8tH,iBAAiB6B,SACzD/6H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwR,MAAK,QACLsM,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,WAGhBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAM,SACN+V,UAAWC,KAAO9nB,MAClBmwB,YAAW,kBACX9F,SAAW,SAAA3T,GAAC,OAAI2gC,EAAKyrF,YAAYpsH,IACjCI,MAAOxO,KAAK4K,MAAMotH,YAAch4H,KAAK4K,MAAMotH,YAAc,KAM/Dh4H,KAAK4K,MAAM8tH,kBACT14H,KAAK4K,MAAM8tH,iBAAiBS,OAAO39G,IAAK,SAAC9jB,EAAMgiI,GAC7C,IAAMe,EAAY,CAAC,UAAU,QAAQplG,SAAS39B,EAAM8R,MAAQ,SAAW,OACjE8vH,EAAevqF,EAAKwqF,sBAAsB7hI,EAAM8R,MAAK,GAC3D,OACEhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLvjB,MAAM,OACN4U,QAAQ,OACR/E,WAAW,UACXC,cAAc,UAEhB8T,IAAG,SAAAlZ,OAAW80H,GACdvoH,MAAK,GAAAvM,OAAKlN,EAAMqV,KAAX,MAAAnI,OAAoBlN,EAAM8R,KAA1B,MAELhK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgoB,UAAQ,EACRztB,MAAO,EACPsP,KAAMixH,EACNJ,QAASf,EACT/5G,UAAWC,KAAO9nB,MAClBmwB,YAAW,GAAAjjB,OAAKlN,EAAMqV,KAAX,MAAAnI,OAAoBlN,EAAM8R,KAA1B,KACXuY,SAAW,SAAA3T,GAAC,OAAI2gC,EAAK2rF,YAAYtsH,EAAEsrH,IACnClrH,MAAOugC,EAAKnkC,MAAMwtH,aAAasB,GAAc3qF,EAAKnkC,MAAMwtH,aAAasB,GAAc,QAO7F15H,KAAK4K,MAAM6tH,kBAAoBz4H,KAAK4K,MAAM8tH,kBACxCl5H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX1E,GAAG,CAAC,EAAE,GACNlY,KAAK,SACLtP,MAAM,CAAC,EAAE,QACTlC,UAAUgI,KAAK4K,MAAMytH,aAEvBz5G,YAAa5e,KAAK26H,UAAU1vH,KAAKjL,OAPnC,gBAeRR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBAGAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,MAAM,OACV7K,aAAc,MACdyK,WAAY,SACZE,eAAgB,SAChB7L,gBAAkB4B,KAAKC,MAAM9G,MAAMR,OAAOkE,aAAaa,SAASlB,QAEhEgD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoN,KAAM,MACN6lB,MAAO,SACPz0B,MAAO,SACPsO,KAAOzM,KAAKC,MAAMmL,SAAW,QAAU,gBAa7D5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,UAIdjK,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB9V,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BqP,SAAQ,iCACRD,WAAU,0CACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,QAGjDR,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX5c,KAAK,SACLtP,MAAM,CAAC,EAAE,QACTlC,UAAUgI,KAAK4K,MAAMi1F,YAJzB,qBAaN7/F,KAAKC,MAAMiB,SAAWlB,KAAKC,MAAMiB,QAAQy4B,IAAI35B,KAAKC,MAAMohH,mBAC1D7hH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UALb,oEASAjS,EAAAC,EAAAC,cAACo4H,GACK93H,KAAKC,QAIbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UAJb,qBAMqBzR,KAAKS,cAAcgJ,YAAYzJ,KAAKS,cAAc+C,iBAAiBxD,KAAKC,MAAMohH,kBAAkB,IAAI,GANzH,oDA9pCgBlhH,aC2YX26H,8MAzYblwH,MAAQ,CACN8qH,KAAK,KACLqF,QAAO,EACPC,SAAS,KACT14F,WAAW,CACTjM,OAAO,KACPvP,SAAQ,GAEVm0G,aAAY,EACZC,iBAAgB,KAIlBz6H,cAAgB,OAChBkkH,eAAiB,OAyHjBwW,QAAU,SAACzF,GACTr1H,EAAK4L,SAAS,CACZypH,qFAxHE11H,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,mKAIzCT,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,YACkB+B,EAAU3J,UAAYxB,KAAKC,MAAMuB,SAEtDxB,KAAKuN,wQAKHvN,KAAKC,MAAMuB,UACPw5H,EAAWh7H,KAAKC,MAAMu1H,SAAS3W,MAAM9mG,KAAM,SAAArJ,GAAC,OAAKA,EAAEuyG,MAAMvwG,gBAAkBrH,EAAKpJ,MAAMuB,QAAQkP,gBACpG1Q,KAAKiM,SAAS,CACZ+uH,WACAD,QAAO,2PAMX/6H,KAAKiM,SAAS,CACZq2B,WAAY,CACVjM,OAAO,KACPvP,SAAQ,iJAKIo0G,GAChBl7H,KAAKiM,SAAS,CACZivH,uDAIM,IAAA7sH,EAAArO,KAER,GAAwB,OAApBA,KAAK4K,MAAM8qH,KACb,OAAO,EAGT,IAoDMA,EAA2B,QAApB11H,KAAK4K,MAAM8qH,KAClBzW,EAAa9yG,SAASnM,KAAKC,MAAMu1H,SAAS1kH,IAEhD9Q,KAAK2kH,eAAehF,SAASV,EAAWyW,EAvDvB,SAACr5G,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBpkB,cAAe,WACfC,YAAa,WACbC,WAAY7V,EAAKzD,MAAM8qH,MAGrBvzF,IACFiG,EAAUlkB,WAAa7V,EAAK5N,cAAc6nC,oBAAoBnG,KAI5DA,GAA8B,UAArBiG,EAAUzqC,SACrB0Q,EAAK5N,cAAcsjB,yBAAyBqkB,GAG9C,IAAI4yF,EAAW,KACmB,YAAd3+G,EAAG1e,SAErBq9H,EAAW,CACT/Z,MAAM5yG,EAAKpO,MAAMuB,QACjBq9G,MAAMxwG,EAAKpO,MAAM4+G,MAAMzoG,WACvBwpG,QAA4B,QAApBvxG,EAAKzD,MAAM8qH,KACnBzW,WAAW5wG,EAAKpO,MAAMu1H,SAAS1kH,IAGE,oBAAxBzC,EAAKpO,MAAMgC,UACpBoM,EAAKpO,MAAMgC,YAKfoM,EAAKpC,SAAS,CACZ+uH,WACA14F,WAAY,CACVjM,OAAO,KACPvP,SAAQ,MAKU,SAACzK,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl6B,EAAKpC,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,gBAUNr2B,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,wCAWL,IAAAjB,EAAA7lB,KACP,OAAOA,KAAK4K,MAAMowH,SACdx7H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHjQ,MAAO,EACPwX,GAAI,CAAC,EAAE,GACP3H,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UALb,oCAOoCzR,KAAKC,MAAMu1H,SAAS1kH,GAPxD,KASAtR,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACT3N,GAAG,EACHiQ,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,GACNxnB,MAAM,QAER6gB,eAAe,GAEfvb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC07H,GAAD,CACEhpH,UAAW,CACTrF,KAAK,aACLnC,MAAO5K,KAAK4K,MAAMowH,SAASpb,QAAU,WAAa,WAClD3/G,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,IAEZgB,KAAK4K,MAAMowH,SAASpb,QAAU,MAAQ,aAI7CpgH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UAJb,cAMczR,KAAKS,cAAcgJ,YAAYzJ,KAAKS,cAAc+C,iBAAiBxD,KAAK4K,MAAMowH,SAASnc,MAAM,IAAIjuG,QAAQ,EAAE,GAAG,GAN5H,WAS8B,WAA9B5Q,KAAKC,MAAMu1H,SAAS5qH,OACtBpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHjQ,MAAO,EACPwX,GAAI,CAAC,EAAE,IAIJ1R,KAAK4K,MAAMmwH,QAeV/6H,KAAKC,MAAM4+G,OAAS7+G,KAAKS,cAAciB,MAAM1B,KAAKC,MAAM4+G,OAAOx5G,IAAI,IAAMrF,KAAK4K,MAAMswH,gBACpF17H,EAAAC,EAAAC,cAACo4H,GAADl4H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE23H,SAAU53H,KAAK4K,MAAMswH,gBACrBh/F,UAAY,SAAA9tB,GAAC,OAAIyX,EAAKw1G,mBAAkB,OAG1C77H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1C,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbb,MAAO,YACPsT,UAAW,UALb,oCAOoCzR,KAAKC,MAAMu1H,SAAS1kH,GAPxD,KASAtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVb,MAAO,MACP6Q,WAAY,IACZyC,UAAW,UALb,6EAUEzR,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB0C,SAAQ,oBACRxY,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5BoP,WAAU,6BACVM,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,SAInDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,CAAC,EAAE,IACV6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,CAAC,EAAE,GACLjQ,MAAM,IACNisC,YAAY,WACVtgB,EAAKs1G,QAAQ,SAGjBpgH,eAAe,EACfmE,SAA+B,QAApBlf,KAAK4K,MAAM8qH,MAEtBl2H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC07H,GAAD,CACEhpH,UAAW,CACTrF,KAAK,aACLnC,MAAM,WACN3K,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,IAFf,SAQJQ,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,CAAC,EAAE,GACLjQ,MAAM,IACNisC,YAAY,WACVtgB,EAAKs1G,QAAQ,aAGjBpgH,eAAe,EACfmE,SAA+B,YAApBlf,KAAK4K,MAAM8qH,MAEtBl2H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEomB,GAAI,EACJhc,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC07H,GAAD,CACEhpH,UAAW,CACTrF,KAAK,aACLnC,MAAM,WACN3K,MAAM,CACJyiB,GAAG,MAITljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,IAFf,cASNQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJ1S,SAAU,EACVgQ,WAAY,IACZ7Q,MAAO,YACPsT,UAAW,UALb,YAOYzR,KAAKS,cAAcgJ,YAAYzJ,KAAKS,cAAc+C,iBAAiBxD,KAAKC,MAAM4+G,MAAM,IAAIjuG,QAAQ,EAAE,GAAG,GAPjH,oBAUE5Q,KAAKC,MAAMiB,SAAWlB,KAAKS,cAAciB,MAAM1B,KAAKC,MAAMiB,SAAS6V,GAAG,IACpEvX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJwG,UAAW,UACXuB,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIyX,EAAKw1G,mBAAkB,KAJxC,mBASJ77H,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,IACTlC,SAA6B,OAApBgI,KAAK4K,MAAM8qH,MAEtB92G,YAAa5e,KAAK2/G,SAAS10G,KAAKjL,OANlC,UAlKRR,EAAAC,EAAAC,cAAC6M,GAAD,CACEzC,UAAW,CACTE,cAAc,OAEhBS,YAAa,CACXgC,KAAK,QAEP/B,UAAW,CACTgC,GAAG,GAEL7T,KAAM,4BA9NCsH,aCm6BRm7H,8MA/5Bb1wH,MAAQ,CACN2wH,iBAAiB,KACjBj5F,WAAW,CACTxlC,OAAO,KACPu5B,OAAO,KACPvP,SAAQ,MAKZrmB,cAAgB,OAChBkkH,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,uDAG1B86H,GAEXv7H,KAAK4K,MAAM2wH,mBAAqBA,IAClCA,EAAmB,MAErBv7H,KAAKiM,SAAS,CACZsvH,yKAKFv7H,KAAKiM,SAAS,CACZq2B,WAAY,CACVxlC,OAAO,KACPu5B,OAAO,KACPvP,SAAQ,sQAON7kB,EAAW,SAACoa,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBnkB,YAAa,QACbD,cAAe,aACfE,WAAY7a,EAAKpJ,MAAMu1H,SAAS1kH,KAI9BqxB,GAA8B,UAArBiG,EAAUzqC,SACrB0L,EAAK5I,cAAcsjB,yBAAyBqkB,GAGX,oBAAxB/+B,EAAKpJ,MAAMsN,UAAyC,YAAd8O,EAAG1e,QAClD0L,EAAKpJ,MAAMsN,WAGblE,EAAK4C,SAAS,CACZq2B,WAAY,CACVxlC,OAAO,KACPu5B,OAAO,KACPvP,SAAQ,MAKR5kB,EAAkB,SAACma,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl/B,EAAK4C,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKNr2B,KAAK2kH,eAAe3F,cAAch/G,KAAKC,MAAMu1H,SAAS1kH,GAAG7O,EAASC,GAElElC,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,EACRhqB,OAAO,gRAMLmF,EAAW,SAACoa,EAAG8lB,GAEnB,IAAMiG,EAAY,CAChBnkB,YAAa,UACbD,cAAe,aACfE,WAAY7V,EAAKpO,MAAMu1H,SAAS1kH,KAI9BqxB,GAA8B,UAArBiG,EAAUzqC,SACrB0Q,EAAK5N,cAAcsjB,yBAAyBqkB,GAGX,oBAAxB/5B,EAAKpO,MAAMsN,UAAyC,YAAd8O,EAAG1e,QAClD0Q,EAAKpO,MAAMsN,WAGbc,EAAKpC,SAAS,CACZq2B,WAAY,CACVxlC,OAAO,KACPu5B,OAAO,KACPvP,SAAQ,MAKR5kB,EAAkB,SAACma,GACvB,IAAMga,EAASha,EAAGksB,gBAClBl6B,EAAKpC,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERjM,eAKNr2B,KAAK2kH,eAAezF,gBAAgBl/G,KAAKC,MAAMu1H,SAAS1kH,GAAG7O,EAASC,GAEpElC,KAAKiM,SAAS,SAACuB,GAAD,MAAgB,CAC5B80B,WAAW1iC,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAU80B,WADL,CAERxb,SAAQ,EACRhqB,OAAO,sQAMXkD,KAAKoJ,YAEL0B,OAAOyC,SAAWvN,KAAKC,MAAMsN,8LAGNpC,EAAUqC,mEACjCxN,KAAKoJ,kJAGE,IAAAyc,EAAA7lB,KACHw1H,EAAWx1H,KAAKC,MAAMu1H,SACpBgG,EAAY57H,OAAO+X,OAAO69G,EAAShS,QAAQj/F,MAC3Ck3G,EAAWjG,EAAS3W,OAAS2W,EAAS3W,MAAM/7G,OAAO,EACnDmhH,EAAWjkH,KAAKS,cAAciB,MAAM8zH,EAASvR,UAAUx+G,IAAI,MAC3D0+G,EAAenkH,KAAKS,cAAciB,MAAM8zH,EAASrR,cAAc1+G,IAAI,MACnEgwH,EAAaxR,EAAS/7G,KAAKi8G,GAC3BuX,EAAezX,EAASx+G,IAAIgwH,GAAYjwH,MAAM,KAAKoL,QAAQ,GAC3D+qH,EAAmBxX,EAAa1+G,IAAIgwH,GAAYjwH,MAAM,KAAKoL,QAAQ,GACnEgrH,EAAgBpG,EAAS3W,MAAMziG,OAAQ,SAAA1N,GAAC,OAAKA,EAAEkxG,UAAWtqF,KAAM,SAAC71B,EAAE81B,GAAH,OAAU1P,EAAKplB,cAAciB,MAAMjC,EAAEo/G,OAAOxxF,GAAGxH,EAAKplB,cAAciB,MAAM6zB,EAAEspF,QAAU,GAAK,IACzJgd,EAAoBrG,EAAS3W,MAAMziG,OAAQ,SAAA1N,GAAC,OAAMA,EAAEkxG,UAAWtqF,KAAM,SAAC71B,EAAE81B,GAAH,OAAU1P,EAAKplB,cAAciB,MAAMjC,EAAEo/G,OAAOxxF,GAAGxH,EAAKplB,cAAciB,MAAM6zB,EAAEspF,QAAU,GAAK,IAE9Jid,EAA4C,cAAjCtG,EAAS5qH,MAAM8F,cAC1BqrH,EAA8C,WAAjCvG,EAAS5qH,MAAM8F,eAA8BvE,UAAS,IAAIiN,MAAOI,UAAU,KAAMrN,SAASqpH,EAAShS,OAAOgS,EAAShS,OAAO1gH,OAAO,GAAG6gH,aAAax3G,SAASnM,KAAKC,MAAM+7H,eAExL,OACEx8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IAEN8jH,EAAS97H,OAEZ8F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEjF,aAAc,KACdtxG,MAAO,cACP8U,MAAK,IAAA5J,OAAM4wH,EAAS1kH,IACpBtE,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxB35F,MAAK,cAAAvM,OAAgB5E,KAAKS,cAAc0Y,YAA0C,IAA9Bq8G,EAAShS,OAAO,GAAGG,YAAiBtqG,OAAO,oBAGnG7Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEnF,eAAgB,CAAC,OAAO,QACxBt+F,UAAW,CAAC,QAAQ,SACpBw+F,aAAe,KACftxG,MAAO,WACPyX,MAAO,MAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEg3H,KAAM,CACJlqH,KAAM,GACNtO,MAAO,OACPy4H,QAAS,OACTC,UAAW,OACXC,KAAMtB,EAAS5uH,WAGnBpH,EAAAC,EAAAC,cAACmzB,GAAD,CACEnmB,GAAI,EACJkT,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP+uB,KAAMsoG,EAAStR,cAKvB1kH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEv2G,MAAO,SACPsxG,aAAe,KACfx+F,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxB35F,MAAK,cAAAvM,OAAgB5E,KAAKS,cAAc0Y,YAAiC,IAArBqiH,EAAU7X,YAAiBtqG,OAAO,kBAEtF7Z,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAAC07H,GAADx7H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEu1H,SAAUA,EACVpjH,UAAW,CACTrF,KAAK,aACL9M,MAAM,CACJwM,KAAMzM,KAAKC,MAAMmL,SAAW,QAAU,WAI5C5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJkT,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,aAENq3H,EAAS5qH,UAKlBpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACPloB,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACPzX,MAAO,cACPsxG,aAAe,KACfx+F,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAKS,cAAcgJ,YAAYgsH,EAAW7kH,QAAQ,EAAE,GAAG,OAKlE5Q,KAAKC,MAAMuB,SACThC,EAAAC,EAAAC,cAACu8H,GAADr8H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEgC,SAAUjC,KAAKC,MAAMsN,YAG3B/N,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPwX,GAAI,CAAC,EAAE,GACPZ,GAAI,oBACJ7G,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuH,GAAG,CAAC,EAAE,GACNgR,GAAG,CAAC,EAAE,GACNxoB,MAAM,CAAC,EAAE,KAEXR,MAAO,UACPgmB,iBAAkB,CAChBD,GAAG,EACH/S,GAAG,IAGLlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,EACJj8B,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdurH,EAASniG,QAAQgsF,WAAW7jG,IAAK,SAAC1e,EAAOo9H,GACvC,IAAM5tH,EAAOkpH,EAASniG,QAAQisF,UAAU4a,GAGpCgC,EAAgB,KAChBC,EAAQr/H,EAAOse,MAAM,4BAUzB,OATA+gH,EAAQA,EAAQA,EAAM,GAAG73G,MAAM,KAAO,QAGpC43G,EAAgBr2G,EAAK5lB,MAAM+iC,KAAKC,IAAIzd,IAAI42G,iBAAiBD,EAAM7vH,MAE7D4vH,EAAgBt8H,OAAO+X,OAAOukH,GAAehb,OAAO,EAAEib,EAAMr5H,SAK9DtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJznB,MAAO,EACP8P,cAAe,SACfD,WAAY,aACZ+T,IAAG,UAAAlZ,OAAYs1H,GACfjwH,eAAgB,aAChB2xB,aAAY,aAAAh3B,OAAeihB,EAAK5lB,MAAM9G,MAAMR,OAAO,gBAEnD6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP8P,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,WAE1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,OAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,aAENgO,SAAS+tH,GAAa,GAEzB16H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVgQ,WAAY,EACZ7Q,MAAO,aAENrB,IAIHo/H,GACE18H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,CAAC,EAAE,GACP/S,GAAI,CAAC,EAAE,GACP1N,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXmO,WAAY,UACZ4H,WAAY,UACZ7I,QAAU,SAAAvQ,GAAC,OAAIyX,EAAKw2G,iBAAiBnC,KAGnCr0G,EAAKjb,MAAM2wH,mBAAqBrB,EAAc,gBAAkB,kBAMxEgC,GAAiBr2G,EAAKjb,MAAM2wH,mBAAqBrB,GAC/C16H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACP1/B,MAAO,EACP8P,cAAe,UAGbkyH,EAAc1gH,IAAK,SAACyzF,EAAMqtB,GAAP,OACjB98H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,YACP2f,IAAG,SAAAlZ,OAAW03H,IAEbrtB,WAYzBzvG,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuC,GAAG,CAAC,EAAE,GACNxS,MAAM,CAAC,EAAE,MAGXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,oBASApgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,SAUFpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdurH,EAAShS,OAAOhoG,IAAK,SAAC+gH,EAAUC,GAC9B,OACEh9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJznB,MAAO,EACP6P,WAAY,SACZ+T,IAAG,SAAAlZ,OAAW43H,GACdvyH,eAAgB,gBAChB2xB,aAAY,aAAAh3B,OAAeihB,EAAK5lB,MAAM9G,MAAMR,OAAO,gBAEnD6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,OAEfxK,EAAAC,EAAAC,cAAC07H,GAADx7H,OAAAC,OAAA,GACMgmB,EAAK5lB,MADX,CAEEu1H,SAAUA,EACVpjH,UAAW,CACTrF,KAAK,aACLnC,MAAM2xH,EAAU3xH,MAChB3K,MAAM,CACJwM,KAAMoZ,EAAK5lB,MAAMmL,SAAW,QAAU,aAI5C5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVgQ,WAAY,EACZlP,OAAQ,SACR2R,UAAW,OACXtT,MAAO,YACPyhB,WAAY,UACZ4H,WAAY,UACZznB,IAAK,+BACLqlB,KAAMS,EAAKplB,cAAckiE,2BAA2B45D,EAAU3Y,WAE7D2Y,EAAU3xH,QAGfpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WAEXiG,EAAKplB,cAAc0Y,YAAiC,IAArBojH,EAAU5Y,YAAiBtqG,OAAO,oBAO1ErZ,KAAK4K,MAAM03B,YAActiC,KAAK4K,MAAM03B,WAAWxb,QAC7CtnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJvlB,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAAC6sC,GAAD,CACEvJ,KAAMhjC,KAAKC,MAAM+iC,KACjB9V,KAAMltB,KAAK4K,MAAM03B,WAAWjM,OAC5B0P,kBAAmB/lC,KAAK+lC,kBAAkB96B,KAAKjL,MAC/C0lC,SAAQ,GAAA9gC,OAAK5E,KAAK4K,MAAM03B,WAAWxlC,OAA3B,iBACR2oC,WAAU,cAAA7gC,OAAgB5E,KAAK4K,MAAM03B,WAAWxlC,OAAO4T,cAA7C,kBAGZorH,EACFt8H,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,SAEX0kB,YAAa5e,KAAKg/G,cAAc/zG,KAAKjL,OALvC,kBASE+7H,GACFv8H,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,SAEX0kB,YAAa5e,KAAKk/G,gBAAgBj0G,KAAKjL,OALzC,uBAcVR,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuH,GAAG,CAAC,EAAE,IAERhY,MAAO,UACPgmB,iBAAkB,CAChBD,GAAG,EACH/S,GAAG,IAGLlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,CAAC,EAAE,GACbye,MAAO,CACLic,UAAU,cAEZvN,wBAAyB,CACvBC,OAAOopG,EAAS11G,YAAY0wC,QAAQ,MAAM,cAM9CirE,GACEj8H,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuH,GAAG,CAAC,EAAE,KAGRlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,QAOQ87G,EAPR,MASAl8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,YAOY+7G,EAPZ,OAUFn8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP+E,OAAQ,OACR8K,WAAY,SACZC,cAAe,MACf8G,GAAI,0BAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR/E,MAAK,GAAA0K,OAAK82H,EAAL,KACLj+G,MAAO,CAAC6B,WAAW,wBACnBhgB,aAA0C,MAA3BsM,WAAW8vH,GAAsB,OAAS,kBAG3Dl8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEV,OAAQ,OACR/E,MAAK,GAAA0K,OAAK+2H,EAAL,KACLl+G,MAAO,CAAC6B,WAAW,sBACnBhgB,aAA8C,MAA/BsM,WAAW+vH,GAA0B,OAAS,mBAIjEn8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACR8K,WAAY,SACZC,cAAe,MACf8G,GAAI,0BAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP+E,OAAQ,OACRgL,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACRgL,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WAEX5f,KAAKS,cAAcgJ,YAAYw6G,EAASrzG,QAAQ,EAAE,GAAG,MAI5DpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP+E,OAAQ,OACRgL,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP+E,OAAQ,OACRC,SAAU,MACV+K,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,QACXtT,MAAO,YACPyhB,WAAY,WAEX5f,KAAKS,cAAcgJ,YAAY06G,EAAavzG,QAAQ,EAAE,GAAG,SASxE6qH,GACEj8H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP4W,GAAI,4BACJ7G,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuH,GAAG,CAAC,EAAE,GACNgR,GAAG,CAAC,EAAE,GACNxoB,MAAM,CAAC,EAAE,KAEX4W,GAAI,iCAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP6P,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,kBAOkBg8G,EAAc94H,OAPhC,KASAtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,UAUFpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLyL,SAAS,UAEX+J,UAAW,QACXjpB,cAAe,UAGb4xH,EAAcpgH,IAAK,SAACihH,EAASC,GAC3B,IAAM7d,EAAQh5F,EAAKplB,cAAcgJ,YAAYoc,EAAKplB,cAAciB,MAAM+6H,EAAS5d,OAAOp5G,IAAI,MAAMmL,QAAQ,EAAE,GAAG,GAC7G,OACEpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJznB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACf8T,IAAG,YAAAlZ,OAAc83H,GACjBzyH,eAAgB,gBAChB2xB,aAAY,aAAAh3B,OAAeihB,EAAK5lB,MAAM9G,MAAMR,OAAO,gBAEnD6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEg3H,KAAM,CACJlqH,KAAM,EACNtO,MAAO,OACPy4H,QAAS,OACTC,UAAW,OACXC,KAAM2F,EAASxb,SAGnBzhH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVgQ,WAAY,EACZlP,OAAQ,SACR2R,UAAW,OACXtT,MAAO,YACPyhB,WAAY,UACZ4H,WAAY,UACZznB,IAAK,+BACLqlB,KAAI,6BAAAxgB,OAA+B63H,EAASxb,QAG1Cp7F,EAAK5lB,MAAMmL,SACT5L,EAAAC,EAAAC,cAACmzB,GAAD,CACE7zB,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACP+uB,KAAMuvG,EAASxb,MACfrhG,WAAY,YAEZ68G,EAASxb,QAInBzhH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WAEXi/F,SASjBr/G,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFuC,GAAG,CAAC,EAAE,GACNxS,MAAM,CAAC,EAAE,KAEX4W,GAAI,qCAEJtR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,sBAOsBi8G,EAAkB/4H,OAPxC,KASAtD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqP,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbyS,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WALd,UAUFpgB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPujB,MAAO,CACLyL,SAAS,UAEX+J,UAAW,QACXjpB,cAAe,UAGb6xH,EAAkBrgH,IAAK,SAACihH,EAASC,GAC/B,IAAM7d,EAAQh5F,EAAKplB,cAAcgJ,YAAYoc,EAAKplB,cAAciB,MAAM+6H,EAAS5d,OAAOp5G,IAAI,MAAMmL,QAAQ,EAAE,GAAG,GAC7G,OACEpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJznB,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB6T,IAAG,gBAAAlZ,OAAkB83H,GACrB9gG,aAAY,aAAAh3B,OAAeihB,EAAK5lB,MAAM9G,MAAMR,OAAO,gBAEnD6G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEg3H,KAAM,CACJlqH,KAAM,EACNtO,MAAO,OACPy4H,QAAS,OACTC,UAAW,OACXC,KAAM2F,EAASxb,SAGnBzhH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJ1N,SAAU,EACVgQ,WAAY,EACZlP,OAAQ,SACR2R,UAAW,OACXtT,MAAO,YACPyhB,WAAY,UACZ4H,WAAY,UACZznB,IAAK,+BACLqlB,KAAI,6BAAAxgB,OAA+B63H,EAASxb,QAE3Cwb,EAASxb,QAGdzhH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVgQ,WAAY,EACZyC,UAAW,OACXtT,MAAO,YACPyhB,WAAY,WAEXi/F,iBAl5BC1+G,aC6Pfw8H,8MA9Pb/xH,MAAQ,CACNo2G,UAAU,KACV4b,aAAY,EACZC,iBAAiB,QAInBlY,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,4JAKhDD,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,YAEwBpJ,KAAKC,MAAMic,sBAAwB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,sBAE5Glc,KAAKuN,8QAMFvN,KAAKC,MAAMic,+DACP,0BAGelc,KAAK2kH,eAAelD,sBAAtCT,SAEW/sE,EAAaj0C,KAAKC,MAA3Bmb,MAAS64B,OAGb2oF,GAAc,EACdC,EAAmB,KACnB5oF,EAAO6oF,SAAW3wH,SAAS8nC,EAAO6oF,UAC9B7d,EAAa9yG,SAAS8nC,EAAO6oF,UAC7BC,EAAgB/b,EAAUjpG,KAAM,SAAA5N,GAAC,OAAIgC,SAAShC,EAAE2G,MAAQmuG,OAG5D4d,EAAmBE,IAEZ9oF,EAAO6oF,SAA4C,QAAjC7oF,EAAO6oF,QAAQpsH,gBAC1CksH,GAAc,GAGhB58H,KAAKiM,SAAS,CACZ+0G,YACA4b,cACAC,yJAIK,IAAAxzH,EAAArJ,KACP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAiBjK,KAAK4K,MAAMiyH,kBAAoB78H,KAAK4K,MAAMgyH,YAAe,gBAAkB,YAG1F58H,KAAK4K,MAAMiyH,iBACTr9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZ7P,MAAO,IAEPsF,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNsyG,SAAU,CAAC,aACX//F,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,MAC1C+E,KAAM,CAAC,YAAYr0C,KAAK4K,MAAMiyH,iBAAiBnjI,WAGjDsG,KAAK4K,MAAMgyH,YACbp9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZ7P,MAAO,IAEPsF,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNsyG,SAAU,CAAC,aACX//F,SAAUpL,KAAKC,MAAMmL,SACrBipC,KAAM,CAAC,YAAY,gBACnBz1B,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,UAI9C9vC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZ7P,MAAO,IAEPsF,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNw7C,KAAM,CAAC,aACPjpC,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,WAM/CtvC,KAAK4K,MAAMgyH,aACVp9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GACP6P,WAAY,SACZE,eAAgB,YAEhBzK,EAAAC,EAAAC,cAACu6G,GAADr6G,OAAAC,OAAA,CACEyR,KAAM,OACFtR,KAAKC,MAFX,CAGEpH,KAAM,eACN+lB,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAX,uBAM3BtvC,KAAK4K,MAAMiyH,iBACTr9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACs9H,GAADp9H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEsN,SAAUvN,KAAKuN,SAAStC,KAAKjL,MAC7Bw1H,SAAUx1H,KAAK4K,MAAMiyH,qBAGvB78H,KAAK4K,MAAMgyH,YACbp9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACu9H,GACKj9H,KAAKC,QAIbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,wBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP4W,GAAI,YACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC43H,GAAD13H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+gH,UAAWhhH,KAAK4K,MAAMo2G,UACtBt4F,KAAM,CACJ,CACEhvB,MAAO,IACPuG,MAAM,CACJ/F,MAAM,CAAC,GAAI,MAEb8uB,OAAO,CACL,CACEjc,KAAK,KACL9M,MAAM,MAKZ,CACEvG,MAAM,OACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACE+b,QAAO,EACPpvB,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ6P,WAAW,CAAC,SAAS,cACrBE,eAAe,CAAC,SAAS,eAE3B8e,YAAY,CACV9e,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,0BAhPP5M,aCiRT+8H,8MAhRbtyH,MAAQ,CACNo2G,UAAU,QAIZvgH,cAAgB,OAChBkkH,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhDD,KAAKS,cAAgBT,KAAK2kH,eAAelkH,mKAIzCT,KAAKoJ,YACLpJ,KAAKm9H,qMAGkBhyH,EAAUqC,mEACjCxN,KAAKoJ,YACmB+W,KAAKC,UAAUjV,EAAUqzG,YAAcr+F,KAAKC,UAAUpgB,KAAKC,MAAMu+G,WAEvFx+G,KAAKm9H,oRAKD3e,EAAWx+G,KAAKC,MAAMu+G,kBACJx+G,KAAK2kH,eAAelD,aAAajD,EAASA,iBAA5DwC,SAENhhH,KAAKiM,SAAS,CACZ+0G,iJAMF,IAAMxC,EAAWx+G,KAAKC,MAAMu+G,SAQ5B,OACEh/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,oBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPua,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACPzX,MAAO,OACP8U,MAAOgwG,EAASsC,KAChB9V,aAAe,KACfx+F,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,WAG5BtrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACEnF,eAAgB,CAAC,OAAO,QACxBt+F,UAAW,CAAC,QAAQ,SACpBw+F,aAAe,KACftxG,MAAO,UACPyX,MAAO,MAEP3R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEg3H,KAAM,CACJlqH,KAAM,GACNtO,MAAO,OACPy4H,QAAS,OACTC,UAAW,OACXC,KAAMtY,EAASA,YAGnBh/G,EAAAC,EAAAC,cAAC24F,EAAD,CACEjzE,KAAMplB,KAAKS,cAAcoiE,uBAAuB27C,EAASA,WAEzDh/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqK,cAAe,MACfD,WAAY,WACZE,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACmzB,GAAD,CACEnmB,GAAI,EACJkT,WAAY,EACZ5gB,SAAU,CAAC,EAAE,GACbgQ,WAAY,CAAC,EAAE,GACf7Q,MAAO,YACP+uB,KAAMsxF,EAASA,WAEjBh/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,QACNM,KAAM,YACN5O,MAAO,mBAOnBqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPkoB,GAAI,CAAC,EAAE,GACP3N,GAAI,CAAC,EAAE,GACP/xB,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACPzX,MAAO,QACPsxG,aAAc,KACdx+F,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,QACxBt8F,MAAOxO,KAAKS,cAAcgJ,YAAYzJ,KAAKS,cAAciB,MAAM88G,EAASK,OAAOjuG,QAAQ,EAAE,GAAG,MAGhGpR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEi6B,GAAI,CAAC,EAAE,GACPloB,GAAI,CAAC,EAAE,GACPxX,MAAO,CAAC,EAAE,KACV8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACuwG,GAAD,CACE9+F,MAAO,KACP65F,aAAe,KACftxG,MAAO,kBACP8U,MAAOgwG,EAASwC,UAChBx0G,UAAW,CAAC,QAAQ,SACpBs+F,eAAgB,CAAC,OAAO,YAI9BtrG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPulB,GAAI,CAAC,EAAE,IAEPjgB,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,kBAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,CAAC,EAAE,GACPxX,MAAO,EACP4W,GAAI,eACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC43H,GAAD13H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE41H,YAAa,EACbrX,SAAUA,EACV+X,gBAAgB,EAChBvV,UAAWhhH,KAAK4K,MAAMo2G,UACtBt4F,KAAM,CACJ,CACEhvB,MAAO,IACPuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,KACL9M,MAAM,MAKZ,CACEvG,MAAM,OACNovB,QAAO,EACP7oB,MAAM,CACJ/F,MAAM,KAER8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACErT,MAAM,OACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZuX,UAAU,UAEZuX,OAAO,CACL,CACEjc,KAAK,UACLgc,YAAY,CACVhf,WAAW,aAKnB,CACErQ,MAAM,SACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,KACZ+P,eAAe,CAAC,SAAS,eAE3B8e,YAAY,CACV9e,eAAe,CAAC,SAAS,eAE3B+e,OAAO,CACL,CACEjc,KAAK,aACL9M,MAAM,CACJyiB,GAAG,CAAC,EAAE,KAGV,CACEoG,QAAO,EACP/b,KAAK,0BArQG5M,aCsMfi9H,8MAtMbxyH,MAAQ,CACNosH,QAAQ,IACRhjF,UAAU,KACVqpF,iBAAiB,QAInB1Y,eAAiB,gFAGX3kH,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,4JAKhDD,KAAKoJ,YACLpJ,KAAKuN,gMAGkBpC,EAAUqC,mEACjCxN,KAAKoJ,0RAImBpJ,KAAK2kH,eAAepE,sBAAtCvsE,SAEWC,EAAaj0C,KAAKC,MAA3Bmb,MAAS64B,OAGbopF,EAAmB,KACnBppF,EAAO6oF,UACH5F,EAAajjF,EAAO6oF,QAAQpsH,eAC5BqsH,EAAgB/oF,EAAUj8B,KAAM,SAAA7J,GAAC,OAAIA,EAAEswG,SAAS9tG,gBAAkBwmH,OAEtEmG,EAAmBN,IAIvB/8H,KAAKiM,SAAS,CACZ+nC,YACAqpF,wJAIK,IAAAh0H,EAAArJ,KAEP,OACER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAGL8F,KAAK4K,MAAMyyH,iBACT79H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNsyG,SAAU,CAAC,eACX//F,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,KAC1C+E,KAAM,CAAC,cAAcr0C,KAAK4K,MAAMyyH,iBAAiB7e,eAIvDh/G,EAAAC,EAAAC,cAAC49H,GAAD19H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEu+G,SAAUx+G,KAAK4K,MAAMyyH,qBAIzB79H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,GAEPsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP6P,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBzK,EAAAC,EAAAC,cAACswG,GAADpwG,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEEpH,KAAM,aACNw7C,KAAM,CAAC,eACPjpC,SAAUpL,KAAKC,MAAMmL,SACrBwT,YAAc,SAAAxQ,GAAC,OAAI/E,EAAKpJ,MAAMqvC,YAAY,SAG9C9vC,EAAAC,EAAAC,cAAC67B,GAAD,CACE7pB,GAAI,CAAC,EAAE,IADT,0BAKAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+R,GAAI,EACJxX,MAAO,EACP4W,GAAI,cACJ9G,cAAe,UAEfxK,EAAAC,EAAAC,cAAC63H,GAAD33H,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE+zC,UAAWh0C,KAAK4K,MAAMopC,UACtBtrB,KAAM,CACJ,CACEhvB,MAAO,OACPuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,UAIX,CACErT,MAAM,UACNuG,MAAM,CACJ/F,MAAM,CAAC,GAAK,KAEd8uB,OAAO,CACL,CACEF,QAAO,EACP/b,KAAK,SACL9M,MAAM,CACJyiB,GAAG,IAGP,CACE3V,KAAK,cAIX,CACErT,MAAM,QACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,WAIX,CACE+b,QAAO,EACPpvB,MAAM,cACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,cACLgc,YAAY,CACVhf,WAAW,aAKnB,CACE+e,QAAO,EACPpvB,MAAM,kBACNuG,MAAM,CACJ/F,MAAM,CAAC,IAAK,MAEd8uB,OAAO,CACL,CACEjc,KAAK,YACLgc,YAAY,CACVhf,WAAW,2BAvLb5J,aCmfXylH,8MA1ebh7G,MAAQ,CACNg6F,KAAK,GACLia,MAAM,KACN39G,QAAQ,KACRmyC,UAAU,KACV6yE,WAAW,KACXjS,YAAY,KACZj+E,YAAY,KACZ6vF,aAAa,KACbM,aAAa,KACbL,cAAc,KACdkW,cAAc,KACdjW,eAAe,KACfjoB,gBAAgB,KAChBymB,gBAAgB,KAChBlD,kBAAkB,KAClB1Q,mBAAmB,KACnB2Q,sBAAsB,QAGxB2E,UAAY,OAGZxlH,cAAgB,OAChBkkH,eAAiB,OA+FjBplF,WAAa,WACXl/B,EAAK4L,SAAS,CACZgoG,YAAa,UAIjBzqF,iBAAmB,SAAC08F,EAAWC,GAC7B9lH,EAAKI,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfC,YAAaiiG,EACbhiG,WAAY,iBAGd7jB,EAAK4L,SAAS,CACZi6G,aACAC,gBACA,WACA9lH,EAAK+0G,eAAe,gBAIxBA,eAAiB,SAACnB,GAChB5zG,EAAK4L,SAAS,CACZgoG,mBAkMJva,4BAAS,SAAAz4F,IAAA,OAAAF,EAAAtB,EAAA0B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPjB,EAAKJ,MAAM88G,aAAa,SAAS,UAD1B37G,EAAAE,KAAA,EAEDjB,EAAKJ,MAAMuvG,SAAS,UAFnB,wBAAApuG,EAAAS,SAAAZ,EAAAjB,oFArTHA,KAAK2kH,eACP3kH,KAAK2kH,eAAejkH,SAASV,KAAKC,OAElCD,KAAK2kH,eAAiB,IAAI3G,GAAeh+G,KAAKC,OAGhD6K,OAAO65G,eAAiB3kH,KAAK2kH,eAC7B75G,OAAOrK,cAAgBT,KAAKS,cAAgBT,KAAK2kH,eAAelkH,wKAI1DmkG,EAAO,GACPvxD,EAAYrzC,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,cAGnEgkG,EAAK/zF,KACH,CACE+/F,QAAQ,GACRxL,UAAS,EACT94D,MAAM+G,EACN/hC,KAAK,YACLH,MAAM,WACNhT,MAAM,YACN+pB,UAAUivG,GACV3kG,QAAQxyB,KAAKC,MAAM9G,MAAMR,OAAOiC,UAKpCgqG,EAAK/zF,KACH,CACE+/F,QAAQ,GACRxL,UAAS,EACTj0F,MAAM,YACNqhB,QAAQ,UACRr0B,MAAM,YACNmT,KAAK,mBACL4W,UAAUy0G,GACVrwF,MAAK,GAAA1nC,OAAIyuC,EAAJ,gBAKTuxD,EAAK/zF,KACH,CACE+/F,QAAQ,GACRxL,UAAS,EACT5yE,QAAQ,UACRr0B,MAAM,YACNgT,MAAM,cACN+W,UAAUk1G,GACV9rH,KAAK,qBACLg7B,MAAK,GAAA1nC,OAAIyuC,EAAJ,kBAKTuxD,EAAK/zF,KACH,CACE+/F,QAAQ,GACRxL,UAAS,EACTj0F,MAAM,WACNhT,MAAM,YACNq0B,QAAQ,UACRtK,UAAU2vG,GACVvmH,KAAK,gBACLg7B,MAAK,GAAA1nC,OAAIyuC,EAAJ,eAKTuxD,EAAK/zF,KACH,CACE+/F,QAAQ,GACRt/F,KAAK,QACLwX,QAAO,EACP3X,MAAM,QACNi0F,UAAS,EACTl9E,UAAU,KACV/pB,MAAM,YACNq0B,QAAQ,UACR0yE,gBAAe,EACf54D,MAAK,sCAIHtsC,KAAKiM,SAAS,CAClB24F,OACAvxD,oRAgCeY,EAAaj0C,KAAKC,MAA3Bmb,MAAS64B,OAEXZ,EAAYrzC,KAAK4K,MAAMyoC,UACvBwyE,EAAe/6G,OAAOi2C,SAAS7zB,KAAKrC,OAAO,GAE7Ci7F,EAAgB,KAChBC,EAAiB,KAEfnhB,EAAO5kG,KAAK4K,MAAMg6F,KAEpB9G,EAAkB,KAClB6S,EAAqB,KAEzB/L,EAAK16F,QAAS,SAAAgsB,GACZA,EAAEkvE,UAAW,EACb,IAAMuhB,EAAetzE,EAAU,IAAIY,EAAOkqD,QACtC0nB,EAAan1G,gBAAkBwlB,EAAEoW,MAAM57B,gBAAoBwlB,EAAE06E,QAAQ9tG,QAAUozB,EAAEoW,MAAM57B,gBAAkBi2G,EAAaj2G,eACxHwlB,EAAEkvE,UAAW,EACS,OAAlB0gB,IACFA,EAAgB5vF,EAAEhO,YAEXgO,EAAE06E,QAAQ9tG,QACnBozB,EAAE06E,QAAQ1mG,QAAQ,SAAA08G,GAChBA,EAAKxhB,UAAW,GACElvE,EAAEoW,MAAM,IAAIs6E,EAAKt6E,OACrB57B,gBAAkBm1G,EAAan1G,gBAC3CwlB,EAAEkvE,UAAW,EACbwhB,EAAKxhB,UAAW,EAGM,OAAlB0gB,IAEAA,EADEc,EAAK1+F,UACS0+F,EAAK1+F,UAELgO,EAAEhO,YAMpB0+F,EAAKxhB,WACPuL,EAAqBiW,KAOvB1wF,EAAEkvE,WACJtH,EAAkB5nE,KAKjB4vF,4CACI9lH,KAAKsvC,YAAY,KAAI,6BAGxBtvC,KAAKiM,SAAS,CAClB24F,OACA3wD,SACAZ,YACAwyE,eACAC,gBACAC,iBACAjoB,kBACA6S,yKAKE3wG,KAAKimH,WACPn7G,OAAOg6B,aAAa9kC,KAAKimH,uKAK3BjmH,KAAKoJ,qBAOCpJ,KAAK6mH,kBACX7mH,KAAK8uG,qRAIL9uG,KAAKimH,UAAYn7G,OAAOu5B,WAAW,WAC5Bh7B,EAAKpJ,MAAM6mH,oBAAuBz9G,EAAKpJ,MAAMic,sBAChD7S,EAAK4C,SAAS,CACZ+5G,iBAAgB,KAGpB,KAYFhmH,KAAKoJ,qBACCpJ,KAAK6mH,kBACX7mH,KAAK8uG,aACL9uG,KAAKuN,gMAGkBpC,EAAUqC,2FAEjCxN,KAAKoJ,YAEC89G,EAAa/7G,EAAUiQ,MAAM64B,OAC7BA,EAASj0C,KAAKC,MAAMmb,MAAM64B,OAE5B9zB,KAAKC,UAAU8mG,KAAgB/mG,KAAKC,UAAU6zB,mCAC1Cj0C,KAAKiM,SAAS,CAClB65G,cAAc,MACb,WACDz3G,EAAKygG,sBAIH/yF,EAAiB5Q,EAAU3J,UAAYxB,KAAKC,MAAMuB,QAClDslH,EAAqB9mH,KAAKC,MAAM6mH,oBAAsB37G,EAAU27G,qBAAuB9mH,KAAKC,MAAM6mH,mBAClG5qG,EAAuBlc,KAAKC,MAAMic,sBAAwB/Q,EAAU+Q,uBAAyBlc,KAAKC,MAAMic,sBAE1GH,GAAkB+qG,GAAsB5qG,IAC1Clc,KAAKuN,qJAIG4wF,GAA0B,IAAlBmnB,IAAkB9iH,UAAAM,OAAA,QAAAC,IAAAP,UAAA,KAAAA,UAAA,GAGhC8iH,IACFnnB,EAAUA,EAAQ3tC,QAAQxwD,KAAK4K,MAAMyoC,UAAU,IAAI,KAGrD,IAAMw0E,GAAYvC,EAAetlH,KAAK4K,MAAMyoC,WAAW8qD,EAAQr7F,OAAO,EAAI,IAAIq7F,EAAU,IAAMA,GAAS3tC,QAAQ,SAAQ,IACvH1lD,OAAOi2C,SAAS7zB,KAAO26F,EAGvB7nH,KAAKS,cAAcsjB,yBAAyB,CAC1CC,cAAe,KACfE,WAAY2jG,EACZ5jG,YAAa,gBAGfnZ,OAAOmmD,SAAS,EAAG,0KAIfjxD,KAAKC,MAAMuB,yCAUHsD,QAAQC,IAAI,CACpB/E,KAAKS,cAAc+5E,iBACnBx6E,KAAK2kH,eAAe5F,mBACpB/+G,KAAK2kH,eAAexD,oBACpBnhH,KAAK2kH,eAAe/F,gBAAgB5+G,KAAKC,MAAMuB,SAC/CxB,KAAK2kH,eAAexG,iBAAiBn+G,KAAKC,MAAMuB,SAChDxB,KAAK2kH,eAAehG,mBAAmB3+G,KAAKC,MAAMuB,8CAdlDw0B,OACAgmG,cAEE3a,sBAAmBC,0BAErBzC,OACA39G,OACAqjH,OAUFvkH,KAAKiM,SAAS,CACZ4yG,QACA39G,UACA80B,cACAgmG,gBACAzX,kBACAlD,oBACAC,8JAWJ,IAAMyG,EAAgB/nH,KAAK4K,MAAMk7G,cAAgB9lH,KAAK4K,MAAMk7G,cAAgB,KAC5E,OACEtmH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,OACPqX,SAAU,QACVvH,cAAe,MACf/K,OAAQ,CAAE6L,OAAOgO,YAAY,GAAI,KAAK,SACtC1a,gBAAiB,CAAC,cAAc,UAEhCoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwQ,OAAQ,EACRqB,OAAQ,EACRtX,MAAO,CAAC,EAAE,EAAE,GACZ8P,cAAe,SACfuH,SAAU,CAAC,QAAQ,aAEnB/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,CAAC,EAAE,GACNjQ,MAAO,CAAC,QAAQ,QAChB+E,OAAQ,CAAC,OAAO,UAEhBO,EAAAC,EAAAC,cAACsoH,GAADpoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE2kG,KAAM5kG,KAAK4K,MAAMg6F,UAIvBplG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJD,GAAI,CAAC,EAAE,GACPhQ,GAAI,EACJxX,MAAO,CAAC,EAAE,EAAE,GACZujB,MAAO,CACLimF,UAAU,SACVukB,UAAU,UAEZj+G,cAAe,UACf5L,gBAAiB,eAGd4B,KAAKC,MAAM6mH,oBAAuB9mH,KAAKC,MAAMic,sBAAyB6rG,EAiErEvoH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACP8P,cAAe,UAEfxK,EAAAC,EAAAC,cAACwoH,GAADtoH,OAAAC,OAAA,CACEyvC,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,OAC/BA,KAAKC,QAGT8nH,GACEvoH,EAAAC,EAAAC,cAACqoH,EAADnoH,OAAAC,OAAA,GACMG,KAAKC,MADX,CAEE4+G,MAAO7+G,KAAK4K,MAAMi0G,MAClB39G,QAASlB,KAAK4K,MAAM1J,QACpB2sC,UAAW7tC,KAAK4K,MAAMqpC,OACtBje,YAAah2B,KAAK4K,MAAMorB,YACxB0hG,aAAc13H,KAAKuN,SAAStC,KAAKjL,MACjCg8H,cAAeh8H,KAAK4K,MAAMoxH,cAC1B1sF,YAAatvC,KAAKsvC,YAAYrkC,KAAKjL,MACnCukH,gBAAiBvkH,KAAK4K,MAAM25G,gBAC5BzmB,gBAAiB99F,KAAK4K,MAAMkzF,gBAC5BujB,kBAAmBrhH,KAAK4K,MAAMy2G,kBAC9B1Q,mBAAoB3wG,KAAK4K,MAAM+lG,mBAC/BnnF,iBAAkBxpB,KAAKwpB,iBAAiBve,KAAKjL,MAC7CshH,sBAAuBthH,KAAK4K,MAAM02G,0BAxF1C9hH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,EACPsS,UAAW,OACXzC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbjK,KAAK4K,MAAMo7G,gBAiBVxmH,EAAAC,EAAAC,cAACqhB,GAAD,CACE1B,UAAW,CACTlV,EAAE,EACFsV,GAAG,EACHvlB,MAAM,CAAC,EAAE,OAGXsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEoK,WAAY,SACZC,cAAe,UAEfxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAM,QACNM,KAAM,UACN5O,MAAO,aAETqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8f,GAAI,EACJzgB,SAAU,EACVb,MAAO,WACPsT,UAAW,UAJb,qCAMoCjS,EAAAC,EAAAC,cAAA,WANpC,yDAQAF,EAAAC,EAAAC,cAACgtC,GAAD,CACEtmB,YAAa,CACX3G,GAAG,EACHvlB,MAAM,CAAC,EAAE,KAEX0kB,YAAa5e,KAAK05F,OAAOzuF,KAAKjL,OALhC,YAxCJR,EAAAC,EAAAC,cAAC6M,GAAD,CACE7B,UAAW,CACTsxB,SAAS,EACThtB,WAAW,GAEbvE,YAAa,CACXiH,GAAG,EACHjF,KAAK,QAEP3C,UAAW,CACTic,GAAG,EACH/b,cAAc,UAEhBnR,KAAQmH,KAAKC,MAAM6mH,mBAA+C9mH,KAAKC,MAAMic,qBAAgD,oBAAzB,uBAA5D,yBAyEtD1c,EAAAC,EAAAC,cAAC2oH,GAAD,CACEhpF,WAAYr/B,KAAKu/B,WACjB7lC,MAAOsG,KAAK4K,MAAMs7G,WAClB/J,QAASn8G,KAAK4K,MAAMu7G,aACpBpkF,OAAmC,YAA3B/hC,KAAK4K,MAAMqpG,sBAneL9zG,aCyJTo8B,8MA/Jb3xB,MAAQ,KAKRnK,cAAgB,gFAEVT,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,4JAK9CD,KAAKoJ,kQAKLpJ,KAAKoJ,iMAGkB+B,EAAWqC,sEAElCxN,KAAKoJ,aAEDpJ,KAAKC,MAAM4+C,SAAY7+C,KAAKC,MAAM4+C,QAAQ2kD,2DACrC,yIAIF,IAAAn6F,EAAArJ,KAEDk4F,EAAoBl4F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YAE3E,OACEpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8d,MAAO,CACLrN,KAAM,IACNF,MAAO,IACPsB,OAAQ,GACRD,SAAU,aAGZ/R,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwK,EAAG,EACHJ,WAAY,SACZE,eAAgB,SAChB7L,gBAAiB,YACjB4L,cAAe,CAAC,SAAS,QAEzBxK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACExB,MAAO,QACPsT,UAAW,UAFb,sCAMAjS,EAAAC,EAAAC,cAAC24F,EAAD,CACEpsE,GAAI,EACJtK,GAAI,EACJlC,GAAI,CAAC,EAAE,GACP/S,GAAI,CAAC,EAAE,GACPktB,GAAI,OACJz7B,MAAO,QACPsf,MAAO,CACL3O,QAAQ,OACRxP,aAAa,MACb0K,cAAc,MACdD,WAAW,YAEb3L,gBAAiB,UACjBgnB,KAAM,uEAdR,YAiBE5lB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJD,KAAM,QACNtO,MAAO,QACP4O,KAAM,yBAKZvN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEw2B,GAAI,CAAC,EAAE,GACPnQ,GAAI,OACJ9uB,GAAI,cACJgD,MAAO,CAAC,MAAM,QACdw4B,SAAU,CAAC,OAAO,SAClB3oB,WAAY,CAAC,SAAS,eAEtBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,CAAC,EAAG,GACRxS,MAAO,CAAC,GAAK,MAEbsF,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CACEpnC,GAAG,KAEH1xD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4R,SAAU,WACVI,IAAK,kBACL1S,OAAQ,CAAC,OAAO,YAIpBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzF,MAAO,CAAC,GAAI,EAAE,IACd6P,WAAY,SACZC,cAAe,MACfC,eAAgB,YAGdiuF,GACE14F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ1jB,SAAU,EACVb,MAAO,QACPqpB,WAAY,QACZvY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrBkN,QAAU,SAACvQ,GAAD,OAAOtD,OAAOi2C,SAAS7zB,KAAK,iBAPxC,eAaDltB,KAAKC,MAAMmL,UACV5L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KACEnsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJ1jB,SAAU,EACVb,MAAO,QACPqpB,WAAY,QACZvY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrBkN,QAAS,SAACvQ,GAAO/E,EAAK5I,cAAcwwD,SAASxlD,SAASC,eAAe,YAAYi3F,UAAU,OAP7F,cAWAnjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEX,SAAU,EACVb,MAAO,QACPqpB,WAAY,QACZvY,WAAY,YACZwC,UAAW,CAAC,SAAS,QACrBkN,QAAS,SAACvQ,GAAO/E,EAAK5I,cAAcwwD,SAASxlD,SAASC,eAAe,OAAOi3F,UAAU,OANxF,mBA7ICtwE,IAAMlyB,sBCNZ,SAASo9H,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACR5yH,OAAOmmD,SAAS,EAAG,IAClB,CAACusE,IAEG,+BCwCMG,8MAxCb/yH,MAAQ,2EAGN,OACEpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAO/oB,gBAAiBirB,GAAI,CAAC,EAAE,GAAIyU,GAAI,CAAC,MAAO,QAC7D32B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4f,UAAWC,KAAO9oB,iBACvB8I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK4R,SAAU,WAAYC,OAAQ,IACjChS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,SAAUD,WAAY,SAAU2oB,SAAU,CAAC,OAAQ,QAAS1M,GAAI,OAAQvU,UAAW,SAAU0kB,GAAI,CAAC,MAAO,QAC5H32B,EAAAC,EAAAC,cAACC,EAAA,EAAQyoB,GAAT,CAAYnZ,WAAY,YAAa2Q,WAAY,QAASlO,GAAI,QAAS1S,SAAU,CAAC,QAAQ,GAAIyS,UAAW,SAAUtT,MAAO,SAA1H,4BAGAqB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYznB,WAAY,YAAa2Q,WAAY,QAASlO,GAAI,QAAS1C,WAAY,EAAGhQ,SAAU,CAAC,QAAQ,GAAIyS,UAAW,SAAUtT,MAAO,SAAzI,wDAGAqB,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,CAAYpnC,GAAG,IAAIzzC,MAAO,CAAC8J,eAAe,SACxC/nB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4f,UAAWq+G,KAAc9mI,eACzBwI,aAAc,EACdmN,MAAMzM,KAAKC,MAAMmL,SAAW,UAC5B6a,UAAW,OACXqX,cAAe,QACftuB,WAAY,EACZhQ,SAAU,CAAC,EAAE,GACbgnB,GAAI,OACJtE,GAAI,CAAC,EAAE,GACPjC,GAAI,GAVN,sBAkBRjgB,EAAAC,EAAAC,cAACi5F,GAAD,cAnCmBx4F,aCyCZ09H,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAI19H,EAAKJ,MAAM4+C,QACb,OAAQx+C,EAAKJ,MAAM4+C,QAAQ/tC,IACzB,KAAK,EACHitH,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpB1+H,aAAc,MACdlB,gBAAiB4B,KAAK89H,wBACtB7+H,OAAQ,MACR/E,MAAO,OAGT,OACEsF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8d,MAAOugH,EAAet7G,GAAI,IAC/BljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM8d,MAAO,CAAEyO,cAAe,eAC3BlsB,KAAKC,MAAM4+C,QAAQ9xC,cAxCAslB,IAAMlyB,WCW9B89H,GAAkB,SAAAh+H,GAAK,OAC3BT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAK8f,GAAI,EAAGoU,UAAW,EAAGx1B,YAAY,UAAU83B,GAAI,GAClD32B,EAAAC,EAAAC,cAACC,EAAA,EAAQggB,GAAT,CAAYlO,UAAW,UAAvB,cACAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgf,QAAS1e,EAAM8yC,OAAO5R,QAAQquF,sBAC9B/iH,KAAK,QACLiW,GAAI,EACJhR,GAAI,GAJN,0BASAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgf,QAAS1e,EAAM8yC,OAAO5R,QAAQqyF,oBAC9B/mH,KAAK,QACLiW,GAAI,EACJhR,GAAI,GAJN,cAQAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS1e,EAAM8yC,OAAO5R,QAAQyuF,2BAC9BltG,GAAI,EACJhR,GAAI,GAJN,sBAQAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS1e,EAAM8yC,OAAO5R,QAAQ0uF,gCAC9BntG,GAAI,EACJhR,GAAI,GAJN,uBAQAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS,SAAA6rC,GACPvqD,EAAM8yC,OAAO5R,QAAQouF,kBAAkB/kE,IAEzC9nC,GAAI,EACJhR,GAAI,GANN,aAUAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS1e,EAAM8yC,OAAO5R,QAAQsuF,uBAC9B/sG,GAAI,EACJhR,GAAI,GAJN,oBAQAlS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS1e,EAAM8yC,OAAO5R,QAAQwzF,kBAC9BjyG,GAAI,EACJhR,GAAI,GAJN,eAuOWwsH,oLA1NX,OACE1+H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzF,MAAO,QAAS8rB,GAAI,OAAQtE,GAAI,GACpCliB,EAAAC,EAAAC,cAACC,EAAA,EAAQ+2B,GAAT,CAAYjlB,UAAW,UAAvB,iBAEAjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,QAASukB,GAAI,IACvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,wCAIJH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UACf/J,KAAKC,MAAM+iC,KACVxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,QAASukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,MAAOukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,kCAGAK,KAAKC,MAAM+iC,KAgBT,KAfFxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,OAAO2V,GAAI,EAAGvkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,8BAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEylB,KAAK,4FACLtlB,OAAO,SAASC,IAAI,gCAEpBP,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,SAArB,6BAQPzM,KAAKC,MAAM+iC,KACVxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEgiB,GAAI,EACJoE,GAAI,EACJ8N,UAAW,EACX+H,aAAc,EACdv9B,YAAa,UACboT,UAAW,SACXxH,eAAgB,eAChBF,WAAY,UAEZvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8M,KAAK,QACLkS,QAAS3e,KAAKC,MAAMovC,0BACpBr3C,UAAWgI,KAAKC,MAAM+iC,MAHxB,sBAOAxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8M,KAAK,QAAQzU,UAAQ,GAA7B,6BAIA,KAEJwH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UACf/J,KAAKC,MAAM4+C,QAAQ2kD,iBAClBhkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,QAASukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,MAAOukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBAGDK,KAAKC,MAAM+iC,OAAShjC,KAAKC,MAAM4+C,QAAQ2kD,iBACtChkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,OAAO2V,GAAI,EAAGvkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJvkB,MAAM,OACNsf,MAAO,CAAEyO,cAAe,eAH1B,oBAOA1sB,EAAAC,EAAAC,cAACy+H,GAAD,CAAiBt/E,QAAS7+C,KAAKC,MAAM4+C,QAAQ0pE,WAE/C/oH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+iB,GAAI,EACJvkB,MAAM,OACNsf,MAAO,CAAEyO,cAAe,eAH1B,qBAOA1sB,EAAAC,EAAAC,cAACy+H,GAAD,CAAiBt/E,QAAS7+C,KAAKC,MAAM4+C,QAAQl3B,cAKnDnoB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,QAAQkS,QAAS3e,KAAKC,MAAM+uH,cAAjD,kBAIA,KACHhvH,KAAKC,MAAM+iC,MAAQhjC,KAAKC,MAAMujG,iBAC7BhkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAG3C,WAAY,UACvBvK,EAAAC,EAAAC,cAACy+H,GAAD,CAAiBt/E,QAAS7+C,KAAKC,MAAM4+C,QAAQ0pE,WAE7C,MAGN/oH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UACf/J,KAAKC,MAAMuB,SAAWxB,KAAKC,MAAMmtH,iBAChC5tH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,QAASukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,MAAOukB,GAAI,IAEvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,uCAGAK,KAAKC,MAAMuB,UACbxB,KAAKC,MAAM+iC,MACVhjC,KAAKC,MAAMytH,oBAWR,KAVFluH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAG3C,WAAY,SAAUE,eAAgB,iBACjDzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,OAAO2V,GAAI,EAAGvkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,gCAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,QAAQkS,QAAS3e,KAAKC,MAAM8mH,aAAjD,YAKH/mH,KAAKC,MAAMuB,SAAWxB,KAAKC,MAAM+iC,KAChCxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAG3C,WAAY,UACvBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ5O,MAAO,QAASukB,GAAI,IACvCljB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,oBAAqC6B,KAAKC,MAAMuB,SAChDhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAO6B,KAAKC,MAAM4uH,kBAAoB,MAAQ,QAApD,mBACmB7uH,KAAKC,MAAM2uH,kBAIhC,KAEH5uH,KAAKC,MAAMytH,oBACVluH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,EAAGzC,eAAgB,iBAC3BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ2V,GAAI,EAAGvkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,kCAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,QAAQkS,QAAS3e,KAAKC,MAAM8mH,aAAjD,YAIA,KAE8B,OAAhC/mH,KAAKC,MAAMmtH,mBACqB,IAAhCptH,KAAKC,MAAMmtH,mBACbptH,KAAKC,MAAM+iC,KAgBP,KAfFxjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJqZ,GAAI,EACJhc,WAAY,SACZE,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,OAAO2V,GAAI,EAAGvkB,MAAM,SAC/BqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,QAAZ,yBAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,QAAQkS,QAAS3e,KAAKC,MAAMgtH,iBAAjD,cAM6B,IAAhCjtH,KAAKC,MAAMmtH,iBACV5tH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE+M,GAAI,EACJqZ,GAAI,EACJhc,WAAY,SACZE,eAAgB,iBAEhBzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoK,WAAY,UAChBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ2V,GAAI,EAAGvkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,yBAGFqB,EAAAC,EAAAC,cAACC,EAAA,EAAOo9B,QAAR,CAAgBtwB,KAAK,QAAQkS,QAAS3e,KAAKC,MAAMgtH,iBAAjD,aAIA,MAEmC,IAAtCjtH,KAAKC,MAAMovH,uBACV7vH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAM+M,GAAI,GACRlN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMoN,KAAK,QAAQ2V,GAAI,EAAGvkB,MAAM,QAChCqB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMxB,MAAM,OAAZ,yBAEA,MAGNqB,EAAAC,EAAAC,cAAC0+H,GAAoBp+H,KAAKC,OAE1BT,EAAAC,EAAAC,cAACC,EAAA,EAAas1H,SAAd,CAAuBv3G,IAAK,SAAA2gH,GAAI,OAAKvzH,OAAO0zB,cAAgB6/F,aAtNzChsG,IAAMlyB,gCCqoClBiiD,GAAA,CAAEx7C,QAptCD,6CAotCU4e,IAntCd,CACV,CACE0zG,UAAY,EACZC,OAAU,GACVpsH,KAAQ,OACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,WAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,UACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,UACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,SAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,wBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,uBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,cACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,qBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,eACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,SAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,eACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,WACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,QACRvD,KAAQ,YAGZuD,KAAQ,sBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,UACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,iBACRvD,KAAQ,YAGZuD,KAAQ,kBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,eACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,cACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,kBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,8BACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,qBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,aACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,QACRvD,KAAQ,YAGZuD,KAAQ,YACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,sBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,gBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,SACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,WAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,sBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,iBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,MACRvD,KAAQ,WAEV,CACEuD,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,SAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,cACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,qBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,aACRvD,KAAQ,WAEV,CACEuD,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,QACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,kBACRvD,KAAQ,YAGZuD,KAAQ,mBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,sBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,qBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,WAEV,CACEuD,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,QACRvD,KAAQ,WAEV,CACEuD,KAAQ,UACRvD,KAAQ,YAGZuD,KAAQ,YACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,eACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,uBACRvD,KAAQ,YAGZuD,KAAQ,wBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,oBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,QACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,qBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,2BACRvD,KAAQ,YAGZuD,KAAQ,oBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,GACVpsH,KAAQ,WACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,SAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,OACnB5vH,KAAQ,YAEV,CACE2vH,OAAU,CACR,CACEpsH,KAAQ,cACRvD,KAAQ,WAEV,CACEuD,KAAQ,eACRvD,KAAQ,WAEV,CACEuD,KAAQ,qBACRvD,KAAQ,WAEV,CACEuD,KAAQ,+BACRvD,KAAQ,WAEV,CACEuD,KAAQ,QACRvD,KAAQ,UAEV,CACEuD,KAAQ,UACRvD,KAAQ,UAEV,CACEuD,KAAQ,YACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,cACb8vD,gBAAmB,aACnB5vH,KAAQ,eAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,sBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,cACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,iBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,SACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,aACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,aACRvD,KAAQ,YAGZuD,KAAQ,OACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,iBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,QACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,cACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,iBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,cACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,aACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,cACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,mBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,kBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,kBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,kBACRvD,KAAQ,YAGZuD,KAAQ,kBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,WACRvD,KAAQ,YAGZuD,KAAQ,WACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,iBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,iBACRvD,KAAQ,YAGZuD,KAAQ,iBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,uBACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,uBACRvD,KAAQ,YAGZuD,KAAQ,6BACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,2BACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,2BACRvD,KAAQ,YAGZuD,KAAQ,mBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,QACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,eACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,mBACRvD,KAAQ,YAGZuD,KAAQ,kBACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,QACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,OACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,UACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,OACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,KACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE+0H,WAAa,EACbpF,OAAU,CACR,CACEqF,SAAW,EACXzxH,KAAQ,QACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,UACRvD,KAAQ,WAEV,CACEg1H,SAAW,EACXzxH,KAAQ,SACRvD,KAAQ,YAGZuD,KAAQ,WACRu8D,UAAa,qEACb9/D,KAAQ,SAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,aACRvD,KAAQ,YAGZuD,KAAQ,OACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,mBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,eACRvD,KAAQ,YAGZuD,KAAQ,SACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,cACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,YAGZuD,KAAQ,oBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,YAEV,CACE0vH,UAAY,EACZC,OAAU,CACR,CACEpsH,KAAQ,WACRvD,KAAQ,WAEV,CACEuD,KAAQ,cACRvD,KAAQ,WAEV,CACEuD,KAAQ,mBACRvD,KAAQ,YAGZuD,KAAQ,kBACRuxH,QAAW,CACT,CACEvxH,KAAQ,GACRvD,KAAQ,YAGZ+wH,SAAW,EACXjxD,UAAa,aACb8vD,gBAAmB,aACnB5vH,KAAQ,cC/sCGi1H,GAAA,CAAE73H,QAFD,6CAEU4e,IADd,CAAC,CAAC0zG,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,OAAOuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,GAAGpsH,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,UAAUuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,SAAS+wH,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,SAASvD,KAAO,YAAYuD,KAAO,WAAWuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,cAAcuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,eAAeuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,SAAS+wH,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,WAAWuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,QAAQvD,KAAO,YAAYuD,KAAO,UAAUuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,YAAYuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,UAAUuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,SAAS+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,aAAavD,KAAO,YAAYuD,KAAO,eAAeuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,QAAQuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,SAASuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,SAAS+wH,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,GAAGpsH,KAAO,QAAQuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,GAAGpsH,KAAO,YAAYuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,UAAUuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,SAAS+wH,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAKC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,YAAYuxH,QAAU,CAAC,CAACvxH,KAAO,GAAGvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,OAAO5vH,KAAO,YAAY,CAAC0vH,UAAW,EAAMC,OAAS,CAAC,CAACpsH,KAAO,MAAMvD,KAAO,WAAW,CAACuD,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOuxH,QAAU,GAAG/D,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,YAAY,CAAC2vH,OAAS,CAAC,CAACpsH,KAAO,UAAUvD,KAAO,YAAY+wH,SAAU,EAAMnB,gBAAkB,aAAa5vH,KAAO,eAAe,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOvD,KAAO,SAAS,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,OAAOvD,KAAO,SAAS,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,YAAYvD,KAAO,YAAYuD,KAAO,kBAAkBvD,KAAO,SAAS,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,QAAQvD,KAAO,YAAYuD,KAAO,cAAcvD,KAAO,SAAS,CAAC+0H,WAAY,EAAKpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,UAAU,CAACg1H,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,UAAUuD,KAAO,UAAUvD,KAAO,SAAS,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWvD,KAAO,SAAS,CAAC+0H,WAAY,EAAMpF,OAAS,CAAC,CAACqF,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAKzxH,KAAO,MAAMvD,KAAO,WAAW,CAACg1H,SAAU,EAAMzxH,KAAO,MAAMvD,KAAO,YAAYuD,KAAO,WAAWvD,KAAO,mDCg6BlkLxC,GAt5BS,CACtBg4C,GAAG,CACD3I,KAAK,CACHR,IAAI,CACFrwB,IAAIqwB,GACJhyC,MAAM,MACNJ,SAAS,GACTkB,SAAQ,EACR6yG,mBAAkB,EAClBr5G,MAAM,oBACNyI,QAAQ,6CACRnK,QAAQ,CACN2hD,iBAAiB,KAEnB8K,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZo0E,UAAU,CACR76H,MAAM,OAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,eACN+C,QAAQ,8CAEVyJ,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,SAOnB4C,KAAK,IAIPlwB,EAAE,CACA0vB,KAAK,CACHR,IAAI,CACFrwB,IAAIqwB,GACJhyC,MAAM,MACNJ,SAAS,GACTkB,SAAQ,EACR6yG,mBAAkB,EAClBr5G,MAAM,oBACNyI,QAAQ,6CACRnK,QAAQ,CACN2hD,iBAAiB,KAEnB8K,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZo0E,UAAU,CACR76H,MAAM,OAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,eACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,gHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,UACNkJ,KAAK,iBACLnG,QAAQ,8CAEVgR,aAAa,CACX,CACE7K,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,WACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,OAKfpL,kBAAkB,CAChBhlC,MAAM,UACN2hB,IAAIw8B,GACJj1C,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACE1L,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACXzY,KAAK,WACLnG,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACEzuB,IAAIs5G,GACJn6H,SAAQ,EACRoI,KAAK,UACLnG,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACEzuB,IAAIu5G,GACJhyH,KAAK,OACLpI,SAAQ,EACRiC,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,IAIZ,CACElkB,IAAIw5G,GACJjyH,KAAK,MACLpI,SAAQ,EACRiC,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,IAIZ,CACElkB,IAAIq5G,GACJ9xH,KAAK,OACLpI,SAAQ,EACRiC,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,QAMjBkC,KAAK,CACH1yC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBr5G,MAAM,qBACNyI,QAAQ,6CACRnK,QAAQ,CACN2hD,iBAAiB,KAEnB8K,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,gBACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,iHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,8CAEVgR,aAAa,CACX,CACE4N,IAAIq5G,GACJ9xH,KAAK,OACLpI,SAAQ,EACRiC,QAAQ,6CACR/C,MAAM,YACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,OAKfpL,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACElnC,KAAK,UACLpI,SAAQ,EACR6gB,IAAIs5G,GACJl4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,IAIZ,CACE38B,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,SACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,QAMjB8D,KAAK,CACHt0C,SAAS,EACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBr5G,MAAM,qBACNyI,QAAQ,6CACRsiD,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,gBACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,iHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACElnC,KAAK,UACLpI,SAAQ,EACR6gB,IAAIs5G,GACJl4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,MAMhBuO,KAAK,CACHx0C,SAAS,GACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBtsE,oBAAmB,EACnB/sC,MAAM,qBAENyI,QAAQ,6CACRsiD,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,gBACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,iHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,MAMhBsO,KAAK,CACHv0C,SAAS,GACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBtsE,oBAAmB,EACnB/sC,MAAM,sBACNyI,QAAQ,6CACRsiD,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,gBACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,iHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,MAMhBwO,KAAK,CACHz0C,SAAS,EACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBr5G,MAAM,oBACNyI,QAAQ,6CACRnK,QAAQ,CACN2hD,iBAAiB,KAEnB8K,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,gBACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+X,QAAQ,iHACRhF,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACEzuB,IAAIs5G,GACJr7H,SAAS,GACTI,MAAM,QACNc,SAAQ,EACRoI,KAAK,UACLnG,QAAQ,6CACR8iC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,OAOlBmN,KAAK,CACHhB,IAAI,CACFrwB,IAAIqwB,GACJpyC,SAAS,GACTI,MAAM,MACNc,SAAQ,EACR6yG,mBAAkB,EAClBr5G,MAAM,oBACNyI,QAAQ,6CACRsiD,KAAK,CACHM,aAAa,OAEfQ,KAAK,CACHM,UAAU,OAEZo0E,UAAU,CACR76H,MAAM,OAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,cACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+S,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,UACNkJ,KAAK,gBACLnG,QAAQ,8CAEVgR,aAAa,CACX,CACE7K,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,WACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,OAKfpL,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,UACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACElnC,KAAK,UACLpI,SAAQ,EACR6gB,IAAIs5G,GACJl4H,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,IAIZ,CACE38B,KAAK,MACLpI,SAAQ,EACR6gB,IAAIw5G,GACJp4H,QAAQ,6CACR/C,MAAM,OACNJ,SAAS,GACTimC,UAAU,IAIZ,CACE38B,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,QAMjBkC,KAAK,CACH1yC,SAAS,EACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBr5G,MAAM,qBACNyI,QAAQ,6CACRnK,QAAQ,CACN2hD,iBAAiB,KAEnB8K,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,eACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+S,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,iBACLnG,QAAQ,8CAEVgR,aAAa,CACX,CACE7K,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,YACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,OAKfpL,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,WACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACElnC,KAAK,UACLpI,SAAQ,EACR6gB,IAAIs5G,GACJl4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,IAIZ,CACE38B,KAAK,OACLpI,SAAQ,EACR6gB,IAAIq5G,GACJj4H,QAAQ,6CACR/C,MAAM,SACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,QACLknC,OAAO,QAMjB8D,KAAK,CACHt0C,SAAS,EACTI,MAAM,OACNc,SAAQ,EACR6gB,IAAIi5G,GAAMj5G,IACVgyF,mBAAkB,EAClBr5G,MAAM,qBACNyI,QAAQ,6CACRsiD,KAAK,CACHM,aAAa,QAEfk1E,UAAU,CACR76H,MAAM,QAERgB,KAAK,CACH2gB,IAAIm5G,GACJ96H,MAAM,eACN+C,QAAQ,8CAEV6Q,UAAU,CACR9S,SAAQ,EACR+S,YAAY,CACV8N,IAAI+7B,GACJ19C,MAAM,WACNkJ,KAAK,iBACLnG,QAAQ,8CAEViiC,kBAAkB,CAChBrjB,IAAIw8B,GACJn+C,MAAM,UACNkJ,KAAK,kBACLnG,QAAQ,6CACRq7C,aAAa,GACbvY,UAAU,CACR,CACEv4B,MAAM,UACNpE,KAAK,wBAKbsD,UAAU,CACR,CACEtD,KAAK,WACLpI,SAAQ,EACR6gB,IAAIo5G,GAAOp5G,IACX5e,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,qBACLknC,OAAO,MAIb,CACElnC,KAAK,UACLpI,SAAQ,EACR6gB,IAAIs5G,GACJl4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,CACRs7B,aAAa,CACXj4D,KAAK,aACLknC,OAAO,MAIb,CACElnC,KAAK,OACLpI,SAAQ,EACR6gB,IAAIu5G,GACJn4H,QAAQ,6CACR/C,MAAM,QACNJ,SAAS,GACTimC,UAAU,SCv2BLu1F,GAhDgB,CAC7Bz8F,YAAa,CACX9lB,QAAS,+BACTgiB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxtB,KAAM,eAER4tH,QAAS,CACPxiH,QAAS,6BACTgiB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxtB,KAAM,eAERzT,QAAS,CACP6e,QAAS,iCACTgiB,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTxtB,KAAM,eAER6tH,UAAW,CACTziH,QAAS,wBACTgiB,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTxtB,KAAM,eAERhT,QAAS,CACPoe,QAAS,6BACToiB,QAAS,UACTxtB,KAAM,eAER6wB,MAAO,CACLzlB,QAAS,0BACTgiB,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTxtB,KAAM,UCmJG8tH,8MAzLbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACP1/H,OAAO4H,KAAK83H,GAAgBx8H,SAC1BlD,OAAO4H,KAAK+3H,GAAmBz8H,UAKrC08H,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAY7/H,OAAO4H,KAAK+3H,GAAmBnjH,OAAO,SAAA0B,GACtD,OAAQle,OAAO4H,KAAK83H,GAAgBjqG,SAASvX,KAE/C,OAAOyhH,EAAkBE,GAEzB,OAAO7/H,OAAO4H,KAAK+3H,GAAmB/jH,IAAI,SAAAsC,GACxC,OAAOyhH,EAAkBzhH,QAM/B4hH,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2B3/H,OAAO4H,KAAK83H,GACpC9jH,IAAI,SAAAsC,GACH,OACEwhH,EAAexhH,GAAK22G,cAAgB8K,EAAkBzhH,GAAK22G,YAEpD8K,EAAkBzhH,GAElB,OAGV1B,OAAO,SAAAujH,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAl7H,OAAMi7H,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIljH,EAAK,KACL2jH,EAAY,GACZC,EAAS,GAEb,GAAI5/H,EAAKg/H,uBAAuBC,EAAgBC,GAC9CljH,EAAKhc,EAAKm/H,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAY3/H,EAAKq/H,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAAS5/H,EAAKu/H,6BACZI,EAAUniE,QACVyhE,GAMAU,EAAUriI,SAAWsiI,EAAOtiI,SAC9B0e,EAAK2jH,GAGT,OAAO3jH,KAIT6jH,0BAA4B,SAAA/0H,GAC1B,IAAIkR,EAAK,KACLzc,OAAO4H,KAAKnH,EAAKJ,MAAMpD,cAAciG,SACvCuZ,EAAKhc,EAAK0/H,sBACR50H,EAAUtO,aACVwD,EAAKJ,MAAMpD,eAIXwf,GACFhc,EAAK8/H,qBAAqB9jH,MAI9B8jH,qBAAuB,SAAA1tG,GAGrB,IAAI2tG,EAAY//H,EAAKggI,wBAAwB5tG,GAC7C2tG,EAAUzhG,WAAa,QACvByhG,EAAUn/B,WAAY,EAItBn2F,OAAO0zB,cAAcC,WAAW,IAAK2hG,MAGvCC,wBAA0B,SAAA5tG,GACxB,IAAI6tG,EAAuB,GAG3B,OAFa7tG,EAAY90B,QAGvB,IAAK,cACH2iI,EAAuBrB,GAAyBz8F,YAChD,MACF,IAAK,UACH89F,EAAuBrB,GAAyBC,QAChD,MACF,IAAK,UACHoB,EAAuBrB,GAAyBphI,QAChD,MACF,IAAK,YACHyiI,EAAuBrB,GAAyBE,UAChD,MACF,IAAK,UACHmB,EAAuBrB,GAAyB3gI,QAChD,MACF,IAAK,QACHgiI,EAAuBrB,GAAyB98F,MAOpD,IAAIo+F,EAAoB,GACxB,OAAQ9tG,EAAY2O,QAClB,IAAK,kBACHm/F,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoB9tG,EAAY2O,OAAOo/F,OAAO,GAAGh+G,cAAgBiQ,EAAY2O,OAAOvW,OAAO,GAM/F,IAAI41G,GAFJH,EAAuBngH,KAAKykB,MAAMzkB,KAAKC,UAAUkgH,KAEX5jH,QAAQ8zC,QAAQ,WAAW+vE,GAKjE,OAJAE,EAAaA,EAAWD,OAAO,GAAGh+G,cAAgBi+G,EAAWhvG,MAAM,GACnE6uG,EAAqB5jH,QAAU+jH,EAC/BH,EAAqBr/B,WAAY,EAE1Bq/B,qFAGUn1H,EAAWqC,GAC5BxN,KAAKkgI,0BAA0B/0H,oCAI/B,OACE3L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAas1H,SAAd,CAAuBv3G,IAAK,SAAA2gH,GAAI,OAAKvzH,OAAO0zB,cAAgB6/F,aArLjChsG,IAAMlyB,WCkxB1BugI,8MA5vBb91H,MAAQ,CACN3E,WAAW,GACXg4B,SAAU,KACV0iG,YAAa,IACbr0F,MAAO,UACPs0F,YAAY,EACZpgI,YAAa,KACby2G,aAAc,KACd0Z,cAAe,KACftkE,cAAe,KACf5+C,cAAe,KACfquG,eAAgB,KAChB90G,gBAAiB,KACjB29F,gBAAgB,EAChBt9F,iBAAkB,KAClBk9F,kBAAmB,KACnB0tB,mBAAoB,KACpB/3H,MAAO4Q,OAAO8N,WACdtR,oBAAqB,KACrBrI,OAAQ6L,OAAOgO,YACf+nH,uBAAwB,KACxBzR,0BAA0B,KAI5B3uH,cAAgB,OAShBgkG,kBAAoB,SAACr2F,GACfA,GACFA,EAAEsnB,iBAEJr1B,EAAK4L,SAAS,CACZs4F,kBAAkB,UAItBu8B,iBAAmB,SAAC7gI,GAClBI,EAAK4L,SAAS,CACZs4F,kBAAkBtkG,OAItBojG,mBAAqB,SAACpjG,EAAMkL,GAC1B,IAAM8oC,EAASh0C,EAAQA,EAAMmb,MAAM64B,OAAS,KACtCizE,EAAa/7G,EAAYA,EAAUiQ,MAAM64B,OAAS,MAGnDizE,IAAcjzE,GAAUizE,EAAW6Z,cAAgB9sF,EAAO8sF,aAAiB9sF,GAAWA,EAAO8sF,kBAAsCh+H,IAAvBkxC,EAAO8sF,YAK7G9sF,GAAwC,kBAAvBA,EAAO8sF,cAE7B9sF,EAAO8sF,YAAYrwH,cAAc0K,MAAM,eAAiB/a,EAAKuK,MAAM+lH,gBAAkB18E,EAAO8sF,YAC9F1gI,EAAK2gI,iBAAiB/sF,EAAO8sF,aACpB9sF,GAAiC,aAAvBA,EAAO8sF,cAA+B1gI,EAAKuK,MAAMwkH,0BACpE/uH,EAAK4L,SAAS,CACZ0kH,cAAc,KACdvB,0BAAyB,KAX7B/uH,EAAK4L,SAAS,CACZ0kH,cAAc,KACdvB,0BAAyB,OAe/Bz5C,gBAAkB,WAKhB,OAJAt1E,EAAKI,cAAcokC,gBAAgB,aAAa,IAAG,GACnDxkC,EAAK4L,SAAS,CACZhG,WAAW,MAEN,KAGTP,cAAgB,SAACoY,EAAIxR,GAAwC,IAAnCyqC,EAAmCv0C,UAAAM,OAAA,QAAAC,IAAAP,UAAA,GAAAA,UAAA,GAA/B,KAAKozE,EAA0BpzE,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAErDy+H,EAAiB5gI,EAAKuK,MAAM3E,WAAW6X,EAAIpN,eAC3C2gD,EAAcllD,UAAS,IAAIiN,MAAOI,UAAU,KAElD,IAAKynH,IAAsBA,EAAeprD,gBAAkBorD,EAAeprD,gBAAgBxkB,GAAgBlxC,KAAKC,UAAU6gH,EAAe30H,QAAU6T,KAAKC,UAAU9T,GAAQ,CACxK,IAAMupE,EAAiB9+B,EAAMsa,EAAata,EAAO,KAGjD,GAAI6+B,EAAgB,CAClB,IAAIsrD,EAAmB7gI,EAAKI,cAAcg4D,cAAc,cACnDyoE,IACHA,EAAmB,IAErBA,EAAgBthI,OAAA0L,EAAA,EAAA1L,CAAA,GACXshI,EADWthI,OAAAic,EAAA,EAAAjc,CAAA,GAEbke,EAAIpN,cAAe,CAClBpE,OACAupE,oBAIJx1E,EAAKI,cAAcokC,gBAAgB,aAAaq8F,GAAiB,GAcnE,OAVA7gI,EAAK4L,SAAS,SAACuB,GAAD,MAAgB,CAC5BvH,WAAWrG,OAAA0L,EAAA,EAAA1L,CAAA,GACN4N,EAAUvH,WADLrG,OAAAic,EAAA,EAAAjc,CAAA,GAEPke,EAAIpN,cAAe,CAClBpE,OACAupE,wBAKC,EAET,OAAO,KAGTq8C,sBAAwB,SAACD,GACvB5xH,EAAK4L,SAAS,CACZgmH,0BAIJ+O,iBAAmB,SAACrQ,GAEdA,IAAkBA,EAAcjgH,cAAc0K,MAAM,gBACtDu1G,EAAgB,MAGdA,IAAkBtwH,EAAKuK,MAAM+lH,eAC/BtwH,EAAK4L,SAAS,CACZ0kH,gBACAvB,0BAAyB,OAuL/BpkH,uBAAyB,WACvB,IAAMK,EAAW,CACfnR,MAAMmG,EAAKuK,MAAM1Q,MACjB+E,OAAOoB,EAAKuK,MAAM3L,QAGdkiI,EAAer2H,OAAO8N,aAAevY,EAAKuK,MAAM1Q,MAChDknI,EAAgBt2H,OAAOgO,cAAgBzY,EAAKuK,MAAM3L,OAExD,OAAIkiI,GAAgBC,GACdD,IACF91H,EAASnR,MAAQ4Q,OAAO8N,YAEtBwoH,IACF/1H,EAASpM,OAAS6L,OAAOgO,aAEpBzY,EAAK4L,SAASZ,IAGhB,QAITq0D,OAAS3uD,GAAc8tC,mFA3TjB7+C,KAAKS,cACPT,KAAKS,cAAcC,SAASV,KAAKC,OAEjCD,KAAKS,cAAgB,IAAIE,GAAcX,KAAKC,iFA+GhCmO,EAAGizH,4FACVrhI,KAAKiM,SAAS,SAAArB,GAAK,OAAAhL,OAAA0L,EAAA,EAAA1L,CAAA,GAASgL,EAAT,CAAgB+1H,YAAaU,uRAIjDh2H,EAAW,GACX/D,EAAsB,GACtB43C,EAAkBnuC,GAAc8tC,QAAQK,gBAG9Ct/C,OAAO4H,KAAKR,GAAgBk4C,IAAkBh1C,QAAQ,SAACkkC,GACrD9mC,EAAoB8mC,GAAYpnC,GAAgBk4C,GAAiB9Q,KAGnE/iC,EAAS/D,oBAAsBA,GAGzBD,EAAmBrH,KAAK4K,MAAMvD,mBACZrH,KAAK4K,MAAMtD,oBAAoBD,KACrDgE,EAASrE,gBAAkBhH,KAAK4K,MAAMtD,oBAAoBD,IAGpDoG,EAAgBzN,KAAK4K,MAAM6C,gBACZpC,EAASrE,gBAAgByG,KAC5CpC,EAAS7K,YAAc6K,EAASrE,gBAAgByG,cAM9CzN,KAAKiM,SAASZ,sLAGChE,EAAiBoG,yFAEhCxL,EAAW,WACfoH,EAAKi4H,uBAGDj2H,EAAW,CACf7K,YAAaiN,EAAuBzN,KAAK4K,MAAMpK,YAAlB,KAC7BwG,gBAAiByG,EAAuBzN,KAAK4K,MAAM5D,gBAAlB,KACjCyG,cAAeA,EAA+BzN,KAAK4K,MAAM6C,cAA1BA,EAC/BpG,iBAAkBA,EAAqCrH,KAAK4K,MAAMvD,iBAA7BA,GAGnCA,GAAoBrH,KAAK4K,MAAMtD,qBAAuBD,IAAqBrH,KAAK4K,MAAMvD,kBAAoBzH,OAAO4H,KAAKxH,KAAK4K,MAAMtD,qBAAqB+tB,SAAShuB,EAAiBqJ,iBAClLrF,EAAShE,iBAAmBA,EAAiBqJ,eAG3CjD,GAAiBA,IAAkBzN,KAAK4K,MAAM6C,gBAC3CzN,KAAK4K,MAAM5D,iBAAmBpH,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBAAiBquB,SAAS5nB,EAAc+U,gBAChGnX,EAASoC,cAAgBA,EAAc+U,cACvCnX,EAAS7K,YAAcR,KAAK4K,MAAM5D,gBAAgByG,IACzCzN,KAAK4K,MAAMtD,qBAAuB1H,OAAO4H,KAAKxH,KAAK4K,MAAMtD,oBAAoBD,IAAmBguB,SAAS5nB,EAAc+U,iBAChInX,EAASoC,cAAgBA,EAAc+U,cACvCnX,EAAS7K,YAAcR,KAAK4K,MAAMtD,oBAAoBD,GAAkBgE,EAASoC,eACjFpC,EAASrE,gBAAkBhH,KAAK4K,MAAMtD,oBAAoBD,cAMxDrH,KAAKiM,SAASZ,EAASpJ,oLAGboF,mFAEVpF,EAAW,WACfoM,EAAKizH,wBAGHj6H,GAAoBA,IAAqBrH,KAAK4K,MAAMvD,mBAAoBzH,OAAO4H,KAAKxH,KAAK4K,MAAMtD,qBAAqB+tB,SAAShuB,EAAiBqJ,sCAChJrJ,EAAmBA,EAAiBqJ,uBAC9B1Q,KAAKiM,SAAS,CAClB5E,oBACApF,oCACQoF,oCACJrH,KAAKiM,SAAS,CAClB5E,oBACApF,gLAISwL,qFAEPxL,EAAW,WACf4jB,EAAKy7G,wBAGH7zH,GAAiBA,IAAkBzN,KAAK4K,MAAM6C,gBAAiB7N,OAAO4H,KAAKxH,KAAK4K,MAAM5D,iBAAiBquB,SAAS5nB,EAAc+U,sCAChI/U,EAAgBA,EAAc+U,eACxBnX,EAAW,CACfoC,kBAEOjN,YAAcR,KAAK4K,MAAM5D,gBAAgByG,YAC5CzN,KAAKiM,SAASZ,EAASpJ,oCACpBwL,oCACHzN,KAAKiM,SAAS,CAClBwB,gBACAjN,YAAY,MACZyB,4PAMJjC,KAAKoJ,YAEL0B,OAAOpJ,MAAQ1B,KAAKS,cAAciB,MAGboJ,OAAOi2C,SAASC,OAAOtwC,cAAc2kB,SAAStkB,GAAck/B,QAAQv/B,iBAEvF5F,OAAOslD,QAAQjuB,MAAQ,aACvBr3B,OAAOslD,QAAQmxE,KAAO,cAGxBz2H,OAAO6N,OAASA,IAEZ7N,OAAO45B,eACT1kC,KAAKS,cAAcolE,iBAAiB,WAGpB7lE,KAAKS,cAAcg4D,cAAc,WAAU,KAC3C1nD,GAAci/B,UAC5BhwC,KAAKS,cAAc+kE,gBAAgB,CAAC,iBAAiB,kBACrDxlE,KAAKS,cAAcokC,gBAAgB,UAAU9zB,GAAci/B,WAI/DllC,OAAO02H,YAAc,SAACnuB,GAEpB,IADA,IAAMouB,EAAUh2H,SAASi2H,qBAAqB,UACrCnxH,EAAE,EAAEA,EAAEkxH,EAAQ3+H,OAAOyN,IAAI,CAChC,IAAMoxH,EAASF,EAAQlxH,GACnBoxH,EAAOC,gBAAkBvuB,GAC3BvoG,OAAO6N,OAAOgpH,GAAQE,QAAQ,qBAAqB,GAAGv0E,WAK5DxiD,OAAOC,iBAAiB,SAAU/K,KAAKgL,wBAEvChL,KAAKshI,uKAILx2H,OAAOI,oBAAoB,SAAUlL,KAAKgL,mEAGzBG,EAAUqC,GAC3BxN,KAAKoJ,YAEL,IAAM0S,EAAetO,EAAUC,gBAAkBzN,KAAK4K,MAAM6C,cACtDiiG,EAAkBliG,EAAUnG,mBAAqBrH,KAAK4K,MAAMvD,kBAE9DyU,GAAgB4zF,IAClB1vG,KAAKshI,kEAaP,GAPIx2H,OAAOg3H,OAASh3H,OAAOmF,MAAoE,IAA7DnF,OAAOmF,IAAI8wC,SAAS37B,KAAKnN,QAAQlH,GAAck/B,UAAwD,oBAA9BnlC,OAAOsoG,OAAOouB,aACvH12H,OAAOsoG,OAAOouB,YAAY12H,OAAOg3H,MAGnCh3H,OAAOg2H,iBAAmB9gI,KAAK8gI,iBAC/Bh2H,OAAO25F,kBAAoBzkG,KAAKykG,kBAE5B//D,aAAa,CACf,IAAM2nB,EAAgB3nB,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChGm3E,EAAiBp3E,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAEzG3kC,KAAK+8G,aAAa1wD,EAAcyvD,sCA6B1BxvE,GACR,OAAOtsC,KAAKiM,SAAS,CAAEqgC,gDAGXl+B,GAIZ,OAHIA,GACFA,EAAEsnB,iBAEG11B,KAAKiM,SAAS,CACnBgyB,SAAS,KACT0mE,gBAAe,yCAINv2F,EAAE6vB,GAGb,OAFA7vB,EAAEsnB,iBAEK11B,KAAKiM,SAAS,CACnBgyB,WACA0mE,gBAAe,6IAKjB3kG,KAAKS,cAAc+kE,yJAGRnZ,EAAcyvD,GAEzB,IAAI2B,EAAgB1sG,GAAcmgC,WAAWmb,EAAc37C,eAK3D,IAJK+sG,GAAiB3B,IACpB2B,EAAgB1sG,GAAcmgC,WAAW4qE,EAAeprG,gBAGpD+sG,IAAkBA,EAAc94G,SAA+B,aAAlB0nD,IAAiCzsD,OAAO4H,KAAKuJ,GAAcmgC,YAAY7b,SAASg3B,EAAc37C,gBAAoBorG,IAAmBl8G,OAAO4H,KAAKuJ,GAAcmgC,YAAY7b,SAASymF,EAAeprG,eACpP27C,EAAgB,SAChByvD,EAAiB,cACZ,GAAuB,aAAlBzvD,EAA8B,CACxC,IAAM01E,EAAc7Y,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQ1N,GACN,IAAK,YACEimB,GAAevY,IAClB1N,EAAiB,UAErB,MACA,IAAK,UACE0N,GAAauY,IAChBjmB,EAAiB,aAWzB,OAHA97G,KAAKS,cAAcokC,gBAAgB,gBAAiBwnB,GACpDrsD,KAAKS,cAAcokC,gBAAgB,iBAAkBi3E,GAE9C97G,KAAKiM,SAAS,CACnBogD,gBACAyvD,oDAIK,IAAA/sE,EAAA/uC,KACDoL,EAAWpL,KAAK4K,MAAM1Q,OAAS,IAC/Bg+F,EAAoBl4F,KAAKS,cAAcG,gBAAgB,CAAC,aAAa,YAI3E,OACEpB,EAAAC,EAAAC,cAAC44F,EAAA,EAAD,KACE94F,EAAAC,EAAAC,cAAC69H,GAAD,MACA/9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAexG,MAAOA,GACpBqG,EAAAC,EAAAC,cAACsiI,GAAAviI,EAAD,CACEyxC,WAAYA,GACZ+wF,YAAa,UACbC,QAASxQ,KAETlyH,EAAAC,EAAAC,cAACyiI,GAAA,aAAD,KACG,SAAAnlB,GACC,OACEx9G,EAAAC,EAAAC,cAAC0iI,GAAD,CACEplB,QAASA,EACT5xG,SAAUA,EACVs0D,OAAQ3wB,EAAK2wB,OACbxuB,WAAYA,GACZjrC,WAAY8oC,EAAKnkC,MAAM3E,WACvBzF,YAAauuC,EAAKnkC,MAAMpK,YACxBmwH,cAAe5hF,EAAKnkC,MAAM+lH,cAC1BljH,cAAeshC,EAAKnkC,MAAM6C,cAC1B4+C,cAAetd,EAAKnkC,MAAMyhD,cAC1ByvD,eAAgB/sE,EAAKnkC,MAAMkxG,eAC3BiB,aAAchuE,EAAKguE,aAAa9xG,KAAK8jC,GACrC/nC,gBAAiB+nC,EAAKnkC,MAAM5D,gBAC5BtB,cAAeqpC,EAAKrpC,cAAcuF,KAAK8jC,GACvC4mC,gBAAiB5mC,EAAK4mC,gBAAgB1qE,KAAK8jC,GAC3CkjF,mBAAoBljF,EAAKnkC,MAAMqnH,mBAC/B3qH,oBAAqBynC,EAAKnkC,MAAMtD,oBAChC4qH,sBAAuBnjF,EAAKmjF,sBAAsBjnH,KAAK8jC,GACvDqgF,yBAA0BrgF,EAAKnkC,MAAMwkH,0BAErC5vH,EAAAC,EAAAC,cAAC0iI,GAAW9M,SAAZ,KACG,SAAAhrG,GAiCK,IAhCJ0Y,EAgCI1Y,EAhCJ0Y,KACA+P,EA+BIzoB,EA/BJyoB,OACA8L,EA8BIv0B,EA9BJu0B,QACAr9C,EA6BI8oB,EA7BJ9oB,QACAguG,EA4BIllF,EA5BJklF,SACA9uD,EA2BIp2B,EA3BJo2B,SACA/W,EA0BIrf,EA1BJqf,SACAoK,EAyBIzpB,EAzBJypB,UACAthB,EAwBInI,EAxBJmI,YACAs0F,EAuBIz8F,EAvBJy8F,YACAthG,EAsBI6E,EAtBJ7E,aACA5oB,EAqBIytB,EArBJztB,aACA4lE,EAoBIn4C,EApBJm4C,aAEAmsD,GAkBItkG,EAnBJiE,cAmBIjE,EAlBJskG,gBAEA3B,GAgBI3iG,EAjBJ+3G,eAiBI/3G,EAhBJ2iG,iBACAgC,EAeI3kG,EAfJ2kG,iBACA7B,EAcI9iG,EAdJ8iG,iBACA5jF,EAaIlf,EAbJkf,iBACAzK,EAYIzU,EAZJyU,kBACA8vF,EAWIvkG,EAXJukG,kBACA/H,EAUIx8F,EAVJw8F,mBACAgI,EASIxkG,EATJwkG,oBACApB,EAQIpjG,EARJojG,oBACA1G,EAOI18F,EAPJ08F,oBACAmI,EAMI7kG,EANJ6kG,qBACAjzG,EAKIoO,EALJpO,qBACAmzG,EAII/kG,EAJJ+kG,uBACAH,EAGI5kG,EAHJ4kG,yBACA7/E,EAEI/kB,EAFJ+kB,0BACAjtC,EACIkoB,EADJloB,0BAEA,OACA5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,KACE9iI,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,CACEjuF,KAAK,yCACLvwB,OACE,SAAC7jB,GAAD,OAAWT,EAAAC,EAAAC,cAAC6iI,GAAD3iI,OAAAC,OAAA,GACOI,EADP,CAEG+iC,KAAMA,EACN7pC,MAAOA,EACP45C,OAAQA,EACR8L,QAASA,EACTm+D,QAASA,EACTx7G,QAASA,EACT6jH,aAAa,EACb7V,SAAUA,EACV7lE,SAAUA,EACVv+B,SAAUA,EACVs1C,SAAUA,EACV3M,UAAWA,EACXgzE,YAAaA,EACbtkD,aAAcA,EACdh9C,aAAcA,EACd5oB,aAAcA,EACdohC,SAAU8Q,EAAKnkC,MAAMqzB,SACrBy7D,OAAQ3qD,EAAK2qD,OAAOzuF,KAAK8jC,GACzB6/E,eAAgBA,EAChB3B,gBAAiBA,EACjB2T,WAAY7xF,EAAKnkC,MAAMg2H,WACvB36H,WAAY8oC,EAAKnkC,MAAM3E,WACvBu8H,SAAUzzF,EAAKyzF,SAASv3H,KAAK8jC,GAC7Bq+E,iBAAkBA,EAClB5jF,iBAAkBA,EAClBylF,iBAAkBA,EAClBzuH,YAAauuC,EAAKnkC,MAAMpK,YACxBu+B,kBAAmBA,EACnB8vF,kBAAmBA,EACnB/H,mBAAoBA,EACpBr5G,cAAeshC,EAAKnkC,MAAM6C,cAC1B4+C,cAAetd,EAAKnkC,MAAMyhD,cAC1Bo2E,YAAa1zF,EAAK0zF,YAAYx3H,KAAK8jC,GACnC2+E,oBAAqBA,EACrBoB,oBAAqBA,EACrB9H,oBAAqBA,EACrBlL,eAAgB/sE,EAAKnkC,MAAMkxG,eAC3BnX,eAAgB51D,EAAKnkC,MAAM+5F,eAC3BzoF,qBAAsBA,EACtBwmH,aAAc3zF,EAAK2zF,aAAaz3H,KAAK8jC,GACrCogF,qBAAsBA,EACtBwT,gBAAiB5zF,EAAK6zF,UAAU33H,KAAK8jC,GACrCguE,aAAchuE,EAAKguE,aAAa9xG,KAAK8jC,GACrC/nC,gBAAiB+nC,EAAKnkC,MAAM5D,gBAC5B67H,cAAe9zF,EAAK8zF,cAAc53H,KAAK8jC,GACvCrpC,cAAeqpC,EAAKrpC,cAAcuF,KAAK8jC,GACvC1nC,iBAAkB0nC,EAAKnkC,MAAMvD,iBAC7BgoH,uBAAwBA,EACxB15C,gBAAiB5mC,EAAK4mC,gBAAgB1qE,KAAK8jC,GAC3CH,iBAAkBG,EAAKH,iBAAiB3jC,KAAK8jC,GAC7CmgF,yBAA0BA,EAC1B5nH,oBAAqBynC,EAAKnkC,MAAMtD,oBAChC+nC,0BAA2BA,EAC3BjtC,0BAA2BA,EAC3B8vH,sBAAuBnjF,EAAKmjF,sBAAsBjnH,KAAK8jC,SAMvEmpD,GACE14F,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,CACEjuF,KAAK,kCACLvwB,OACE,SAAC7jB,GAAD,OAAWT,EAAAC,EAAAC,cAACojI,GAADljI,OAAAC,OAAA,GACOI,EADP,CAEG+iC,KAAMA,EACN7pC,MAAOA,EACP45C,OAAQA,EACR8L,QAASA,EACTm+D,QAASA,EACTx7G,QAASA,EACTguG,SAAUA,EACV7lE,SAAUA,EACVv+B,SAAUA,EACVs1C,SAAUA,EACV4kE,cAAc,EACdvxE,UAAWA,EACXgzE,YAAaA,EACbtkD,aAAcA,EACdh9C,aAAcA,EACd5oB,aAAcA,EACdohC,SAAU8Q,EAAKnkC,MAAMqzB,SACrBy7D,OAAQ3qD,EAAK2qD,OAAOzuF,KAAK8jC,GACzB6/E,eAAgBA,EAChB3B,gBAAiBA,EACjB2T,WAAY7xF,EAAKnkC,MAAMg2H,WACvB36H,WAAY8oC,EAAKnkC,MAAM3E,WACvBu8H,SAAUzzF,EAAKyzF,SAASv3H,KAAK8jC,GAC7Bq+E,iBAAkBA,EAClB5jF,iBAAkBA,EAClBylF,iBAAkBA,EAClBzuH,YAAauuC,EAAKnkC,MAAMpK,YACxBu+B,kBAAmBA,EACnB8vF,kBAAmBA,EACnB/H,mBAAoBA,EACpBr5G,cAAeshC,EAAKnkC,MAAM6C,cAC1B4+C,cAAetd,EAAKnkC,MAAMyhD,cAC1Bo2E,YAAa1zF,EAAK0zF,YAAYx3H,KAAK8jC,GACnC2+E,oBAAqBA,EACrBoB,oBAAqBA,EACrB9H,oBAAqBA,EACrBlL,eAAgB/sE,EAAKnkC,MAAMkxG,eAC3BnX,eAAgB51D,EAAKnkC,MAAM+5F,eAC3BzoF,qBAAsBA,EACtBwmH,aAAc3zF,EAAK2zF,aAAaz3H,KAAK8jC,GACrCogF,qBAAsBA,EACtBwT,gBAAiB5zF,EAAK6zF,UAAU33H,KAAK8jC,GACrCguE,aAAchuE,EAAKguE,aAAa9xG,KAAK8jC,GACrC/nC,gBAAiB+nC,EAAKnkC,MAAM5D,gBAC5B67H,cAAe9zF,EAAK8zF,cAAc53H,KAAK8jC,GACvCrpC,cAAeqpC,EAAKrpC,cAAcuF,KAAK8jC,GACvC1nC,iBAAkB0nC,EAAKnkC,MAAMvD,iBAC7BgoH,uBAAwBA,EACxB15C,gBAAiB5mC,EAAK4mC,gBAAgB1qE,KAAK8jC,GAC3CH,iBAAkBG,EAAKH,iBAAiB3jC,KAAK8jC,GAC7CmgF,yBAA0BA,EAC1B5nH,oBAAqBynC,EAAKnkC,MAAMtD,oBAChC+nC,0BAA2BA,EAC3BjtC,0BAA2BA,EAC3B8vH,sBAAuBnjF,EAAKmjF,sBAAsBjnH,KAAK8jC,SAM7EvvC,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,KACE9iI,EAAAC,EAAAC,cAACqjI,GAAD,CACEhwF,OAAQA,EACR8L,QAASA,EACTm+D,QAASA,EACTx7G,QAASA,EACTguG,SAAUA,EACVpkG,SAAUA,EACV2oC,UAAWA,EACXgzE,YAAaA,EACbthG,aAAcA,EACdwY,SAAU8Q,EAAKnkC,MAAMqzB,SACrB2wF,eAAgBA,EAChBl1B,OAAQ3qD,EAAK2qD,OAAOzuF,KAAK8jC,GACzBk+E,gBAAiBA,EACjB2T,WAAY7xF,EAAKnkC,MAAMg2H,WACvBxT,iBAAkBA,EAClB5jF,iBAAkBA,EAClBylF,iBAAkBA,EAClBzuH,YAAauuC,EAAKnkC,MAAMpK,YACxBu+B,kBAAmBA,EACnB8vF,kBAAmBA,EACnBphH,cAAeshC,EAAKnkC,MAAM6C,cAC1B4+C,cAAetd,EAAKnkC,MAAMyhD,cAC1BqhE,oBAAqBA,EACrBoB,oBAAqBA,EACrBhT,eAAgB/sE,EAAKnkC,MAAMkxG,eAC3BnX,eAAgB51D,EAAKnkC,MAAM+5F,eAC3BzoF,qBAAsBA,EACtBwmH,aAAc3zF,EAAK2zF,aAAaz3H,KAAK8jC,GACrCogF,qBAAsBA,EACtBwT,gBAAiB5zF,EAAK6zF,UAAU33H,KAAK8jC,GACrCguE,aAAchuE,EAAKguE,aAAa9xG,KAAK8jC,GACrC/nC,gBAAiB+nC,EAAKnkC,MAAM5D,gBAC5B67H,cAAe9zF,EAAK8zF,cAAc53H,KAAK8jC,GACvCsgF,uBAAwBA,EACxBH,yBAA0BA,EAC1B7/E,0BAA2BA,EAC3BmzF,SAAW,SAAAp0H,GAAO2gC,EAAKyzF,SAASp0H,MAGZ,eAArB2gC,EAAKnkC,MAAM0hC,MACV9sC,EAAAC,EAAAC,cAACsjI,GAAD,CACEhgG,KAAMA,EACNxhC,QAASA,EACTotH,eAAgBA,EAChBE,oBAAqBA,EACrBD,kBAAmBA,EACnB9H,YAAaA,EACboI,qBAAsBA,EACtBzB,oBAAqBA,EACrBN,iBAAkBA,EAClB8B,yBAA0BA,EAC1BD,iBAAkBA,EAClBI,uBAAwBA,EACxBpC,gBAAiBA,EACjB59E,0BAA2BA,EAC3B0D,OAAQA,EACR8L,QAASA,EACTpsB,YAAaA,IAEb,KAEkB,YAArBsc,EAAKnkC,MAAM0hC,MACV9sC,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,KACE9iI,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,CAAOW,OAAK,EAAC5uF,KAAK,IAChBvwB,OAAS,SAAC7jB,GAAD,OACPT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAksB,SAAA,KACEnsB,EAAAC,EAAAC,cAACwjI,GAADtjI,OAAAC,OAAA,GACMI,EADN,CAEE+iC,KAAMA,EACN7pC,MAAOA,EACP0lD,QAASA,EACTr9C,QAASA,EACT4J,SAAUA,EACVs1C,SAAUA,EACV3M,UAAWA,EACXn7B,WAAYm2B,EAAKnkC,MAAM1Q,MACvBw/F,OAAQ3qD,EAAK2qD,OAAOzuF,KAAK8jC,GACzBj2B,YAAai2B,EAAKnkC,MAAM3L,OACxB2vH,eAAgBA,EAChBgS,WAAY7xF,EAAKnkC,MAAMg2H,WACvBD,YAAa5xF,EAAKnkC,MAAM+1H,YACxBngI,YAAauuC,EAAKnkC,MAAMpK,YACxBquH,kBAAmBA,EACnB9vF,kBAAmBA,EACnB4xF,cAAe5hF,EAAKnkC,MAAM+lH,cAC1BljH,cAAeshC,EAAKnkC,MAAM6C,cAC1BqhH,oBAAqBA,EACrBrqB,kBAAmB11D,EAAK01D,kBACxBvoF,qBAAsBA,EACtBwmH,aAAc3zF,EAAK2zF,aAAaz3H,KAAK8jC,GACrCs0D,mBAAoBt0D,EAAKs0D,mBACzBr8F,gBAAiB+nC,EAAKnkC,MAAM5D,gBAC5Bi8F,kBAAmBl0D,EAAK6zF,UAAU33H,KAAK8jC,GACvCw1D,kBAAmBx1D,EAAKnkC,MAAM25F,kBAC9Bj9F,oBAAqBynC,EAAKnkC,MAAMtD,oBAChC+nC,0BAA2BA,EAC3BmzF,SAAW,SAAAp0H,GAAO2gC,EAAKyzF,SAASp0H,OAElC5O,EAAAC,EAAAC,cAACyjI,GAAA1jI,EAAD,CACE2jI,QAAS,IACT78G,WAAY,KACZw6B,SAAU,SACVsiF,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1B9lH,MAAO,CAAC6B,WAAY,yBAAyB9N,OAAO,WACpD+rB,YAAa,CAACzuB,QAAS1D,EAAW,QAAU,OAAQhN,gBAAgB,UAAWD,MAAO,QAASqlI,UAAWp4H,EAAW,MAAQ,SAE7H5L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqK,cAAe,MAAOD,WAAY,CAAC,aAAa,UAAWE,eAAgB,aAAcgpB,UAAW,CAAC,QAAQ,WAAYxV,MAAQrS,EAAW,CAACs4F,UAAU,UAAY,MACvKlkG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmP,QAAS,CAAC,OAAO,SAAU6C,IAAK,oBAAqBzX,MAAO,OAAQ+E,OAAQ,SACnFO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMi6B,GAAI,CAAC,EAAE,GAAIz7B,MAAO,YAAaa,SAAU,EAAGyS,UAAW,WAA7D,4RAC2RjS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMylB,KAAM,gEAAiEtlB,OAAQ,SAAUC,IAAI,+BAA+BynB,WAAY,QAA9I,iBAD3R,+LASVhoB,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,CAAOW,OAAK,EAAC5uF,KAAK,qBAChB70C,EAAAC,EAAAC,cAAC+jI,GAAD,OAEFjkI,EAAAC,EAAAC,cAAC4iI,GAAA,EAAD,KACE9iI,EAAAC,EAAAC,cAACgkI,GAAD,QAGF,OAGRlkI,EAAAC,EAAAC,cAACikI,GAAD,CAAsB9mI,aAAcA,oBA9uB5CsD,aCbEyjI,QACW,cAA7B94H,OAAOi2C,SAAS8iF,UAEe,UAA7B/4H,OAAOi2C,SAAS8iF,UAEhB/4H,OAAOi2C,SAAS8iF,SAASzoH,MACvB,2DCX2B,cAA7BtQ,OAAOi2C,SAAS8iF,UAClB1Q,IAAY,CACV2Q,IAAK,6DACLC,WAFU,SAECv5E,EAAOw5E,GAChB,IAAIx7H,EAASgiD,EACProB,EAAQ6hG,EAAKC,kBAMnB,OALI9hG,GAASA,EAAMzlB,SACbylB,EAAMzlB,QAAQtB,MAAM,iDACtB5S,GAAS,GAGNA,KAKb07H,IAASpgH,OAAOtkB,EAAAC,EAAAC,cAACykI,GAAD,MAAS14H,SAASC,eAAe,SD0G3C,kBAAmBqgD,WACrBA,UAAUq4E,cAAcpyH,MAAMmuF,KAAK,SAAAkkC,GACjCA,EAAaC,oCElInB/tI,EAAAC,QAAA,CAAkB4hG,OAAA,uBAAAG,KAAA,2CCAlBhiG,EAAAC,QAAA,CAAkB+tI,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,y7VCAlBluI,EAAAC,QAAA,CAAkB6oG,WAAA,qDCAlB9oG,EAAAC,QAAA,CAAkB6qB,YAAA,qCAAAO,gBAAA,yCAAAN,kBAAA,iECAlB/qB,EAAAC,QAAA,CAAkB8sG,aAAA,8BAAA7sG,gBAAA,iCAAAE,YAAA,6BAAAa,OAAA,wBAAAktI,YAAA,6BAAAC,aAAA,8BAAAC,UAAA,2BAAAC,OAAA,wBAAAC,QAAA,yBAAAC,aAAA,8BAAA1lC,WAAA,4BAAA2lC,gBAAA,iCAAAC,iBAAA,kCAAAC,YAAA,6BAAAC,YAAA,6BAAAC,UAAA,2BAAAC,WAAA,4BAAAC,aAAA,8BAAAC,iBAAA,kCAAAC,mBAAA,oCAAAC,aAAA,8BAAAC,aAAA,8BAAAC,KAAA,sBAAAC,mBAAA,oCAAAC,KAAA,sBAAAC,KAAA,sBAAAC,SAAA,0BAAAC,YAAA,6BAAAC,OAAA,wBAAAC,gBAAA,iCAAAC,KAAA,sBAAAC,aAAA,8BAAAhhC,SAAA,0BAAAihC,YAAA,6BAAAjuC,OAAA,wBAAAkuC,WAAA,4BAAAriC,mBAAA,oCAAAsiC,aAAA,8BAAAC,cAAA,+BAAAC,eAAA,gCAAAC,IAAA","file":"static/js/main.f0715a0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        curvein:'CurveIn',\n        curveout:'CurveOut',\n        curvezapin:'CurveZapIn',\n        curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n            tokenEarnings\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account),\n            this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          // console.log(token,tokenEarningsPerc.toFixed(5),amountLentToken.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings;\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    // If use Permit don't ask for Approve\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    if (migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      let usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = typeof functionInfo.nonceMethod !== 'undefined' ? functionInfo.nonceMethod : false;\n      const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n      usePermit = usePermit && nonceMethod && permitContract && permitContract.methods[nonceMethod] !== undefined;\n      if (usePermit){\n        newState.migrationContractApproved = true;\n      }\n    }\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n\n          const functionInfo = migrationContractInfo.functions.filter( f => f.name === migrationMethod );\n          let usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n          const nonceMethod = typeof functionInfo.nonceMethod !== 'undefined' ? functionInfo.nonceMethod : false;\n\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          usePermit = usePermit && nonceMethod && permitContract && permitContract.methods[nonceMethod];\n\n          if (usePermit){\n            const expiry = 3600;\n            const nonce = await permitContract.methods[nonceMethod](this.props.account).call();\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, migrationMethod, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    this.state.migrationContractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.state.oldIdleTokens && (\n                                <Box\n                                  mb={1}\n                                  width={1}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                </Box>\n                              )\n                            }\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchCompleted = batchCompleted;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.canDeposit = !hasDeposited && batchDepositEnabled;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    const availableStrategies = Object.keys(this.props.availableStrategies).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    let selectedStrategy = availableStrategies[0].value;\n    let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n      selectedToken = selectedTokenConfig.baseToken;\n      selectedStrategy = selectedTokenConfig.strategy;\n    }\n\n    this.setState({\n      availableStrategies\n    },() => {\n      this.selectStrategy(selectedStrategy,selectedToken);\n    });\n\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch deposit contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedToken}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be deposited\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.tokenConfig.idle.token}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={[]/* toMigrate => [toMigrate] */}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedToken}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedToken} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedToken} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token}.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedToken}, please wait until the batch is migrated to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.4',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchDeposit:{\n      enabled:false,\n      claimEnabled:true,\n      depositEnabled:true,\n      icon:'FileDownload',\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens into the batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  nonceMethod:'nonces'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(new Date().getTime()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    const chainId = parseInt(result);\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"holder\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"expiry\", type: \"uint256\" },\n      { name: \"allowed\", type: \"bool\" },\n    ];\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const domainData = {\n      chainId,\n      version: '1',\n      verifyingContract,\n      name: baseContractName,\n    };\n\n\n    const message = {\n      holder,\n      spender,\n      nonce,\n      expiry,\n      allowed: true,\n    };\n\n    const data = {\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    };\n\n    this.props.web3.currentProvider.send({\n      jsonrpc: '2.0',\n      id: Date.now().toString().substring(9),\n      method: \"eth_signTypedData\",\n      params: [holder, data],\n      from: holder\n    }, (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n          debugger;\n          this.contractMethodSendWrapper(spenderContractName, methodName, methodParams.concat([nonce, v, r, s]), callback, callback_receipt);\n        }\n      });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      cachedData = this.props.cachedData[key.toLowerCase()];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key.toLowerCase()]){\n        cachedData = cachedData[key.toLowerCase()];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();;\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        {\n                                          (batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool) &&\n                                            <Flex\n                                              p={2}\n                                              my={2}\n                                              width={1}\n                                              borderRadius={2}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                              justifyContent={'center'}\n                                              backgroundColor={'white'}\n                                              border={`1px solid ${this.props.theme.colors.primary}`}\n                                            >\n                                              <Link\n                                                textAlign={'center'}\n                                                hoverColor={'primary'}\n                                                href={`/#/dashboard/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                                              >\n                                                Gas fees too high? Save gas with our Batch Deposit!\n                                              </Link>\n                                              <Icon\n                                                ml={1}\n                                                size={'1em'}\n                                                color={'primary'}\n                                                name={'LocalGasStation'}\n                                              />\n                                            </Flex>\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    const cachedKeyFound = this.state.cachedData[key.toLowerCase()];\n    const currentTime = parseInt(new Date().getTime()/1000);\n\n    if (!cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) ){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}